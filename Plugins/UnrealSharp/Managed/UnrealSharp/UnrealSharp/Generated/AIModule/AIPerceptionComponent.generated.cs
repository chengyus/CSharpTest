// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.AIModule;

[UClass]
public partial class AIPerceptionComponent : UnrealSharp.Engine.ActorComponent
{
    
    static AIPerceptionComponent()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("AIPerceptionComponent");
        
        
        SetSenseEnabled_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSenseEnabled");
        SetSenseEnabled_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSenseEnabled_NativeFunction);
        SetSenseEnabled_SenseClass_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSenseEnabled_NativeFunction, "SenseClass");
        SetSenseEnabled_bEnable_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSenseEnabled_NativeFunction, "bEnable");
        RequestStimuliListenerUpdate_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RequestStimuliListenerUpdate");
        GetPerceivedHostileActorsBySense_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetPerceivedHostileActorsBySense");
        GetPerceivedHostileActorsBySense_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetPerceivedHostileActorsBySense_NativeFunction);
        GetPerceivedHostileActorsBySense_SenseToUse_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetPerceivedHostileActorsBySense_NativeFunction, "SenseToUse");
        GetPerceivedHostileActorsBySense_OutActors_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetPerceivedHostileActorsBySense_NativeFunction, "OutActors");
        GetPerceivedHostileActorsBySense_OutActors_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetPerceivedHostileActorsBySense_NativeFunction, "OutActors");
        GetPerceivedHostileActors_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetPerceivedHostileActors");
        GetPerceivedHostileActors_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetPerceivedHostileActors_NativeFunction);
        GetPerceivedHostileActors_OutActors_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetPerceivedHostileActors_NativeFunction, "OutActors");
        GetPerceivedHostileActors_OutActors_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetPerceivedHostileActors_NativeFunction, "OutActors");
        GetKnownPerceivedActors_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetKnownPerceivedActors");
        GetKnownPerceivedActors_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetKnownPerceivedActors_NativeFunction);
        GetKnownPerceivedActors_SenseToUse_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetKnownPerceivedActors_NativeFunction, "SenseToUse");
        GetKnownPerceivedActors_OutActors_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetKnownPerceivedActors_NativeFunction, "OutActors");
        GetKnownPerceivedActors_OutActors_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetKnownPerceivedActors_NativeFunction, "OutActors");
        GetCurrentlyPerceivedActors_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCurrentlyPerceivedActors");
        GetCurrentlyPerceivedActors_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCurrentlyPerceivedActors_NativeFunction);
        GetCurrentlyPerceivedActors_SenseToUse_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCurrentlyPerceivedActors_NativeFunction, "SenseToUse");
        GetCurrentlyPerceivedActors_OutActors_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCurrentlyPerceivedActors_NativeFunction, "OutActors");
        GetCurrentlyPerceivedActors_OutActors_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetCurrentlyPerceivedActors_NativeFunction, "OutActors");
        GetActorsPerception_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetActorsPerception");
        GetActorsPerception_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetActorsPerception_NativeFunction);
        GetActorsPerception_Actor_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetActorsPerception_NativeFunction, "Actor");
        GetActorsPerception_Info_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetActorsPerception_NativeFunction, "Info");
        GetActorsPerception_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetActorsPerception_NativeFunction, "ReturnValue");
        ForgetAll_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ForgetAll");
        
        
    }
    
    protected AIPerceptionComponent(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/AIModule.AIPerceptionComponent:SetSenseEnabled
    static readonly IntPtr SetSenseEnabled_NativeFunction;
    static readonly int SetSenseEnabled_ParamsSize;
    static readonly int SetSenseEnabled_SenseClass_Offset;
    static readonly int SetSenseEnabled_bEnable_Offset;
    
    public void SetSenseEnabled(SubclassOf<UnrealSharp.AIModule.AISense> senseClass, bool bEnable)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSenseEnabled_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            SubclassOfMarshaller<UnrealSharp.AIModule.AISense>.ToNative(IntPtr.Add(ParamsBuffer, SetSenseEnabled_SenseClass_Offset), 0, null, senseClass);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetSenseEnabled_bEnable_Offset), 0, null, bEnable);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSenseEnabled_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/AIModule.AIPerceptionComponent:RequestStimuliListenerUpdate
    static readonly IntPtr RequestStimuliListenerUpdate_NativeFunction;
    
    public void RequestStimuliListenerUpdate()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RequestStimuliListenerUpdate_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/AIModule.AIPerceptionComponent:GetPerceivedHostileActorsBySense
    static readonly IntPtr GetPerceivedHostileActorsBySense_NativeFunction;
    static readonly int GetPerceivedHostileActorsBySense_ParamsSize;
    static readonly int GetPerceivedHostileActorsBySense_SenseToUse_Offset;
    static readonly int GetPerceivedHostileActorsBySense_OutActors_Offset;
    static readonly int GetPerceivedHostileActorsBySense_OutActors_ElementSize;
    
    public void GetPerceivedHostileActorsBySense(SubclassOf<UnrealSharp.AIModule.AISense> senseToUse, out System.Collections.Generic.IList<UnrealSharp.Engine.Actor> outActors)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetPerceivedHostileActorsBySense_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            SubclassOfMarshaller<UnrealSharp.AIModule.AISense>.ToNative(IntPtr.Add(ParamsBuffer, GetPerceivedHostileActorsBySense_SenseToUse_Offset), 0, null, senseToUse);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetPerceivedHostileActorsBySense_NativeFunction, ParamsBuffer);
            
            IntPtr OutActors_NativeBuffer = IntPtr.Add(ParamsBuffer, GetPerceivedHostileActorsBySense_OutActors_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor> OutActors_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor> (1, ObjectMarshaller<UnrealSharp.Engine.Actor>.ToNative, ObjectMarshaller<UnrealSharp.Engine.Actor>.FromNative, GetPerceivedHostileActorsBySense_OutActors_ElementSize);
            outActors = OutActors_Marshaler.FromNative(OutActors_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor>.DestructInstance(OutActors_NativeBuffer, 0);
            
        }
    }
    
    // Function /Script/AIModule.AIPerceptionComponent:GetPerceivedHostileActors
    static readonly IntPtr GetPerceivedHostileActors_NativeFunction;
    static readonly int GetPerceivedHostileActors_ParamsSize;
    static readonly int GetPerceivedHostileActors_OutActors_Offset;
    static readonly int GetPerceivedHostileActors_OutActors_ElementSize;
    
    public void GetPerceivedHostileActors(out System.Collections.Generic.IList<UnrealSharp.Engine.Actor> outActors)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetPerceivedHostileActors_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetPerceivedHostileActors_NativeFunction, ParamsBuffer);
            
            IntPtr OutActors_NativeBuffer = IntPtr.Add(ParamsBuffer, GetPerceivedHostileActors_OutActors_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor> OutActors_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor> (1, ObjectMarshaller<UnrealSharp.Engine.Actor>.ToNative, ObjectMarshaller<UnrealSharp.Engine.Actor>.FromNative, GetPerceivedHostileActors_OutActors_ElementSize);
            outActors = OutActors_Marshaler.FromNative(OutActors_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor>.DestructInstance(OutActors_NativeBuffer, 0);
            
        }
    }
    
    // Function /Script/AIModule.AIPerceptionComponent:GetKnownPerceivedActors
    static readonly IntPtr GetKnownPerceivedActors_NativeFunction;
    static readonly int GetKnownPerceivedActors_ParamsSize;
    static readonly int GetKnownPerceivedActors_SenseToUse_Offset;
    static readonly int GetKnownPerceivedActors_OutActors_Offset;
    static readonly int GetKnownPerceivedActors_OutActors_ElementSize;
    
    public void GetKnownPerceivedActors(SubclassOf<UnrealSharp.AIModule.AISense> senseToUse, out System.Collections.Generic.IList<UnrealSharp.Engine.Actor> outActors)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetKnownPerceivedActors_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            SubclassOfMarshaller<UnrealSharp.AIModule.AISense>.ToNative(IntPtr.Add(ParamsBuffer, GetKnownPerceivedActors_SenseToUse_Offset), 0, null, senseToUse);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetKnownPerceivedActors_NativeFunction, ParamsBuffer);
            
            IntPtr OutActors_NativeBuffer = IntPtr.Add(ParamsBuffer, GetKnownPerceivedActors_OutActors_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor> OutActors_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor> (1, ObjectMarshaller<UnrealSharp.Engine.Actor>.ToNative, ObjectMarshaller<UnrealSharp.Engine.Actor>.FromNative, GetKnownPerceivedActors_OutActors_ElementSize);
            outActors = OutActors_Marshaler.FromNative(OutActors_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor>.DestructInstance(OutActors_NativeBuffer, 0);
            
        }
    }
    
    // Function /Script/AIModule.AIPerceptionComponent:GetCurrentlyPerceivedActors
    static readonly IntPtr GetCurrentlyPerceivedActors_NativeFunction;
    static readonly int GetCurrentlyPerceivedActors_ParamsSize;
    static readonly int GetCurrentlyPerceivedActors_SenseToUse_Offset;
    static readonly int GetCurrentlyPerceivedActors_OutActors_Offset;
    static readonly int GetCurrentlyPerceivedActors_OutActors_ElementSize;
    
    public void GetCurrentlyPerceivedActors(SubclassOf<UnrealSharp.AIModule.AISense> senseToUse, out System.Collections.Generic.IList<UnrealSharp.Engine.Actor> outActors)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCurrentlyPerceivedActors_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            SubclassOfMarshaller<UnrealSharp.AIModule.AISense>.ToNative(IntPtr.Add(ParamsBuffer, GetCurrentlyPerceivedActors_SenseToUse_Offset), 0, null, senseToUse);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCurrentlyPerceivedActors_NativeFunction, ParamsBuffer);
            
            IntPtr OutActors_NativeBuffer = IntPtr.Add(ParamsBuffer, GetCurrentlyPerceivedActors_OutActors_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor> OutActors_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor> (1, ObjectMarshaller<UnrealSharp.Engine.Actor>.ToNative, ObjectMarshaller<UnrealSharp.Engine.Actor>.FromNative, GetCurrentlyPerceivedActors_OutActors_ElementSize);
            outActors = OutActors_Marshaler.FromNative(OutActors_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor>.DestructInstance(OutActors_NativeBuffer, 0);
            
        }
    }
    
    // Function /Script/AIModule.AIPerceptionComponent:GetActorsPerception
    static readonly IntPtr GetActorsPerception_NativeFunction;
    static readonly int GetActorsPerception_ParamsSize;
    static readonly int GetActorsPerception_Actor_Offset;
    static readonly int GetActorsPerception_Info_Offset;
    static readonly int GetActorsPerception_ReturnValue_Offset;
    
    public bool GetActorsPerception(UnrealSharp.Engine.Actor actor, out UnrealSharp.AIModule.ActorPerceptionBlueprintInfo info)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetActorsPerception_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.Actor>.ToNative(IntPtr.Add(ParamsBuffer, GetActorsPerception_Actor_Offset), 0, null, actor);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetActorsPerception_NativeFunction, ParamsBuffer);
            
            info = UnrealSharp.AIModule.ActorPerceptionBlueprintInfoMarshaler.FromNative(IntPtr.Add(ParamsBuffer, GetActorsPerception_Info_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetActorsPerception_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AIModule.AIPerceptionComponent:ForgetAll
    static readonly IntPtr ForgetAll_NativeFunction;
    
    public void ForgetAll()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ForgetAll_NativeFunction, IntPtr.Zero);
        }
    }
    
    
}
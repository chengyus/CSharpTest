// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.AIModule;

[UClass]
public partial class AIPerceptionStimuliSourceComponent : UnrealSharp.Engine.ActorComponent
{
    
    static AIPerceptionStimuliSourceComponent()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("AIPerceptionStimuliSourceComponent");
        
        bAutoRegisterAsSource_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bAutoRegisterAsSource");
        bAutoRegisterAsSource_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bAutoRegisterAsSource");
        RegisterAsSourceForSenses_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "RegisterAsSourceForSenses");
        RegisterAsSourceForSenses_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "RegisterAsSourceForSenses");
        
        UnregisterFromSense_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "UnregisterFromSense");
        UnregisterFromSense_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(UnregisterFromSense_NativeFunction);
        UnregisterFromSense_SenseClass_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(UnregisterFromSense_NativeFunction, "SenseClass");
        UnregisterFromPerceptionSystem_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "UnregisterFromPerceptionSystem");
        RegisterWithPerceptionSystem_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RegisterWithPerceptionSystem");
        RegisterForSense_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RegisterForSense");
        RegisterForSense_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RegisterForSense_NativeFunction);
        RegisterForSense_SenseClass_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RegisterForSense_NativeFunction, "SenseClass");
        
        
    }
    
    protected AIPerceptionStimuliSourceComponent(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // BoolProperty /Script/AIModule.AIPerceptionStimuliSourceComponent:bAutoRegisterAsSource
    static readonly int bAutoRegisterAsSource_Offset;
    static readonly IntPtr bAutoRegisterAsSource_NativeProperty;
    
    public bool bAutoRegisterAsSource
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bAutoRegisterAsSource_NativeProperty, bAutoRegisterAsSource_Offset);
        }
    }
    
    // ArrayProperty /Script/AIModule.AIPerceptionStimuliSourceComponent:RegisterAsSourceForSenses
    static readonly int RegisterAsSourceForSenses_Offset;
    static readonly IntPtr RegisterAsSourceForSenses_NativeProperty;
    UnrealArrayReadOnlyMarshaler<SubclassOf<UnrealSharp.AIModule.AISense>> RegisterAsSourceForSenses_Wrapper = null;
    
    public System.Collections.Generic.IReadOnlyList<SubclassOf<UnrealSharp.AIModule.AISense>> RegisterAsSourceForSenses
    {
        get
        {
            if(RegisterAsSourceForSenses_Wrapper == null)
            {
                RegisterAsSourceForSenses_Wrapper = new UnrealArrayReadOnlyMarshaler<SubclassOf<UnrealSharp.AIModule.AISense>>(1, RegisterAsSourceForSenses_NativeProperty, SubclassOfMarshaller<UnrealSharp.AIModule.AISense>.ToNative, SubclassOfMarshaller<UnrealSharp.AIModule.AISense>.FromNative);
            }
            
            return RegisterAsSourceForSenses_Wrapper.FromNative(IntPtr.Add(NativeObject,RegisterAsSourceForSenses_Offset),0,this);
        }
    }
    
    // Function /Script/AIModule.AIPerceptionStimuliSourceComponent:UnregisterFromSense
    static readonly IntPtr UnregisterFromSense_NativeFunction;
    static readonly int UnregisterFromSense_ParamsSize;
    static readonly int UnregisterFromSense_SenseClass_Offset;
    
    public void UnregisterFromSense(SubclassOf<UnrealSharp.AIModule.AISense> senseClass)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[UnregisterFromSense_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            SubclassOfMarshaller<UnrealSharp.AIModule.AISense>.ToNative(IntPtr.Add(ParamsBuffer, UnregisterFromSense_SenseClass_Offset), 0, null, senseClass);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, UnregisterFromSense_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/AIModule.AIPerceptionStimuliSourceComponent:UnregisterFromPerceptionSystem
    static readonly IntPtr UnregisterFromPerceptionSystem_NativeFunction;
    
    public void UnregisterFromPerceptionSystem()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, UnregisterFromPerceptionSystem_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/AIModule.AIPerceptionStimuliSourceComponent:RegisterWithPerceptionSystem
    static readonly IntPtr RegisterWithPerceptionSystem_NativeFunction;
    
    public void RegisterWithPerceptionSystem()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RegisterWithPerceptionSystem_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/AIModule.AIPerceptionStimuliSourceComponent:RegisterForSense
    static readonly IntPtr RegisterForSense_NativeFunction;
    static readonly int RegisterForSense_ParamsSize;
    static readonly int RegisterForSense_SenseClass_Offset;
    
    public void RegisterForSense(SubclassOf<UnrealSharp.AIModule.AISense> senseClass)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RegisterForSense_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            SubclassOfMarshaller<UnrealSharp.AIModule.AISense>.ToNative(IntPtr.Add(ParamsBuffer, RegisterForSense_SenseClass_Offset), 0, null, senseClass);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RegisterForSense_NativeFunction, ParamsBuffer);
            
        }
    }
    
    
}
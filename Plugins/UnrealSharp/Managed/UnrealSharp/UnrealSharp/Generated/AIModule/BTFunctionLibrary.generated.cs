// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.AIModule;

[UClass]
public partial class BTFunctionLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static BTFunctionLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("BTFunctionLibrary");
        
        
        StopUsingExternalEvent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "StopUsingExternalEvent");
        StopUsingExternalEvent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(StopUsingExternalEvent_NativeFunction);
        StopUsingExternalEvent_NodeOwner_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StopUsingExternalEvent_NativeFunction, "NodeOwner");
        StartUsingExternalEvent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "StartUsingExternalEvent");
        StartUsingExternalEvent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(StartUsingExternalEvent_NativeFunction);
        StartUsingExternalEvent_NodeOwner_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StartUsingExternalEvent_NativeFunction, "NodeOwner");
        StartUsingExternalEvent_OwningActor_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StartUsingExternalEvent_NativeFunction, "OwningActor");
        SetBlackboardValueAsVector_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetBlackboardValueAsVector");
        SetBlackboardValueAsVector_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetBlackboardValueAsVector_NativeFunction);
        SetBlackboardValueAsVector_NodeOwner_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsVector_NativeFunction, "NodeOwner");
        SetBlackboardValueAsVector_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsVector_NativeFunction, "Key");
        SetBlackboardValueAsVector_Value_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsVector_NativeFunction, "Value");
        SetBlackboardValueAsString_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetBlackboardValueAsString");
        SetBlackboardValueAsString_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetBlackboardValueAsString_NativeFunction);
        SetBlackboardValueAsString_NodeOwner_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsString_NativeFunction, "NodeOwner");
        SetBlackboardValueAsString_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsString_NativeFunction, "Key");
        SetBlackboardValueAsString_Value_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsString_NativeFunction, "Value");
        SetBlackboardValueAsRotator_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetBlackboardValueAsRotator");
        SetBlackboardValueAsRotator_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetBlackboardValueAsRotator_NativeFunction);
        SetBlackboardValueAsRotator_NodeOwner_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsRotator_NativeFunction, "NodeOwner");
        SetBlackboardValueAsRotator_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsRotator_NativeFunction, "Key");
        SetBlackboardValueAsRotator_Value_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsRotator_NativeFunction, "Value");
        SetBlackboardValueAsObject_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetBlackboardValueAsObject");
        SetBlackboardValueAsObject_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetBlackboardValueAsObject_NativeFunction);
        SetBlackboardValueAsObject_NodeOwner_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsObject_NativeFunction, "NodeOwner");
        SetBlackboardValueAsObject_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsObject_NativeFunction, "Key");
        SetBlackboardValueAsObject_Value_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsObject_NativeFunction, "Value");
        SetBlackboardValueAsName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetBlackboardValueAsName");
        SetBlackboardValueAsName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetBlackboardValueAsName_NativeFunction);
        SetBlackboardValueAsName_NodeOwner_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsName_NativeFunction, "NodeOwner");
        SetBlackboardValueAsName_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsName_NativeFunction, "Key");
        SetBlackboardValueAsName_Value_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsName_NativeFunction, "Value");
        SetBlackboardValueAsInt_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetBlackboardValueAsInt");
        SetBlackboardValueAsInt_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetBlackboardValueAsInt_NativeFunction);
        SetBlackboardValueAsInt_NodeOwner_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsInt_NativeFunction, "NodeOwner");
        SetBlackboardValueAsInt_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsInt_NativeFunction, "Key");
        SetBlackboardValueAsInt_Value_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsInt_NativeFunction, "Value");
        SetBlackboardValueAsFloat_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetBlackboardValueAsFloat");
        SetBlackboardValueAsFloat_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetBlackboardValueAsFloat_NativeFunction);
        SetBlackboardValueAsFloat_NodeOwner_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsFloat_NativeFunction, "NodeOwner");
        SetBlackboardValueAsFloat_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsFloat_NativeFunction, "Key");
        SetBlackboardValueAsFloat_Value_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsFloat_NativeFunction, "Value");
        SetBlackboardValueAsEnum_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetBlackboardValueAsEnum");
        SetBlackboardValueAsEnum_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetBlackboardValueAsEnum_NativeFunction);
        SetBlackboardValueAsEnum_NodeOwner_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsEnum_NativeFunction, "NodeOwner");
        SetBlackboardValueAsEnum_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsEnum_NativeFunction, "Key");
        SetBlackboardValueAsEnum_Value_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsEnum_NativeFunction, "Value");
        SetBlackboardValueAsClass_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetBlackboardValueAsClass");
        SetBlackboardValueAsClass_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetBlackboardValueAsClass_NativeFunction);
        SetBlackboardValueAsClass_NodeOwner_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsClass_NativeFunction, "NodeOwner");
        SetBlackboardValueAsClass_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsClass_NativeFunction, "Key");
        SetBlackboardValueAsClass_Value_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsClass_NativeFunction, "Value");
        SetBlackboardValueAsBool_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetBlackboardValueAsBool");
        SetBlackboardValueAsBool_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetBlackboardValueAsBool_NativeFunction);
        SetBlackboardValueAsBool_NodeOwner_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsBool_NativeFunction, "NodeOwner");
        SetBlackboardValueAsBool_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsBool_NativeFunction, "Key");
        SetBlackboardValueAsBool_Value_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlackboardValueAsBool_NativeFunction, "Value");
        GetOwnersBlackboard_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetOwnersBlackboard");
        GetOwnersBlackboard_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetOwnersBlackboard_NativeFunction);
        GetOwnersBlackboard_NodeOwner_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetOwnersBlackboard_NativeFunction, "NodeOwner");
        GetOwnersBlackboard_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetOwnersBlackboard_NativeFunction, "ReturnValue");
        GetOwnerComponent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetOwnerComponent");
        GetOwnerComponent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetOwnerComponent_NativeFunction);
        GetOwnerComponent_NodeOwner_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetOwnerComponent_NativeFunction, "NodeOwner");
        GetOwnerComponent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetOwnerComponent_NativeFunction, "ReturnValue");
        GetBlackboardValueAsVector_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBlackboardValueAsVector");
        GetBlackboardValueAsVector_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBlackboardValueAsVector_NativeFunction);
        GetBlackboardValueAsVector_NodeOwner_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsVector_NativeFunction, "NodeOwner");
        GetBlackboardValueAsVector_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsVector_NativeFunction, "Key");
        GetBlackboardValueAsVector_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsVector_NativeFunction, "ReturnValue");
        GetBlackboardValueAsString_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBlackboardValueAsString");
        GetBlackboardValueAsString_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBlackboardValueAsString_NativeFunction);
        GetBlackboardValueAsString_NodeOwner_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsString_NativeFunction, "NodeOwner");
        GetBlackboardValueAsString_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsString_NativeFunction, "Key");
        GetBlackboardValueAsString_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsString_NativeFunction, "ReturnValue");
        GetBlackboardValueAsRotator_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBlackboardValueAsRotator");
        GetBlackboardValueAsRotator_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBlackboardValueAsRotator_NativeFunction);
        GetBlackboardValueAsRotator_NodeOwner_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsRotator_NativeFunction, "NodeOwner");
        GetBlackboardValueAsRotator_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsRotator_NativeFunction, "Key");
        GetBlackboardValueAsRotator_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsRotator_NativeFunction, "ReturnValue");
        GetBlackboardValueAsObject_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBlackboardValueAsObject");
        GetBlackboardValueAsObject_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBlackboardValueAsObject_NativeFunction);
        GetBlackboardValueAsObject_NodeOwner_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsObject_NativeFunction, "NodeOwner");
        GetBlackboardValueAsObject_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsObject_NativeFunction, "Key");
        GetBlackboardValueAsObject_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsObject_NativeFunction, "ReturnValue");
        GetBlackboardValueAsName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBlackboardValueAsName");
        GetBlackboardValueAsName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBlackboardValueAsName_NativeFunction);
        GetBlackboardValueAsName_NodeOwner_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsName_NativeFunction, "NodeOwner");
        GetBlackboardValueAsName_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsName_NativeFunction, "Key");
        GetBlackboardValueAsName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsName_NativeFunction, "ReturnValue");
        GetBlackboardValueAsInt_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBlackboardValueAsInt");
        GetBlackboardValueAsInt_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBlackboardValueAsInt_NativeFunction);
        GetBlackboardValueAsInt_NodeOwner_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsInt_NativeFunction, "NodeOwner");
        GetBlackboardValueAsInt_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsInt_NativeFunction, "Key");
        GetBlackboardValueAsInt_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsInt_NativeFunction, "ReturnValue");
        GetBlackboardValueAsFloat_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBlackboardValueAsFloat");
        GetBlackboardValueAsFloat_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBlackboardValueAsFloat_NativeFunction);
        GetBlackboardValueAsFloat_NodeOwner_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsFloat_NativeFunction, "NodeOwner");
        GetBlackboardValueAsFloat_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsFloat_NativeFunction, "Key");
        GetBlackboardValueAsFloat_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsFloat_NativeFunction, "ReturnValue");
        GetBlackboardValueAsEnum_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBlackboardValueAsEnum");
        GetBlackboardValueAsEnum_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBlackboardValueAsEnum_NativeFunction);
        GetBlackboardValueAsEnum_NodeOwner_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsEnum_NativeFunction, "NodeOwner");
        GetBlackboardValueAsEnum_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsEnum_NativeFunction, "Key");
        GetBlackboardValueAsEnum_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsEnum_NativeFunction, "ReturnValue");
        GetBlackboardValueAsClass_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBlackboardValueAsClass");
        GetBlackboardValueAsClass_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBlackboardValueAsClass_NativeFunction);
        GetBlackboardValueAsClass_NodeOwner_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsClass_NativeFunction, "NodeOwner");
        GetBlackboardValueAsClass_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsClass_NativeFunction, "Key");
        GetBlackboardValueAsClass_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsClass_NativeFunction, "ReturnValue");
        GetBlackboardValueAsBool_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBlackboardValueAsBool");
        GetBlackboardValueAsBool_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBlackboardValueAsBool_NativeFunction);
        GetBlackboardValueAsBool_NodeOwner_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsBool_NativeFunction, "NodeOwner");
        GetBlackboardValueAsBool_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsBool_NativeFunction, "Key");
        GetBlackboardValueAsBool_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsBool_NativeFunction, "ReturnValue");
        GetBlackboardValueAsActor_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBlackboardValueAsActor");
        GetBlackboardValueAsActor_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBlackboardValueAsActor_NativeFunction);
        GetBlackboardValueAsActor_NodeOwner_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsActor_NativeFunction, "NodeOwner");
        GetBlackboardValueAsActor_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsActor_NativeFunction, "Key");
        GetBlackboardValueAsActor_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlackboardValueAsActor_NativeFunction, "ReturnValue");
        ClearBlackboardValueAsVector_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ClearBlackboardValueAsVector");
        ClearBlackboardValueAsVector_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ClearBlackboardValueAsVector_NativeFunction);
        ClearBlackboardValueAsVector_NodeOwner_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ClearBlackboardValueAsVector_NativeFunction, "NodeOwner");
        ClearBlackboardValueAsVector_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ClearBlackboardValueAsVector_NativeFunction, "Key");
        ClearBlackboardValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ClearBlackboardValue");
        ClearBlackboardValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ClearBlackboardValue_NativeFunction);
        ClearBlackboardValue_NodeOwner_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ClearBlackboardValue_NativeFunction, "NodeOwner");
        ClearBlackboardValue_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ClearBlackboardValue_NativeFunction, "Key");
        
        
    }
    
    protected BTFunctionLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/AIModule.BTFunctionLibrary:StopUsingExternalEvent
    static readonly IntPtr StopUsingExternalEvent_NativeFunction;
    static readonly int StopUsingExternalEvent_ParamsSize;
    static readonly int StopUsingExternalEvent_NodeOwner_Offset;
    
    [Obsolete("No longer needed")]
    public static void StopUsingExternalEvent(UnrealSharp.AIModule.BTNode nodeOwner)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[StopUsingExternalEvent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.AIModule.BTNode>.ToNative(IntPtr.Add(ParamsBuffer, StopUsingExternalEvent_NodeOwner_Offset), 0, null, nodeOwner);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, StopUsingExternalEvent_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/AIModule.BTFunctionLibrary:StartUsingExternalEvent
    static readonly IntPtr StartUsingExternalEvent_NativeFunction;
    static readonly int StartUsingExternalEvent_ParamsSize;
    static readonly int StartUsingExternalEvent_NodeOwner_Offset;
    static readonly int StartUsingExternalEvent_OwningActor_Offset;
    
    [Obsolete("No longer needed")]
    public static void StartUsingExternalEvent(UnrealSharp.AIModule.BTNode nodeOwner, UnrealSharp.Engine.Actor owningActor)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[StartUsingExternalEvent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.AIModule.BTNode>.ToNative(IntPtr.Add(ParamsBuffer, StartUsingExternalEvent_NodeOwner_Offset), 0, null, nodeOwner);
            ObjectMarshaller<UnrealSharp.Engine.Actor>.ToNative(IntPtr.Add(ParamsBuffer, StartUsingExternalEvent_OwningActor_Offset), 0, null, owningActor);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, StartUsingExternalEvent_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/AIModule.BTFunctionLibrary:SetBlackboardValueAsVector
    static readonly IntPtr SetBlackboardValueAsVector_NativeFunction;
    static readonly int SetBlackboardValueAsVector_ParamsSize;
    static readonly int SetBlackboardValueAsVector_NodeOwner_Offset;
    static readonly int SetBlackboardValueAsVector_Key_Offset;
    static readonly int SetBlackboardValueAsVector_Value_Offset;
    
    public static void SetBlackboardValueAsVector(UnrealSharp.AIModule.BTNode nodeOwner, UnrealSharp.AIModule.BlackboardKeySelector key, System.DoubleNumerics.Vector3 value)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetBlackboardValueAsVector_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.AIModule.BTNode>.ToNative(IntPtr.Add(ParamsBuffer, SetBlackboardValueAsVector_NodeOwner_Offset), 0, null, nodeOwner);
            UnrealSharp.AIModule.BlackboardKeySelectorMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetBlackboardValueAsVector_Key_Offset), 0, null, key);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, SetBlackboardValueAsVector_Value_Offset), 0, null, value);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetBlackboardValueAsVector_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/AIModule.BTFunctionLibrary:SetBlackboardValueAsString
    static readonly IntPtr SetBlackboardValueAsString_NativeFunction;
    static readonly int SetBlackboardValueAsString_ParamsSize;
    static readonly int SetBlackboardValueAsString_NodeOwner_Offset;
    static readonly int SetBlackboardValueAsString_Key_Offset;
    static readonly int SetBlackboardValueAsString_Value_Offset;
    
    public static void SetBlackboardValueAsString(UnrealSharp.AIModule.BTNode nodeOwner, UnrealSharp.AIModule.BlackboardKeySelector key, string value)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetBlackboardValueAsString_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.AIModule.BTNode>.ToNative(IntPtr.Add(ParamsBuffer, SetBlackboardValueAsString_NodeOwner_Offset), 0, null, nodeOwner);
            UnrealSharp.AIModule.BlackboardKeySelectorMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetBlackboardValueAsString_Key_Offset), 0, null, key);
            IntPtr Value_NativePtr = IntPtr.Add(ParamsBuffer,SetBlackboardValueAsString_Value_Offset);
            StringMarshaller.ToNative(Value_NativePtr,0,null,value);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetBlackboardValueAsString_NativeFunction, ParamsBuffer);
            
            
            StringMarshaller.DestructInstance(Value_NativePtr, 0);
        }
    }
    
    // Function /Script/AIModule.BTFunctionLibrary:SetBlackboardValueAsRotator
    static readonly IntPtr SetBlackboardValueAsRotator_NativeFunction;
    static readonly int SetBlackboardValueAsRotator_ParamsSize;
    static readonly int SetBlackboardValueAsRotator_NodeOwner_Offset;
    static readonly int SetBlackboardValueAsRotator_Key_Offset;
    static readonly int SetBlackboardValueAsRotator_Value_Offset;
    
    public static void SetBlackboardValueAsRotator(UnrealSharp.AIModule.BTNode nodeOwner, UnrealSharp.AIModule.BlackboardKeySelector key, UnrealSharp.Rotator value)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetBlackboardValueAsRotator_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.AIModule.BTNode>.ToNative(IntPtr.Add(ParamsBuffer, SetBlackboardValueAsRotator_NodeOwner_Offset), 0, null, nodeOwner);
            UnrealSharp.AIModule.BlackboardKeySelectorMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetBlackboardValueAsRotator_Key_Offset), 0, null, key);
            BlittableMarshaller<UnrealSharp.Rotator>.ToNative(IntPtr.Add(ParamsBuffer, SetBlackboardValueAsRotator_Value_Offset), 0, null, value);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetBlackboardValueAsRotator_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/AIModule.BTFunctionLibrary:SetBlackboardValueAsObject
    static readonly IntPtr SetBlackboardValueAsObject_NativeFunction;
    static readonly int SetBlackboardValueAsObject_ParamsSize;
    static readonly int SetBlackboardValueAsObject_NodeOwner_Offset;
    static readonly int SetBlackboardValueAsObject_Key_Offset;
    static readonly int SetBlackboardValueAsObject_Value_Offset;
    
    public static void SetBlackboardValueAsObject(UnrealSharp.AIModule.BTNode nodeOwner, UnrealSharp.AIModule.BlackboardKeySelector key, UnrealSharp.CoreUObject.Object value)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetBlackboardValueAsObject_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.AIModule.BTNode>.ToNative(IntPtr.Add(ParamsBuffer, SetBlackboardValueAsObject_NodeOwner_Offset), 0, null, nodeOwner);
            UnrealSharp.AIModule.BlackboardKeySelectorMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetBlackboardValueAsObject_Key_Offset), 0, null, key);
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, SetBlackboardValueAsObject_Value_Offset), 0, null, value);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetBlackboardValueAsObject_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/AIModule.BTFunctionLibrary:SetBlackboardValueAsName
    static readonly IntPtr SetBlackboardValueAsName_NativeFunction;
    static readonly int SetBlackboardValueAsName_ParamsSize;
    static readonly int SetBlackboardValueAsName_NodeOwner_Offset;
    static readonly int SetBlackboardValueAsName_Key_Offset;
    static readonly int SetBlackboardValueAsName_Value_Offset;
    
    public static void SetBlackboardValueAsName(UnrealSharp.AIModule.BTNode nodeOwner, UnrealSharp.AIModule.BlackboardKeySelector key, Name value)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetBlackboardValueAsName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.AIModule.BTNode>.ToNative(IntPtr.Add(ParamsBuffer, SetBlackboardValueAsName_NodeOwner_Offset), 0, null, nodeOwner);
            UnrealSharp.AIModule.BlackboardKeySelectorMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetBlackboardValueAsName_Key_Offset), 0, null, key);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetBlackboardValueAsName_Value_Offset), 0, null, value);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetBlackboardValueAsName_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/AIModule.BTFunctionLibrary:SetBlackboardValueAsInt
    static readonly IntPtr SetBlackboardValueAsInt_NativeFunction;
    static readonly int SetBlackboardValueAsInt_ParamsSize;
    static readonly int SetBlackboardValueAsInt_NodeOwner_Offset;
    static readonly int SetBlackboardValueAsInt_Key_Offset;
    static readonly int SetBlackboardValueAsInt_Value_Offset;
    
    public static void SetBlackboardValueAsInt(UnrealSharp.AIModule.BTNode nodeOwner, UnrealSharp.AIModule.BlackboardKeySelector key, int value)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetBlackboardValueAsInt_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.AIModule.BTNode>.ToNative(IntPtr.Add(ParamsBuffer, SetBlackboardValueAsInt_NodeOwner_Offset), 0, null, nodeOwner);
            UnrealSharp.AIModule.BlackboardKeySelectorMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetBlackboardValueAsInt_Key_Offset), 0, null, key);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetBlackboardValueAsInt_Value_Offset), 0, null, value);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetBlackboardValueAsInt_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/AIModule.BTFunctionLibrary:SetBlackboardValueAsFloat
    static readonly IntPtr SetBlackboardValueAsFloat_NativeFunction;
    static readonly int SetBlackboardValueAsFloat_ParamsSize;
    static readonly int SetBlackboardValueAsFloat_NodeOwner_Offset;
    static readonly int SetBlackboardValueAsFloat_Key_Offset;
    static readonly int SetBlackboardValueAsFloat_Value_Offset;
    
    public static void SetBlackboardValueAsFloat(UnrealSharp.AIModule.BTNode nodeOwner, UnrealSharp.AIModule.BlackboardKeySelector key, float value)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetBlackboardValueAsFloat_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.AIModule.BTNode>.ToNative(IntPtr.Add(ParamsBuffer, SetBlackboardValueAsFloat_NodeOwner_Offset), 0, null, nodeOwner);
            UnrealSharp.AIModule.BlackboardKeySelectorMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetBlackboardValueAsFloat_Key_Offset), 0, null, key);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetBlackboardValueAsFloat_Value_Offset), 0, null, value);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetBlackboardValueAsFloat_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/AIModule.BTFunctionLibrary:SetBlackboardValueAsEnum
    static readonly IntPtr SetBlackboardValueAsEnum_NativeFunction;
    static readonly int SetBlackboardValueAsEnum_ParamsSize;
    static readonly int SetBlackboardValueAsEnum_NodeOwner_Offset;
    static readonly int SetBlackboardValueAsEnum_Key_Offset;
    static readonly int SetBlackboardValueAsEnum_Value_Offset;
    
    public static void SetBlackboardValueAsEnum(UnrealSharp.AIModule.BTNode nodeOwner, UnrealSharp.AIModule.BlackboardKeySelector key, byte value)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetBlackboardValueAsEnum_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.AIModule.BTNode>.ToNative(IntPtr.Add(ParamsBuffer, SetBlackboardValueAsEnum_NodeOwner_Offset), 0, null, nodeOwner);
            UnrealSharp.AIModule.BlackboardKeySelectorMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetBlackboardValueAsEnum_Key_Offset), 0, null, key);
            BlittableMarshaller<byte>.ToNative(IntPtr.Add(ParamsBuffer, SetBlackboardValueAsEnum_Value_Offset), 0, null, value);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetBlackboardValueAsEnum_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/AIModule.BTFunctionLibrary:SetBlackboardValueAsClass
    static readonly IntPtr SetBlackboardValueAsClass_NativeFunction;
    static readonly int SetBlackboardValueAsClass_ParamsSize;
    static readonly int SetBlackboardValueAsClass_NodeOwner_Offset;
    static readonly int SetBlackboardValueAsClass_Key_Offset;
    static readonly int SetBlackboardValueAsClass_Value_Offset;
    
    public static void SetBlackboardValueAsClass(UnrealSharp.AIModule.BTNode nodeOwner, UnrealSharp.AIModule.BlackboardKeySelector key, SubclassOf<UnrealSharp.CoreUObject.Object> value)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetBlackboardValueAsClass_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.AIModule.BTNode>.ToNative(IntPtr.Add(ParamsBuffer, SetBlackboardValueAsClass_NodeOwner_Offset), 0, null, nodeOwner);
            UnrealSharp.AIModule.BlackboardKeySelectorMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetBlackboardValueAsClass_Key_Offset), 0, null, key);
            SubclassOfMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, SetBlackboardValueAsClass_Value_Offset), 0, null, value);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetBlackboardValueAsClass_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/AIModule.BTFunctionLibrary:SetBlackboardValueAsBool
    static readonly IntPtr SetBlackboardValueAsBool_NativeFunction;
    static readonly int SetBlackboardValueAsBool_ParamsSize;
    static readonly int SetBlackboardValueAsBool_NodeOwner_Offset;
    static readonly int SetBlackboardValueAsBool_Key_Offset;
    static readonly int SetBlackboardValueAsBool_Value_Offset;
    
    public static void SetBlackboardValueAsBool(UnrealSharp.AIModule.BTNode nodeOwner, UnrealSharp.AIModule.BlackboardKeySelector key, bool value)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetBlackboardValueAsBool_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.AIModule.BTNode>.ToNative(IntPtr.Add(ParamsBuffer, SetBlackboardValueAsBool_NodeOwner_Offset), 0, null, nodeOwner);
            UnrealSharp.AIModule.BlackboardKeySelectorMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetBlackboardValueAsBool_Key_Offset), 0, null, key);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetBlackboardValueAsBool_Value_Offset), 0, null, value);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetBlackboardValueAsBool_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/AIModule.BTFunctionLibrary:GetOwnersBlackboard
    static readonly IntPtr GetOwnersBlackboard_NativeFunction;
    static readonly int GetOwnersBlackboard_ParamsSize;
    static readonly int GetOwnersBlackboard_NodeOwner_Offset;
    static readonly int GetOwnersBlackboard_ReturnValue_Offset;
    
    public static UnrealSharp.AIModule.BlackboardComponent GetOwnersBlackboard(UnrealSharp.AIModule.BTNode nodeOwner)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetOwnersBlackboard_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.AIModule.BTNode>.ToNative(IntPtr.Add(ParamsBuffer, GetOwnersBlackboard_NodeOwner_Offset), 0, null, nodeOwner);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetOwnersBlackboard_NativeFunction, ParamsBuffer);
            
            UnrealSharp.AIModule.BlackboardComponent returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.AIModule.BlackboardComponent>.FromNative(IntPtr.Add(ParamsBuffer, GetOwnersBlackboard_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AIModule.BTFunctionLibrary:GetOwnerComponent
    static readonly IntPtr GetOwnerComponent_NativeFunction;
    static readonly int GetOwnerComponent_ParamsSize;
    static readonly int GetOwnerComponent_NodeOwner_Offset;
    static readonly int GetOwnerComponent_ReturnValue_Offset;
    
    public static UnrealSharp.AIModule.BehaviorTreeComponent GetOwnerComponent(UnrealSharp.AIModule.BTNode nodeOwner)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetOwnerComponent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.AIModule.BTNode>.ToNative(IntPtr.Add(ParamsBuffer, GetOwnerComponent_NodeOwner_Offset), 0, null, nodeOwner);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetOwnerComponent_NativeFunction, ParamsBuffer);
            
            UnrealSharp.AIModule.BehaviorTreeComponent returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.AIModule.BehaviorTreeComponent>.FromNative(IntPtr.Add(ParamsBuffer, GetOwnerComponent_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AIModule.BTFunctionLibrary:GetBlackboardValueAsVector
    static readonly IntPtr GetBlackboardValueAsVector_NativeFunction;
    static readonly int GetBlackboardValueAsVector_ParamsSize;
    static readonly int GetBlackboardValueAsVector_NodeOwner_Offset;
    static readonly int GetBlackboardValueAsVector_Key_Offset;
    static readonly int GetBlackboardValueAsVector_ReturnValue_Offset;
    
    public static System.DoubleNumerics.Vector3 GetBlackboardValueAsVector(UnrealSharp.AIModule.BTNode nodeOwner, UnrealSharp.AIModule.BlackboardKeySelector key)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBlackboardValueAsVector_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.AIModule.BTNode>.ToNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsVector_NodeOwner_Offset), 0, null, nodeOwner);
            UnrealSharp.AIModule.BlackboardKeySelectorMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsVector_Key_Offset), 0, null, key);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetBlackboardValueAsVector_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector3 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsVector_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AIModule.BTFunctionLibrary:GetBlackboardValueAsString
    static readonly IntPtr GetBlackboardValueAsString_NativeFunction;
    static readonly int GetBlackboardValueAsString_ParamsSize;
    static readonly int GetBlackboardValueAsString_NodeOwner_Offset;
    static readonly int GetBlackboardValueAsString_Key_Offset;
    static readonly int GetBlackboardValueAsString_ReturnValue_Offset;
    
    public static string GetBlackboardValueAsString(UnrealSharp.AIModule.BTNode nodeOwner, UnrealSharp.AIModule.BlackboardKeySelector key)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBlackboardValueAsString_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.AIModule.BTNode>.ToNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsString_NodeOwner_Offset), 0, null, nodeOwner);
            UnrealSharp.AIModule.BlackboardKeySelectorMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsString_Key_Offset), 0, null, key);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetBlackboardValueAsString_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetBlackboardValueAsString_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/AIModule.BTFunctionLibrary:GetBlackboardValueAsRotator
    static readonly IntPtr GetBlackboardValueAsRotator_NativeFunction;
    static readonly int GetBlackboardValueAsRotator_ParamsSize;
    static readonly int GetBlackboardValueAsRotator_NodeOwner_Offset;
    static readonly int GetBlackboardValueAsRotator_Key_Offset;
    static readonly int GetBlackboardValueAsRotator_ReturnValue_Offset;
    
    public static UnrealSharp.Rotator GetBlackboardValueAsRotator(UnrealSharp.AIModule.BTNode nodeOwner, UnrealSharp.AIModule.BlackboardKeySelector key)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBlackboardValueAsRotator_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.AIModule.BTNode>.ToNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsRotator_NodeOwner_Offset), 0, null, nodeOwner);
            UnrealSharp.AIModule.BlackboardKeySelectorMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsRotator_Key_Offset), 0, null, key);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetBlackboardValueAsRotator_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Rotator returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.Rotator>.FromNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsRotator_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AIModule.BTFunctionLibrary:GetBlackboardValueAsObject
    static readonly IntPtr GetBlackboardValueAsObject_NativeFunction;
    static readonly int GetBlackboardValueAsObject_ParamsSize;
    static readonly int GetBlackboardValueAsObject_NodeOwner_Offset;
    static readonly int GetBlackboardValueAsObject_Key_Offset;
    static readonly int GetBlackboardValueAsObject_ReturnValue_Offset;
    
    public static UnrealSharp.CoreUObject.Object GetBlackboardValueAsObject(UnrealSharp.AIModule.BTNode nodeOwner, UnrealSharp.AIModule.BlackboardKeySelector key)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBlackboardValueAsObject_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.AIModule.BTNode>.ToNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsObject_NodeOwner_Offset), 0, null, nodeOwner);
            UnrealSharp.AIModule.BlackboardKeySelectorMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsObject_Key_Offset), 0, null, key);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetBlackboardValueAsObject_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.Object returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.CoreUObject.Object>.FromNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsObject_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AIModule.BTFunctionLibrary:GetBlackboardValueAsName
    static readonly IntPtr GetBlackboardValueAsName_NativeFunction;
    static readonly int GetBlackboardValueAsName_ParamsSize;
    static readonly int GetBlackboardValueAsName_NodeOwner_Offset;
    static readonly int GetBlackboardValueAsName_Key_Offset;
    static readonly int GetBlackboardValueAsName_ReturnValue_Offset;
    
    public static Name GetBlackboardValueAsName(UnrealSharp.AIModule.BTNode nodeOwner, UnrealSharp.AIModule.BlackboardKeySelector key)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBlackboardValueAsName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.AIModule.BTNode>.ToNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsName_NodeOwner_Offset), 0, null, nodeOwner);
            UnrealSharp.AIModule.BlackboardKeySelectorMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsName_Key_Offset), 0, null, key);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetBlackboardValueAsName_NativeFunction, ParamsBuffer);
            
            Name returnValue;
            returnValue = BlittableMarshaller<Name>.FromNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsName_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AIModule.BTFunctionLibrary:GetBlackboardValueAsInt
    static readonly IntPtr GetBlackboardValueAsInt_NativeFunction;
    static readonly int GetBlackboardValueAsInt_ParamsSize;
    static readonly int GetBlackboardValueAsInt_NodeOwner_Offset;
    static readonly int GetBlackboardValueAsInt_Key_Offset;
    static readonly int GetBlackboardValueAsInt_ReturnValue_Offset;
    
    public static int GetBlackboardValueAsInt(UnrealSharp.AIModule.BTNode nodeOwner, UnrealSharp.AIModule.BlackboardKeySelector key)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBlackboardValueAsInt_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.AIModule.BTNode>.ToNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsInt_NodeOwner_Offset), 0, null, nodeOwner);
            UnrealSharp.AIModule.BlackboardKeySelectorMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsInt_Key_Offset), 0, null, key);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetBlackboardValueAsInt_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsInt_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AIModule.BTFunctionLibrary:GetBlackboardValueAsFloat
    static readonly IntPtr GetBlackboardValueAsFloat_NativeFunction;
    static readonly int GetBlackboardValueAsFloat_ParamsSize;
    static readonly int GetBlackboardValueAsFloat_NodeOwner_Offset;
    static readonly int GetBlackboardValueAsFloat_Key_Offset;
    static readonly int GetBlackboardValueAsFloat_ReturnValue_Offset;
    
    public static float GetBlackboardValueAsFloat(UnrealSharp.AIModule.BTNode nodeOwner, UnrealSharp.AIModule.BlackboardKeySelector key)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBlackboardValueAsFloat_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.AIModule.BTNode>.ToNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsFloat_NodeOwner_Offset), 0, null, nodeOwner);
            UnrealSharp.AIModule.BlackboardKeySelectorMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsFloat_Key_Offset), 0, null, key);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetBlackboardValueAsFloat_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsFloat_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AIModule.BTFunctionLibrary:GetBlackboardValueAsEnum
    static readonly IntPtr GetBlackboardValueAsEnum_NativeFunction;
    static readonly int GetBlackboardValueAsEnum_ParamsSize;
    static readonly int GetBlackboardValueAsEnum_NodeOwner_Offset;
    static readonly int GetBlackboardValueAsEnum_Key_Offset;
    static readonly int GetBlackboardValueAsEnum_ReturnValue_Offset;
    
    public static byte GetBlackboardValueAsEnum(UnrealSharp.AIModule.BTNode nodeOwner, UnrealSharp.AIModule.BlackboardKeySelector key)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBlackboardValueAsEnum_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.AIModule.BTNode>.ToNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsEnum_NodeOwner_Offset), 0, null, nodeOwner);
            UnrealSharp.AIModule.BlackboardKeySelectorMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsEnum_Key_Offset), 0, null, key);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetBlackboardValueAsEnum_NativeFunction, ParamsBuffer);
            
            byte returnValue;
            returnValue = BlittableMarshaller<byte>.FromNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsEnum_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AIModule.BTFunctionLibrary:GetBlackboardValueAsClass
    static readonly IntPtr GetBlackboardValueAsClass_NativeFunction;
    static readonly int GetBlackboardValueAsClass_ParamsSize;
    static readonly int GetBlackboardValueAsClass_NodeOwner_Offset;
    static readonly int GetBlackboardValueAsClass_Key_Offset;
    static readonly int GetBlackboardValueAsClass_ReturnValue_Offset;
    
    public static SubclassOf<UnrealSharp.CoreUObject.Object> GetBlackboardValueAsClass(UnrealSharp.AIModule.BTNode nodeOwner, UnrealSharp.AIModule.BlackboardKeySelector key)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBlackboardValueAsClass_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.AIModule.BTNode>.ToNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsClass_NodeOwner_Offset), 0, null, nodeOwner);
            UnrealSharp.AIModule.BlackboardKeySelectorMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsClass_Key_Offset), 0, null, key);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetBlackboardValueAsClass_NativeFunction, ParamsBuffer);
            
            SubclassOf<UnrealSharp.CoreUObject.Object> returnValue;
            returnValue = SubclassOfMarshaller<UnrealSharp.CoreUObject.Object>.FromNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsClass_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AIModule.BTFunctionLibrary:GetBlackboardValueAsBool
    static readonly IntPtr GetBlackboardValueAsBool_NativeFunction;
    static readonly int GetBlackboardValueAsBool_ParamsSize;
    static readonly int GetBlackboardValueAsBool_NodeOwner_Offset;
    static readonly int GetBlackboardValueAsBool_Key_Offset;
    static readonly int GetBlackboardValueAsBool_ReturnValue_Offset;
    
    public static bool GetBlackboardValueAsBool(UnrealSharp.AIModule.BTNode nodeOwner, UnrealSharp.AIModule.BlackboardKeySelector key)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBlackboardValueAsBool_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.AIModule.BTNode>.ToNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsBool_NodeOwner_Offset), 0, null, nodeOwner);
            UnrealSharp.AIModule.BlackboardKeySelectorMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsBool_Key_Offset), 0, null, key);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetBlackboardValueAsBool_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsBool_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AIModule.BTFunctionLibrary:GetBlackboardValueAsActor
    static readonly IntPtr GetBlackboardValueAsActor_NativeFunction;
    static readonly int GetBlackboardValueAsActor_ParamsSize;
    static readonly int GetBlackboardValueAsActor_NodeOwner_Offset;
    static readonly int GetBlackboardValueAsActor_Key_Offset;
    static readonly int GetBlackboardValueAsActor_ReturnValue_Offset;
    
    public static UnrealSharp.Engine.Actor GetBlackboardValueAsActor(UnrealSharp.AIModule.BTNode nodeOwner, UnrealSharp.AIModule.BlackboardKeySelector key)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBlackboardValueAsActor_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.AIModule.BTNode>.ToNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsActor_NodeOwner_Offset), 0, null, nodeOwner);
            UnrealSharp.AIModule.BlackboardKeySelectorMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsActor_Key_Offset), 0, null, key);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetBlackboardValueAsActor_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.Actor returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.Actor>.FromNative(IntPtr.Add(ParamsBuffer, GetBlackboardValueAsActor_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AIModule.BTFunctionLibrary:ClearBlackboardValueAsVector
    static readonly IntPtr ClearBlackboardValueAsVector_NativeFunction;
    static readonly int ClearBlackboardValueAsVector_ParamsSize;
    static readonly int ClearBlackboardValueAsVector_NodeOwner_Offset;
    static readonly int ClearBlackboardValueAsVector_Key_Offset;
    
    [Obsolete("Use ClearBlackboardValue instead.")]
    public static void ClearBlackboardValueAsVector(UnrealSharp.AIModule.BTNode nodeOwner, UnrealSharp.AIModule.BlackboardKeySelector key)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ClearBlackboardValueAsVector_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.AIModule.BTNode>.ToNative(IntPtr.Add(ParamsBuffer, ClearBlackboardValueAsVector_NodeOwner_Offset), 0, null, nodeOwner);
            UnrealSharp.AIModule.BlackboardKeySelectorMarshaler.ToNative(IntPtr.Add(ParamsBuffer, ClearBlackboardValueAsVector_Key_Offset), 0, null, key);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ClearBlackboardValueAsVector_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/AIModule.BTFunctionLibrary:ClearBlackboardValue
    static readonly IntPtr ClearBlackboardValue_NativeFunction;
    static readonly int ClearBlackboardValue_ParamsSize;
    static readonly int ClearBlackboardValue_NodeOwner_Offset;
    static readonly int ClearBlackboardValue_Key_Offset;
    
    public static void ClearBlackboardValue(UnrealSharp.AIModule.BTNode nodeOwner, UnrealSharp.AIModule.BlackboardKeySelector key)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ClearBlackboardValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.AIModule.BTNode>.ToNative(IntPtr.Add(ParamsBuffer, ClearBlackboardValue_NodeOwner_Offset), 0, null, nodeOwner);
            UnrealSharp.AIModule.BlackboardKeySelectorMarshaler.ToNative(IntPtr.Add(ParamsBuffer, ClearBlackboardValue_Key_Offset), 0, null, key);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ClearBlackboardValue_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    
}
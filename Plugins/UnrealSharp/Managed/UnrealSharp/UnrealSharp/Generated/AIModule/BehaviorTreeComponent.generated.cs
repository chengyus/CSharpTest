// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.AIModule;

[UClass]
public partial class BehaviorTreeComponent : UnrealSharp.AIModule.BrainComponent
{
    
    static BehaviorTreeComponent()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("BehaviorTreeComponent");
        
        DefaultBehaviorTreeAsset_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "DefaultBehaviorTreeAsset");
        
        SetDynamicSubtree_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetDynamicSubtree");
        SetDynamicSubtree_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetDynamicSubtree_NativeFunction);
        SetDynamicSubtree_InjectTag_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetDynamicSubtree_NativeFunction, "InjectTag");
        SetDynamicSubtree_BehaviorAsset_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetDynamicSubtree_NativeFunction, "BehaviorAsset");
        GetTagCooldownEndTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetTagCooldownEndTime");
        GetTagCooldownEndTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetTagCooldownEndTime_NativeFunction);
        GetTagCooldownEndTime_CooldownTag_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTagCooldownEndTime_NativeFunction, "CooldownTag");
        GetTagCooldownEndTime_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTagCooldownEndTime_NativeFunction, "ReturnValue");
        AddCooldownTagDuration_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddCooldownTagDuration");
        AddCooldownTagDuration_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddCooldownTagDuration_NativeFunction);
        AddCooldownTagDuration_CooldownTag_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddCooldownTagDuration_NativeFunction, "CooldownTag");
        AddCooldownTagDuration_CooldownDuration_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddCooldownTagDuration_NativeFunction, "CooldownDuration");
        AddCooldownTagDuration_bAddToExistingDuration_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddCooldownTagDuration_NativeFunction, "bAddToExistingDuration");
        
        
    }
    
    protected BehaviorTreeComponent(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ObjectProperty /Script/AIModule.BehaviorTreeComponent:DefaultBehaviorTreeAsset
    static readonly int DefaultBehaviorTreeAsset_Offset;
    
    public UnrealSharp.AIModule.BehaviorTree DefaultBehaviorTreeAsset
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.AIModule.BehaviorTree>.FromNative(IntPtr.Add(NativeObject, DefaultBehaviorTreeAsset_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            ObjectMarshaller<UnrealSharp.AIModule.BehaviorTree>.ToNative(IntPtr.Add(NativeObject, DefaultBehaviorTreeAsset_Offset), 0, this, value);
        }
    }
    
    // Function /Script/AIModule.BehaviorTreeComponent:SetDynamicSubtree
    static readonly IntPtr SetDynamicSubtree_NativeFunction;
    static readonly int SetDynamicSubtree_ParamsSize;
    static readonly int SetDynamicSubtree_InjectTag_Offset;
    static readonly int SetDynamicSubtree_BehaviorAsset_Offset;
    
    public void SetDynamicSubtree(UnrealSharp.GameplayTags.GameplayTag injectTag, UnrealSharp.AIModule.BehaviorTree behaviorAsset)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetDynamicSubtree_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetDynamicSubtree_InjectTag_Offset), 0, null, injectTag);
            ObjectMarshaller<UnrealSharp.AIModule.BehaviorTree>.ToNative(IntPtr.Add(ParamsBuffer, SetDynamicSubtree_BehaviorAsset_Offset), 0, null, behaviorAsset);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetDynamicSubtree_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/AIModule.BehaviorTreeComponent:GetTagCooldownEndTime
    static readonly IntPtr GetTagCooldownEndTime_NativeFunction;
    static readonly int GetTagCooldownEndTime_ParamsSize;
    static readonly int GetTagCooldownEndTime_CooldownTag_Offset;
    static readonly int GetTagCooldownEndTime_ReturnValue_Offset;
    
    public double GetTagCooldownEndTime(UnrealSharp.GameplayTags.GameplayTag cooldownTag)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetTagCooldownEndTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetTagCooldownEndTime_CooldownTag_Offset), 0, null, cooldownTag);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetTagCooldownEndTime_NativeFunction, ParamsBuffer);
            
            double returnValue;
            returnValue = BlittableMarshaller<double>.FromNative(IntPtr.Add(ParamsBuffer, GetTagCooldownEndTime_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AIModule.BehaviorTreeComponent:AddCooldownTagDuration
    static readonly IntPtr AddCooldownTagDuration_NativeFunction;
    static readonly int AddCooldownTagDuration_ParamsSize;
    static readonly int AddCooldownTagDuration_CooldownTag_Offset;
    static readonly int AddCooldownTagDuration_CooldownDuration_Offset;
    static readonly int AddCooldownTagDuration_bAddToExistingDuration_Offset;
    
    public void AddCooldownTagDuration(UnrealSharp.GameplayTags.GameplayTag cooldownTag, float cooldownDuration, bool bAddToExistingDuration)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddCooldownTagDuration_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagMarshaler.ToNative(IntPtr.Add(ParamsBuffer, AddCooldownTagDuration_CooldownTag_Offset), 0, null, cooldownTag);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, AddCooldownTagDuration_CooldownDuration_Offset), 0, null, cooldownDuration);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddCooldownTagDuration_bAddToExistingDuration_Offset), 0, null, bAddToExistingDuration);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddCooldownTagDuration_NativeFunction, ParamsBuffer);
            
        }
    }
    
    
}
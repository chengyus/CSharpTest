// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.AIModule;

[UClass]
abstract public partial class PawnAction : UnrealSharp.CoreUObject.Object
{
    
    static readonly IntPtr NativeClassPtr;
    static PawnAction()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("PawnAction");
        
        bAllowNewSameClassInstance_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bAllowNewSameClassInstance");
        bAllowNewSameClassInstance_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bAllowNewSameClassInstance");
        bReplaceActiveSameClassInstance_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bReplaceActiveSameClassInstance");
        bReplaceActiveSameClassInstance_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bReplaceActiveSameClassInstance");
        bShouldPauseMovement_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bShouldPauseMovement");
        bShouldPauseMovement_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bShouldPauseMovement");
        bAlwaysNotifyOnFinished_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bAlwaysNotifyOnFinished");
        bAlwaysNotifyOnFinished_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bAlwaysNotifyOnFinished");
        
        GetActionPriority_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetActionPriority");
        GetActionPriority_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetActionPriority_NativeFunction);
        GetActionPriority_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetActionPriority_NativeFunction, "ReturnValue");
        Finish_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Finish");
        Finish_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Finish_NativeFunction);
        Finish_WithResult_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Finish_NativeFunction, "WithResult");
        CreateActionInstance_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CreateActionInstance");
        CreateActionInstance_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(CreateActionInstance_NativeFunction);
        CreateActionInstance_WorldContextObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CreateActionInstance_NativeFunction, "WorldContextObject");
        CreateActionInstance_ActionClass_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CreateActionInstance_NativeFunction, "ActionClass");
        CreateActionInstance_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CreateActionInstance_NativeFunction, "ReturnValue");
        
        
    }
    
    protected PawnAction(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // BoolProperty /Script/AIModule.PawnAction:bAllowNewSameClassInstance
    static readonly int bAllowNewSameClassInstance_Offset;
    static readonly IntPtr bAllowNewSameClassInstance_NativeProperty;
    
    public bool bAllowNewSameClassInstance
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bAllowNewSameClassInstance_NativeProperty, bAllowNewSameClassInstance_Offset);
        }
    }
    
    // BoolProperty /Script/AIModule.PawnAction:bReplaceActiveSameClassInstance
    static readonly int bReplaceActiveSameClassInstance_Offset;
    static readonly IntPtr bReplaceActiveSameClassInstance_NativeProperty;
    
    public bool bReplaceActiveSameClassInstance
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bReplaceActiveSameClassInstance_NativeProperty, bReplaceActiveSameClassInstance_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bReplaceActiveSameClassInstance_NativeProperty, bReplaceActiveSameClassInstance_Offset, value);
        }
    }
    
    // BoolProperty /Script/AIModule.PawnAction:bShouldPauseMovement
    static readonly int bShouldPauseMovement_Offset;
    static readonly IntPtr bShouldPauseMovement_NativeProperty;
    
    public bool bShouldPauseMovement
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bShouldPauseMovement_NativeProperty, bShouldPauseMovement_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bShouldPauseMovement_NativeProperty, bShouldPauseMovement_Offset, value);
        }
    }
    
    // BoolProperty /Script/AIModule.PawnAction:bAlwaysNotifyOnFinished
    static readonly int bAlwaysNotifyOnFinished_Offset;
    static readonly IntPtr bAlwaysNotifyOnFinished_NativeProperty;
    
    public bool bAlwaysNotifyOnFinished
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bAlwaysNotifyOnFinished_NativeProperty, bAlwaysNotifyOnFinished_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bAlwaysNotifyOnFinished_NativeProperty, bAlwaysNotifyOnFinished_Offset, value);
        }
    }
    
    // Function /Script/AIModule.PawnAction:GetActionPriority
    static readonly IntPtr GetActionPriority_NativeFunction;
    static readonly int GetActionPriority_ParamsSize;
    static readonly int GetActionPriority_ReturnValue_Offset;
    
    public UnrealSharp.AIModule.EAIRequestPriority GetActionPriority()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetActionPriority_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetActionPriority_NativeFunction, ParamsBuffer);
            
            UnrealSharp.AIModule.EAIRequestPriority returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.AIModule.EAIRequestPriority>.FromNative(IntPtr.Add(ParamsBuffer, GetActionPriority_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AIModule.PawnAction:Finish
    static readonly IntPtr Finish_NativeFunction;
    static readonly int Finish_ParamsSize;
    static readonly int Finish_WithResult_Offset;
    
    protected void Finish(UnrealSharp.AIModule.EPawnActionResult withResult)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Finish_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.AIModule.EPawnActionResult>.ToNative(IntPtr.Add(ParamsBuffer, Finish_WithResult_Offset), 0, null, withResult);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, Finish_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/AIModule.PawnAction:CreateActionInstance
    static readonly IntPtr CreateActionInstance_NativeFunction;
    static readonly int CreateActionInstance_ParamsSize;
    static readonly int CreateActionInstance_WorldContextObject_Offset;
    static readonly int CreateActionInstance_ActionClass_Offset;
    static readonly int CreateActionInstance_ReturnValue_Offset;
    
    [Obsolete("PawnActions have been deprecated and are no longer being supported. It will get removed in following UE5 releases. Use GameplayTasks or AITasks instead.")]
    public static UnrealSharp.AIModule.PawnAction CreateActionInstance(UnrealSharp.CoreUObject.Object worldContextObject, SubclassOf<UnrealSharp.AIModule.PawnAction> actionClass)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[CreateActionInstance_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, CreateActionInstance_WorldContextObject_Offset), 0, null, worldContextObject);
            SubclassOfMarshaller<UnrealSharp.AIModule.PawnAction>.ToNative(IntPtr.Add(ParamsBuffer, CreateActionInstance_ActionClass_Offset), 0, null, actionClass);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, CreateActionInstance_NativeFunction, ParamsBuffer);
            
            UnrealSharp.AIModule.PawnAction returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.AIModule.PawnAction>.FromNative(IntPtr.Add(ParamsBuffer, CreateActionInstance_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
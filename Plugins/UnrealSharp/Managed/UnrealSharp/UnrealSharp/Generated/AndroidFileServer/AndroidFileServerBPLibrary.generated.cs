// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.AndroidFileServer;

[UClass]
public partial class AndroidFileServerBPLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static AndroidFileServerBPLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("AndroidFileServerBPLibrary");
        
        
        StopFileServer_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "StopFileServer");
        StopFileServer_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(StopFileServer_NativeFunction);
        StopFileServer_bUSB_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StopFileServer_NativeFunction, "bUSB");
        StopFileServer_bNetwork_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StopFileServer_NativeFunction, "bNetwork");
        StopFileServer_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StopFileServer_NativeFunction, "ReturnValue");
        StartFileServer_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "StartFileServer");
        StartFileServer_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(StartFileServer_NativeFunction);
        StartFileServer_bUSB_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StartFileServer_NativeFunction, "bUSB");
        StartFileServer_bNetwork_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StartFileServer_NativeFunction, "bNetwork");
        StartFileServer_Port_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StartFileServer_NativeFunction, "Port");
        StartFileServer_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StartFileServer_NativeFunction, "ReturnValue");
        IsFileServerRunning_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsFileServerRunning");
        IsFileServerRunning_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsFileServerRunning_NativeFunction);
        IsFileServerRunning_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsFileServerRunning_NativeFunction, "ReturnValue");
        
        
    }
    
    protected AndroidFileServerBPLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/AndroidFileServer.AndroidFileServerBPLibrary:StopFileServer
    static readonly IntPtr StopFileServer_NativeFunction;
    static readonly int StopFileServer_ParamsSize;
    static readonly int StopFileServer_bUSB_Offset;
    static readonly int StopFileServer_bNetwork_Offset;
    static readonly int StopFileServer_ReturnValue_Offset;
    
    public static bool StopFileServer(bool bUSB = true, bool bNetwork = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[StopFileServer_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, StopFileServer_bUSB_Offset), 0, null, bUSB);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, StopFileServer_bNetwork_Offset), 0, null, bNetwork);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, StopFileServer_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, StopFileServer_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AndroidFileServer.AndroidFileServerBPLibrary:StartFileServer
    static readonly IntPtr StartFileServer_NativeFunction;
    static readonly int StartFileServer_ParamsSize;
    static readonly int StartFileServer_bUSB_Offset;
    static readonly int StartFileServer_bNetwork_Offset;
    static readonly int StartFileServer_Port_Offset;
    static readonly int StartFileServer_ReturnValue_Offset;
    
    public static bool StartFileServer(bool bUSB = true, bool bNetwork = false, int port = 57099)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[StartFileServer_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, StartFileServer_bUSB_Offset), 0, null, bUSB);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, StartFileServer_bNetwork_Offset), 0, null, bNetwork);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, StartFileServer_Port_Offset), 0, null, port);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, StartFileServer_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, StartFileServer_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AndroidFileServer.AndroidFileServerBPLibrary:IsFileServerRunning
    static readonly IntPtr IsFileServerRunning_NativeFunction;
    static readonly int IsFileServerRunning_ParamsSize;
    static readonly int IsFileServerRunning_ReturnValue_Offset;
    
    public static UnrealSharp.AndroidFileServer.EAFSActiveType IsFileServerRunning()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsFileServerRunning_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, IsFileServerRunning_NativeFunction, ParamsBuffer);
            
            UnrealSharp.AndroidFileServer.EAFSActiveType returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.AndroidFileServer.EAFSActiveType>.FromNative(IntPtr.Add(ParamsBuffer, IsFileServerRunning_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
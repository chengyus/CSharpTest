// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.AndroidPermission;

[UClass]
public partial class AndroidPermissionFunctionLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static AndroidPermissionFunctionLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("AndroidPermissionFunctionLibrary");
        
        
        CheckPermission_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CheckPermission");
        CheckPermission_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(CheckPermission_NativeFunction);
        CheckPermission_permission_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CheckPermission_NativeFunction, "permission");
        CheckPermission_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CheckPermission_NativeFunction, "ReturnValue");
        
        
    }
    
    protected AndroidPermissionFunctionLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/AndroidPermission.AndroidPermissionFunctionLibrary:CheckPermission
    static readonly IntPtr CheckPermission_NativeFunction;
    static readonly int CheckPermission_ParamsSize;
    static readonly int CheckPermission_permission_Offset;
    static readonly int CheckPermission_ReturnValue_Offset;
    
    public static bool CheckPermission(string permission)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[CheckPermission_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr permission_NativePtr = IntPtr.Add(ParamsBuffer,CheckPermission_permission_Offset);
            StringMarshaller.ToNative(permission_NativePtr,0,null,permission);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, CheckPermission_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, CheckPermission_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(permission_NativePtr, 0);
            return returnValue;
        }
    }
    
    
}
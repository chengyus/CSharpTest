// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.AnimGraphRuntime;

[UClass]
public partial class BlendListBaseLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static BlendListBaseLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("BlendListBaseLibrary");
        
        
        ResetNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ResetNode");
        ResetNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ResetNode_NativeFunction);
        ResetNode_BlendListBase_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ResetNode_NativeFunction, "BlendListBase");
        ConvertToBlendListBase_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ConvertToBlendListBase");
        ConvertToBlendListBase_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ConvertToBlendListBase_NativeFunction);
        ConvertToBlendListBase_Node_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ConvertToBlendListBase_NativeFunction, "Node");
        ConvertToBlendListBase_Result_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ConvertToBlendListBase_NativeFunction, "Result");
        ConvertToBlendListBase_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ConvertToBlendListBase_NativeFunction, "ReturnValue");
        
        
    }
    
    protected BlendListBaseLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/AnimGraphRuntime.BlendListBaseLibrary:ResetNode
    static readonly IntPtr ResetNode_NativeFunction;
    static readonly int ResetNode_ParamsSize;
    static readonly int ResetNode_BlendListBase_Offset;
    
    public static void ResetNode(UnrealSharp.AnimGraphRuntime.BlendListBaseReference blendListBase)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ResetNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.AnimGraphRuntime.BlendListBaseReferenceMarshaler.ToNative(IntPtr.Add(ParamsBuffer, ResetNode_BlendListBase_Offset), 0, null, blendListBase);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ResetNode_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/AnimGraphRuntime.BlendListBaseLibrary:ConvertToBlendListBase
    static readonly IntPtr ConvertToBlendListBase_NativeFunction;
    static readonly int ConvertToBlendListBase_ParamsSize;
    static readonly int ConvertToBlendListBase_Node_Offset;
    static readonly int ConvertToBlendListBase_Result_Offset;
    static readonly int ConvertToBlendListBase_ReturnValue_Offset;
    
    public static UnrealSharp.AnimGraphRuntime.BlendListBaseReference ConvertToBlendListBase(UnrealSharp.Engine.AnimNodeReference node, out UnrealSharp.Engine.EAnimNodeReferenceConversionResult result)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ConvertToBlendListBase_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.Engine.AnimNodeReferenceMarshaler.ToNative(IntPtr.Add(ParamsBuffer, ConvertToBlendListBase_Node_Offset), 0, null, node);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ConvertToBlendListBase_NativeFunction, ParamsBuffer);
            
            result = BlittableMarshaller<UnrealSharp.Engine.EAnimNodeReferenceConversionResult>.FromNative(IntPtr.Add(ParamsBuffer, ConvertToBlendListBase_Result_Offset), 0, null);
            UnrealSharp.AnimGraphRuntime.BlendListBaseReference returnValue;
            returnValue = UnrealSharp.AnimGraphRuntime.BlendListBaseReferenceMarshaler.FromNative(IntPtr.Add(ParamsBuffer, ConvertToBlendListBase_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
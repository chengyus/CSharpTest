// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.AnimGraphRuntime;

[UClass]
public partial class AnimGraphLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static AnimGraphLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("KismetAnimationLibrary");
        
        
        K2_TwoBoneIK_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "K2_TwoBoneIK");
        K2_TwoBoneIK_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(K2_TwoBoneIK_NativeFunction);
        K2_TwoBoneIK_RootPos_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_TwoBoneIK_NativeFunction, "RootPos");
        K2_TwoBoneIK_JointPos_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_TwoBoneIK_NativeFunction, "JointPos");
        K2_TwoBoneIK_EndPos_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_TwoBoneIK_NativeFunction, "EndPos");
        K2_TwoBoneIK_JointTarget_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_TwoBoneIK_NativeFunction, "JointTarget");
        K2_TwoBoneIK_Effector_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_TwoBoneIK_NativeFunction, "Effector");
        K2_TwoBoneIK_OutJointPos_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_TwoBoneIK_NativeFunction, "OutJointPos");
        K2_TwoBoneIK_OutEndPos_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_TwoBoneIK_NativeFunction, "OutEndPos");
        K2_TwoBoneIK_bAllowStretching_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_TwoBoneIK_NativeFunction, "bAllowStretching");
        K2_TwoBoneIK_StartStretchRatio_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_TwoBoneIK_NativeFunction, "StartStretchRatio");
        K2_TwoBoneIK_MaxStretchScale_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_TwoBoneIK_NativeFunction, "MaxStretchScale");
        K2_StartProfilingTimer_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "K2_StartProfilingTimer");
        K2_MakePerlinNoiseVectorAndRemap_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "K2_MakePerlinNoiseVectorAndRemap");
        K2_MakePerlinNoiseVectorAndRemap_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(K2_MakePerlinNoiseVectorAndRemap_NativeFunction);
        K2_MakePerlinNoiseVectorAndRemap_X_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_MakePerlinNoiseVectorAndRemap_NativeFunction, "X");
        K2_MakePerlinNoiseVectorAndRemap_Y_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_MakePerlinNoiseVectorAndRemap_NativeFunction, "Y");
        K2_MakePerlinNoiseVectorAndRemap_Z_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_MakePerlinNoiseVectorAndRemap_NativeFunction, "Z");
        K2_MakePerlinNoiseVectorAndRemap_RangeOutMinX_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_MakePerlinNoiseVectorAndRemap_NativeFunction, "RangeOutMinX");
        K2_MakePerlinNoiseVectorAndRemap_RangeOutMaxX_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_MakePerlinNoiseVectorAndRemap_NativeFunction, "RangeOutMaxX");
        K2_MakePerlinNoiseVectorAndRemap_RangeOutMinY_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_MakePerlinNoiseVectorAndRemap_NativeFunction, "RangeOutMinY");
        K2_MakePerlinNoiseVectorAndRemap_RangeOutMaxY_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_MakePerlinNoiseVectorAndRemap_NativeFunction, "RangeOutMaxY");
        K2_MakePerlinNoiseVectorAndRemap_RangeOutMinZ_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_MakePerlinNoiseVectorAndRemap_NativeFunction, "RangeOutMinZ");
        K2_MakePerlinNoiseVectorAndRemap_RangeOutMaxZ_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_MakePerlinNoiseVectorAndRemap_NativeFunction, "RangeOutMaxZ");
        K2_MakePerlinNoiseVectorAndRemap_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_MakePerlinNoiseVectorAndRemap_NativeFunction, "ReturnValue");
        K2_MakePerlinNoiseAndRemap_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "K2_MakePerlinNoiseAndRemap");
        K2_MakePerlinNoiseAndRemap_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(K2_MakePerlinNoiseAndRemap_NativeFunction);
        K2_MakePerlinNoiseAndRemap_Value_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_MakePerlinNoiseAndRemap_NativeFunction, "Value");
        K2_MakePerlinNoiseAndRemap_RangeOutMin_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_MakePerlinNoiseAndRemap_NativeFunction, "RangeOutMin");
        K2_MakePerlinNoiseAndRemap_RangeOutMax_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_MakePerlinNoiseAndRemap_NativeFunction, "RangeOutMax");
        K2_MakePerlinNoiseAndRemap_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_MakePerlinNoiseAndRemap_NativeFunction, "ReturnValue");
        K2_LookAt_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "K2_LookAt");
        K2_LookAt_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(K2_LookAt_NativeFunction);
        K2_LookAt_CurrentTransform_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_LookAt_NativeFunction, "CurrentTransform");
        K2_LookAt_TargetPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_LookAt_NativeFunction, "TargetPosition");
        K2_LookAt_LookAtVector_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_LookAt_NativeFunction, "LookAtVector");
        K2_LookAt_bUseUpVector_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_LookAt_NativeFunction, "bUseUpVector");
        K2_LookAt_UpVector_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_LookAt_NativeFunction, "UpVector");
        K2_LookAt_ClampConeInDegree_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_LookAt_NativeFunction, "ClampConeInDegree");
        K2_LookAt_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_LookAt_NativeFunction, "ReturnValue");
        K2_EndProfilingTimer_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "K2_EndProfilingTimer");
        K2_EndProfilingTimer_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(K2_EndProfilingTimer_NativeFunction);
        K2_EndProfilingTimer_bLog_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_EndProfilingTimer_NativeFunction, "bLog");
        K2_EndProfilingTimer_LogPrefix_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_EndProfilingTimer_NativeFunction, "LogPrefix");
        K2_EndProfilingTimer_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_EndProfilingTimer_NativeFunction, "ReturnValue");
        K2_DistanceBetweenTwoSocketsAndMapRange_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "K2_DistanceBetweenTwoSocketsAndMapRange");
        K2_DistanceBetweenTwoSocketsAndMapRange_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(K2_DistanceBetweenTwoSocketsAndMapRange_NativeFunction);
        K2_DistanceBetweenTwoSocketsAndMapRange_Component_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_DistanceBetweenTwoSocketsAndMapRange_NativeFunction, "Component");
        K2_DistanceBetweenTwoSocketsAndMapRange_SocketOrBoneNameA_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_DistanceBetweenTwoSocketsAndMapRange_NativeFunction, "SocketOrBoneNameA");
        K2_DistanceBetweenTwoSocketsAndMapRange_SocketSpaceA_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_DistanceBetweenTwoSocketsAndMapRange_NativeFunction, "SocketSpaceA");
        K2_DistanceBetweenTwoSocketsAndMapRange_SocketOrBoneNameB_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_DistanceBetweenTwoSocketsAndMapRange_NativeFunction, "SocketOrBoneNameB");
        K2_DistanceBetweenTwoSocketsAndMapRange_SocketSpaceB_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_DistanceBetweenTwoSocketsAndMapRange_NativeFunction, "SocketSpaceB");
        K2_DistanceBetweenTwoSocketsAndMapRange_bRemapRange_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_DistanceBetweenTwoSocketsAndMapRange_NativeFunction, "bRemapRange");
        K2_DistanceBetweenTwoSocketsAndMapRange_InRangeMin_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_DistanceBetweenTwoSocketsAndMapRange_NativeFunction, "InRangeMin");
        K2_DistanceBetweenTwoSocketsAndMapRange_InRangeMax_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_DistanceBetweenTwoSocketsAndMapRange_NativeFunction, "InRangeMax");
        K2_DistanceBetweenTwoSocketsAndMapRange_OutRangeMin_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_DistanceBetweenTwoSocketsAndMapRange_NativeFunction, "OutRangeMin");
        K2_DistanceBetweenTwoSocketsAndMapRange_OutRangeMax_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_DistanceBetweenTwoSocketsAndMapRange_NativeFunction, "OutRangeMax");
        K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_DistanceBetweenTwoSocketsAndMapRange_NativeFunction, "ReturnValue");
        K2_DirectionBetweenSockets_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "K2_DirectionBetweenSockets");
        K2_DirectionBetweenSockets_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(K2_DirectionBetweenSockets_NativeFunction);
        K2_DirectionBetweenSockets_Component_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_DirectionBetweenSockets_NativeFunction, "Component");
        K2_DirectionBetweenSockets_SocketOrBoneNameFrom_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_DirectionBetweenSockets_NativeFunction, "SocketOrBoneNameFrom");
        K2_DirectionBetweenSockets_SocketOrBoneNameTo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_DirectionBetweenSockets_NativeFunction, "SocketOrBoneNameTo");
        K2_DirectionBetweenSockets_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_DirectionBetweenSockets_NativeFunction, "ReturnValue");
        K2_CalculateVelocityFromSockets_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "K2_CalculateVelocityFromSockets");
        K2_CalculateVelocityFromSockets_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(K2_CalculateVelocityFromSockets_NativeFunction);
        K2_CalculateVelocityFromSockets_DeltaSeconds_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_CalculateVelocityFromSockets_NativeFunction, "DeltaSeconds");
        K2_CalculateVelocityFromSockets_Component_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_CalculateVelocityFromSockets_NativeFunction, "Component");
        K2_CalculateVelocityFromSockets_SocketOrBoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_CalculateVelocityFromSockets_NativeFunction, "SocketOrBoneName");
        K2_CalculateVelocityFromSockets_ReferenceSocketOrBone_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_CalculateVelocityFromSockets_NativeFunction, "ReferenceSocketOrBone");
        K2_CalculateVelocityFromSockets_SocketSpace_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_CalculateVelocityFromSockets_NativeFunction, "SocketSpace");
        K2_CalculateVelocityFromSockets_OffsetInBoneSpace_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_CalculateVelocityFromSockets_NativeFunction, "OffsetInBoneSpace");
        K2_CalculateVelocityFromSockets_History_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_CalculateVelocityFromSockets_NativeFunction, "History");
        K2_CalculateVelocityFromSockets_NumberOfSamples_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_CalculateVelocityFromSockets_NativeFunction, "NumberOfSamples");
        K2_CalculateVelocityFromSockets_VelocityMin_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_CalculateVelocityFromSockets_NativeFunction, "VelocityMin");
        K2_CalculateVelocityFromSockets_VelocityMax_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_CalculateVelocityFromSockets_NativeFunction, "VelocityMax");
        K2_CalculateVelocityFromSockets_EasingType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_CalculateVelocityFromSockets_NativeFunction, "EasingType");
        K2_CalculateVelocityFromSockets_CustomCurve_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_CalculateVelocityFromSockets_NativeFunction, "CustomCurve");
        K2_CalculateVelocityFromSockets_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_CalculateVelocityFromSockets_NativeFunction, "ReturnValue");
        K2_CalculateVelocityFromPositionHistory_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "K2_CalculateVelocityFromPositionHistory");
        K2_CalculateVelocityFromPositionHistory_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(K2_CalculateVelocityFromPositionHistory_NativeFunction);
        K2_CalculateVelocityFromPositionHistory_DeltaSeconds_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_CalculateVelocityFromPositionHistory_NativeFunction, "DeltaSeconds");
        K2_CalculateVelocityFromPositionHistory_Position_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_CalculateVelocityFromPositionHistory_NativeFunction, "Position");
        K2_CalculateVelocityFromPositionHistory_History_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_CalculateVelocityFromPositionHistory_NativeFunction, "History");
        K2_CalculateVelocityFromPositionHistory_NumberOfSamples_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_CalculateVelocityFromPositionHistory_NativeFunction, "NumberOfSamples");
        K2_CalculateVelocityFromPositionHistory_VelocityMin_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_CalculateVelocityFromPositionHistory_NativeFunction, "VelocityMin");
        K2_CalculateVelocityFromPositionHistory_VelocityMax_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_CalculateVelocityFromPositionHistory_NativeFunction, "VelocityMax");
        K2_CalculateVelocityFromPositionHistory_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_CalculateVelocityFromPositionHistory_NativeFunction, "ReturnValue");
        CalculateDirection_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CalculateDirection");
        CalculateDirection_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(CalculateDirection_NativeFunction);
        CalculateDirection_Velocity_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CalculateDirection_NativeFunction, "Velocity");
        CalculateDirection_BaseRotation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CalculateDirection_NativeFunction, "BaseRotation");
        CalculateDirection_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CalculateDirection_NativeFunction, "ReturnValue");
        
        
    }
    
    protected AnimGraphLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/AnimGraphRuntime.KismetAnimationLibrary:K2_TwoBoneIK
    static readonly IntPtr K2_TwoBoneIK_NativeFunction;
    static readonly int K2_TwoBoneIK_ParamsSize;
    static readonly int K2_TwoBoneIK_RootPos_Offset;
    static readonly int K2_TwoBoneIK_JointPos_Offset;
    static readonly int K2_TwoBoneIK_EndPos_Offset;
    static readonly int K2_TwoBoneIK_JointTarget_Offset;
    static readonly int K2_TwoBoneIK_Effector_Offset;
    static readonly int K2_TwoBoneIK_OutJointPos_Offset;
    static readonly int K2_TwoBoneIK_OutEndPos_Offset;
    static readonly int K2_TwoBoneIK_bAllowStretching_Offset;
    static readonly int K2_TwoBoneIK_StartStretchRatio_Offset;
    static readonly int K2_TwoBoneIK_MaxStretchScale_Offset;
    
    public static void TwoBoneIK(System.DoubleNumerics.Vector3 rootPos, System.DoubleNumerics.Vector3 jointPos, System.DoubleNumerics.Vector3 endPos, System.DoubleNumerics.Vector3 jointTarget, System.DoubleNumerics.Vector3 effector, out System.DoubleNumerics.Vector3 outJointPos, out System.DoubleNumerics.Vector3 outEndPos, bool bAllowStretching, float startStretchRatio, float maxStretchScale)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[K2_TwoBoneIK_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, K2_TwoBoneIK_RootPos_Offset), 0, null, rootPos);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, K2_TwoBoneIK_JointPos_Offset), 0, null, jointPos);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, K2_TwoBoneIK_EndPos_Offset), 0, null, endPos);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, K2_TwoBoneIK_JointTarget_Offset), 0, null, jointTarget);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, K2_TwoBoneIK_Effector_Offset), 0, null, effector);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, K2_TwoBoneIK_bAllowStretching_Offset), 0, null, bAllowStretching);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, K2_TwoBoneIK_StartStretchRatio_Offset), 0, null, startStretchRatio);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, K2_TwoBoneIK_MaxStretchScale_Offset), 0, null, maxStretchScale);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, K2_TwoBoneIK_NativeFunction, ParamsBuffer);
            
            outJointPos = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, K2_TwoBoneIK_OutJointPos_Offset), 0, null);
            outEndPos = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, K2_TwoBoneIK_OutEndPos_Offset), 0, null);
            
        }
    }
    
    // Function /Script/AnimGraphRuntime.KismetAnimationLibrary:K2_StartProfilingTimer
    static readonly IntPtr K2_StartProfilingTimer_NativeFunction;
    
    public static void K2_StartProfilingTimer()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, K2_StartProfilingTimer_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/AnimGraphRuntime.KismetAnimationLibrary:K2_MakePerlinNoiseVectorAndRemap
    static readonly IntPtr K2_MakePerlinNoiseVectorAndRemap_NativeFunction;
    static readonly int K2_MakePerlinNoiseVectorAndRemap_ParamsSize;
    static readonly int K2_MakePerlinNoiseVectorAndRemap_X_Offset;
    static readonly int K2_MakePerlinNoiseVectorAndRemap_Y_Offset;
    static readonly int K2_MakePerlinNoiseVectorAndRemap_Z_Offset;
    static readonly int K2_MakePerlinNoiseVectorAndRemap_RangeOutMinX_Offset;
    static readonly int K2_MakePerlinNoiseVectorAndRemap_RangeOutMaxX_Offset;
    static readonly int K2_MakePerlinNoiseVectorAndRemap_RangeOutMinY_Offset;
    static readonly int K2_MakePerlinNoiseVectorAndRemap_RangeOutMaxY_Offset;
    static readonly int K2_MakePerlinNoiseVectorAndRemap_RangeOutMinZ_Offset;
    static readonly int K2_MakePerlinNoiseVectorAndRemap_RangeOutMaxZ_Offset;
    static readonly int K2_MakePerlinNoiseVectorAndRemap_ReturnValue_Offset;
    
    public static System.DoubleNumerics.Vector3 MakeVectorFromPerlinNoise(float x, float y, float z, float rangeOutMinX, float rangeOutMaxX, float rangeOutMinY, float rangeOutMaxY, float rangeOutMinZ, float rangeOutMaxZ)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[K2_MakePerlinNoiseVectorAndRemap_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, K2_MakePerlinNoiseVectorAndRemap_X_Offset), 0, null, x);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, K2_MakePerlinNoiseVectorAndRemap_Y_Offset), 0, null, y);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, K2_MakePerlinNoiseVectorAndRemap_Z_Offset), 0, null, z);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, K2_MakePerlinNoiseVectorAndRemap_RangeOutMinX_Offset), 0, null, rangeOutMinX);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, K2_MakePerlinNoiseVectorAndRemap_RangeOutMaxX_Offset), 0, null, rangeOutMaxX);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, K2_MakePerlinNoiseVectorAndRemap_RangeOutMinY_Offset), 0, null, rangeOutMinY);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, K2_MakePerlinNoiseVectorAndRemap_RangeOutMaxY_Offset), 0, null, rangeOutMaxY);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, K2_MakePerlinNoiseVectorAndRemap_RangeOutMinZ_Offset), 0, null, rangeOutMinZ);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, K2_MakePerlinNoiseVectorAndRemap_RangeOutMaxZ_Offset), 0, null, rangeOutMaxZ);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, K2_MakePerlinNoiseVectorAndRemap_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector3 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, K2_MakePerlinNoiseVectorAndRemap_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AnimGraphRuntime.KismetAnimationLibrary:K2_MakePerlinNoiseAndRemap
    static readonly IntPtr K2_MakePerlinNoiseAndRemap_NativeFunction;
    static readonly int K2_MakePerlinNoiseAndRemap_ParamsSize;
    static readonly int K2_MakePerlinNoiseAndRemap_Value_Offset;
    static readonly int K2_MakePerlinNoiseAndRemap_RangeOutMin_Offset;
    static readonly int K2_MakePerlinNoiseAndRemap_RangeOutMax_Offset;
    static readonly int K2_MakePerlinNoiseAndRemap_ReturnValue_Offset;
    
    public static float MakeFloatFromPerlinNoise(float value, float rangeOutMin, float rangeOutMax)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[K2_MakePerlinNoiseAndRemap_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, K2_MakePerlinNoiseAndRemap_Value_Offset), 0, null, value);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, K2_MakePerlinNoiseAndRemap_RangeOutMin_Offset), 0, null, rangeOutMin);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, K2_MakePerlinNoiseAndRemap_RangeOutMax_Offset), 0, null, rangeOutMax);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, K2_MakePerlinNoiseAndRemap_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, K2_MakePerlinNoiseAndRemap_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AnimGraphRuntime.KismetAnimationLibrary:K2_LookAt
    static readonly IntPtr K2_LookAt_NativeFunction;
    static readonly int K2_LookAt_ParamsSize;
    static readonly int K2_LookAt_CurrentTransform_Offset;
    static readonly int K2_LookAt_TargetPosition_Offset;
    static readonly int K2_LookAt_LookAtVector_Offset;
    static readonly int K2_LookAt_bUseUpVector_Offset;
    static readonly int K2_LookAt_UpVector_Offset;
    static readonly int K2_LookAt_ClampConeInDegree_Offset;
    static readonly int K2_LookAt_ReturnValue_Offset;
    
    public static UnrealSharp.Transform LookAt(UnrealSharp.Transform currentTransform, System.DoubleNumerics.Vector3 targetPosition, System.DoubleNumerics.Vector3 lookAtVector, bool bUseUpVector, System.DoubleNumerics.Vector3 upVector, float clampConeInDegree)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[K2_LookAt_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.Transform>.ToNative(IntPtr.Add(ParamsBuffer, K2_LookAt_CurrentTransform_Offset), 0, null, currentTransform);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, K2_LookAt_TargetPosition_Offset), 0, null, targetPosition);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, K2_LookAt_LookAtVector_Offset), 0, null, lookAtVector);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, K2_LookAt_bUseUpVector_Offset), 0, null, bUseUpVector);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, K2_LookAt_UpVector_Offset), 0, null, upVector);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, K2_LookAt_ClampConeInDegree_Offset), 0, null, clampConeInDegree);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, K2_LookAt_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Transform returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.Transform>.FromNative(IntPtr.Add(ParamsBuffer, K2_LookAt_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AnimGraphRuntime.KismetAnimationLibrary:K2_EndProfilingTimer
    static readonly IntPtr K2_EndProfilingTimer_NativeFunction;
    static readonly int K2_EndProfilingTimer_ParamsSize;
    static readonly int K2_EndProfilingTimer_bLog_Offset;
    static readonly int K2_EndProfilingTimer_LogPrefix_Offset;
    static readonly int K2_EndProfilingTimer_ReturnValue_Offset;
    
    public static float K2_EndProfilingTimer(bool bLog = true, string logPrefix = "")
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[K2_EndProfilingTimer_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, K2_EndProfilingTimer_bLog_Offset), 0, null, bLog);
            IntPtr LogPrefix_NativePtr = IntPtr.Add(ParamsBuffer,K2_EndProfilingTimer_LogPrefix_Offset);
            StringMarshaller.ToNative(LogPrefix_NativePtr,0,null,logPrefix);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, K2_EndProfilingTimer_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, K2_EndProfilingTimer_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(LogPrefix_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/AnimGraphRuntime.KismetAnimationLibrary:K2_DistanceBetweenTwoSocketsAndMapRange
    static readonly IntPtr K2_DistanceBetweenTwoSocketsAndMapRange_NativeFunction;
    static readonly int K2_DistanceBetweenTwoSocketsAndMapRange_ParamsSize;
    static readonly int K2_DistanceBetweenTwoSocketsAndMapRange_Component_Offset;
    static readonly int K2_DistanceBetweenTwoSocketsAndMapRange_SocketOrBoneNameA_Offset;
    static readonly int K2_DistanceBetweenTwoSocketsAndMapRange_SocketSpaceA_Offset;
    static readonly int K2_DistanceBetweenTwoSocketsAndMapRange_SocketOrBoneNameB_Offset;
    static readonly int K2_DistanceBetweenTwoSocketsAndMapRange_SocketSpaceB_Offset;
    static readonly int K2_DistanceBetweenTwoSocketsAndMapRange_bRemapRange_Offset;
    static readonly int K2_DistanceBetweenTwoSocketsAndMapRange_InRangeMin_Offset;
    static readonly int K2_DistanceBetweenTwoSocketsAndMapRange_InRangeMax_Offset;
    static readonly int K2_DistanceBetweenTwoSocketsAndMapRange_OutRangeMin_Offset;
    static readonly int K2_DistanceBetweenTwoSocketsAndMapRange_OutRangeMax_Offset;
    static readonly int K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue_Offset;
    
    public static float DistanceBetweenSockets(UnrealSharp.Engine.SkeletalMeshComponent component, Name socketOrBoneNameA, UnrealSharp.Engine.ERelativeTransformSpace socketSpaceA, Name socketOrBoneNameB, UnrealSharp.Engine.ERelativeTransformSpace socketSpaceB, bool bRemapRange, float inRangeMin, float inRangeMax, float outRangeMin, float outRangeMax)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[K2_DistanceBetweenTwoSocketsAndMapRange_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.SkeletalMeshComponent>.ToNative(IntPtr.Add(ParamsBuffer, K2_DistanceBetweenTwoSocketsAndMapRange_Component_Offset), 0, null, component);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, K2_DistanceBetweenTwoSocketsAndMapRange_SocketOrBoneNameA_Offset), 0, null, socketOrBoneNameA);
            BlittableMarshaller<UnrealSharp.Engine.ERelativeTransformSpace>.ToNative(IntPtr.Add(ParamsBuffer, K2_DistanceBetweenTwoSocketsAndMapRange_SocketSpaceA_Offset), 0, null, socketSpaceA);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, K2_DistanceBetweenTwoSocketsAndMapRange_SocketOrBoneNameB_Offset), 0, null, socketOrBoneNameB);
            BlittableMarshaller<UnrealSharp.Engine.ERelativeTransformSpace>.ToNative(IntPtr.Add(ParamsBuffer, K2_DistanceBetweenTwoSocketsAndMapRange_SocketSpaceB_Offset), 0, null, socketSpaceB);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, K2_DistanceBetweenTwoSocketsAndMapRange_bRemapRange_Offset), 0, null, bRemapRange);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, K2_DistanceBetweenTwoSocketsAndMapRange_InRangeMin_Offset), 0, null, inRangeMin);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, K2_DistanceBetweenTwoSocketsAndMapRange_InRangeMax_Offset), 0, null, inRangeMax);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, K2_DistanceBetweenTwoSocketsAndMapRange_OutRangeMin_Offset), 0, null, outRangeMin);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, K2_DistanceBetweenTwoSocketsAndMapRange_OutRangeMax_Offset), 0, null, outRangeMax);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, K2_DistanceBetweenTwoSocketsAndMapRange_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AnimGraphRuntime.KismetAnimationLibrary:K2_DirectionBetweenSockets
    static readonly IntPtr K2_DirectionBetweenSockets_NativeFunction;
    static readonly int K2_DirectionBetweenSockets_ParamsSize;
    static readonly int K2_DirectionBetweenSockets_Component_Offset;
    static readonly int K2_DirectionBetweenSockets_SocketOrBoneNameFrom_Offset;
    static readonly int K2_DirectionBetweenSockets_SocketOrBoneNameTo_Offset;
    static readonly int K2_DirectionBetweenSockets_ReturnValue_Offset;
    
    public static System.DoubleNumerics.Vector3 DirectionBetweenSockets(UnrealSharp.Engine.SkeletalMeshComponent component, Name socketOrBoneNameFrom, Name socketOrBoneNameTo)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[K2_DirectionBetweenSockets_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.SkeletalMeshComponent>.ToNative(IntPtr.Add(ParamsBuffer, K2_DirectionBetweenSockets_Component_Offset), 0, null, component);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, K2_DirectionBetweenSockets_SocketOrBoneNameFrom_Offset), 0, null, socketOrBoneNameFrom);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, K2_DirectionBetweenSockets_SocketOrBoneNameTo_Offset), 0, null, socketOrBoneNameTo);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, K2_DirectionBetweenSockets_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector3 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, K2_DirectionBetweenSockets_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AnimGraphRuntime.KismetAnimationLibrary:K2_CalculateVelocityFromSockets
    static readonly IntPtr K2_CalculateVelocityFromSockets_NativeFunction;
    static readonly int K2_CalculateVelocityFromSockets_ParamsSize;
    static readonly int K2_CalculateVelocityFromSockets_DeltaSeconds_Offset;
    static readonly int K2_CalculateVelocityFromSockets_Component_Offset;
    static readonly int K2_CalculateVelocityFromSockets_SocketOrBoneName_Offset;
    static readonly int K2_CalculateVelocityFromSockets_ReferenceSocketOrBone_Offset;
    static readonly int K2_CalculateVelocityFromSockets_SocketSpace_Offset;
    static readonly int K2_CalculateVelocityFromSockets_OffsetInBoneSpace_Offset;
    static readonly int K2_CalculateVelocityFromSockets_History_Offset;
    static readonly int K2_CalculateVelocityFromSockets_NumberOfSamples_Offset;
    static readonly int K2_CalculateVelocityFromSockets_VelocityMin_Offset;
    static readonly int K2_CalculateVelocityFromSockets_VelocityMax_Offset;
    static readonly int K2_CalculateVelocityFromSockets_EasingType_Offset;
    static readonly int K2_CalculateVelocityFromSockets_CustomCurve_Offset;
    static readonly int K2_CalculateVelocityFromSockets_ReturnValue_Offset;
    
    public static float CalculateVelocityFromSockets(float deltaSeconds, UnrealSharp.Engine.SkeletalMeshComponent component, Name socketOrBoneName, Name referenceSocketOrBone, UnrealSharp.Engine.ERelativeTransformSpace socketSpace, System.DoubleNumerics.Vector3 offsetInBoneSpace, ref UnrealSharp.AnimGraphRuntime.PositionHistory history, int numberOfSamples, float velocityMin, float velocityMax, UnrealSharp.AnimGraphRuntime.EEasingFuncType easingType, UnrealSharp.Engine.RuntimeFloatCurve customCurve)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[K2_CalculateVelocityFromSockets_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, K2_CalculateVelocityFromSockets_DeltaSeconds_Offset), 0, null, deltaSeconds);
            ObjectMarshaller<UnrealSharp.Engine.SkeletalMeshComponent>.ToNative(IntPtr.Add(ParamsBuffer, K2_CalculateVelocityFromSockets_Component_Offset), 0, null, component);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, K2_CalculateVelocityFromSockets_SocketOrBoneName_Offset), 0, null, socketOrBoneName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, K2_CalculateVelocityFromSockets_ReferenceSocketOrBone_Offset), 0, null, referenceSocketOrBone);
            BlittableMarshaller<UnrealSharp.Engine.ERelativeTransformSpace>.ToNative(IntPtr.Add(ParamsBuffer, K2_CalculateVelocityFromSockets_SocketSpace_Offset), 0, null, socketSpace);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, K2_CalculateVelocityFromSockets_OffsetInBoneSpace_Offset), 0, null, offsetInBoneSpace);
            UnrealSharp.AnimGraphRuntime.PositionHistoryMarshaler.ToNative(IntPtr.Add(ParamsBuffer, K2_CalculateVelocityFromSockets_History_Offset), 0, null, history);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, K2_CalculateVelocityFromSockets_NumberOfSamples_Offset), 0, null, numberOfSamples);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, K2_CalculateVelocityFromSockets_VelocityMin_Offset), 0, null, velocityMin);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, K2_CalculateVelocityFromSockets_VelocityMax_Offset), 0, null, velocityMax);
            BlittableMarshaller<UnrealSharp.AnimGraphRuntime.EEasingFuncType>.ToNative(IntPtr.Add(ParamsBuffer, K2_CalculateVelocityFromSockets_EasingType_Offset), 0, null, easingType);
            UnrealSharp.Engine.RuntimeFloatCurveMarshaler.ToNative(IntPtr.Add(ParamsBuffer, K2_CalculateVelocityFromSockets_CustomCurve_Offset), 0, null, customCurve);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, K2_CalculateVelocityFromSockets_NativeFunction, ParamsBuffer);
            
            history = UnrealSharp.AnimGraphRuntime.PositionHistoryMarshaler.FromNative(IntPtr.Add(ParamsBuffer, K2_CalculateVelocityFromSockets_History_Offset), 0, null);
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, K2_CalculateVelocityFromSockets_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AnimGraphRuntime.KismetAnimationLibrary:K2_CalculateVelocityFromPositionHistory
    static readonly IntPtr K2_CalculateVelocityFromPositionHistory_NativeFunction;
    static readonly int K2_CalculateVelocityFromPositionHistory_ParamsSize;
    static readonly int K2_CalculateVelocityFromPositionHistory_DeltaSeconds_Offset;
    static readonly int K2_CalculateVelocityFromPositionHistory_Position_Offset;
    static readonly int K2_CalculateVelocityFromPositionHistory_History_Offset;
    static readonly int K2_CalculateVelocityFromPositionHistory_NumberOfSamples_Offset;
    static readonly int K2_CalculateVelocityFromPositionHistory_VelocityMin_Offset;
    static readonly int K2_CalculateVelocityFromPositionHistory_VelocityMax_Offset;
    static readonly int K2_CalculateVelocityFromPositionHistory_ReturnValue_Offset;
    
    public static float CalculateVelocityFromPositionHistory(float deltaSeconds, System.DoubleNumerics.Vector3 position, ref UnrealSharp.AnimGraphRuntime.PositionHistory history, int numberOfSamples, float velocityMin, float velocityMax)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[K2_CalculateVelocityFromPositionHistory_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, K2_CalculateVelocityFromPositionHistory_DeltaSeconds_Offset), 0, null, deltaSeconds);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, K2_CalculateVelocityFromPositionHistory_Position_Offset), 0, null, position);
            UnrealSharp.AnimGraphRuntime.PositionHistoryMarshaler.ToNative(IntPtr.Add(ParamsBuffer, K2_CalculateVelocityFromPositionHistory_History_Offset), 0, null, history);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, K2_CalculateVelocityFromPositionHistory_NumberOfSamples_Offset), 0, null, numberOfSamples);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, K2_CalculateVelocityFromPositionHistory_VelocityMin_Offset), 0, null, velocityMin);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, K2_CalculateVelocityFromPositionHistory_VelocityMax_Offset), 0, null, velocityMax);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, K2_CalculateVelocityFromPositionHistory_NativeFunction, ParamsBuffer);
            
            history = UnrealSharp.AnimGraphRuntime.PositionHistoryMarshaler.FromNative(IntPtr.Add(ParamsBuffer, K2_CalculateVelocityFromPositionHistory_History_Offset), 0, null);
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, K2_CalculateVelocityFromPositionHistory_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AnimGraphRuntime.KismetAnimationLibrary:CalculateDirection
    static readonly IntPtr CalculateDirection_NativeFunction;
    static readonly int CalculateDirection_ParamsSize;
    static readonly int CalculateDirection_Velocity_Offset;
    static readonly int CalculateDirection_BaseRotation_Offset;
    static readonly int CalculateDirection_ReturnValue_Offset;
    
    public static float CalculateDirection(System.DoubleNumerics.Vector3 velocity, UnrealSharp.Rotator baseRotation)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[CalculateDirection_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, CalculateDirection_Velocity_Offset), 0, null, velocity);
            BlittableMarshaller<UnrealSharp.Rotator>.ToNative(IntPtr.Add(ParamsBuffer, CalculateDirection_BaseRotation_Offset), 0, null, baseRotation);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, CalculateDirection_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, CalculateDirection_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.AnimGraphRuntime;

[UClass]
public partial class LayeredBoneBlendLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static LayeredBoneBlendLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("LayeredBoneBlendLibrary");
        
        
        SetBlendMask_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetBlendMask");
        SetBlendMask_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetBlendMask_NativeFunction);
        SetBlendMask_UpdateContext_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlendMask_NativeFunction, "UpdateContext");
        SetBlendMask_LayeredBoneBlend_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlendMask_NativeFunction, "LayeredBoneBlend");
        SetBlendMask_PoseIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlendMask_NativeFunction, "PoseIndex");
        SetBlendMask_BlendMaskName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlendMask_NativeFunction, "BlendMaskName");
        SetBlendMask_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBlendMask_NativeFunction, "ReturnValue");
        GetNumPoses_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetNumPoses");
        GetNumPoses_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetNumPoses_NativeFunction);
        GetNumPoses_LayeredBoneBlend_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetNumPoses_NativeFunction, "LayeredBoneBlend");
        GetNumPoses_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetNumPoses_NativeFunction, "ReturnValue");
        ConvertToLayeredBoneBlend_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ConvertToLayeredBoneBlend");
        ConvertToLayeredBoneBlend_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ConvertToLayeredBoneBlend_NativeFunction);
        ConvertToLayeredBoneBlend_Node_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ConvertToLayeredBoneBlend_NativeFunction, "Node");
        ConvertToLayeredBoneBlend_Result_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ConvertToLayeredBoneBlend_NativeFunction, "Result");
        ConvertToLayeredBoneBlend_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ConvertToLayeredBoneBlend_NativeFunction, "ReturnValue");
        ConvertToLayeredBlendPerBonePure_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ConvertToLayeredBlendPerBonePure");
        ConvertToLayeredBlendPerBonePure_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ConvertToLayeredBlendPerBonePure_NativeFunction);
        ConvertToLayeredBlendPerBonePure_Node_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ConvertToLayeredBlendPerBonePure_NativeFunction, "Node");
        ConvertToLayeredBlendPerBonePure_LayeredBoneBlend_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ConvertToLayeredBlendPerBonePure_NativeFunction, "LayeredBoneBlend");
        ConvertToLayeredBlendPerBonePure_Result_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ConvertToLayeredBlendPerBonePure_NativeFunction, "Result");
        
        
    }
    
    protected LayeredBoneBlendLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/AnimGraphRuntime.LayeredBoneBlendLibrary:SetBlendMask
    static readonly IntPtr SetBlendMask_NativeFunction;
    static readonly int SetBlendMask_ParamsSize;
    static readonly int SetBlendMask_UpdateContext_Offset;
    static readonly int SetBlendMask_LayeredBoneBlend_Offset;
    static readonly int SetBlendMask_PoseIndex_Offset;
    static readonly int SetBlendMask_BlendMaskName_Offset;
    static readonly int SetBlendMask_ReturnValue_Offset;
    
    public static UnrealSharp.AnimGraphRuntime.LayeredBoneBlendReference SetBlendMask(UnrealSharp.Engine.AnimUpdateContext updateContext, UnrealSharp.AnimGraphRuntime.LayeredBoneBlendReference layeredBoneBlend, int poseIndex, Name blendMaskName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetBlendMask_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.Engine.AnimUpdateContextMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetBlendMask_UpdateContext_Offset), 0, null, updateContext);
            UnrealSharp.AnimGraphRuntime.LayeredBoneBlendReferenceMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetBlendMask_LayeredBoneBlend_Offset), 0, null, layeredBoneBlend);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetBlendMask_PoseIndex_Offset), 0, null, poseIndex);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetBlendMask_BlendMaskName_Offset), 0, null, blendMaskName);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetBlendMask_NativeFunction, ParamsBuffer);
            
            UnrealSharp.AnimGraphRuntime.LayeredBoneBlendReference returnValue;
            returnValue = UnrealSharp.AnimGraphRuntime.LayeredBoneBlendReferenceMarshaler.FromNative(IntPtr.Add(ParamsBuffer, SetBlendMask_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AnimGraphRuntime.LayeredBoneBlendLibrary:GetNumPoses
    static readonly IntPtr GetNumPoses_NativeFunction;
    static readonly int GetNumPoses_ParamsSize;
    static readonly int GetNumPoses_LayeredBoneBlend_Offset;
    static readonly int GetNumPoses_ReturnValue_Offset;
    
    public static int GetNumPoses(UnrealSharp.AnimGraphRuntime.LayeredBoneBlendReference layeredBoneBlend)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetNumPoses_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.AnimGraphRuntime.LayeredBoneBlendReferenceMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetNumPoses_LayeredBoneBlend_Offset), 0, null, layeredBoneBlend);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetNumPoses_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetNumPoses_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AnimGraphRuntime.LayeredBoneBlendLibrary:ConvertToLayeredBoneBlend
    static readonly IntPtr ConvertToLayeredBoneBlend_NativeFunction;
    static readonly int ConvertToLayeredBoneBlend_ParamsSize;
    static readonly int ConvertToLayeredBoneBlend_Node_Offset;
    static readonly int ConvertToLayeredBoneBlend_Result_Offset;
    static readonly int ConvertToLayeredBoneBlend_ReturnValue_Offset;
    
    public static UnrealSharp.AnimGraphRuntime.LayeredBoneBlendReference ConvertToLayeredBoneBlend(UnrealSharp.Engine.AnimNodeReference node, out UnrealSharp.Engine.EAnimNodeReferenceConversionResult result)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ConvertToLayeredBoneBlend_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.Engine.AnimNodeReferenceMarshaler.ToNative(IntPtr.Add(ParamsBuffer, ConvertToLayeredBoneBlend_Node_Offset), 0, null, node);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ConvertToLayeredBoneBlend_NativeFunction, ParamsBuffer);
            
            result = BlittableMarshaller<UnrealSharp.Engine.EAnimNodeReferenceConversionResult>.FromNative(IntPtr.Add(ParamsBuffer, ConvertToLayeredBoneBlend_Result_Offset), 0, null);
            UnrealSharp.AnimGraphRuntime.LayeredBoneBlendReference returnValue;
            returnValue = UnrealSharp.AnimGraphRuntime.LayeredBoneBlendReferenceMarshaler.FromNative(IntPtr.Add(ParamsBuffer, ConvertToLayeredBoneBlend_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AnimGraphRuntime.LayeredBoneBlendLibrary:ConvertToLayeredBlendPerBonePure
    static readonly IntPtr ConvertToLayeredBlendPerBonePure_NativeFunction;
    static readonly int ConvertToLayeredBlendPerBonePure_ParamsSize;
    static readonly int ConvertToLayeredBlendPerBonePure_Node_Offset;
    static readonly int ConvertToLayeredBlendPerBonePure_LayeredBoneBlend_Offset;
    static readonly int ConvertToLayeredBlendPerBonePure_Result_Offset;
    
    public static void ConvertToLayeredBlendPerBonePure(UnrealSharp.Engine.AnimNodeReference node, out UnrealSharp.AnimGraphRuntime.LayeredBoneBlendReference layeredBoneBlend, out bool result)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ConvertToLayeredBlendPerBonePure_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.Engine.AnimNodeReferenceMarshaler.ToNative(IntPtr.Add(ParamsBuffer, ConvertToLayeredBlendPerBonePure_Node_Offset), 0, null, node);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ConvertToLayeredBlendPerBonePure_NativeFunction, ParamsBuffer);
            
            layeredBoneBlend = UnrealSharp.AnimGraphRuntime.LayeredBoneBlendReferenceMarshaler.FromNative(IntPtr.Add(ParamsBuffer, ConvertToLayeredBlendPerBonePure_LayeredBoneBlend_Offset), 0, null);
            result = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, ConvertToLayeredBlendPerBonePure_Result_Offset), 0, null);
            
        }
    }
    
    
}
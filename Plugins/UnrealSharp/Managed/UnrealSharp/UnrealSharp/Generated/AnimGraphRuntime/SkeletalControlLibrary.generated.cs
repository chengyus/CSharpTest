// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.AnimGraphRuntime;

[UClass]
public partial class SkeletalControlLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static SkeletalControlLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("SkeletalControlLibrary");
        
        
        SetAlpha_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAlpha");
        SetAlpha_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAlpha_NativeFunction);
        SetAlpha_SkeletalControl_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAlpha_NativeFunction, "SkeletalControl");
        SetAlpha_Alpha_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAlpha_NativeFunction, "Alpha");
        SetAlpha_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAlpha_NativeFunction, "ReturnValue");
        GetAlpha_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetAlpha");
        GetAlpha_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetAlpha_NativeFunction);
        GetAlpha_SkeletalControl_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAlpha_NativeFunction, "SkeletalControl");
        GetAlpha_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAlpha_NativeFunction, "ReturnValue");
        ConvertToSkeletalControlPure_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ConvertToSkeletalControlPure");
        ConvertToSkeletalControlPure_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ConvertToSkeletalControlPure_NativeFunction);
        ConvertToSkeletalControlPure_Node_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ConvertToSkeletalControlPure_NativeFunction, "Node");
        ConvertToSkeletalControlPure_SkeletalControl_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ConvertToSkeletalControlPure_NativeFunction, "SkeletalControl");
        ConvertToSkeletalControlPure_Result_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ConvertToSkeletalControlPure_NativeFunction, "Result");
        ConvertToSkeletalControl_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ConvertToSkeletalControl");
        ConvertToSkeletalControl_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ConvertToSkeletalControl_NativeFunction);
        ConvertToSkeletalControl_Node_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ConvertToSkeletalControl_NativeFunction, "Node");
        ConvertToSkeletalControl_Result_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ConvertToSkeletalControl_NativeFunction, "Result");
        ConvertToSkeletalControl_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ConvertToSkeletalControl_NativeFunction, "ReturnValue");
        
        
    }
    
    protected SkeletalControlLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/AnimGraphRuntime.SkeletalControlLibrary:SetAlpha
    static readonly IntPtr SetAlpha_NativeFunction;
    static readonly int SetAlpha_ParamsSize;
    static readonly int SetAlpha_SkeletalControl_Offset;
    static readonly int SetAlpha_Alpha_Offset;
    static readonly int SetAlpha_ReturnValue_Offset;
    
    public static UnrealSharp.AnimGraphRuntime.SkeletalControlReference SetAlpha(UnrealSharp.AnimGraphRuntime.SkeletalControlReference skeletalControl, float alpha)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAlpha_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.AnimGraphRuntime.SkeletalControlReferenceMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetAlpha_SkeletalControl_Offset), 0, null, skeletalControl);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetAlpha_Alpha_Offset), 0, null, alpha);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetAlpha_NativeFunction, ParamsBuffer);
            
            UnrealSharp.AnimGraphRuntime.SkeletalControlReference returnValue;
            returnValue = UnrealSharp.AnimGraphRuntime.SkeletalControlReferenceMarshaler.FromNative(IntPtr.Add(ParamsBuffer, SetAlpha_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AnimGraphRuntime.SkeletalControlLibrary:GetAlpha
    static readonly IntPtr GetAlpha_NativeFunction;
    static readonly int GetAlpha_ParamsSize;
    static readonly int GetAlpha_SkeletalControl_Offset;
    static readonly int GetAlpha_ReturnValue_Offset;
    
    public static float GetAlpha(UnrealSharp.AnimGraphRuntime.SkeletalControlReference skeletalControl)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetAlpha_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.AnimGraphRuntime.SkeletalControlReferenceMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetAlpha_SkeletalControl_Offset), 0, null, skeletalControl);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetAlpha_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetAlpha_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AnimGraphRuntime.SkeletalControlLibrary:ConvertToSkeletalControlPure
    static readonly IntPtr ConvertToSkeletalControlPure_NativeFunction;
    static readonly int ConvertToSkeletalControlPure_ParamsSize;
    static readonly int ConvertToSkeletalControlPure_Node_Offset;
    static readonly int ConvertToSkeletalControlPure_SkeletalControl_Offset;
    static readonly int ConvertToSkeletalControlPure_Result_Offset;
    
    public static void ConvertToSkeletalControlPure(UnrealSharp.Engine.AnimNodeReference node, out UnrealSharp.AnimGraphRuntime.SkeletalControlReference skeletalControl, out bool result)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ConvertToSkeletalControlPure_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.Engine.AnimNodeReferenceMarshaler.ToNative(IntPtr.Add(ParamsBuffer, ConvertToSkeletalControlPure_Node_Offset), 0, null, node);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ConvertToSkeletalControlPure_NativeFunction, ParamsBuffer);
            
            skeletalControl = UnrealSharp.AnimGraphRuntime.SkeletalControlReferenceMarshaler.FromNative(IntPtr.Add(ParamsBuffer, ConvertToSkeletalControlPure_SkeletalControl_Offset), 0, null);
            result = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, ConvertToSkeletalControlPure_Result_Offset), 0, null);
            
        }
    }
    
    // Function /Script/AnimGraphRuntime.SkeletalControlLibrary:ConvertToSkeletalControl
    static readonly IntPtr ConvertToSkeletalControl_NativeFunction;
    static readonly int ConvertToSkeletalControl_ParamsSize;
    static readonly int ConvertToSkeletalControl_Node_Offset;
    static readonly int ConvertToSkeletalControl_Result_Offset;
    static readonly int ConvertToSkeletalControl_ReturnValue_Offset;
    
    public static UnrealSharp.AnimGraphRuntime.SkeletalControlReference ConvertToSkeletalControl(UnrealSharp.Engine.AnimNodeReference node, out UnrealSharp.Engine.EAnimNodeReferenceConversionResult result)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ConvertToSkeletalControl_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.Engine.AnimNodeReferenceMarshaler.ToNative(IntPtr.Add(ParamsBuffer, ConvertToSkeletalControl_Node_Offset), 0, null, node);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ConvertToSkeletalControl_NativeFunction, ParamsBuffer);
            
            result = BlittableMarshaller<UnrealSharp.Engine.EAnimNodeReferenceConversionResult>.FromNative(IntPtr.Add(ParamsBuffer, ConvertToSkeletalControl_Result_Offset), 0, null);
            UnrealSharp.AnimGraphRuntime.SkeletalControlReference returnValue;
            returnValue = UnrealSharp.AnimGraphRuntime.SkeletalControlReferenceMarshaler.FromNative(IntPtr.Add(ParamsBuffer, ConvertToSkeletalControl_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.AnimationModifierLibrary;

[UClass]
public partial class CopyBonesModifier : UnrealSharp.AnimationModifiers.AnimationModifier
{
    
    static CopyBonesModifier()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("CopyBonesModifier");
        
        BonePairs_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "BonePairs");
        BonePairs_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "BonePairs");
        BonePoseSpace_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "BonePoseSpace");
        
        
        
    }
    
    protected CopyBonesModifier(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ArrayProperty /Script/AnimationModifierLibrary.CopyBonesModifier:BonePairs
    static readonly int BonePairs_Offset;
    static readonly IntPtr BonePairs_NativeProperty;
    UnrealArrayReadOnlyMarshaler<UnrealSharp.AnimationModifierLibrary.BoneReferencePair> BonePairs_Wrapper = null;
    
    public System.Collections.Generic.IReadOnlyList<UnrealSharp.AnimationModifierLibrary.BoneReferencePair> BonePairs
    {
        get
        {
            if(BonePairs_Wrapper == null)
            {
                BonePairs_Wrapper = new UnrealArrayReadOnlyMarshaler<UnrealSharp.AnimationModifierLibrary.BoneReferencePair>(1, BonePairs_NativeProperty, UnrealSharp.AnimationModifierLibrary.BoneReferencePairMarshaler.ToNative, UnrealSharp.AnimationModifierLibrary.BoneReferencePairMarshaler.FromNative);
            }
            
            return BonePairs_Wrapper.FromNative(IntPtr.Add(NativeObject,BonePairs_Offset),0,this);
        }
    }
    
    // EnumProperty /Script/AnimationModifierLibrary.CopyBonesModifier:BonePoseSpace
    static readonly int BonePoseSpace_Offset;
    
    public UnrealSharp.AnimationBlueprintLibrary.EAnimPoseSpaces BonePoseSpace
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.AnimationBlueprintLibrary.EAnimPoseSpaces>.FromNative(IntPtr.Add(NativeObject, BonePoseSpace_Offset), 0, this);
        }
    }
    
    
}
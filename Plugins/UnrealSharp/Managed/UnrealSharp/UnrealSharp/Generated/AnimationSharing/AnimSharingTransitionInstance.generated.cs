// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.AnimationSharing;

[UClass]
public partial class AnimSharingTransitionInstance : UnrealSharp.Engine.AnimInstance
{
    
    static AnimSharingTransitionInstance()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("AnimSharingTransitionInstance");
        
        FromComponent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "FromComponent");
        ToComponent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ToComponent");
        BlendTime_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "BlendTime");
        bBlendBool_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bBlendBool");
        
        
        
    }
    
    protected AnimSharingTransitionInstance(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // WeakObjectProperty /Script/AnimationSharing.AnimSharingTransitionInstance:FromComponent
    static readonly int FromComponent_Offset;
    
    public WeakObject<UnrealSharp.Engine.SkeletalMeshComponent> FromComponent
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<WeakObject<UnrealSharp.Engine.SkeletalMeshComponent>>.FromNative(IntPtr.Add(NativeObject, FromComponent_Offset), 0, this);
        }
    }
    
    // WeakObjectProperty /Script/AnimationSharing.AnimSharingTransitionInstance:ToComponent
    static readonly int ToComponent_Offset;
    
    public WeakObject<UnrealSharp.Engine.SkeletalMeshComponent> ToComponent
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<WeakObject<UnrealSharp.Engine.SkeletalMeshComponent>>.FromNative(IntPtr.Add(NativeObject, ToComponent_Offset), 0, this);
        }
    }
    
    // FloatProperty /Script/AnimationSharing.AnimSharingTransitionInstance:BlendTime
    static readonly int BlendTime_Offset;
    
    public float BlendTime
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, BlendTime_Offset), 0, this);
        }
    }
    
    // BoolProperty /Script/AnimationSharing.AnimSharingTransitionInstance:bBlendBool
    static readonly int bBlendBool_Offset;
    
    public bool bBlendBool
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bBlendBool_Offset), 0, this);
        }
    }
    
    
}
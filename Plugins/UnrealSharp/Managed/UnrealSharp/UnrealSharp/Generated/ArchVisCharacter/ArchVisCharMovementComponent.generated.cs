// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.ArchVisCharacter;

[UClass]
public partial class ArchVisCharMovementComponent : UnrealSharp.Engine.CharacterMovementComponent
{
    
    static ArchVisCharMovementComponent()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("ArchVisCharMovementComponent");
        
        RotationalAcceleration_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "RotationalAcceleration");
        RotationalDeceleration_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "RotationalDeceleration");
        MaxRotationalVelocity_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "MaxRotationalVelocity");
        MinPitch_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "MinPitch");
        MaxPitch_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "MaxPitch");
        WalkingFriction_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "WalkingFriction");
        WalkingSpeed_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "WalkingSpeed");
        WalkingAcceleration_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "WalkingAcceleration");
        
        
        
    }
    
    protected ArchVisCharMovementComponent(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // StructProperty /Script/ArchVisCharacter.ArchVisCharMovementComponent:RotationalAcceleration
    static readonly int RotationalAcceleration_Offset;
    
    public UnrealSharp.Rotator RotationalAcceleration
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Rotator>.FromNative(IntPtr.Add(NativeObject, RotationalAcceleration_Offset), 0, this);
        }
    }
    
    // StructProperty /Script/ArchVisCharacter.ArchVisCharMovementComponent:RotationalDeceleration
    static readonly int RotationalDeceleration_Offset;
    
    public UnrealSharp.Rotator RotationalDeceleration
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Rotator>.FromNative(IntPtr.Add(NativeObject, RotationalDeceleration_Offset), 0, this);
        }
    }
    
    // StructProperty /Script/ArchVisCharacter.ArchVisCharMovementComponent:MaxRotationalVelocity
    static readonly int MaxRotationalVelocity_Offset;
    
    public UnrealSharp.Rotator MaxRotationalVelocity
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Rotator>.FromNative(IntPtr.Add(NativeObject, MaxRotationalVelocity_Offset), 0, this);
        }
    }
    
    // FloatProperty /Script/ArchVisCharacter.ArchVisCharMovementComponent:MinPitch
    static readonly int MinPitch_Offset;
    
    public float MinPitch
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, MinPitch_Offset), 0, this);
        }
    }
    
    // FloatProperty /Script/ArchVisCharacter.ArchVisCharMovementComponent:MaxPitch
    static readonly int MaxPitch_Offset;
    
    public float MaxPitch
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, MaxPitch_Offset), 0, this);
        }
    }
    
    // FloatProperty /Script/ArchVisCharacter.ArchVisCharMovementComponent:WalkingFriction
    static readonly int WalkingFriction_Offset;
    
    public float WalkingFriction
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, WalkingFriction_Offset), 0, this);
        }
    }
    
    // FloatProperty /Script/ArchVisCharacter.ArchVisCharMovementComponent:WalkingSpeed
    static readonly int WalkingSpeed_Offset;
    
    public float WalkingSpeed
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, WalkingSpeed_Offset), 0, this);
        }
    }
    
    // FloatProperty /Script/ArchVisCharacter.ArchVisCharMovementComponent:WalkingAcceleration
    static readonly int WalkingAcceleration_Offset;
    
    public float WalkingAcceleration
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, WalkingAcceleration_Offset), 0, this);
        }
    }
    
    
}
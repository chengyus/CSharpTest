// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.ArchVisCharacter;

[UClass]
public partial class ArchVisCharacter : UnrealSharp.Engine.Character
{
    
    static ArchVisCharacter()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("ArchVisCharacter");
        
        LookUpAxisName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "LookUpAxisName");
        LookUpAxisName_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "LookUpAxisName");
        LookUpAtRateAxisName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "LookUpAtRateAxisName");
        LookUpAtRateAxisName_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "LookUpAtRateAxisName");
        TurnAxisName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "TurnAxisName");
        TurnAxisName_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "TurnAxisName");
        TurnAtRateAxisName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "TurnAtRateAxisName");
        TurnAtRateAxisName_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "TurnAtRateAxisName");
        MoveForwardAxisName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "MoveForwardAxisName");
        MoveForwardAxisName_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "MoveForwardAxisName");
        MoveRightAxisName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "MoveRightAxisName");
        MoveRightAxisName_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "MoveRightAxisName");
        MouseSensitivityScale_Pitch_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "MouseSensitivityScale_Pitch");
        MouseSensitivityScale_Yaw_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "MouseSensitivityScale_Yaw");
        
        
        
    }
    
    protected ArchVisCharacter(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // StrProperty /Script/ArchVisCharacter.ArchVisCharacter:LookUpAxisName
    static readonly int LookUpAxisName_Offset;
    static readonly IntPtr LookUpAxisName_NativeProperty;
    
    public string LookUpAxisName
    {
        get
        {
            CheckObjectForValidity();
            return StringMarshaller.FromNative(IntPtr.Add(NativeObject,LookUpAxisName_Offset),0,this);
        }
    }
    
    // StrProperty /Script/ArchVisCharacter.ArchVisCharacter:LookUpAtRateAxisName
    static readonly int LookUpAtRateAxisName_Offset;
    static readonly IntPtr LookUpAtRateAxisName_NativeProperty;
    
    public string LookUpAtRateAxisName
    {
        get
        {
            CheckObjectForValidity();
            return StringMarshaller.FromNative(IntPtr.Add(NativeObject,LookUpAtRateAxisName_Offset),0,this);
        }
    }
    
    // StrProperty /Script/ArchVisCharacter.ArchVisCharacter:TurnAxisName
    static readonly int TurnAxisName_Offset;
    static readonly IntPtr TurnAxisName_NativeProperty;
    
    public string TurnAxisName
    {
        get
        {
            CheckObjectForValidity();
            return StringMarshaller.FromNative(IntPtr.Add(NativeObject,TurnAxisName_Offset),0,this);
        }
    }
    
    // StrProperty /Script/ArchVisCharacter.ArchVisCharacter:TurnAtRateAxisName
    static readonly int TurnAtRateAxisName_Offset;
    static readonly IntPtr TurnAtRateAxisName_NativeProperty;
    
    public string TurnAtRateAxisName
    {
        get
        {
            CheckObjectForValidity();
            return StringMarshaller.FromNative(IntPtr.Add(NativeObject,TurnAtRateAxisName_Offset),0,this);
        }
    }
    
    // StrProperty /Script/ArchVisCharacter.ArchVisCharacter:MoveForwardAxisName
    static readonly int MoveForwardAxisName_Offset;
    static readonly IntPtr MoveForwardAxisName_NativeProperty;
    
    public string MoveForwardAxisName
    {
        get
        {
            CheckObjectForValidity();
            return StringMarshaller.FromNative(IntPtr.Add(NativeObject,MoveForwardAxisName_Offset),0,this);
        }
    }
    
    // StrProperty /Script/ArchVisCharacter.ArchVisCharacter:MoveRightAxisName
    static readonly int MoveRightAxisName_Offset;
    static readonly IntPtr MoveRightAxisName_NativeProperty;
    
    public string MoveRightAxisName
    {
        get
        {
            CheckObjectForValidity();
            return StringMarshaller.FromNative(IntPtr.Add(NativeObject,MoveRightAxisName_Offset),0,this);
        }
    }
    
    // FloatProperty /Script/ArchVisCharacter.ArchVisCharacter:MouseSensitivityScale_Pitch
    static readonly int MouseSensitivityScale_Pitch_Offset;
    
    public float MouseSensitivityScale_Pitch
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, MouseSensitivityScale_Pitch_Offset), 0, this);
        }
    }
    
    // FloatProperty /Script/ArchVisCharacter.ArchVisCharacter:MouseSensitivityScale_Yaw
    static readonly int MouseSensitivityScale_Yaw_Offset;
    
    public float MouseSensitivityScale_Yaw
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, MouseSensitivityScale_Yaw_Offset), 0, this);
        }
    }
    
    
}
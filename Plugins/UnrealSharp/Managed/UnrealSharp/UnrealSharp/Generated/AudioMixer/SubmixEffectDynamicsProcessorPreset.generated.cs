// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.AudioMixer;

[UClass]
public partial class SubmixEffectDynamicsProcessorPreset : UnrealSharp.Engine.SoundEffectSubmixPreset
{
    
    static SubmixEffectDynamicsProcessorPreset()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("SubmixEffectDynamicsProcessorPreset");
        
        Settings_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Settings");
        
        SetSettings_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSettings");
        SetSettings_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSettings_NativeFunction);
        SetSettings_Settings_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSettings_NativeFunction, "Settings");
        SetExternalSubmix_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetExternalSubmix");
        SetExternalSubmix_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetExternalSubmix_NativeFunction);
        SetExternalSubmix_Submix_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetExternalSubmix_NativeFunction, "Submix");
        SetAudioBus_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAudioBus");
        SetAudioBus_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAudioBus_NativeFunction);
        SetAudioBus_AudioBus_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAudioBus_NativeFunction, "AudioBus");
        ResetKey_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ResetKey");
        
        
    }
    
    protected SubmixEffectDynamicsProcessorPreset(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // StructProperty /Script/AudioMixer.SubmixEffectDynamicsProcessorPreset:Settings
    static readonly int Settings_Offset;
    
    public UnrealSharp.AudioMixer.SubmixEffectDynamicsProcessorSettings Settings
    {
        get
        {
            CheckObjectForValidity();
            return UnrealSharp.AudioMixer.SubmixEffectDynamicsProcessorSettingsMarshaler.FromNative(IntPtr.Add(NativeObject, Settings_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            UnrealSharp.AudioMixer.SubmixEffectDynamicsProcessorSettingsMarshaler.ToNative(IntPtr.Add(NativeObject, Settings_Offset), 0, this, value);
        }
    }
    
    // Function /Script/AudioMixer.SubmixEffectDynamicsProcessorPreset:SetSettings
    static readonly IntPtr SetSettings_NativeFunction;
    static readonly int SetSettings_ParamsSize;
    static readonly int SetSettings_Settings_Offset;
    
    public void SetSettings(UnrealSharp.AudioMixer.SubmixEffectDynamicsProcessorSettings settings)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSettings_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.AudioMixer.SubmixEffectDynamicsProcessorSettingsMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetSettings_Settings_Offset), 0, null, settings);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSettings_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/AudioMixer.SubmixEffectDynamicsProcessorPreset:SetExternalSubmix
    static readonly IntPtr SetExternalSubmix_NativeFunction;
    static readonly int SetExternalSubmix_ParamsSize;
    static readonly int SetExternalSubmix_Submix_Offset;
    
    public void SetExternalSubmix(UnrealSharp.Engine.SoundSubmix submix)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetExternalSubmix_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.SoundSubmix>.ToNative(IntPtr.Add(ParamsBuffer, SetExternalSubmix_Submix_Offset), 0, null, submix);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetExternalSubmix_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/AudioMixer.SubmixEffectDynamicsProcessorPreset:SetAudioBus
    static readonly IntPtr SetAudioBus_NativeFunction;
    static readonly int SetAudioBus_ParamsSize;
    static readonly int SetAudioBus_AudioBus_Offset;
    
    public void SetAudioBus(UnrealSharp.Engine.AudioBus audioBus)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAudioBus_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.AudioBus>.ToNative(IntPtr.Add(ParamsBuffer, SetAudioBus_AudioBus_Offset), 0, null, audioBus);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAudioBus_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/AudioMixer.SubmixEffectDynamicsProcessorPreset:ResetKey
    static readonly IntPtr ResetKey_NativeFunction;
    
    public void ResetKey()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ResetKey_NativeFunction, IntPtr.Zero);
        }
    }
    
    
}
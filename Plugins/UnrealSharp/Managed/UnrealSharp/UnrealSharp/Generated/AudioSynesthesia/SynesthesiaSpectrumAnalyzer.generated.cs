// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.AudioSynesthesia;

[UClass]
public partial class SynesthesiaSpectrumAnalyzer : UnrealSharp.AudioAnalyzer.AudioAnalyzer
{
    
    static SynesthesiaSpectrumAnalyzer()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("SynesthesiaSpectrumAnalyzer");
        
        Settings_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Settings");
        
        GetNumCenterFrequencies_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetNumCenterFrequencies");
        GetNumCenterFrequencies_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetNumCenterFrequencies_NativeFunction);
        GetNumCenterFrequencies_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetNumCenterFrequencies_NativeFunction, "ReturnValue");
        GetCenterFrequencies_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCenterFrequencies");
        GetCenterFrequencies_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCenterFrequencies_NativeFunction);
        GetCenterFrequencies_InSampleRate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCenterFrequencies_NativeFunction, "InSampleRate");
        GetCenterFrequencies_OutCenterFrequencies_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCenterFrequencies_NativeFunction, "OutCenterFrequencies");
        GetCenterFrequencies_OutCenterFrequencies_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetCenterFrequencies_NativeFunction, "OutCenterFrequencies");
        
        
    }
    
    protected SynesthesiaSpectrumAnalyzer(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ObjectProperty /Script/AudioSynesthesia.SynesthesiaSpectrumAnalyzer:Settings
    static readonly int Settings_Offset;
    
    public UnrealSharp.AudioSynesthesia.SynesthesiaSpectrumAnalysisSettings Settings
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.AudioSynesthesia.SynesthesiaSpectrumAnalysisSettings>.FromNative(IntPtr.Add(NativeObject, Settings_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            ObjectMarshaller<UnrealSharp.AudioSynesthesia.SynesthesiaSpectrumAnalysisSettings>.ToNative(IntPtr.Add(NativeObject, Settings_Offset), 0, this, value);
        }
    }
    
    // Function /Script/AudioSynesthesia.SynesthesiaSpectrumAnalyzer:GetNumCenterFrequencies
    static readonly IntPtr GetNumCenterFrequencies_NativeFunction;
    static readonly int GetNumCenterFrequencies_ParamsSize;
    static readonly int GetNumCenterFrequencies_ReturnValue_Offset;
    
    public int GetNumCenterFrequencies()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetNumCenterFrequencies_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetNumCenterFrequencies_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetNumCenterFrequencies_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/AudioSynesthesia.SynesthesiaSpectrumAnalyzer:GetCenterFrequencies
    static readonly IntPtr GetCenterFrequencies_NativeFunction;
    static readonly int GetCenterFrequencies_ParamsSize;
    static readonly int GetCenterFrequencies_InSampleRate_Offset;
    static readonly int GetCenterFrequencies_OutCenterFrequencies_Offset;
    static readonly int GetCenterFrequencies_OutCenterFrequencies_ElementSize;
    
    public void GetCenterFrequencies(float inSampleRate, out System.Collections.Generic.IList<float> outCenterFrequencies)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCenterFrequencies_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, GetCenterFrequencies_InSampleRate_Offset), 0, null, inSampleRate);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCenterFrequencies_NativeFunction, ParamsBuffer);
            
            IntPtr OutCenterFrequencies_NativeBuffer = IntPtr.Add(ParamsBuffer, GetCenterFrequencies_OutCenterFrequencies_Offset);
            UnrealArrayCopyMarshaler<float> OutCenterFrequencies_Marshaler = new UnrealArrayCopyMarshaler<float> (1, BlittableMarshaller<float>.ToNative, BlittableMarshaller<float>.FromNative, GetCenterFrequencies_OutCenterFrequencies_ElementSize);
            outCenterFrequencies = OutCenterFrequencies_Marshaler.FromNative(OutCenterFrequencies_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<float>.DestructInstance(OutCenterFrequencies_NativeBuffer, 0);
            
        }
    }
    
    
}
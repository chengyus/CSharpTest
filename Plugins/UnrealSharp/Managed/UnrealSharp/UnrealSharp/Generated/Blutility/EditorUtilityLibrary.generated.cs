// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Blutility;

[UClass]
public partial class EditorUtilityLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static EditorUtilityLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("EditorUtilityLibrary");
        
        
        RenameAsset_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RenameAsset");
        RenameAsset_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RenameAsset_NativeFunction);
        RenameAsset_Asset_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameAsset_NativeFunction, "Asset");
        RenameAsset_NewName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameAsset_NativeFunction, "NewName");
        GetSelectionSet_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSelectionSet");
        GetSelectionSet_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSelectionSet_NativeFunction);
        GetSelectionSet_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSelectionSet_NativeFunction, "ReturnValue");
        GetSelectionSet_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetSelectionSet_NativeFunction, "ReturnValue");
        GetSelectionBounds_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSelectionBounds");
        GetSelectionBounds_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSelectionBounds_NativeFunction);
        GetSelectionBounds_Origin_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSelectionBounds_NativeFunction, "Origin");
        GetSelectionBounds_BoxExtent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSelectionBounds_NativeFunction, "BoxExtent");
        GetSelectionBounds_SphereRadius_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSelectionBounds_NativeFunction, "SphereRadius");
        GetSelectedBlueprintClasses_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSelectedBlueprintClasses");
        GetSelectedBlueprintClasses_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSelectedBlueprintClasses_NativeFunction);
        GetSelectedBlueprintClasses_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSelectedBlueprintClasses_NativeFunction, "ReturnValue");
        GetSelectedBlueprintClasses_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetSelectedBlueprintClasses_NativeFunction, "ReturnValue");
        GetSelectedAssetsOfClass_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSelectedAssetsOfClass");
        GetSelectedAssetsOfClass_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSelectedAssetsOfClass_NativeFunction);
        GetSelectedAssetsOfClass_AssetClass_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSelectedAssetsOfClass_NativeFunction, "AssetClass");
        GetSelectedAssetsOfClass_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSelectedAssetsOfClass_NativeFunction, "ReturnValue");
        GetSelectedAssetsOfClass_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetSelectedAssetsOfClass_NativeFunction, "ReturnValue");
        GetSelectedAssets_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSelectedAssets");
        GetSelectedAssets_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSelectedAssets_NativeFunction);
        GetSelectedAssets_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSelectedAssets_NativeFunction, "ReturnValue");
        GetSelectedAssets_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetSelectedAssets_NativeFunction, "ReturnValue");
        GetSelectedAssetData_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSelectedAssetData");
        GetSelectedAssetData_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSelectedAssetData_NativeFunction);
        GetSelectedAssetData_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSelectedAssetData_NativeFunction, "ReturnValue");
        GetSelectedAssetData_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetSelectedAssetData_NativeFunction, "ReturnValue");
        GetCurrentContentBrowserPath_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCurrentContentBrowserPath");
        GetCurrentContentBrowserPath_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCurrentContentBrowserPath_NativeFunction);
        GetCurrentContentBrowserPath_OutPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCurrentContentBrowserPath_NativeFunction, "OutPath");
        GetCurrentContentBrowserPath_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCurrentContentBrowserPath_NativeFunction, "ReturnValue");
        GetCurrentContentBrowserItemPath_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCurrentContentBrowserItemPath");
        GetCurrentContentBrowserItemPath_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCurrentContentBrowserItemPath_NativeFunction);
        GetCurrentContentBrowserItemPath_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCurrentContentBrowserItemPath_NativeFunction, "ReturnValue");
        GetActorReference_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetActorReference");
        GetActorReference_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetActorReference_NativeFunction);
        GetActorReference_PathToActor_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetActorReference_NativeFunction, "PathToActor");
        GetActorReference_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetActorReference_NativeFunction, "ReturnValue");
        ConvertToEditorUtilityWidget_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ConvertToEditorUtilityWidget");
        ConvertToEditorUtilityWidget_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ConvertToEditorUtilityWidget_NativeFunction);
        ConvertToEditorUtilityWidget_WidgetBP_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ConvertToEditorUtilityWidget_NativeFunction, "WidgetBP");
        
        
    }
    
    protected EditorUtilityLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Blutility.EditorUtilityLibrary:RenameAsset
    static readonly IntPtr RenameAsset_NativeFunction;
    static readonly int RenameAsset_ParamsSize;
    static readonly int RenameAsset_Asset_Offset;
    static readonly int RenameAsset_NewName_Offset;
    
    public static void RenameAsset(UnrealSharp.CoreUObject.Object asset, string newName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RenameAsset_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, RenameAsset_Asset_Offset), 0, null, asset);
            IntPtr NewName_NativePtr = IntPtr.Add(ParamsBuffer,RenameAsset_NewName_Offset);
            StringMarshaller.ToNative(NewName_NativePtr,0,null,newName);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, RenameAsset_NativeFunction, ParamsBuffer);
            
            StringMarshaller.DestructInstance(NewName_NativePtr, 0);
        }
    }
    
    // Function /Script/Blutility.EditorUtilityLibrary:GetSelectionSet
    static readonly IntPtr GetSelectionSet_NativeFunction;
    static readonly int GetSelectionSet_ParamsSize;
    static readonly int GetSelectionSet_ReturnValue_Offset;
    static readonly int GetSelectionSet_ReturnValue_ElementSize;
    
    public static System.Collections.Generic.IList<UnrealSharp.Engine.Actor> GetSelectionSet()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSelectionSet_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetSelectionSet_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.Engine.Actor> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, GetSelectionSet_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor> (1, ObjectMarshaller<UnrealSharp.Engine.Actor>.ToNative, ObjectMarshaller<UnrealSharp.Engine.Actor>.FromNative, GetSelectionSet_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Blutility.EditorUtilityLibrary:GetSelectionBounds
    static readonly IntPtr GetSelectionBounds_NativeFunction;
    static readonly int GetSelectionBounds_ParamsSize;
    static readonly int GetSelectionBounds_Origin_Offset;
    static readonly int GetSelectionBounds_BoxExtent_Offset;
    static readonly int GetSelectionBounds_SphereRadius_Offset;
    
    public static void GetSelectionBounds(out System.DoubleNumerics.Vector3 origin, out System.DoubleNumerics.Vector3 boxExtent, out float sphereRadius)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSelectionBounds_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetSelectionBounds_NativeFunction, ParamsBuffer);
            
            origin = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, GetSelectionBounds_Origin_Offset), 0, null);
            boxExtent = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, GetSelectionBounds_BoxExtent_Offset), 0, null);
            sphereRadius = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetSelectionBounds_SphereRadius_Offset), 0, null);
            
        }
    }
    
    // Function /Script/Blutility.EditorUtilityLibrary:GetSelectedBlueprintClasses
    static readonly IntPtr GetSelectedBlueprintClasses_NativeFunction;
    static readonly int GetSelectedBlueprintClasses_ParamsSize;
    static readonly int GetSelectedBlueprintClasses_ReturnValue_Offset;
    static readonly int GetSelectedBlueprintClasses_ReturnValue_ElementSize;
    
    public static System.Collections.Generic.IList<SubclassOf<UnrealSharp.CoreUObject.Object>> GetSelectedBlueprintClasses()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSelectedBlueprintClasses_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetSelectedBlueprintClasses_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<SubclassOf<UnrealSharp.CoreUObject.Object>> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, GetSelectedBlueprintClasses_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<SubclassOf<UnrealSharp.CoreUObject.Object>> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<SubclassOf<UnrealSharp.CoreUObject.Object>> (1, SubclassOfMarshaller<UnrealSharp.CoreUObject.Object>.ToNative, SubclassOfMarshaller<UnrealSharp.CoreUObject.Object>.FromNative, GetSelectedBlueprintClasses_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<SubclassOf<UnrealSharp.CoreUObject.Object>>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Blutility.EditorUtilityLibrary:GetSelectedAssetsOfClass
    static readonly IntPtr GetSelectedAssetsOfClass_NativeFunction;
    static readonly int GetSelectedAssetsOfClass_ParamsSize;
    static readonly int GetSelectedAssetsOfClass_AssetClass_Offset;
    static readonly int GetSelectedAssetsOfClass_ReturnValue_Offset;
    static readonly int GetSelectedAssetsOfClass_ReturnValue_ElementSize;
    
    public static System.Collections.Generic.IList<UnrealSharp.CoreUObject.Object> GetSelectedAssetsOfClass(SubclassOf<UnrealSharp.CoreUObject.Object> assetClass)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSelectedAssetsOfClass_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            SubclassOfMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, GetSelectedAssetsOfClass_AssetClass_Offset), 0, null, assetClass);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetSelectedAssetsOfClass_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.CoreUObject.Object> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, GetSelectedAssetsOfClass_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Object> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Object> (1, ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative, ObjectMarshaller<UnrealSharp.CoreUObject.Object>.FromNative, GetSelectedAssetsOfClass_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Object>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Blutility.EditorUtilityLibrary:GetSelectedAssets
    static readonly IntPtr GetSelectedAssets_NativeFunction;
    static readonly int GetSelectedAssets_ParamsSize;
    static readonly int GetSelectedAssets_ReturnValue_Offset;
    static readonly int GetSelectedAssets_ReturnValue_ElementSize;
    
    public static System.Collections.Generic.IList<UnrealSharp.CoreUObject.Object> GetSelectedAssets()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSelectedAssets_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetSelectedAssets_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.CoreUObject.Object> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, GetSelectedAssets_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Object> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Object> (1, ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative, ObjectMarshaller<UnrealSharp.CoreUObject.Object>.FromNative, GetSelectedAssets_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Object>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Blutility.EditorUtilityLibrary:GetSelectedAssetData
    static readonly IntPtr GetSelectedAssetData_NativeFunction;
    static readonly int GetSelectedAssetData_ParamsSize;
    static readonly int GetSelectedAssetData_ReturnValue_Offset;
    static readonly int GetSelectedAssetData_ReturnValue_ElementSize;
    
    public static System.Collections.Generic.IList<UnrealSharp.CoreUObject.AssetData> GetSelectedAssetData()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSelectedAssetData_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetSelectedAssetData_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.CoreUObject.AssetData> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, GetSelectedAssetData_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.AssetData> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.AssetData> (1, UnrealSharp.CoreUObject.AssetDataMarshaler.ToNative, UnrealSharp.CoreUObject.AssetDataMarshaler.FromNative, GetSelectedAssetData_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.AssetData>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Blutility.EditorUtilityLibrary:GetCurrentContentBrowserPath
    static readonly IntPtr GetCurrentContentBrowserPath_NativeFunction;
    static readonly int GetCurrentContentBrowserPath_ParamsSize;
    static readonly int GetCurrentContentBrowserPath_OutPath_Offset;
    static readonly int GetCurrentContentBrowserPath_ReturnValue_Offset;
    
    public static bool GetCurrentContentBrowserPath(out string outPath)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCurrentContentBrowserPath_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetCurrentContentBrowserPath_NativeFunction, ParamsBuffer);
            
            IntPtr OutPath_NativePtr = IntPtr.Add(ParamsBuffer,GetCurrentContentBrowserPath_OutPath_Offset);
            outPath = StringMarshaller.FromNative(OutPath_NativePtr,0,null);
            StringMarshaller.DestructInstance(OutPath_NativePtr, 0);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCurrentContentBrowserPath_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Blutility.EditorUtilityLibrary:GetCurrentContentBrowserItemPath
    static readonly IntPtr GetCurrentContentBrowserItemPath_NativeFunction;
    static readonly int GetCurrentContentBrowserItemPath_ParamsSize;
    static readonly int GetCurrentContentBrowserItemPath_ReturnValue_Offset;
    
    public static UnrealSharp.ContentBrowserData.ContentBrowserItemPath GetCurrentContentBrowserItemPath()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCurrentContentBrowserItemPath_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetCurrentContentBrowserItemPath_NativeFunction, ParamsBuffer);
            
            UnrealSharp.ContentBrowserData.ContentBrowserItemPath returnValue;
            returnValue = UnrealSharp.ContentBrowserData.ContentBrowserItemPathMarshaler.FromNative(IntPtr.Add(ParamsBuffer, GetCurrentContentBrowserItemPath_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Blutility.EditorUtilityLibrary:GetActorReference
    static readonly IntPtr GetActorReference_NativeFunction;
    static readonly int GetActorReference_ParamsSize;
    static readonly int GetActorReference_PathToActor_Offset;
    static readonly int GetActorReference_ReturnValue_Offset;
    
    public UnrealSharp.Engine.Actor GetActorReference(string pathToActor)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetActorReference_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr PathToActor_NativePtr = IntPtr.Add(ParamsBuffer,GetActorReference_PathToActor_Offset);
            StringMarshaller.ToNative(PathToActor_NativePtr,0,null,pathToActor);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetActorReference_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.Actor returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.Actor>.FromNative(IntPtr.Add(ParamsBuffer, GetActorReference_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(PathToActor_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Blutility.EditorUtilityLibrary:ConvertToEditorUtilityWidget
    static readonly IntPtr ConvertToEditorUtilityWidget_NativeFunction;
    static readonly int ConvertToEditorUtilityWidget_ParamsSize;
    static readonly int ConvertToEditorUtilityWidget_WidgetBP_Offset;
    
    public static void ConvertToEditorUtilityWidget(UnrealSharp.UMGEditor.WidgetBlueprint widgetBP)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ConvertToEditorUtilityWidget_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.UMGEditor.WidgetBlueprint>.ToNative(IntPtr.Add(ParamsBuffer, ConvertToEditorUtilityWidget_WidgetBP_Offset), 0, null, widgetBP);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ConvertToEditorUtilityWidget_NativeFunction, ParamsBuffer);
            
        }
    }
    
    
}
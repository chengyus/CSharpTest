// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Blutility;

[UClass]
abstract public partial class EditorUtilityWidget : UnrealSharp.UMG.UserWidget
{
    
    static EditorUtilityWidget()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("EditorUtilityWidget");
        
        TabDisplayName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "TabDisplayName");
        TabDisplayName_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "TabDisplayName");
        HelpText_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "HelpText");
        HelpText_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "HelpText");
        bAutoRunDefaultAction_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bAutoRunDefaultAction");
        
        
        
    }
    
    protected EditorUtilityWidget(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // TextProperty /Script/Blutility.EditorUtilityWidget:TabDisplayName
    static readonly int TabDisplayName_Offset;
    static readonly IntPtr TabDisplayName_NativeProperty;
    TextMarshaller TabDisplayName_Wrapper;
    
    public Text TabDisplayName
    {
        get
        {
            if (TabDisplayName_Wrapper == null)
            {
                TabDisplayName_Wrapper  = new TextMarshaller(1);
            }
            return TabDisplayName_Wrapper.FromNative(this.NativeObject + TabDisplayName_Offset, 0, this);
        }
    }
    
    // StrProperty /Script/Blutility.EditorUtilityWidget:HelpText
    static readonly int HelpText_Offset;
    static readonly IntPtr HelpText_NativeProperty;
    
    public string HelpText
    {
        get
        {
            CheckObjectForValidity();
            return StringMarshaller.FromNative(IntPtr.Add(NativeObject,HelpText_Offset),0,this);
        }
        set
        {
            CheckObjectForValidity();
            StringMarshaller.ToNative(IntPtr.Add(NativeObject,HelpText_Offset),0,this,value);
        }
    }
    
    // BoolProperty /Script/Blutility.EditorUtilityWidget:bAutoRunDefaultAction
    static readonly int bAutoRunDefaultAction_Offset;
    
    public bool bAutoRunDefaultAction
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bAutoRunDefaultAction_Offset), 0, this);
        }
    }
    
    // Function /Script/Blutility.EditorUtilityWidget:Run
    IntPtr Run_NativeFunction;
    
    [UFunction(FunctionFlags.BlueprintEvent)]
    public virtual void Run()
    {
        unsafe
        {
            if (Run_NativeFunction == IntPtr.Zero)
            {
                Run_NativeFunction = UClassExporter.CallGetNativeFunctionFromInstanceAndName(NativeObject, "Run");
            }
            UObjectExporter.CallInvokeNativeFunction(NativeObject, Run_NativeFunction, IntPtr.Zero);
        }
    }
    
    //Hide implementation function from Intellisense/ReSharper
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    protected virtual void Run_Implementation()
    {
    }
    void Invoke_Run(IntPtr buffer, IntPtr returnBuffer)
    {
        unsafe
        {
            Run_Implementation();
        }
    }
    
    
}
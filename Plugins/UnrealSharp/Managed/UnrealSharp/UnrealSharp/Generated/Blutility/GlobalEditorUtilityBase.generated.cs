// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Blutility;

[UClass]
abstract public partial class GlobalEditorUtilityBase : UnrealSharp.CoreUObject.Object
{
    
    static GlobalEditorUtilityBase()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("GlobalEditorUtilityBase");
        
        HelpText_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "HelpText");
        HelpText_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "HelpText");
        bAutoRunDefaultAction_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bAutoRunDefaultAction");
        
        SetActorSelectionState_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetActorSelectionState");
        SetActorSelectionState_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetActorSelectionState_NativeFunction);
        SetActorSelectionState_Actor_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetActorSelectionState_NativeFunction, "Actor");
        SetActorSelectionState_bShouldBeSelected_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetActorSelectionState_NativeFunction, "bShouldBeSelected");
        SelectNothing_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SelectNothing");
        RenameAsset_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RenameAsset");
        RenameAsset_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RenameAsset_NativeFunction);
        RenameAsset_Asset_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameAsset_NativeFunction, "Asset");
        RenameAsset_NewName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameAsset_NativeFunction, "NewName");
        GetSelectionSet_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSelectionSet");
        GetSelectionSet_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSelectionSet_NativeFunction);
        GetSelectionSet_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSelectionSet_NativeFunction, "ReturnValue");
        GetSelectionSet_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetSelectionSet_NativeFunction, "ReturnValue");
        GetSelectionBounds_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSelectionBounds");
        GetSelectionBounds_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSelectionBounds_NativeFunction);
        GetSelectionBounds_Origin_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSelectionBounds_NativeFunction, "Origin");
        GetSelectionBounds_BoxExtent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSelectionBounds_NativeFunction, "BoxExtent");
        GetSelectionBounds_SphereRadius_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSelectionBounds_NativeFunction, "SphereRadius");
        GetSelectedAssets_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSelectedAssets");
        GetSelectedAssets_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSelectedAssets_NativeFunction);
        GetSelectedAssets_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSelectedAssets_NativeFunction, "ReturnValue");
        GetSelectedAssets_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetSelectedAssets_NativeFunction, "ReturnValue");
        GetEditorUserSettings_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetEditorUserSettings");
        GetEditorUserSettings_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetEditorUserSettings_NativeFunction);
        GetEditorUserSettings_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetEditorUserSettings_NativeFunction, "ReturnValue");
        GetActorReference_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetActorReference");
        GetActorReference_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetActorReference_NativeFunction);
        GetActorReference_PathToActor_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetActorReference_NativeFunction, "PathToActor");
        GetActorReference_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetActorReference_NativeFunction, "ReturnValue");
        ForEachSelectedAsset_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ForEachSelectedAsset");
        ForEachSelectedActor_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ForEachSelectedActor");
        ClearActorSelectionSet_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ClearActorSelectionSet");
        
        
    }
    
    protected GlobalEditorUtilityBase(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // StrProperty /Script/Blutility.GlobalEditorUtilityBase:HelpText
    static readonly int HelpText_Offset;
    static readonly IntPtr HelpText_NativeProperty;
    
    public string HelpText
    {
        get
        {
            CheckObjectForValidity();
            return StringMarshaller.FromNative(IntPtr.Add(NativeObject,HelpText_Offset),0,this);
        }
        set
        {
            CheckObjectForValidity();
            StringMarshaller.ToNative(IntPtr.Add(NativeObject,HelpText_Offset),0,this,value);
        }
    }
    
    // BoolProperty /Script/Blutility.GlobalEditorUtilityBase:bAutoRunDefaultAction
    static readonly int bAutoRunDefaultAction_Offset;
    
    public bool bAutoRunDefaultAction
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bAutoRunDefaultAction_Offset), 0, this);
        }
    }
    
    // Function /Script/Blutility.GlobalEditorUtilityBase:SetActorSelectionState
    static readonly IntPtr SetActorSelectionState_NativeFunction;
    static readonly int SetActorSelectionState_ParamsSize;
    static readonly int SetActorSelectionState_Actor_Offset;
    static readonly int SetActorSelectionState_bShouldBeSelected_Offset;
    
    public void SetActorSelectionState(UnrealSharp.Engine.Actor actor, bool bShouldBeSelected)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetActorSelectionState_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.Actor>.ToNative(IntPtr.Add(ParamsBuffer, SetActorSelectionState_Actor_Offset), 0, null, actor);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetActorSelectionState_bShouldBeSelected_Offset), 0, null, bShouldBeSelected);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetActorSelectionState_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Blutility.GlobalEditorUtilityBase:SelectNothing
    static readonly IntPtr SelectNothing_NativeFunction;
    
    public void SelectNothing()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SelectNothing_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/Blutility.GlobalEditorUtilityBase:RenameAsset
    static readonly IntPtr RenameAsset_NativeFunction;
    static readonly int RenameAsset_ParamsSize;
    static readonly int RenameAsset_Asset_Offset;
    static readonly int RenameAsset_NewName_Offset;
    
    public void RenameAsset(UnrealSharp.CoreUObject.Object asset, string newName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RenameAsset_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, RenameAsset_Asset_Offset), 0, null, asset);
            IntPtr NewName_NativePtr = IntPtr.Add(ParamsBuffer,RenameAsset_NewName_Offset);
            StringMarshaller.ToNative(NewName_NativePtr,0,null,newName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RenameAsset_NativeFunction, ParamsBuffer);
            
            StringMarshaller.DestructInstance(NewName_NativePtr, 0);
        }
    }
    
    // Function /Script/Blutility.GlobalEditorUtilityBase:GetSelectionSet
    static readonly IntPtr GetSelectionSet_NativeFunction;
    static readonly int GetSelectionSet_ParamsSize;
    static readonly int GetSelectionSet_ReturnValue_Offset;
    static readonly int GetSelectionSet_ReturnValue_ElementSize;
    
    public System.Collections.Generic.IList<UnrealSharp.Engine.Actor> GetSelectionSet()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSelectionSet_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSelectionSet_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.Engine.Actor> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, GetSelectionSet_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor> (1, ObjectMarshaller<UnrealSharp.Engine.Actor>.ToNative, ObjectMarshaller<UnrealSharp.Engine.Actor>.FromNative, GetSelectionSet_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Blutility.GlobalEditorUtilityBase:GetSelectionBounds
    static readonly IntPtr GetSelectionBounds_NativeFunction;
    static readonly int GetSelectionBounds_ParamsSize;
    static readonly int GetSelectionBounds_Origin_Offset;
    static readonly int GetSelectionBounds_BoxExtent_Offset;
    static readonly int GetSelectionBounds_SphereRadius_Offset;
    
    public void GetSelectionBounds(out System.DoubleNumerics.Vector3 origin, out System.DoubleNumerics.Vector3 boxExtent, out float sphereRadius)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSelectionBounds_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSelectionBounds_NativeFunction, ParamsBuffer);
            
            origin = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, GetSelectionBounds_Origin_Offset), 0, null);
            boxExtent = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, GetSelectionBounds_BoxExtent_Offset), 0, null);
            sphereRadius = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetSelectionBounds_SphereRadius_Offset), 0, null);
            
        }
    }
    
    // Function /Script/Blutility.GlobalEditorUtilityBase:GetSelectedAssets
    static readonly IntPtr GetSelectedAssets_NativeFunction;
    static readonly int GetSelectedAssets_ParamsSize;
    static readonly int GetSelectedAssets_ReturnValue_Offset;
    static readonly int GetSelectedAssets_ReturnValue_ElementSize;
    
    public System.Collections.Generic.IList<UnrealSharp.CoreUObject.Object> GetSelectedAssets()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSelectedAssets_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSelectedAssets_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.CoreUObject.Object> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, GetSelectedAssets_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Object> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Object> (1, ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative, ObjectMarshaller<UnrealSharp.CoreUObject.Object>.FromNative, GetSelectedAssets_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Object>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Blutility.GlobalEditorUtilityBase:GetEditorUserSettings
    static readonly IntPtr GetEditorUserSettings_NativeFunction;
    static readonly int GetEditorUserSettings_ParamsSize;
    static readonly int GetEditorUserSettings_ReturnValue_Offset;
    
    public UnrealSharp.UnrealEd.EditorPerProjectUserSettings GetEditorUserSettings()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetEditorUserSettings_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetEditorUserSettings_NativeFunction, ParamsBuffer);
            
            UnrealSharp.UnrealEd.EditorPerProjectUserSettings returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.UnrealEd.EditorPerProjectUserSettings>.FromNative(IntPtr.Add(ParamsBuffer, GetEditorUserSettings_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Blutility.GlobalEditorUtilityBase:GetActorReference
    static readonly IntPtr GetActorReference_NativeFunction;
    static readonly int GetActorReference_ParamsSize;
    static readonly int GetActorReference_PathToActor_Offset;
    static readonly int GetActorReference_ReturnValue_Offset;
    
    public UnrealSharp.Engine.Actor GetActorReference(string pathToActor)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetActorReference_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr PathToActor_NativePtr = IntPtr.Add(ParamsBuffer,GetActorReference_PathToActor_Offset);
            StringMarshaller.ToNative(PathToActor_NativePtr,0,null,pathToActor);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetActorReference_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.Actor returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.Actor>.FromNative(IntPtr.Add(ParamsBuffer, GetActorReference_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(PathToActor_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Blutility.GlobalEditorUtilityBase:ForEachSelectedAsset
    static readonly IntPtr ForEachSelectedAsset_NativeFunction;
    
    public void ForEachSelectedAsset()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ForEachSelectedAsset_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/Blutility.GlobalEditorUtilityBase:ForEachSelectedActor
    static readonly IntPtr ForEachSelectedActor_NativeFunction;
    
    public void ForEachSelectedActor()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ForEachSelectedActor_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/Blutility.GlobalEditorUtilityBase:ClearActorSelectionSet
    static readonly IntPtr ClearActorSelectionSet_NativeFunction;
    
    public void ClearActorSelectionSet()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ClearActorSelectionSet_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/Blutility.GlobalEditorUtilityBase:OnDefaultActionClicked
    IntPtr OnDefaultActionClicked_NativeFunction;
    
    [UFunction(FunctionFlags.BlueprintEvent)]
    public virtual void OnDefaultActionClicked()
    {
        unsafe
        {
            if (OnDefaultActionClicked_NativeFunction == IntPtr.Zero)
            {
                OnDefaultActionClicked_NativeFunction = UClassExporter.CallGetNativeFunctionFromInstanceAndName(NativeObject, "OnDefaultActionClicked");
            }
            UObjectExporter.CallInvokeNativeFunction(NativeObject, OnDefaultActionClicked_NativeFunction, IntPtr.Zero);
        }
    }
    
    //Hide implementation function from Intellisense/ReSharper
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    protected virtual void OnDefaultActionClicked_Implementation()
    {
    }
    void Invoke_OnDefaultActionClicked(IntPtr buffer, IntPtr returnBuffer)
    {
        unsafe
        {
            OnDefaultActionClicked_Implementation();
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Blutility;

[UClass]
abstract public partial class PlacedEditorUtilityBase : UnrealSharp.Engine.Actor
{
    
    static PlacedEditorUtilityBase()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("PlacedEditorUtilityBase");
        
        HelpText_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "HelpText");
        HelpText_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "HelpText");
        
        SetLevelViewportCameraInfo_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetLevelViewportCameraInfo");
        SetLevelViewportCameraInfo_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetLevelViewportCameraInfo_NativeFunction);
        SetLevelViewportCameraInfo_CameraLocation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLevelViewportCameraInfo_NativeFunction, "CameraLocation");
        SetLevelViewportCameraInfo_CameraRotation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLevelViewportCameraInfo_NativeFunction, "CameraRotation");
        SetActorSelectionState_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetActorSelectionState");
        SetActorSelectionState_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetActorSelectionState_NativeFunction);
        SetActorSelectionState_Actor_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetActorSelectionState_NativeFunction, "Actor");
        SetActorSelectionState_bShouldBeSelected_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetActorSelectionState_NativeFunction, "bShouldBeSelected");
        SelectNothing_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SelectNothing");
        GetSelectionSet_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSelectionSet");
        GetSelectionSet_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSelectionSet_NativeFunction);
        GetSelectionSet_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSelectionSet_NativeFunction, "ReturnValue");
        GetSelectionSet_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetSelectionSet_NativeFunction, "ReturnValue");
        GetLevelViewportCameraInfo_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetLevelViewportCameraInfo");
        GetLevelViewportCameraInfo_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetLevelViewportCameraInfo_NativeFunction);
        GetLevelViewportCameraInfo_CameraLocation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLevelViewportCameraInfo_NativeFunction, "CameraLocation");
        GetLevelViewportCameraInfo_CameraRotation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLevelViewportCameraInfo_NativeFunction, "CameraRotation");
        GetLevelViewportCameraInfo_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLevelViewportCameraInfo_NativeFunction, "ReturnValue");
        GetActorReference_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetActorReference");
        GetActorReference_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetActorReference_NativeFunction);
        GetActorReference_PathToActor_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetActorReference_NativeFunction, "PathToActor");
        GetActorReference_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetActorReference_NativeFunction, "ReturnValue");
        ClearActorSelectionSet_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ClearActorSelectionSet");
        
        
    }
    
    protected PlacedEditorUtilityBase(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // StrProperty /Script/Blutility.PlacedEditorUtilityBase:HelpText
    static readonly int HelpText_Offset;
    static readonly IntPtr HelpText_NativeProperty;
    
    public string HelpText
    {
        get
        {
            CheckObjectForValidity();
            return StringMarshaller.FromNative(IntPtr.Add(NativeObject,HelpText_Offset),0,this);
        }
        set
        {
            CheckObjectForValidity();
            StringMarshaller.ToNative(IntPtr.Add(NativeObject,HelpText_Offset),0,this,value);
        }
    }
    
    // Function /Script/Blutility.PlacedEditorUtilityBase:SetLevelViewportCameraInfo
    static readonly IntPtr SetLevelViewportCameraInfo_NativeFunction;
    static readonly int SetLevelViewportCameraInfo_ParamsSize;
    static readonly int SetLevelViewportCameraInfo_CameraLocation_Offset;
    static readonly int SetLevelViewportCameraInfo_CameraRotation_Offset;
    
    public void SetLevelViewportCameraInfo(System.DoubleNumerics.Vector3 cameraLocation, UnrealSharp.Rotator cameraRotation)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetLevelViewportCameraInfo_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, SetLevelViewportCameraInfo_CameraLocation_Offset), 0, null, cameraLocation);
            BlittableMarshaller<UnrealSharp.Rotator>.ToNative(IntPtr.Add(ParamsBuffer, SetLevelViewportCameraInfo_CameraRotation_Offset), 0, null, cameraRotation);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetLevelViewportCameraInfo_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Blutility.PlacedEditorUtilityBase:SetActorSelectionState
    static readonly IntPtr SetActorSelectionState_NativeFunction;
    static readonly int SetActorSelectionState_ParamsSize;
    static readonly int SetActorSelectionState_Actor_Offset;
    static readonly int SetActorSelectionState_bShouldBeSelected_Offset;
    
    public void SetActorSelectionState(UnrealSharp.Engine.Actor actor, bool bShouldBeSelected)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetActorSelectionState_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.Actor>.ToNative(IntPtr.Add(ParamsBuffer, SetActorSelectionState_Actor_Offset), 0, null, actor);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetActorSelectionState_bShouldBeSelected_Offset), 0, null, bShouldBeSelected);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetActorSelectionState_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Blutility.PlacedEditorUtilityBase:SelectNothing
    static readonly IntPtr SelectNothing_NativeFunction;
    
    public void SelectNothing()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SelectNothing_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/Blutility.PlacedEditorUtilityBase:GetSelectionSet
    static readonly IntPtr GetSelectionSet_NativeFunction;
    static readonly int GetSelectionSet_ParamsSize;
    static readonly int GetSelectionSet_ReturnValue_Offset;
    static readonly int GetSelectionSet_ReturnValue_ElementSize;
    
    public System.Collections.Generic.IList<UnrealSharp.Engine.Actor> GetSelectionSet()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSelectionSet_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSelectionSet_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.Engine.Actor> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, GetSelectionSet_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor> (1, ObjectMarshaller<UnrealSharp.Engine.Actor>.ToNative, ObjectMarshaller<UnrealSharp.Engine.Actor>.FromNative, GetSelectionSet_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Blutility.PlacedEditorUtilityBase:GetLevelViewportCameraInfo
    static readonly IntPtr GetLevelViewportCameraInfo_NativeFunction;
    static readonly int GetLevelViewportCameraInfo_ParamsSize;
    static readonly int GetLevelViewportCameraInfo_CameraLocation_Offset;
    static readonly int GetLevelViewportCameraInfo_CameraRotation_Offset;
    static readonly int GetLevelViewportCameraInfo_ReturnValue_Offset;
    
    public bool GetLevelViewportCameraInfo(out System.DoubleNumerics.Vector3 cameraLocation, out UnrealSharp.Rotator cameraRotation)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetLevelViewportCameraInfo_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetLevelViewportCameraInfo_NativeFunction, ParamsBuffer);
            
            cameraLocation = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, GetLevelViewportCameraInfo_CameraLocation_Offset), 0, null);
            cameraRotation = BlittableMarshaller<UnrealSharp.Rotator>.FromNative(IntPtr.Add(ParamsBuffer, GetLevelViewportCameraInfo_CameraRotation_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetLevelViewportCameraInfo_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Blutility.PlacedEditorUtilityBase:GetActorReference
    static readonly IntPtr GetActorReference_NativeFunction;
    static readonly int GetActorReference_ParamsSize;
    static readonly int GetActorReference_PathToActor_Offset;
    static readonly int GetActorReference_ReturnValue_Offset;
    
    public UnrealSharp.Engine.Actor GetActorReference(string pathToActor)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetActorReference_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr PathToActor_NativePtr = IntPtr.Add(ParamsBuffer,GetActorReference_PathToActor_Offset);
            StringMarshaller.ToNative(PathToActor_NativePtr,0,null,pathToActor);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetActorReference_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.Actor returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.Actor>.FromNative(IntPtr.Add(ParamsBuffer, GetActorReference_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(PathToActor_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Blutility.PlacedEditorUtilityBase:ClearActorSelectionSet
    static readonly IntPtr ClearActorSelectionSet_NativeFunction;
    
    public void ClearActorSelectionSet()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ClearActorSelectionSet_NativeFunction, IntPtr.Zero);
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.ChaosCachingEditor;

[UClass]
public partial class TakeRecorderChaosCacheSource : UnrealSharp.TakesCore.TakeRecorderSource
{
    
    static TakeRecorderChaosCacheSource()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("TakeRecorderChaosCacheSource");
        
        ChaosCacheManager_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ChaosCacheManager");
        
        
        
    }
    
    protected TakeRecorderChaosCacheSource(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // SoftObjectProperty /Script/ChaosCachingEditor.TakeRecorderChaosCacheSource:ChaosCacheManager
    static readonly int ChaosCacheManager_Offset;
    
    public SoftObject<UnrealSharp.ChaosCaching.ChaosCacheManager> ChaosCacheManager
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<SoftObject<UnrealSharp.ChaosCaching.ChaosCacheManager>>.FromNative(IntPtr.Add(NativeObject, ChaosCacheManager_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<SoftObject<UnrealSharp.ChaosCaching.ChaosCacheManager>>.ToNative(IntPtr.Add(NativeObject, ChaosCacheManager_Offset), 0, this, value);
        }
    }
    
    
}
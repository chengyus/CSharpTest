// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.ChaosSolverEngine;

[UClass]
public partial class ChaosSolverActor : UnrealSharp.Engine.Actor
{
    
    static ChaosSolverActor()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("ChaosSolverActor");
        
        
        SetSolverActive_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSolverActive");
        SetSolverActive_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSolverActive_NativeFunction);
        SetSolverActive_bActive_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSolverActive_NativeFunction, "bActive");
        SetAsCurrentWorldSolver_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAsCurrentWorldSolver");
        
        
    }
    
    protected ChaosSolverActor(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/ChaosSolverEngine.ChaosSolverActor:SetSolverActive
    static readonly IntPtr SetSolverActive_NativeFunction;
    static readonly int SetSolverActive_ParamsSize;
    static readonly int SetSolverActive_bActive_Offset;
    
    public void SetSolverActive(bool bActive)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSolverActive_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetSolverActive_bActive_Offset), 0, null, bActive);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSolverActive_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/ChaosSolverEngine.ChaosSolverActor:SetAsCurrentWorldSolver
    static readonly IntPtr SetAsCurrentWorldSolver_NativeFunction;
    
    public void SetAsCurrentWorldSolver()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAsCurrentWorldSolver_NativeFunction, IntPtr.Zero);
        }
    }
    
    
}
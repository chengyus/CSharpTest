// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Constraints;

[UClass]
abstract public partial class TickableConstraint : UnrealSharp.CoreUObject.Object
{
    
    static TickableConstraint()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("TickableConstraint");
        
        Active_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Active");
        
        
        
    }
    
    protected TickableConstraint(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // BoolProperty /Script/Constraints.TickableConstraint:Active
    static readonly int Active_Offset;
    
    public bool Active
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, Active_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, Active_Offset), 0, this, value);
        }
    }
    
    
}
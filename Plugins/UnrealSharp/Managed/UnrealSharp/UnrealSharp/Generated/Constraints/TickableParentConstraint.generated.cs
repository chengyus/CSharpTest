// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Constraints;

[UClass]
public partial class TickableParentConstraint : UnrealSharp.Constraints.TickableTransformConstraint
{
    
    static TickableParentConstraint()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("TickableParentConstraint");
        
        OffsetTransform_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "OffsetTransform");
        bScaling_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bScaling");
        TransformFilter_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "TransformFilter");
        
        
        
    }
    
    protected TickableParentConstraint(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // StructProperty /Script/Constraints.TickableParentConstraint:OffsetTransform
    static readonly int OffsetTransform_Offset;
    
    public UnrealSharp.Transform OffsetTransform
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Transform>.FromNative(IntPtr.Add(NativeObject, OffsetTransform_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.Transform>.ToNative(IntPtr.Add(NativeObject, OffsetTransform_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/Constraints.TickableParentConstraint:bScaling
    static readonly int bScaling_Offset;
    
    public bool bScaling
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bScaling_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, bScaling_Offset), 0, this, value);
        }
    }
    
    // StructProperty /Script/Constraints.TickableParentConstraint:TransformFilter
    static readonly int TransformFilter_Offset;
    
    public UnrealSharp.AnimationCore.TransformFilter TransformFilter
    {
        get
        {
            CheckObjectForValidity();
            return UnrealSharp.AnimationCore.TransformFilterMarshaler.FromNative(IntPtr.Add(NativeObject, TransformFilter_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            UnrealSharp.AnimationCore.TransformFilterMarshaler.ToNative(IntPtr.Add(NativeObject, TransformFilter_Offset), 0, this, value);
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.ContentBrowserData;

[UClass]
public partial class ContentBrowserItemLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static ContentBrowserItemLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("ContentBrowserItemLibrary");
        
        
        IsFolder_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsFolder");
        IsFolder_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsFolder_NativeFunction);
        IsFolder_Item_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsFolder_NativeFunction, "Item");
        IsFolder_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsFolder_NativeFunction, "ReturnValue");
        IsFile_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsFile");
        IsFile_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsFile_NativeFunction);
        IsFile_Item_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsFile_NativeFunction, "Item");
        IsFile_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsFile_NativeFunction, "ReturnValue");
        GetVirtualPath_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetVirtualPath");
        GetVirtualPath_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetVirtualPath_NativeFunction);
        GetVirtualPath_Item_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetVirtualPath_NativeFunction, "Item");
        GetVirtualPath_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetVirtualPath_NativeFunction, "ReturnValue");
        
        
    }
    
    protected ContentBrowserItemLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/ContentBrowserData.ContentBrowserItemLibrary:IsFolder
    static readonly IntPtr IsFolder_NativeFunction;
    static readonly int IsFolder_ParamsSize;
    static readonly int IsFolder_Item_Offset;
    static readonly int IsFolder_ReturnValue_Offset;
    
    public static bool IsFolder(UnrealSharp.ContentBrowserData.ContentBrowserItem item)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsFolder_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.ContentBrowserData.ContentBrowserItemMarshaler.ToNative(IntPtr.Add(ParamsBuffer, IsFolder_Item_Offset), 0, null, item);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, IsFolder_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsFolder_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/ContentBrowserData.ContentBrowserItemLibrary:IsFile
    static readonly IntPtr IsFile_NativeFunction;
    static readonly int IsFile_ParamsSize;
    static readonly int IsFile_Item_Offset;
    static readonly int IsFile_ReturnValue_Offset;
    
    public static bool IsFile(UnrealSharp.ContentBrowserData.ContentBrowserItem item)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsFile_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.ContentBrowserData.ContentBrowserItemMarshaler.ToNative(IntPtr.Add(ParamsBuffer, IsFile_Item_Offset), 0, null, item);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, IsFile_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsFile_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/ContentBrowserData.ContentBrowserItemLibrary:GetVirtualPath
    static readonly IntPtr GetVirtualPath_NativeFunction;
    static readonly int GetVirtualPath_ParamsSize;
    static readonly int GetVirtualPath_Item_Offset;
    static readonly int GetVirtualPath_ReturnValue_Offset;
    
    public static Name GetVirtualPath(UnrealSharp.ContentBrowserData.ContentBrowserItem item)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetVirtualPath_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.ContentBrowserData.ContentBrowserItemMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetVirtualPath_Item_Offset), 0, null, item);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetVirtualPath_NativeFunction, ParamsBuffer);
            
            Name returnValue;
            returnValue = BlittableMarshaller<Name>.FromNative(IntPtr.Add(ParamsBuffer, GetVirtualPath_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
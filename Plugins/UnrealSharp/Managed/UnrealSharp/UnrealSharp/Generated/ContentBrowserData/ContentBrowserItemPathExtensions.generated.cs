// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.ContentBrowserData;

[UClass]
public partial class ContentBrowserItemPathExtensions : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static ContentBrowserItemPathExtensions()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("ContentBrowserItemPathExtensions");
        
        
        SetPath_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPath");
        SetPath_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPath_NativeFunction);
        SetPath_ItemPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPath_NativeFunction, "ItemPath");
        SetPath_InPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPath_NativeFunction, "InPath");
        SetPath_InPathType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPath_NativeFunction, "InPathType");
        GetVirtualPath_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetVirtualPath");
        GetVirtualPath_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetVirtualPath_NativeFunction);
        GetVirtualPath_ItemPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetVirtualPath_NativeFunction, "ItemPath");
        GetVirtualPath_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetVirtualPath_NativeFunction, "ReturnValue");
        GetInternalPath_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetInternalPath");
        GetInternalPath_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetInternalPath_NativeFunction);
        GetInternalPath_ItemPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetInternalPath_NativeFunction, "ItemPath");
        GetInternalPath_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetInternalPath_NativeFunction, "ReturnValue");
        
        
    }
    
    protected ContentBrowserItemPathExtensions(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/ContentBrowserData.ContentBrowserItemPathExtensions:SetPath
    static readonly IntPtr SetPath_NativeFunction;
    static readonly int SetPath_ParamsSize;
    static readonly int SetPath_ItemPath_Offset;
    static readonly int SetPath_InPath_Offset;
    static readonly int SetPath_InPathType_Offset;
    
    public static void SetPath(ref UnrealSharp.ContentBrowserData.ContentBrowserItemPath itemPath, Name inPath, UnrealSharp.ContentBrowserData.EContentBrowserPathType inPathType)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPath_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.ContentBrowserData.ContentBrowserItemPathMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetPath_ItemPath_Offset), 0, null, itemPath);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetPath_InPath_Offset), 0, null, inPath);
            BlittableMarshaller<UnrealSharp.ContentBrowserData.EContentBrowserPathType>.ToNative(IntPtr.Add(ParamsBuffer, SetPath_InPathType_Offset), 0, null, inPathType);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetPath_NativeFunction, ParamsBuffer);
            
            itemPath = UnrealSharp.ContentBrowserData.ContentBrowserItemPathMarshaler.FromNative(IntPtr.Add(ParamsBuffer, SetPath_ItemPath_Offset), 0, null);
            
        }
    }
    
    // Function /Script/ContentBrowserData.ContentBrowserItemPathExtensions:GetVirtualPath
    static readonly IntPtr GetVirtualPath_NativeFunction;
    static readonly int GetVirtualPath_ParamsSize;
    static readonly int GetVirtualPath_ItemPath_Offset;
    static readonly int GetVirtualPath_ReturnValue_Offset;
    
    public static Name GetVirtualPath(UnrealSharp.ContentBrowserData.ContentBrowserItemPath itemPath)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetVirtualPath_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.ContentBrowserData.ContentBrowserItemPathMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetVirtualPath_ItemPath_Offset), 0, null, itemPath);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetVirtualPath_NativeFunction, ParamsBuffer);
            
            Name returnValue;
            returnValue = BlittableMarshaller<Name>.FromNative(IntPtr.Add(ParamsBuffer, GetVirtualPath_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/ContentBrowserData.ContentBrowserItemPathExtensions:GetInternalPath
    static readonly IntPtr GetInternalPath_NativeFunction;
    static readonly int GetInternalPath_ParamsSize;
    static readonly int GetInternalPath_ItemPath_Offset;
    static readonly int GetInternalPath_ReturnValue_Offset;
    
    public static Name GetInternalPath(UnrealSharp.ContentBrowserData.ContentBrowserItemPath itemPath)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetInternalPath_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.ContentBrowserData.ContentBrowserItemPathMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetInternalPath_ItemPath_Offset), 0, null, itemPath);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetInternalPath_NativeFunction, ParamsBuffer);
            
            Name returnValue;
            returnValue = BlittableMarshaller<Name>.FromNative(IntPtr.Add(ParamsBuffer, GetInternalPath_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
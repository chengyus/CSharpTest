// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.ControlRig;

[UClass]
public partial class RigHierarchyController : UnrealSharp.CoreUObject.Object
{
    
    static RigHierarchyController()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("RigHierarchyController");
        
        
        SetSelection_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSelection");
        SetSelection_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSelection_NativeFunction);
        SetSelection_InKeys_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSelection_NativeFunction, "InKeys");
        SetSelection_InKeys_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(SetSelection_NativeFunction, "InKeys");
        SetSelection_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSelection_NativeFunction, "bPrintPythonCommand");
        SetSelection_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSelection_NativeFunction, "ReturnValue");
        SetParent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetParent");
        SetParent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetParent_NativeFunction);
        SetParent_InChild_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParent_NativeFunction, "InChild");
        SetParent_InParent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParent_NativeFunction, "InParent");
        SetParent_bMaintainGlobalTransform_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParent_NativeFunction, "bMaintainGlobalTransform");
        SetParent_bSetupUndo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParent_NativeFunction, "bSetupUndo");
        SetParent_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParent_NativeFunction, "bPrintPythonCommand");
        SetParent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParent_NativeFunction, "ReturnValue");
        SetHierarchy_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetHierarchy");
        SetHierarchy_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetHierarchy_NativeFunction);
        SetHierarchy_InHierarchy_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetHierarchy_NativeFunction, "InHierarchy");
        SetDisplayName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetDisplayName");
        SetDisplayName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetDisplayName_NativeFunction);
        SetDisplayName_InControl_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetDisplayName_NativeFunction, "InControl");
        SetDisplayName_InDisplayName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetDisplayName_NativeFunction, "InDisplayName");
        SetDisplayName_bRenameElement_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetDisplayName_NativeFunction, "bRenameElement");
        SetDisplayName_bSetupUndo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetDisplayName_NativeFunction, "bSetupUndo");
        SetDisplayName_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetDisplayName_NativeFunction, "bPrintPythonCommand");
        SetDisplayName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetDisplayName_NativeFunction, "ReturnValue");
        SetControlSettings_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetControlSettings");
        SetControlSettings_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetControlSettings_NativeFunction);
        SetControlSettings_InKey_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetControlSettings_NativeFunction, "InKey");
        SetControlSettings_InSettings_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetControlSettings_NativeFunction, "InSettings");
        SetControlSettings_bSetupUndo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetControlSettings_NativeFunction, "bSetupUndo");
        SetControlSettings_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetControlSettings_NativeFunction, "ReturnValue");
        SelectElement_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SelectElement");
        SelectElement_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SelectElement_NativeFunction);
        SelectElement_InKey_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SelectElement_NativeFunction, "InKey");
        SelectElement_bSelect_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SelectElement_NativeFunction, "bSelect");
        SelectElement_bClearSelection_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SelectElement_NativeFunction, "bClearSelection");
        SelectElement_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SelectElement_NativeFunction, "ReturnValue");
        ReorderElement_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ReorderElement");
        ReorderElement_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ReorderElement_NativeFunction);
        ReorderElement_InElement_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReorderElement_NativeFunction, "InElement");
        ReorderElement_InIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReorderElement_NativeFunction, "InIndex");
        ReorderElement_bSetupUndo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReorderElement_NativeFunction, "bSetupUndo");
        ReorderElement_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReorderElement_NativeFunction, "bPrintPythonCommand");
        ReorderElement_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReorderElement_NativeFunction, "ReturnValue");
        RenameElement_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RenameElement");
        RenameElement_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RenameElement_NativeFunction);
        RenameElement_InElement_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameElement_NativeFunction, "InElement");
        RenameElement_InName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameElement_NativeFunction, "InName");
        RenameElement_bSetupUndo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameElement_NativeFunction, "bSetupUndo");
        RenameElement_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameElement_NativeFunction, "bPrintPythonCommand");
        RenameElement_bClearSelection_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameElement_NativeFunction, "bClearSelection");
        RenameElement_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameElement_NativeFunction, "ReturnValue");
        RemoveParent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveParent");
        RemoveParent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveParent_NativeFunction);
        RemoveParent_InChild_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveParent_NativeFunction, "InChild");
        RemoveParent_InParent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveParent_NativeFunction, "InParent");
        RemoveParent_bMaintainGlobalTransform_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveParent_NativeFunction, "bMaintainGlobalTransform");
        RemoveParent_bSetupUndo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveParent_NativeFunction, "bSetupUndo");
        RemoveParent_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveParent_NativeFunction, "bPrintPythonCommand");
        RemoveParent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveParent_NativeFunction, "ReturnValue");
        RemoveElement_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveElement");
        RemoveElement_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveElement_NativeFunction);
        RemoveElement_InElement_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveElement_NativeFunction, "InElement");
        RemoveElement_bSetupUndo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveElement_NativeFunction, "bSetupUndo");
        RemoveElement_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveElement_NativeFunction, "bPrintPythonCommand");
        RemoveElement_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveElement_NativeFunction, "ReturnValue");
        RemoveAllParents_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveAllParents");
        RemoveAllParents_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveAllParents_NativeFunction);
        RemoveAllParents_InChild_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveAllParents_NativeFunction, "InChild");
        RemoveAllParents_bMaintainGlobalTransform_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveAllParents_NativeFunction, "bMaintainGlobalTransform");
        RemoveAllParents_bSetupUndo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveAllParents_NativeFunction, "bSetupUndo");
        RemoveAllParents_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveAllParents_NativeFunction, "bPrintPythonCommand");
        RemoveAllParents_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveAllParents_NativeFunction, "ReturnValue");
        MirrorElements_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "MirrorElements");
        MirrorElements_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(MirrorElements_NativeFunction);
        MirrorElements_InKeys_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MirrorElements_NativeFunction, "InKeys");
        MirrorElements_InKeys_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(MirrorElements_NativeFunction, "InKeys");
        MirrorElements_InSettings_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MirrorElements_NativeFunction, "InSettings");
        MirrorElements_bSelectNewElements_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MirrorElements_NativeFunction, "bSelectNewElements");
        MirrorElements_bSetupUndo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MirrorElements_NativeFunction, "bSetupUndo");
        MirrorElements_bPrintPythonCommands_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MirrorElements_NativeFunction, "bPrintPythonCommands");
        MirrorElements_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MirrorElements_NativeFunction, "ReturnValue");
        MirrorElements_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(MirrorElements_NativeFunction, "ReturnValue");
        ImportFromText_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ImportFromText");
        ImportFromText_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ImportFromText_NativeFunction);
        ImportFromText_InContent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportFromText_NativeFunction, "InContent");
        ImportFromText_bReplaceExistingElements_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportFromText_NativeFunction, "bReplaceExistingElements");
        ImportFromText_bSelectNewElements_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportFromText_NativeFunction, "bSelectNewElements");
        ImportFromText_bSetupUndo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportFromText_NativeFunction, "bSetupUndo");
        ImportFromText_bPrintPythonCommands_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportFromText_NativeFunction, "bPrintPythonCommands");
        ImportFromText_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportFromText_NativeFunction, "ReturnValue");
        ImportFromText_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(ImportFromText_NativeFunction, "ReturnValue");
        ImportCurvesFromAsset_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ImportCurvesFromAsset");
        ImportCurvesFromAsset_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ImportCurvesFromAsset_NativeFunction);
        ImportCurvesFromAsset_InAssetPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportCurvesFromAsset_NativeFunction, "InAssetPath");
        ImportCurvesFromAsset_InNameSpace_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportCurvesFromAsset_NativeFunction, "InNameSpace");
        ImportCurvesFromAsset_bSelectCurves_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportCurvesFromAsset_NativeFunction, "bSelectCurves");
        ImportCurvesFromAsset_bSetupUndo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportCurvesFromAsset_NativeFunction, "bSetupUndo");
        ImportCurvesFromAsset_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportCurvesFromAsset_NativeFunction, "ReturnValue");
        ImportCurvesFromAsset_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(ImportCurvesFromAsset_NativeFunction, "ReturnValue");
        ImportCurves_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ImportCurves");
        ImportCurves_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ImportCurves_NativeFunction);
        ImportCurves_InSkeleton_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportCurves_NativeFunction, "InSkeleton");
        ImportCurves_InNameSpace_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportCurves_NativeFunction, "InNameSpace");
        ImportCurves_bSelectCurves_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportCurves_NativeFunction, "bSelectCurves");
        ImportCurves_bSetupUndo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportCurves_NativeFunction, "bSetupUndo");
        ImportCurves_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportCurves_NativeFunction, "bPrintPythonCommand");
        ImportCurves_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportCurves_NativeFunction, "ReturnValue");
        ImportCurves_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(ImportCurves_NativeFunction, "ReturnValue");
        ImportBonesFromAsset_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ImportBonesFromAsset");
        ImportBonesFromAsset_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ImportBonesFromAsset_NativeFunction);
        ImportBonesFromAsset_InAssetPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportBonesFromAsset_NativeFunction, "InAssetPath");
        ImportBonesFromAsset_InNameSpace_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportBonesFromAsset_NativeFunction, "InNameSpace");
        ImportBonesFromAsset_bReplaceExistingBones_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportBonesFromAsset_NativeFunction, "bReplaceExistingBones");
        ImportBonesFromAsset_bRemoveObsoleteBones_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportBonesFromAsset_NativeFunction, "bRemoveObsoleteBones");
        ImportBonesFromAsset_bSelectBones_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportBonesFromAsset_NativeFunction, "bSelectBones");
        ImportBonesFromAsset_bSetupUndo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportBonesFromAsset_NativeFunction, "bSetupUndo");
        ImportBonesFromAsset_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportBonesFromAsset_NativeFunction, "ReturnValue");
        ImportBonesFromAsset_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(ImportBonesFromAsset_NativeFunction, "ReturnValue");
        ImportBones_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ImportBones");
        ImportBones_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ImportBones_NativeFunction);
        ImportBones_InSkeleton_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportBones_NativeFunction, "InSkeleton");
        ImportBones_InNameSpace_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportBones_NativeFunction, "InNameSpace");
        ImportBones_bReplaceExistingBones_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportBones_NativeFunction, "bReplaceExistingBones");
        ImportBones_bRemoveObsoleteBones_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportBones_NativeFunction, "bRemoveObsoleteBones");
        ImportBones_bSelectBones_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportBones_NativeFunction, "bSelectBones");
        ImportBones_bSetupUndo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportBones_NativeFunction, "bSetupUndo");
        ImportBones_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportBones_NativeFunction, "bPrintPythonCommand");
        ImportBones_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportBones_NativeFunction, "ReturnValue");
        ImportBones_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(ImportBones_NativeFunction, "ReturnValue");
        GetHierarchy_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetHierarchy");
        GetHierarchy_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetHierarchy_NativeFunction);
        GetHierarchy_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetHierarchy_NativeFunction, "ReturnValue");
        GetControlSettings_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetControlSettings");
        GetControlSettings_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetControlSettings_NativeFunction);
        GetControlSettings_InKey_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetControlSettings_NativeFunction, "InKey");
        GetControlSettings_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetControlSettings_NativeFunction, "ReturnValue");
        ExportToText_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ExportToText");
        ExportToText_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ExportToText_NativeFunction);
        ExportToText_InKeys_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ExportToText_NativeFunction, "InKeys");
        ExportToText_InKeys_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(ExportToText_NativeFunction, "InKeys");
        ExportToText_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ExportToText_NativeFunction, "ReturnValue");
        ExportSelectionToText_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ExportSelectionToText");
        ExportSelectionToText_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ExportSelectionToText_NativeFunction);
        ExportSelectionToText_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ExportSelectionToText_NativeFunction, "ReturnValue");
        DuplicateElements_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "DuplicateElements");
        DuplicateElements_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(DuplicateElements_NativeFunction);
        DuplicateElements_InKeys_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(DuplicateElements_NativeFunction, "InKeys");
        DuplicateElements_InKeys_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(DuplicateElements_NativeFunction, "InKeys");
        DuplicateElements_bSelectNewElements_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(DuplicateElements_NativeFunction, "bSelectNewElements");
        DuplicateElements_bSetupUndo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(DuplicateElements_NativeFunction, "bSetupUndo");
        DuplicateElements_bPrintPythonCommands_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(DuplicateElements_NativeFunction, "bPrintPythonCommands");
        DuplicateElements_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(DuplicateElements_NativeFunction, "ReturnValue");
        DuplicateElements_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(DuplicateElements_NativeFunction, "ReturnValue");
        DeselectElement_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "DeselectElement");
        DeselectElement_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(DeselectElement_NativeFunction);
        DeselectElement_InKey_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(DeselectElement_NativeFunction, "InKey");
        DeselectElement_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(DeselectElement_NativeFunction, "ReturnValue");
        ClearSelection_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ClearSelection");
        ClearSelection_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ClearSelection_NativeFunction);
        ClearSelection_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ClearSelection_NativeFunction, "ReturnValue");
        AddRigidBody_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddRigidBody");
        AddRigidBody_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddRigidBody_NativeFunction);
        AddRigidBody_InName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddRigidBody_NativeFunction, "InName");
        AddRigidBody_InParent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddRigidBody_NativeFunction, "InParent");
        AddRigidBody_InSettings_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddRigidBody_NativeFunction, "InSettings");
        AddRigidBody_InLocalTransform_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddRigidBody_NativeFunction, "InLocalTransform");
        AddRigidBody_bSetupUndo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddRigidBody_NativeFunction, "bSetupUndo");
        AddRigidBody_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddRigidBody_NativeFunction, "bPrintPythonCommand");
        AddRigidBody_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddRigidBody_NativeFunction, "ReturnValue");
        AddParent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddParent");
        AddParent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddParent_NativeFunction);
        AddParent_InChild_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddParent_NativeFunction, "InChild");
        AddParent_InParent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddParent_NativeFunction, "InParent");
        AddParent_InWeight_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddParent_NativeFunction, "InWeight");
        AddParent_bMaintainGlobalTransform_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddParent_NativeFunction, "bMaintainGlobalTransform");
        AddParent_bSetupUndo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddParent_NativeFunction, "bSetupUndo");
        AddParent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddParent_NativeFunction, "ReturnValue");
        AddNull_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddNull");
        AddNull_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddNull_NativeFunction);
        AddNull_InName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddNull_NativeFunction, "InName");
        AddNull_InParent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddNull_NativeFunction, "InParent");
        AddNull_InTransform_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddNull_NativeFunction, "InTransform");
        AddNull_bTransformInGlobal_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddNull_NativeFunction, "bTransformInGlobal");
        AddNull_bSetupUndo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddNull_NativeFunction, "bSetupUndo");
        AddNull_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddNull_NativeFunction, "bPrintPythonCommand");
        AddNull_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddNull_NativeFunction, "ReturnValue");
        AddCurve_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddCurve");
        AddCurve_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddCurve_NativeFunction);
        AddCurve_InName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddCurve_NativeFunction, "InName");
        AddCurve_InValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddCurve_NativeFunction, "InValue");
        AddCurve_bSetupUndo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddCurve_NativeFunction, "bSetupUndo");
        AddCurve_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddCurve_NativeFunction, "bPrintPythonCommand");
        AddCurve_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddCurve_NativeFunction, "ReturnValue");
        AddControl_ForBlueprint_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddControl_ForBlueprint");
        AddControl_ForBlueprint_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddControl_ForBlueprint_NativeFunction);
        AddControl_ForBlueprint_InName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddControl_ForBlueprint_NativeFunction, "InName");
        AddControl_ForBlueprint_InParent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddControl_ForBlueprint_NativeFunction, "InParent");
        AddControl_ForBlueprint_InSettings_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddControl_ForBlueprint_NativeFunction, "InSettings");
        AddControl_ForBlueprint_InValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddControl_ForBlueprint_NativeFunction, "InValue");
        AddControl_ForBlueprint_bSetupUndo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddControl_ForBlueprint_NativeFunction, "bSetupUndo");
        AddControl_ForBlueprint_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddControl_ForBlueprint_NativeFunction, "bPrintPythonCommand");
        AddControl_ForBlueprint_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddControl_ForBlueprint_NativeFunction, "ReturnValue");
        AddBone_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddBone");
        AddBone_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddBone_NativeFunction);
        AddBone_InName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddBone_NativeFunction, "InName");
        AddBone_InParent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddBone_NativeFunction, "InParent");
        AddBone_InTransform_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddBone_NativeFunction, "InTransform");
        AddBone_bTransformInGlobal_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddBone_NativeFunction, "bTransformInGlobal");
        AddBone_InBoneType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddBone_NativeFunction, "InBoneType");
        AddBone_bSetupUndo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddBone_NativeFunction, "bSetupUndo");
        AddBone_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddBone_NativeFunction, "bPrintPythonCommand");
        AddBone_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddBone_NativeFunction, "ReturnValue");
        AddAnimationChannel_ForBlueprint_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddAnimationChannel_ForBlueprint");
        AddAnimationChannel_ForBlueprint_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddAnimationChannel_ForBlueprint_NativeFunction);
        AddAnimationChannel_ForBlueprint_InName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddAnimationChannel_ForBlueprint_NativeFunction, "InName");
        AddAnimationChannel_ForBlueprint_InParentControl_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddAnimationChannel_ForBlueprint_NativeFunction, "InParentControl");
        AddAnimationChannel_ForBlueprint_InSettings_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddAnimationChannel_ForBlueprint_NativeFunction, "InSettings");
        AddAnimationChannel_ForBlueprint_bSetupUndo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddAnimationChannel_ForBlueprint_NativeFunction, "bSetupUndo");
        AddAnimationChannel_ForBlueprint_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddAnimationChannel_ForBlueprint_NativeFunction, "bPrintPythonCommand");
        AddAnimationChannel_ForBlueprint_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddAnimationChannel_ForBlueprint_NativeFunction, "ReturnValue");
        
        
    }
    
    protected RigHierarchyController(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/ControlRig.RigHierarchyController:SetSelection
    static readonly IntPtr SetSelection_NativeFunction;
    static readonly int SetSelection_ParamsSize;
    static readonly int SetSelection_InKeys_Offset;
    static readonly int SetSelection_InKeys_ElementSize;
    static readonly int SetSelection_bPrintPythonCommand_Offset;
    static readonly int SetSelection_ReturnValue_Offset;
    
    public bool SetSelection(System.Collections.Generic.IList<UnrealSharp.ControlRig.RigElementKey> inKeys, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSelection_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InKeys_NativeBuffer = IntPtr.Add(ParamsBuffer, SetSelection_InKeys_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey> InKeys_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey>(1, UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative, UnrealSharp.ControlRig.RigElementKeyMarshaler.FromNative, SetSelection_InKeys_ElementSize);
            InKeys_Marshaler.ToNative(InKeys_NativeBuffer, 0, null, inKeys);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetSelection_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSelection_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetSelection_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:SetParent
    static readonly IntPtr SetParent_NativeFunction;
    static readonly int SetParent_ParamsSize;
    static readonly int SetParent_InChild_Offset;
    static readonly int SetParent_InParent_Offset;
    static readonly int SetParent_bMaintainGlobalTransform_Offset;
    static readonly int SetParent_bSetupUndo_Offset;
    static readonly int SetParent_bPrintPythonCommand_Offset;
    static readonly int SetParent_ReturnValue_Offset;
    
    public bool SetParent(UnrealSharp.ControlRig.RigElementKey inChild, UnrealSharp.ControlRig.RigElementKey inParent, bool bMaintainGlobalTransform = true, bool bSetupUndo = false, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetParent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetParent_InChild_Offset), 0, null, inChild);
            UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetParent_InParent_Offset), 0, null, inParent);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetParent_bMaintainGlobalTransform_Offset), 0, null, bMaintainGlobalTransform);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetParent_bSetupUndo_Offset), 0, null, bSetupUndo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetParent_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetParent_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetParent_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:SetHierarchy
    static readonly IntPtr SetHierarchy_NativeFunction;
    static readonly int SetHierarchy_ParamsSize;
    static readonly int SetHierarchy_InHierarchy_Offset;
    
    public void SetHierarchy(UnrealSharp.ControlRig.RigHierarchy inHierarchy)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetHierarchy_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.ControlRig.RigHierarchy>.ToNative(IntPtr.Add(ParamsBuffer, SetHierarchy_InHierarchy_Offset), 0, null, inHierarchy);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetHierarchy_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:SetDisplayName
    static readonly IntPtr SetDisplayName_NativeFunction;
    static readonly int SetDisplayName_ParamsSize;
    static readonly int SetDisplayName_InControl_Offset;
    static readonly int SetDisplayName_InDisplayName_Offset;
    static readonly int SetDisplayName_bRenameElement_Offset;
    static readonly int SetDisplayName_bSetupUndo_Offset;
    static readonly int SetDisplayName_bPrintPythonCommand_Offset;
    static readonly int SetDisplayName_ReturnValue_Offset;
    
    public Name SetDisplayName(UnrealSharp.ControlRig.RigElementKey inControl, Name inDisplayName, bool bRenameElement = false, bool bSetupUndo = false, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetDisplayName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetDisplayName_InControl_Offset), 0, null, inControl);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetDisplayName_InDisplayName_Offset), 0, null, inDisplayName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetDisplayName_bRenameElement_Offset), 0, null, bRenameElement);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetDisplayName_bSetupUndo_Offset), 0, null, bSetupUndo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetDisplayName_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetDisplayName_NativeFunction, ParamsBuffer);
            
            Name returnValue;
            returnValue = BlittableMarshaller<Name>.FromNative(IntPtr.Add(ParamsBuffer, SetDisplayName_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:SetControlSettings
    static readonly IntPtr SetControlSettings_NativeFunction;
    static readonly int SetControlSettings_ParamsSize;
    static readonly int SetControlSettings_InKey_Offset;
    static readonly int SetControlSettings_InSettings_Offset;
    static readonly int SetControlSettings_bSetupUndo_Offset;
    static readonly int SetControlSettings_ReturnValue_Offset;
    
    public bool SetControlSettings(UnrealSharp.ControlRig.RigElementKey inKey, UnrealSharp.ControlRig.RigControlSettings inSettings, bool bSetupUndo = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetControlSettings_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetControlSettings_InKey_Offset), 0, null, inKey);
            UnrealSharp.ControlRig.RigControlSettingsMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetControlSettings_InSettings_Offset), 0, null, inSettings);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetControlSettings_bSetupUndo_Offset), 0, null, bSetupUndo);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetControlSettings_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetControlSettings_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:SelectElement
    static readonly IntPtr SelectElement_NativeFunction;
    static readonly int SelectElement_ParamsSize;
    static readonly int SelectElement_InKey_Offset;
    static readonly int SelectElement_bSelect_Offset;
    static readonly int SelectElement_bClearSelection_Offset;
    static readonly int SelectElement_ReturnValue_Offset;
    
    public bool SelectElement(UnrealSharp.ControlRig.RigElementKey inKey, bool bSelect = true, bool bClearSelection = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SelectElement_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SelectElement_InKey_Offset), 0, null, inKey);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SelectElement_bSelect_Offset), 0, null, bSelect);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SelectElement_bClearSelection_Offset), 0, null, bClearSelection);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SelectElement_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SelectElement_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:ReorderElement
    static readonly IntPtr ReorderElement_NativeFunction;
    static readonly int ReorderElement_ParamsSize;
    static readonly int ReorderElement_InElement_Offset;
    static readonly int ReorderElement_InIndex_Offset;
    static readonly int ReorderElement_bSetupUndo_Offset;
    static readonly int ReorderElement_bPrintPythonCommand_Offset;
    static readonly int ReorderElement_ReturnValue_Offset;
    
    public bool ReorderElement(UnrealSharp.ControlRig.RigElementKey inElement, int inIndex, bool bSetupUndo = false, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ReorderElement_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, ReorderElement_InElement_Offset), 0, null, inElement);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, ReorderElement_InIndex_Offset), 0, null, inIndex);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ReorderElement_bSetupUndo_Offset), 0, null, bSetupUndo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ReorderElement_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ReorderElement_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, ReorderElement_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:RenameElement
    static readonly IntPtr RenameElement_NativeFunction;
    static readonly int RenameElement_ParamsSize;
    static readonly int RenameElement_InElement_Offset;
    static readonly int RenameElement_InName_Offset;
    static readonly int RenameElement_bSetupUndo_Offset;
    static readonly int RenameElement_bPrintPythonCommand_Offset;
    static readonly int RenameElement_bClearSelection_Offset;
    static readonly int RenameElement_ReturnValue_Offset;
    
    public UnrealSharp.ControlRig.RigElementKey RenameElement(UnrealSharp.ControlRig.RigElementKey inElement, Name inName, bool bSetupUndo = false, bool bPrintPythonCommand = false, bool bClearSelection = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RenameElement_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, RenameElement_InElement_Offset), 0, null, inElement);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, RenameElement_InName_Offset), 0, null, inName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RenameElement_bSetupUndo_Offset), 0, null, bSetupUndo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RenameElement_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RenameElement_bClearSelection_Offset), 0, null, bClearSelection);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RenameElement_NativeFunction, ParamsBuffer);
            
            UnrealSharp.ControlRig.RigElementKey returnValue;
            returnValue = UnrealSharp.ControlRig.RigElementKeyMarshaler.FromNative(IntPtr.Add(ParamsBuffer, RenameElement_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:RemoveParent
    static readonly IntPtr RemoveParent_NativeFunction;
    static readonly int RemoveParent_ParamsSize;
    static readonly int RemoveParent_InChild_Offset;
    static readonly int RemoveParent_InParent_Offset;
    static readonly int RemoveParent_bMaintainGlobalTransform_Offset;
    static readonly int RemoveParent_bSetupUndo_Offset;
    static readonly int RemoveParent_bPrintPythonCommand_Offset;
    static readonly int RemoveParent_ReturnValue_Offset;
    
    public bool RemoveParent(UnrealSharp.ControlRig.RigElementKey inChild, UnrealSharp.ControlRig.RigElementKey inParent, bool bMaintainGlobalTransform = true, bool bSetupUndo = false, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveParent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, RemoveParent_InChild_Offset), 0, null, inChild);
            UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, RemoveParent_InParent_Offset), 0, null, inParent);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveParent_bMaintainGlobalTransform_Offset), 0, null, bMaintainGlobalTransform);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveParent_bSetupUndo_Offset), 0, null, bSetupUndo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveParent_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveParent_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveParent_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:RemoveElement
    static readonly IntPtr RemoveElement_NativeFunction;
    static readonly int RemoveElement_ParamsSize;
    static readonly int RemoveElement_InElement_Offset;
    static readonly int RemoveElement_bSetupUndo_Offset;
    static readonly int RemoveElement_bPrintPythonCommand_Offset;
    static readonly int RemoveElement_ReturnValue_Offset;
    
    public bool RemoveElement(UnrealSharp.ControlRig.RigElementKey inElement, bool bSetupUndo = false, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveElement_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, RemoveElement_InElement_Offset), 0, null, inElement);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveElement_bSetupUndo_Offset), 0, null, bSetupUndo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveElement_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveElement_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveElement_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:RemoveAllParents
    static readonly IntPtr RemoveAllParents_NativeFunction;
    static readonly int RemoveAllParents_ParamsSize;
    static readonly int RemoveAllParents_InChild_Offset;
    static readonly int RemoveAllParents_bMaintainGlobalTransform_Offset;
    static readonly int RemoveAllParents_bSetupUndo_Offset;
    static readonly int RemoveAllParents_bPrintPythonCommand_Offset;
    static readonly int RemoveAllParents_ReturnValue_Offset;
    
    public bool RemoveAllParents(UnrealSharp.ControlRig.RigElementKey inChild, bool bMaintainGlobalTransform = true, bool bSetupUndo = false, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveAllParents_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, RemoveAllParents_InChild_Offset), 0, null, inChild);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveAllParents_bMaintainGlobalTransform_Offset), 0, null, bMaintainGlobalTransform);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveAllParents_bSetupUndo_Offset), 0, null, bSetupUndo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveAllParents_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveAllParents_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveAllParents_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:MirrorElements
    static readonly IntPtr MirrorElements_NativeFunction;
    static readonly int MirrorElements_ParamsSize;
    static readonly int MirrorElements_InKeys_Offset;
    static readonly int MirrorElements_InKeys_ElementSize;
    static readonly int MirrorElements_InSettings_Offset;
    static readonly int MirrorElements_bSelectNewElements_Offset;
    static readonly int MirrorElements_bSetupUndo_Offset;
    static readonly int MirrorElements_bPrintPythonCommands_Offset;
    static readonly int MirrorElements_ReturnValue_Offset;
    static readonly int MirrorElements_ReturnValue_ElementSize;
    
    public System.Collections.Generic.IList<UnrealSharp.ControlRig.RigElementKey> MirrorElements(System.Collections.Generic.IList<UnrealSharp.ControlRig.RigElementKey> inKeys, UnrealSharp.RigVM.RigVMMirrorSettings inSettings, bool bSelectNewElements = true, bool bSetupUndo = false, bool bPrintPythonCommands = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[MirrorElements_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InKeys_NativeBuffer = IntPtr.Add(ParamsBuffer, MirrorElements_InKeys_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey> InKeys_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey>(1, UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative, UnrealSharp.ControlRig.RigElementKeyMarshaler.FromNative, MirrorElements_InKeys_ElementSize);
            InKeys_Marshaler.ToNative(InKeys_NativeBuffer, 0, null, inKeys);
            UnrealSharp.RigVM.RigVMMirrorSettingsMarshaler.ToNative(IntPtr.Add(ParamsBuffer, MirrorElements_InSettings_Offset), 0, null, inSettings);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, MirrorElements_bSelectNewElements_Offset), 0, null, bSelectNewElements);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, MirrorElements_bSetupUndo_Offset), 0, null, bSetupUndo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, MirrorElements_bPrintPythonCommands_Offset), 0, null, bPrintPythonCommands);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, MirrorElements_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.ControlRig.RigElementKey> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, MirrorElements_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey> (1, UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative, UnrealSharp.ControlRig.RigElementKeyMarshaler.FromNative, MirrorElements_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey>.DestructInstance(InKeys_NativeBuffer, 0);
            return returnValue;
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:ImportFromText
    static readonly IntPtr ImportFromText_NativeFunction;
    static readonly int ImportFromText_ParamsSize;
    static readonly int ImportFromText_InContent_Offset;
    static readonly int ImportFromText_bReplaceExistingElements_Offset;
    static readonly int ImportFromText_bSelectNewElements_Offset;
    static readonly int ImportFromText_bSetupUndo_Offset;
    static readonly int ImportFromText_bPrintPythonCommands_Offset;
    static readonly int ImportFromText_ReturnValue_Offset;
    static readonly int ImportFromText_ReturnValue_ElementSize;
    
    public System.Collections.Generic.IList<UnrealSharp.ControlRig.RigElementKey> ImportFromText(string inContent, bool bReplaceExistingElements = false, bool bSelectNewElements = true, bool bSetupUndo = false, bool bPrintPythonCommands = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ImportFromText_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InContent_NativePtr = IntPtr.Add(ParamsBuffer,ImportFromText_InContent_Offset);
            StringMarshaller.ToNative(InContent_NativePtr,0,null,inContent);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ImportFromText_bReplaceExistingElements_Offset), 0, null, bReplaceExistingElements);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ImportFromText_bSelectNewElements_Offset), 0, null, bSelectNewElements);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ImportFromText_bSetupUndo_Offset), 0, null, bSetupUndo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ImportFromText_bPrintPythonCommands_Offset), 0, null, bPrintPythonCommands);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ImportFromText_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.ControlRig.RigElementKey> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, ImportFromText_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey> (1, UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative, UnrealSharp.ControlRig.RigElementKeyMarshaler.FromNative, ImportFromText_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            StringMarshaller.DestructInstance(InContent_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:ImportCurvesFromAsset
    static readonly IntPtr ImportCurvesFromAsset_NativeFunction;
    static readonly int ImportCurvesFromAsset_ParamsSize;
    static readonly int ImportCurvesFromAsset_InAssetPath_Offset;
    static readonly int ImportCurvesFromAsset_InNameSpace_Offset;
    static readonly int ImportCurvesFromAsset_bSelectCurves_Offset;
    static readonly int ImportCurvesFromAsset_bSetupUndo_Offset;
    static readonly int ImportCurvesFromAsset_ReturnValue_Offset;
    static readonly int ImportCurvesFromAsset_ReturnValue_ElementSize;
    
    public System.Collections.Generic.IList<UnrealSharp.ControlRig.RigElementKey> ImportCurvesFromAsset(string inAssetPath, Name inNameSpace = default(Name), bool bSelectCurves = false, bool bSetupUndo = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ImportCurvesFromAsset_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InAssetPath_NativePtr = IntPtr.Add(ParamsBuffer,ImportCurvesFromAsset_InAssetPath_Offset);
            StringMarshaller.ToNative(InAssetPath_NativePtr,0,null,inAssetPath);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, ImportCurvesFromAsset_InNameSpace_Offset), 0, null, inNameSpace);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ImportCurvesFromAsset_bSelectCurves_Offset), 0, null, bSelectCurves);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ImportCurvesFromAsset_bSetupUndo_Offset), 0, null, bSetupUndo);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ImportCurvesFromAsset_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.ControlRig.RigElementKey> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, ImportCurvesFromAsset_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey> (1, UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative, UnrealSharp.ControlRig.RigElementKeyMarshaler.FromNative, ImportCurvesFromAsset_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            StringMarshaller.DestructInstance(InAssetPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:ImportCurves
    static readonly IntPtr ImportCurves_NativeFunction;
    static readonly int ImportCurves_ParamsSize;
    static readonly int ImportCurves_InSkeleton_Offset;
    static readonly int ImportCurves_InNameSpace_Offset;
    static readonly int ImportCurves_bSelectCurves_Offset;
    static readonly int ImportCurves_bSetupUndo_Offset;
    static readonly int ImportCurves_bPrintPythonCommand_Offset;
    static readonly int ImportCurves_ReturnValue_Offset;
    static readonly int ImportCurves_ReturnValue_ElementSize;
    
    public System.Collections.Generic.IList<UnrealSharp.ControlRig.RigElementKey> ImportCurves(UnrealSharp.Engine.Skeleton inSkeleton, Name inNameSpace = default(Name), bool bSelectCurves = false, bool bSetupUndo = false, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ImportCurves_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.Skeleton>.ToNative(IntPtr.Add(ParamsBuffer, ImportCurves_InSkeleton_Offset), 0, null, inSkeleton);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, ImportCurves_InNameSpace_Offset), 0, null, inNameSpace);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ImportCurves_bSelectCurves_Offset), 0, null, bSelectCurves);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ImportCurves_bSetupUndo_Offset), 0, null, bSetupUndo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ImportCurves_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ImportCurves_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.ControlRig.RigElementKey> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, ImportCurves_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey> (1, UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative, UnrealSharp.ControlRig.RigElementKeyMarshaler.FromNative, ImportCurves_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:ImportBonesFromAsset
    static readonly IntPtr ImportBonesFromAsset_NativeFunction;
    static readonly int ImportBonesFromAsset_ParamsSize;
    static readonly int ImportBonesFromAsset_InAssetPath_Offset;
    static readonly int ImportBonesFromAsset_InNameSpace_Offset;
    static readonly int ImportBonesFromAsset_bReplaceExistingBones_Offset;
    static readonly int ImportBonesFromAsset_bRemoveObsoleteBones_Offset;
    static readonly int ImportBonesFromAsset_bSelectBones_Offset;
    static readonly int ImportBonesFromAsset_bSetupUndo_Offset;
    static readonly int ImportBonesFromAsset_ReturnValue_Offset;
    static readonly int ImportBonesFromAsset_ReturnValue_ElementSize;
    
    public System.Collections.Generic.IList<UnrealSharp.ControlRig.RigElementKey> ImportBonesFromAsset(string inAssetPath, Name inNameSpace = default(Name), bool bReplaceExistingBones = true, bool bRemoveObsoleteBones = true, bool bSelectBones = false, bool bSetupUndo = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ImportBonesFromAsset_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InAssetPath_NativePtr = IntPtr.Add(ParamsBuffer,ImportBonesFromAsset_InAssetPath_Offset);
            StringMarshaller.ToNative(InAssetPath_NativePtr,0,null,inAssetPath);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, ImportBonesFromAsset_InNameSpace_Offset), 0, null, inNameSpace);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ImportBonesFromAsset_bReplaceExistingBones_Offset), 0, null, bReplaceExistingBones);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ImportBonesFromAsset_bRemoveObsoleteBones_Offset), 0, null, bRemoveObsoleteBones);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ImportBonesFromAsset_bSelectBones_Offset), 0, null, bSelectBones);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ImportBonesFromAsset_bSetupUndo_Offset), 0, null, bSetupUndo);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ImportBonesFromAsset_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.ControlRig.RigElementKey> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, ImportBonesFromAsset_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey> (1, UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative, UnrealSharp.ControlRig.RigElementKeyMarshaler.FromNative, ImportBonesFromAsset_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            StringMarshaller.DestructInstance(InAssetPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:ImportBones
    static readonly IntPtr ImportBones_NativeFunction;
    static readonly int ImportBones_ParamsSize;
    static readonly int ImportBones_InSkeleton_Offset;
    static readonly int ImportBones_InNameSpace_Offset;
    static readonly int ImportBones_bReplaceExistingBones_Offset;
    static readonly int ImportBones_bRemoveObsoleteBones_Offset;
    static readonly int ImportBones_bSelectBones_Offset;
    static readonly int ImportBones_bSetupUndo_Offset;
    static readonly int ImportBones_bPrintPythonCommand_Offset;
    static readonly int ImportBones_ReturnValue_Offset;
    static readonly int ImportBones_ReturnValue_ElementSize;
    
    public System.Collections.Generic.IList<UnrealSharp.ControlRig.RigElementKey> ImportBones(UnrealSharp.Engine.Skeleton inSkeleton, Name inNameSpace = default(Name), bool bReplaceExistingBones = true, bool bRemoveObsoleteBones = true, bool bSelectBones = false, bool bSetupUndo = false, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ImportBones_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.Skeleton>.ToNative(IntPtr.Add(ParamsBuffer, ImportBones_InSkeleton_Offset), 0, null, inSkeleton);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, ImportBones_InNameSpace_Offset), 0, null, inNameSpace);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ImportBones_bReplaceExistingBones_Offset), 0, null, bReplaceExistingBones);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ImportBones_bRemoveObsoleteBones_Offset), 0, null, bRemoveObsoleteBones);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ImportBones_bSelectBones_Offset), 0, null, bSelectBones);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ImportBones_bSetupUndo_Offset), 0, null, bSetupUndo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ImportBones_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ImportBones_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.ControlRig.RigElementKey> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, ImportBones_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey> (1, UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative, UnrealSharp.ControlRig.RigElementKeyMarshaler.FromNative, ImportBones_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:GetHierarchy
    static readonly IntPtr GetHierarchy_NativeFunction;
    static readonly int GetHierarchy_ParamsSize;
    static readonly int GetHierarchy_ReturnValue_Offset;
    
    public UnrealSharp.ControlRig.RigHierarchy GetHierarchy()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetHierarchy_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetHierarchy_NativeFunction, ParamsBuffer);
            
            UnrealSharp.ControlRig.RigHierarchy returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.ControlRig.RigHierarchy>.FromNative(IntPtr.Add(ParamsBuffer, GetHierarchy_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:GetControlSettings
    static readonly IntPtr GetControlSettings_NativeFunction;
    static readonly int GetControlSettings_ParamsSize;
    static readonly int GetControlSettings_InKey_Offset;
    static readonly int GetControlSettings_ReturnValue_Offset;
    
    public UnrealSharp.ControlRig.RigControlSettings GetControlSettings(UnrealSharp.ControlRig.RigElementKey inKey)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetControlSettings_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetControlSettings_InKey_Offset), 0, null, inKey);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetControlSettings_NativeFunction, ParamsBuffer);
            
            UnrealSharp.ControlRig.RigControlSettings returnValue;
            returnValue = UnrealSharp.ControlRig.RigControlSettingsMarshaler.FromNative(IntPtr.Add(ParamsBuffer, GetControlSettings_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:ExportToText
    static readonly IntPtr ExportToText_NativeFunction;
    static readonly int ExportToText_ParamsSize;
    static readonly int ExportToText_InKeys_Offset;
    static readonly int ExportToText_InKeys_ElementSize;
    static readonly int ExportToText_ReturnValue_Offset;
    
    public string ExportToText(System.Collections.Generic.IList<UnrealSharp.ControlRig.RigElementKey> inKeys)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ExportToText_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InKeys_NativeBuffer = IntPtr.Add(ParamsBuffer, ExportToText_InKeys_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey> InKeys_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey>(1, UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative, UnrealSharp.ControlRig.RigElementKeyMarshaler.FromNative, ExportToText_InKeys_ElementSize);
            InKeys_Marshaler.ToNative(InKeys_NativeBuffer, 0, null, inKeys);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ExportToText_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,ExportToText_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey>.DestructInstance(InKeys_NativeBuffer, 0);
            return returnValue;
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:ExportSelectionToText
    static readonly IntPtr ExportSelectionToText_NativeFunction;
    static readonly int ExportSelectionToText_ParamsSize;
    static readonly int ExportSelectionToText_ReturnValue_Offset;
    
    public string ExportSelectionToText()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ExportSelectionToText_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ExportSelectionToText_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,ExportSelectionToText_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:DuplicateElements
    static readonly IntPtr DuplicateElements_NativeFunction;
    static readonly int DuplicateElements_ParamsSize;
    static readonly int DuplicateElements_InKeys_Offset;
    static readonly int DuplicateElements_InKeys_ElementSize;
    static readonly int DuplicateElements_bSelectNewElements_Offset;
    static readonly int DuplicateElements_bSetupUndo_Offset;
    static readonly int DuplicateElements_bPrintPythonCommands_Offset;
    static readonly int DuplicateElements_ReturnValue_Offset;
    static readonly int DuplicateElements_ReturnValue_ElementSize;
    
    public System.Collections.Generic.IList<UnrealSharp.ControlRig.RigElementKey> DuplicateElements(System.Collections.Generic.IList<UnrealSharp.ControlRig.RigElementKey> inKeys, bool bSelectNewElements = true, bool bSetupUndo = false, bool bPrintPythonCommands = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[DuplicateElements_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InKeys_NativeBuffer = IntPtr.Add(ParamsBuffer, DuplicateElements_InKeys_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey> InKeys_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey>(1, UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative, UnrealSharp.ControlRig.RigElementKeyMarshaler.FromNative, DuplicateElements_InKeys_ElementSize);
            InKeys_Marshaler.ToNative(InKeys_NativeBuffer, 0, null, inKeys);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, DuplicateElements_bSelectNewElements_Offset), 0, null, bSelectNewElements);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, DuplicateElements_bSetupUndo_Offset), 0, null, bSetupUndo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, DuplicateElements_bPrintPythonCommands_Offset), 0, null, bPrintPythonCommands);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, DuplicateElements_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.ControlRig.RigElementKey> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, DuplicateElements_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey> (1, UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative, UnrealSharp.ControlRig.RigElementKeyMarshaler.FromNative, DuplicateElements_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            UnrealArrayCopyMarshaler<UnrealSharp.ControlRig.RigElementKey>.DestructInstance(InKeys_NativeBuffer, 0);
            return returnValue;
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:DeselectElement
    static readonly IntPtr DeselectElement_NativeFunction;
    static readonly int DeselectElement_ParamsSize;
    static readonly int DeselectElement_InKey_Offset;
    static readonly int DeselectElement_ReturnValue_Offset;
    
    public bool DeselectElement(UnrealSharp.ControlRig.RigElementKey inKey)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[DeselectElement_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, DeselectElement_InKey_Offset), 0, null, inKey);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, DeselectElement_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, DeselectElement_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:ClearSelection
    static readonly IntPtr ClearSelection_NativeFunction;
    static readonly int ClearSelection_ParamsSize;
    static readonly int ClearSelection_ReturnValue_Offset;
    
    public bool ClearSelection()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ClearSelection_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ClearSelection_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, ClearSelection_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:AddRigidBody
    static readonly IntPtr AddRigidBody_NativeFunction;
    static readonly int AddRigidBody_ParamsSize;
    static readonly int AddRigidBody_InName_Offset;
    static readonly int AddRigidBody_InParent_Offset;
    static readonly int AddRigidBody_InSettings_Offset;
    static readonly int AddRigidBody_InLocalTransform_Offset;
    static readonly int AddRigidBody_bSetupUndo_Offset;
    static readonly int AddRigidBody_bPrintPythonCommand_Offset;
    static readonly int AddRigidBody_ReturnValue_Offset;
    
    public UnrealSharp.ControlRig.RigElementKey AddRigidBody(Name inName, UnrealSharp.ControlRig.RigElementKey inParent, UnrealSharp.ControlRig.RigRigidBodySettings inSettings, UnrealSharp.Transform inLocalTransform, bool bSetupUndo = false, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddRigidBody_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddRigidBody_InName_Offset), 0, null, inName);
            UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, AddRigidBody_InParent_Offset), 0, null, inParent);
            BlittableMarshaller<UnrealSharp.ControlRig.RigRigidBodySettings>.ToNative(IntPtr.Add(ParamsBuffer, AddRigidBody_InSettings_Offset), 0, null, inSettings);
            BlittableMarshaller<UnrealSharp.Transform>.ToNative(IntPtr.Add(ParamsBuffer, AddRigidBody_InLocalTransform_Offset), 0, null, inLocalTransform);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddRigidBody_bSetupUndo_Offset), 0, null, bSetupUndo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddRigidBody_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddRigidBody_NativeFunction, ParamsBuffer);
            
            UnrealSharp.ControlRig.RigElementKey returnValue;
            returnValue = UnrealSharp.ControlRig.RigElementKeyMarshaler.FromNative(IntPtr.Add(ParamsBuffer, AddRigidBody_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:AddParent
    static readonly IntPtr AddParent_NativeFunction;
    static readonly int AddParent_ParamsSize;
    static readonly int AddParent_InChild_Offset;
    static readonly int AddParent_InParent_Offset;
    static readonly int AddParent_InWeight_Offset;
    static readonly int AddParent_bMaintainGlobalTransform_Offset;
    static readonly int AddParent_bSetupUndo_Offset;
    static readonly int AddParent_ReturnValue_Offset;
    
    public bool AddParent(UnrealSharp.ControlRig.RigElementKey inChild, UnrealSharp.ControlRig.RigElementKey inParent, float inWeight = 0.000000f, bool bMaintainGlobalTransform = true, bool bSetupUndo = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddParent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, AddParent_InChild_Offset), 0, null, inChild);
            UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, AddParent_InParent_Offset), 0, null, inParent);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, AddParent_InWeight_Offset), 0, null, inWeight);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddParent_bMaintainGlobalTransform_Offset), 0, null, bMaintainGlobalTransform);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddParent_bSetupUndo_Offset), 0, null, bSetupUndo);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddParent_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, AddParent_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:AddNull
    static readonly IntPtr AddNull_NativeFunction;
    static readonly int AddNull_ParamsSize;
    static readonly int AddNull_InName_Offset;
    static readonly int AddNull_InParent_Offset;
    static readonly int AddNull_InTransform_Offset;
    static readonly int AddNull_bTransformInGlobal_Offset;
    static readonly int AddNull_bSetupUndo_Offset;
    static readonly int AddNull_bPrintPythonCommand_Offset;
    static readonly int AddNull_ReturnValue_Offset;
    
    public UnrealSharp.ControlRig.RigElementKey AddNull(Name inName, UnrealSharp.ControlRig.RigElementKey inParent, UnrealSharp.Transform inTransform, bool bTransformInGlobal = true, bool bSetupUndo = false, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddNull_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddNull_InName_Offset), 0, null, inName);
            UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, AddNull_InParent_Offset), 0, null, inParent);
            BlittableMarshaller<UnrealSharp.Transform>.ToNative(IntPtr.Add(ParamsBuffer, AddNull_InTransform_Offset), 0, null, inTransform);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddNull_bTransformInGlobal_Offset), 0, null, bTransformInGlobal);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddNull_bSetupUndo_Offset), 0, null, bSetupUndo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddNull_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddNull_NativeFunction, ParamsBuffer);
            
            UnrealSharp.ControlRig.RigElementKey returnValue;
            returnValue = UnrealSharp.ControlRig.RigElementKeyMarshaler.FromNative(IntPtr.Add(ParamsBuffer, AddNull_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:AddCurve
    static readonly IntPtr AddCurve_NativeFunction;
    static readonly int AddCurve_ParamsSize;
    static readonly int AddCurve_InName_Offset;
    static readonly int AddCurve_InValue_Offset;
    static readonly int AddCurve_bSetupUndo_Offset;
    static readonly int AddCurve_bPrintPythonCommand_Offset;
    static readonly int AddCurve_ReturnValue_Offset;
    
    public UnrealSharp.ControlRig.RigElementKey AddCurve(Name inName, float inValue = 0.000000f, bool bSetupUndo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddCurve_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddCurve_InName_Offset), 0, null, inName);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, AddCurve_InValue_Offset), 0, null, inValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddCurve_bSetupUndo_Offset), 0, null, bSetupUndo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddCurve_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddCurve_NativeFunction, ParamsBuffer);
            
            UnrealSharp.ControlRig.RigElementKey returnValue;
            returnValue = UnrealSharp.ControlRig.RigElementKeyMarshaler.FromNative(IntPtr.Add(ParamsBuffer, AddCurve_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:AddControl_ForBlueprint
    static readonly IntPtr AddControl_ForBlueprint_NativeFunction;
    static readonly int AddControl_ForBlueprint_ParamsSize;
    static readonly int AddControl_ForBlueprint_InName_Offset;
    static readonly int AddControl_ForBlueprint_InParent_Offset;
    static readonly int AddControl_ForBlueprint_InSettings_Offset;
    static readonly int AddControl_ForBlueprint_InValue_Offset;
    static readonly int AddControl_ForBlueprint_bSetupUndo_Offset;
    static readonly int AddControl_ForBlueprint_bPrintPythonCommand_Offset;
    static readonly int AddControl_ForBlueprint_ReturnValue_Offset;
    
    public UnrealSharp.ControlRig.RigElementKey AddControl(Name inName, UnrealSharp.ControlRig.RigElementKey inParent, UnrealSharp.ControlRig.RigControlSettings inSettings, UnrealSharp.ControlRig.RigControlValue inValue, bool bSetupUndo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddControl_ForBlueprint_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddControl_ForBlueprint_InName_Offset), 0, null, inName);
            UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, AddControl_ForBlueprint_InParent_Offset), 0, null, inParent);
            UnrealSharp.ControlRig.RigControlSettingsMarshaler.ToNative(IntPtr.Add(ParamsBuffer, AddControl_ForBlueprint_InSettings_Offset), 0, null, inSettings);
            UnrealSharp.ControlRig.RigControlValueMarshaler.ToNative(IntPtr.Add(ParamsBuffer, AddControl_ForBlueprint_InValue_Offset), 0, null, inValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddControl_ForBlueprint_bSetupUndo_Offset), 0, null, bSetupUndo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddControl_ForBlueprint_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddControl_ForBlueprint_NativeFunction, ParamsBuffer);
            
            UnrealSharp.ControlRig.RigElementKey returnValue;
            returnValue = UnrealSharp.ControlRig.RigElementKeyMarshaler.FromNative(IntPtr.Add(ParamsBuffer, AddControl_ForBlueprint_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:AddBone
    static readonly IntPtr AddBone_NativeFunction;
    static readonly int AddBone_ParamsSize;
    static readonly int AddBone_InName_Offset;
    static readonly int AddBone_InParent_Offset;
    static readonly int AddBone_InTransform_Offset;
    static readonly int AddBone_bTransformInGlobal_Offset;
    static readonly int AddBone_InBoneType_Offset;
    static readonly int AddBone_bSetupUndo_Offset;
    static readonly int AddBone_bPrintPythonCommand_Offset;
    static readonly int AddBone_ReturnValue_Offset;
    
    public UnrealSharp.ControlRig.RigElementKey AddBone(Name inName, UnrealSharp.ControlRig.RigElementKey inParent, UnrealSharp.Transform inTransform, bool bTransformInGlobal = true, UnrealSharp.ControlRig.ERigBoneType inBoneType = UnrealSharp.ControlRig.ERigBoneType.User, bool bSetupUndo = false, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddBone_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddBone_InName_Offset), 0, null, inName);
            UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, AddBone_InParent_Offset), 0, null, inParent);
            BlittableMarshaller<UnrealSharp.Transform>.ToNative(IntPtr.Add(ParamsBuffer, AddBone_InTransform_Offset), 0, null, inTransform);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddBone_bTransformInGlobal_Offset), 0, null, bTransformInGlobal);
            BlittableMarshaller<UnrealSharp.ControlRig.ERigBoneType>.ToNative(IntPtr.Add(ParamsBuffer, AddBone_InBoneType_Offset), 0, null, inBoneType);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddBone_bSetupUndo_Offset), 0, null, bSetupUndo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddBone_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddBone_NativeFunction, ParamsBuffer);
            
            UnrealSharp.ControlRig.RigElementKey returnValue;
            returnValue = UnrealSharp.ControlRig.RigElementKeyMarshaler.FromNative(IntPtr.Add(ParamsBuffer, AddBone_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/ControlRig.RigHierarchyController:AddAnimationChannel_ForBlueprint
    static readonly IntPtr AddAnimationChannel_ForBlueprint_NativeFunction;
    static readonly int AddAnimationChannel_ForBlueprint_ParamsSize;
    static readonly int AddAnimationChannel_ForBlueprint_InName_Offset;
    static readonly int AddAnimationChannel_ForBlueprint_InParentControl_Offset;
    static readonly int AddAnimationChannel_ForBlueprint_InSettings_Offset;
    static readonly int AddAnimationChannel_ForBlueprint_bSetupUndo_Offset;
    static readonly int AddAnimationChannel_ForBlueprint_bPrintPythonCommand_Offset;
    static readonly int AddAnimationChannel_ForBlueprint_ReturnValue_Offset;
    
    public UnrealSharp.ControlRig.RigElementKey AddAnimationChannel(Name inName, UnrealSharp.ControlRig.RigElementKey inParentControl, UnrealSharp.ControlRig.RigControlSettings inSettings, bool bSetupUndo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddAnimationChannel_ForBlueprint_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddAnimationChannel_ForBlueprint_InName_Offset), 0, null, inName);
            UnrealSharp.ControlRig.RigElementKeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, AddAnimationChannel_ForBlueprint_InParentControl_Offset), 0, null, inParentControl);
            UnrealSharp.ControlRig.RigControlSettingsMarshaler.ToNative(IntPtr.Add(ParamsBuffer, AddAnimationChannel_ForBlueprint_InSettings_Offset), 0, null, inSettings);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddAnimationChannel_ForBlueprint_bSetupUndo_Offset), 0, null, bSetupUndo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddAnimationChannel_ForBlueprint_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddAnimationChannel_ForBlueprint_NativeFunction, ParamsBuffer);
            
            UnrealSharp.ControlRig.RigElementKey returnValue;
            returnValue = UnrealSharp.ControlRig.RigElementKeyMarshaler.FromNative(IntPtr.Add(ParamsBuffer, AddAnimationChannel_ForBlueprint_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.ControlRigEditor;

[UClass]
public partial class ControlRigContextMenuContext : UnrealSharp.CoreUObject.Object
{
    
    static ControlRigContextMenuContext()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("ControlRigContextMenuContext");
        
        
        IsAltDown_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsAltDown");
        IsAltDown_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsAltDown_NativeFunction);
        IsAltDown_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsAltDown_NativeFunction, "ReturnValue");
        GetRigHierarchyToGraphDragAndDropContext_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetRigHierarchyToGraphDragAndDropContext");
        GetRigHierarchyToGraphDragAndDropContext_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetRigHierarchyToGraphDragAndDropContext_NativeFunction);
        GetRigHierarchyToGraphDragAndDropContext_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetRigHierarchyToGraphDragAndDropContext_NativeFunction, "ReturnValue");
        GetRigHierarchyDragAndDropContext_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetRigHierarchyDragAndDropContext");
        GetRigHierarchyDragAndDropContext_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetRigHierarchyDragAndDropContext_NativeFunction);
        GetRigHierarchyDragAndDropContext_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetRigHierarchyDragAndDropContext_NativeFunction, "ReturnValue");
        GetGraphNodeContextMenuContext_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetGraphNodeContextMenuContext");
        GetGraphNodeContextMenuContext_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetGraphNodeContextMenuContext_NativeFunction);
        GetGraphNodeContextMenuContext_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetGraphNodeContextMenuContext_NativeFunction, "ReturnValue");
        GetControlRigBlueprint_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetControlRigBlueprint");
        GetControlRigBlueprint_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetControlRigBlueprint_NativeFunction);
        GetControlRigBlueprint_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetControlRigBlueprint_NativeFunction, "ReturnValue");
        GetControlRig_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetControlRig");
        GetControlRig_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetControlRig_NativeFunction);
        GetControlRig_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetControlRig_NativeFunction, "ReturnValue");
        
        
    }
    
    protected ControlRigContextMenuContext(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/ControlRigEditor.ControlRigContextMenuContext:IsAltDown
    static readonly IntPtr IsAltDown_NativeFunction;
    static readonly int IsAltDown_ParamsSize;
    static readonly int IsAltDown_ReturnValue_Offset;
    
    public bool IsAltDown()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsAltDown_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsAltDown_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsAltDown_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/ControlRigEditor.ControlRigContextMenuContext:GetRigHierarchyToGraphDragAndDropContext
    static readonly IntPtr GetRigHierarchyToGraphDragAndDropContext_NativeFunction;
    static readonly int GetRigHierarchyToGraphDragAndDropContext_ParamsSize;
    static readonly int GetRigHierarchyToGraphDragAndDropContext_ReturnValue_Offset;
    
    public UnrealSharp.ControlRigEditor.ControlRigRigHierarchyToGraphDragAndDropContext GetRigHierarchyToGraphDragAndDropContext()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetRigHierarchyToGraphDragAndDropContext_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetRigHierarchyToGraphDragAndDropContext_NativeFunction, ParamsBuffer);
            
            UnrealSharp.ControlRigEditor.ControlRigRigHierarchyToGraphDragAndDropContext returnValue;
            returnValue = UnrealSharp.ControlRigEditor.ControlRigRigHierarchyToGraphDragAndDropContextMarshaler.FromNative(IntPtr.Add(ParamsBuffer, GetRigHierarchyToGraphDragAndDropContext_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/ControlRigEditor.ControlRigContextMenuContext:GetRigHierarchyDragAndDropContext
    static readonly IntPtr GetRigHierarchyDragAndDropContext_NativeFunction;
    static readonly int GetRigHierarchyDragAndDropContext_ParamsSize;
    static readonly int GetRigHierarchyDragAndDropContext_ReturnValue_Offset;
    
    public UnrealSharp.ControlRigEditor.ControlRigRigHierarchyDragAndDropContext GetRigHierarchyDragAndDropContext()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetRigHierarchyDragAndDropContext_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetRigHierarchyDragAndDropContext_NativeFunction, ParamsBuffer);
            
            UnrealSharp.ControlRigEditor.ControlRigRigHierarchyDragAndDropContext returnValue;
            returnValue = UnrealSharp.ControlRigEditor.ControlRigRigHierarchyDragAndDropContextMarshaler.FromNative(IntPtr.Add(ParamsBuffer, GetRigHierarchyDragAndDropContext_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/ControlRigEditor.ControlRigContextMenuContext:GetGraphNodeContextMenuContext
    static readonly IntPtr GetGraphNodeContextMenuContext_NativeFunction;
    static readonly int GetGraphNodeContextMenuContext_ParamsSize;
    static readonly int GetGraphNodeContextMenuContext_ReturnValue_Offset;
    
    public UnrealSharp.ControlRigEditor.ControlRigGraphNodeContextMenuContext GetGraphNodeContextMenuContext()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetGraphNodeContextMenuContext_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetGraphNodeContextMenuContext_NativeFunction, ParamsBuffer);
            
            UnrealSharp.ControlRigEditor.ControlRigGraphNodeContextMenuContext returnValue;
            returnValue = UnrealSharp.ControlRigEditor.ControlRigGraphNodeContextMenuContextMarshaler.FromNative(IntPtr.Add(ParamsBuffer, GetGraphNodeContextMenuContext_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/ControlRigEditor.ControlRigContextMenuContext:GetControlRigBlueprint
    static readonly IntPtr GetControlRigBlueprint_NativeFunction;
    static readonly int GetControlRigBlueprint_ParamsSize;
    static readonly int GetControlRigBlueprint_ReturnValue_Offset;
    
    public UnrealSharp.ControlRigDeveloper.ControlRigBlueprint GetControlRigBlueprint()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetControlRigBlueprint_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetControlRigBlueprint_NativeFunction, ParamsBuffer);
            
            UnrealSharp.ControlRigDeveloper.ControlRigBlueprint returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.ControlRigDeveloper.ControlRigBlueprint>.FromNative(IntPtr.Add(ParamsBuffer, GetControlRigBlueprint_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/ControlRigEditor.ControlRigContextMenuContext:GetControlRig
    static readonly IntPtr GetControlRig_NativeFunction;
    static readonly int GetControlRig_ParamsSize;
    static readonly int GetControlRig_ReturnValue_Offset;
    
    public UnrealSharp.ControlRig.ControlRig GetControlRig()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetControlRig_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetControlRig_NativeFunction, ParamsBuffer);
            
            UnrealSharp.ControlRig.ControlRig returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.ControlRig.ControlRig>.FromNative(IntPtr.Add(ParamsBuffer, GetControlRig_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.DatasmithContent;

[UClass]
public partial class DatasmithContentLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static DatasmithContentLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("DatasmithContentBlueprintLibrary");
        
        
        GetDatasmithUserDataValueForKey_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetDatasmithUserDataValueForKey");
        GetDatasmithUserDataValueForKey_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetDatasmithUserDataValueForKey_NativeFunction);
        GetDatasmithUserDataValueForKey_Object_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDatasmithUserDataValueForKey_NativeFunction, "Object");
        GetDatasmithUserDataValueForKey_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDatasmithUserDataValueForKey_NativeFunction, "Key");
        GetDatasmithUserDataValueForKey_bPartialMatchKey_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDatasmithUserDataValueForKey_NativeFunction, "bPartialMatchKey");
        GetDatasmithUserDataValueForKey_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDatasmithUserDataValueForKey_NativeFunction, "ReturnValue");
        GetDatasmithUserData_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetDatasmithUserData");
        GetDatasmithUserData_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetDatasmithUserData_NativeFunction);
        GetDatasmithUserData_Object_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDatasmithUserData_NativeFunction, "Object");
        GetDatasmithUserData_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDatasmithUserData_NativeFunction, "ReturnValue");
        GetAllDatasmithUserData_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetAllDatasmithUserData");
        GetAllDatasmithUserData_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetAllDatasmithUserData_NativeFunction);
        GetAllDatasmithUserData_ObjectClass_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAllDatasmithUserData_NativeFunction, "ObjectClass");
        GetAllDatasmithUserData_OutUserData_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAllDatasmithUserData_NativeFunction, "OutUserData");
        GetAllDatasmithUserData_OutUserData_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetAllDatasmithUserData_NativeFunction, "OutUserData");
        
        
    }
    
    protected DatasmithContentLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/DatasmithContent.DatasmithContentBlueprintLibrary:GetDatasmithUserDataValueForKey
    static readonly IntPtr GetDatasmithUserDataValueForKey_NativeFunction;
    static readonly int GetDatasmithUserDataValueForKey_ParamsSize;
    static readonly int GetDatasmithUserDataValueForKey_Object_Offset;
    static readonly int GetDatasmithUserDataValueForKey_Key_Offset;
    static readonly int GetDatasmithUserDataValueForKey_bPartialMatchKey_Offset;
    static readonly int GetDatasmithUserDataValueForKey_ReturnValue_Offset;
    
    public static string GetDatasmithUserDataValueForKey(UnrealSharp.CoreUObject.Object @object, Name key, bool bPartialMatchKey = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetDatasmithUserDataValueForKey_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, GetDatasmithUserDataValueForKey_Object_Offset), 0, null, @object);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetDatasmithUserDataValueForKey_Key_Offset), 0, null, key);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, GetDatasmithUserDataValueForKey_bPartialMatchKey_Offset), 0, null, bPartialMatchKey);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetDatasmithUserDataValueForKey_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetDatasmithUserDataValueForKey_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/DatasmithContent.DatasmithContentBlueprintLibrary:GetDatasmithUserData
    static readonly IntPtr GetDatasmithUserData_NativeFunction;
    static readonly int GetDatasmithUserData_ParamsSize;
    static readonly int GetDatasmithUserData_Object_Offset;
    static readonly int GetDatasmithUserData_ReturnValue_Offset;
    
    public static UnrealSharp.DatasmithContent.DatasmithUserData GetDatasmithUserData(UnrealSharp.CoreUObject.Object @object)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetDatasmithUserData_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, GetDatasmithUserData_Object_Offset), 0, null, @object);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetDatasmithUserData_NativeFunction, ParamsBuffer);
            
            UnrealSharp.DatasmithContent.DatasmithUserData returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.DatasmithContent.DatasmithUserData>.FromNative(IntPtr.Add(ParamsBuffer, GetDatasmithUserData_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/DatasmithContent.DatasmithContentBlueprintLibrary:GetAllDatasmithUserData
    static readonly IntPtr GetAllDatasmithUserData_NativeFunction;
    static readonly int GetAllDatasmithUserData_ParamsSize;
    static readonly int GetAllDatasmithUserData_ObjectClass_Offset;
    static readonly int GetAllDatasmithUserData_OutUserData_Offset;
    static readonly int GetAllDatasmithUserData_OutUserData_ElementSize;
    
    public static void GetAllDatasmithUserData(SubclassOf<UnrealSharp.CoreUObject.Object> objectClass, out System.Collections.Generic.IList<UnrealSharp.DatasmithContent.DatasmithUserData> outUserData)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetAllDatasmithUserData_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            SubclassOfMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, GetAllDatasmithUserData_ObjectClass_Offset), 0, null, objectClass);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetAllDatasmithUserData_NativeFunction, ParamsBuffer);
            
            IntPtr OutUserData_NativeBuffer = IntPtr.Add(ParamsBuffer, GetAllDatasmithUserData_OutUserData_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.DatasmithContent.DatasmithUserData> OutUserData_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.DatasmithContent.DatasmithUserData> (1, ObjectMarshaller<UnrealSharp.DatasmithContent.DatasmithUserData>.ToNative, ObjectMarshaller<UnrealSharp.DatasmithContent.DatasmithUserData>.FromNative, GetAllDatasmithUserData_OutUserData_ElementSize);
            outUserData = OutUserData_Marshaler.FromNative(OutUserData_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.DatasmithContent.DatasmithUserData>.DestructInstance(OutUserData_NativeBuffer, 0);
            
        }
    }
    
    
}
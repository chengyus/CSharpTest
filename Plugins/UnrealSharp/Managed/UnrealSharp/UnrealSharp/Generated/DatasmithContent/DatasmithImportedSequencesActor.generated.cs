// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.DatasmithContent;

[UClass]
public partial class DatasmithImportedSequencesActor : UnrealSharp.Engine.Actor
{
    
    static DatasmithImportedSequencesActor()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("DatasmithImportedSequencesActor");
        
        ImportedSequences_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ImportedSequences");
        ImportedSequences_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "ImportedSequences");
        
        PlayLevelSequence_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "PlayLevelSequence");
        PlayLevelSequence_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(PlayLevelSequence_NativeFunction);
        PlayLevelSequence_SequenceToPlay_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PlayLevelSequence_NativeFunction, "SequenceToPlay");
        
        
    }
    
    protected DatasmithImportedSequencesActor(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ArrayProperty /Script/DatasmithContent.DatasmithImportedSequencesActor:ImportedSequences
    static readonly int ImportedSequences_Offset;
    static readonly IntPtr ImportedSequences_NativeProperty;
    UnrealArrayReadWriteMarshaler<UnrealSharp.LevelSequence.LevelSequence> ImportedSequences_Wrapper = null;
    
    public System.Collections.Generic.IList<UnrealSharp.LevelSequence.LevelSequence> ImportedSequences
    {
        get
        {
            if(ImportedSequences_Wrapper == null)
            {
                ImportedSequences_Wrapper = new UnrealArrayReadWriteMarshaler<UnrealSharp.LevelSequence.LevelSequence>(1, ImportedSequences_NativeProperty, ObjectMarshaller<UnrealSharp.LevelSequence.LevelSequence>.ToNative, ObjectMarshaller<UnrealSharp.LevelSequence.LevelSequence>.FromNative);
            }
            
            return ImportedSequences_Wrapper.FromNative(IntPtr.Add(NativeObject,ImportedSequences_Offset),0,this);
        }
    }
    
    // Function /Script/DatasmithContent.DatasmithImportedSequencesActor:PlayLevelSequence
    static readonly IntPtr PlayLevelSequence_NativeFunction;
    static readonly int PlayLevelSequence_ParamsSize;
    static readonly int PlayLevelSequence_SequenceToPlay_Offset;
    
    public void PlayLevelSequence(UnrealSharp.LevelSequence.LevelSequence sequenceToPlay)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[PlayLevelSequence_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.LevelSequence.LevelSequence>.ToNative(IntPtr.Add(ParamsBuffer, PlayLevelSequence_SequenceToPlay_Offset), 0, null, sequenceToPlay);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, PlayLevelSequence_NativeFunction, ParamsBuffer);
            
        }
    }
    
    
}
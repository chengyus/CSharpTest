// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.EditorScriptingUtilities;

[UClass]
public partial class EditorSkeletalMeshLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static EditorSkeletalMeshLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("EditorSkeletalMeshLibrary");
        
        
        StripLODGeometry_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "StripLODGeometry");
        StripLODGeometry_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(StripLODGeometry_NativeFunction);
        StripLODGeometry_SkeletalMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StripLODGeometry_NativeFunction, "SkeletalMesh");
        StripLODGeometry_LODIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StripLODGeometry_NativeFunction, "LODIndex");
        StripLODGeometry_TextureMask_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StripLODGeometry_NativeFunction, "TextureMask");
        StripLODGeometry_Threshold_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StripLODGeometry_NativeFunction, "Threshold");
        StripLODGeometry_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StripLODGeometry_NativeFunction, "ReturnValue");
        SetLodBuildSettings_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetLodBuildSettings");
        SetLodBuildSettings_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetLodBuildSettings_NativeFunction);
        SetLodBuildSettings_SkeletalMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLodBuildSettings_NativeFunction, "SkeletalMesh");
        SetLodBuildSettings_LodIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLodBuildSettings_NativeFunction, "LodIndex");
        SetLodBuildSettings_BuildOptions_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLodBuildSettings_NativeFunction, "BuildOptions");
        RenameSocket_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RenameSocket");
        RenameSocket_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RenameSocket_NativeFunction);
        RenameSocket_SkeletalMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameSocket_NativeFunction, "SkeletalMesh");
        RenameSocket_OldName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameSocket_NativeFunction, "OldName");
        RenameSocket_NewName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameSocket_NativeFunction, "NewName");
        RenameSocket_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameSocket_NativeFunction, "ReturnValue");
        RemoveLODs_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveLODs");
        RemoveLODs_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveLODs_NativeFunction);
        RemoveLODs_SkeletalMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveLODs_NativeFunction, "SkeletalMesh");
        RemoveLODs_ToRemoveLODs_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveLODs_NativeFunction, "ToRemoveLODs");
        RemoveLODs_ToRemoveLODs_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(RemoveLODs_NativeFunction, "ToRemoveLODs");
        RemoveLODs_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveLODs_NativeFunction, "ReturnValue");
        ReimportAllCustomLODs_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ReimportAllCustomLODs");
        ReimportAllCustomLODs_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ReimportAllCustomLODs_NativeFunction);
        ReimportAllCustomLODs_SkeletalMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReimportAllCustomLODs_NativeFunction, "SkeletalMesh");
        ReimportAllCustomLODs_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReimportAllCustomLODs_NativeFunction, "ReturnValue");
        RegenerateLOD_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RegenerateLOD");
        RegenerateLOD_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RegenerateLOD_NativeFunction);
        RegenerateLOD_SkeletalMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RegenerateLOD_NativeFunction, "SkeletalMesh");
        RegenerateLOD_NewLODCount_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RegenerateLOD_NativeFunction, "NewLODCount");
        RegenerateLOD_bRegenerateEvenIfImported_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RegenerateLOD_NativeFunction, "bRegenerateEvenIfImported");
        RegenerateLOD_bGenerateBaseLOD_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RegenerateLOD_NativeFunction, "bGenerateBaseLOD");
        RegenerateLOD_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RegenerateLOD_NativeFunction, "ReturnValue");
        ImportLOD_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ImportLOD");
        ImportLOD_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ImportLOD_NativeFunction);
        ImportLOD_BaseMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportLOD_NativeFunction, "BaseMesh");
        ImportLOD_LODIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportLOD_NativeFunction, "LODIndex");
        ImportLOD_SourceFilename_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportLOD_NativeFunction, "SourceFilename");
        ImportLOD_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportLOD_NativeFunction, "ReturnValue");
        GetNumVerts_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetNumVerts");
        GetNumVerts_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetNumVerts_NativeFunction);
        GetNumVerts_SkeletalMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetNumVerts_NativeFunction, "SkeletalMesh");
        GetNumVerts_LODIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetNumVerts_NativeFunction, "LODIndex");
        GetNumVerts_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetNumVerts_NativeFunction, "ReturnValue");
        GetLODCount_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetLODCount");
        GetLODCount_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetLODCount_NativeFunction);
        GetLODCount_SkeletalMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLODCount_NativeFunction, "SkeletalMesh");
        GetLODCount_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLODCount_NativeFunction, "ReturnValue");
        GetLodBuildSettings_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetLodBuildSettings");
        GetLodBuildSettings_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetLodBuildSettings_NativeFunction);
        GetLodBuildSettings_SkeletalMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLodBuildSettings_NativeFunction, "SkeletalMesh");
        GetLodBuildSettings_LodIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLodBuildSettings_NativeFunction, "LodIndex");
        GetLodBuildSettings_OutBuildOptions_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLodBuildSettings_NativeFunction, "OutBuildOptions");
        CreatePhysicsAsset_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CreatePhysicsAsset");
        CreatePhysicsAsset_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(CreatePhysicsAsset_NativeFunction);
        CreatePhysicsAsset_SkeletalMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CreatePhysicsAsset_NativeFunction, "SkeletalMesh");
        CreatePhysicsAsset_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CreatePhysicsAsset_NativeFunction, "ReturnValue");
        
        
    }
    
    protected EditorSkeletalMeshLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/EditorScriptingUtilities.EditorSkeletalMeshLibrary:StripLODGeometry
    static readonly IntPtr StripLODGeometry_NativeFunction;
    static readonly int StripLODGeometry_ParamsSize;
    static readonly int StripLODGeometry_SkeletalMesh_Offset;
    static readonly int StripLODGeometry_LODIndex_Offset;
    static readonly int StripLODGeometry_TextureMask_Offset;
    static readonly int StripLODGeometry_Threshold_Offset;
    static readonly int StripLODGeometry_ReturnValue_Offset;
    
    public static bool StripLODGeometry(UnrealSharp.Engine.SkeletalMesh skeletalMesh, int lODIndex, UnrealSharp.Engine.Texture2D textureMask, float threshold)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[StripLODGeometry_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.SkeletalMesh>.ToNative(IntPtr.Add(ParamsBuffer, StripLODGeometry_SkeletalMesh_Offset), 0, null, skeletalMesh);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, StripLODGeometry_LODIndex_Offset), 0, null, lODIndex);
            ObjectMarshaller<UnrealSharp.Engine.Texture2D>.ToNative(IntPtr.Add(ParamsBuffer, StripLODGeometry_TextureMask_Offset), 0, null, textureMask);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, StripLODGeometry_Threshold_Offset), 0, null, threshold);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, StripLODGeometry_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, StripLODGeometry_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/EditorScriptingUtilities.EditorSkeletalMeshLibrary:SetLodBuildSettings
    static readonly IntPtr SetLodBuildSettings_NativeFunction;
    static readonly int SetLodBuildSettings_ParamsSize;
    static readonly int SetLodBuildSettings_SkeletalMesh_Offset;
    static readonly int SetLodBuildSettings_LodIndex_Offset;
    static readonly int SetLodBuildSettings_BuildOptions_Offset;
    
    [Obsolete("The Editor Scripting Utilities Plugin is deprecated - Use the function in Skeletal Mesh Editor Subsystem")]
    public static void SetLodBuildSettings(UnrealSharp.Engine.SkeletalMesh skeletalMesh, int lodIndex, UnrealSharp.Engine.SkeletalMeshBuildSettings buildOptions)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetLodBuildSettings_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.SkeletalMesh>.ToNative(IntPtr.Add(ParamsBuffer, SetLodBuildSettings_SkeletalMesh_Offset), 0, null, skeletalMesh);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetLodBuildSettings_LodIndex_Offset), 0, null, lodIndex);
            UnrealSharp.Engine.SkeletalMeshBuildSettingsMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetLodBuildSettings_BuildOptions_Offset), 0, null, buildOptions);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetLodBuildSettings_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/EditorScriptingUtilities.EditorSkeletalMeshLibrary:RenameSocket
    static readonly IntPtr RenameSocket_NativeFunction;
    static readonly int RenameSocket_ParamsSize;
    static readonly int RenameSocket_SkeletalMesh_Offset;
    static readonly int RenameSocket_OldName_Offset;
    static readonly int RenameSocket_NewName_Offset;
    static readonly int RenameSocket_ReturnValue_Offset;
    
    [Obsolete("The Editor Scripting Utilities Plugin is deprecated - Use the function in Skeletal Mesh Editor Subsystem")]
    public static bool RenameSocket(UnrealSharp.Engine.SkeletalMesh skeletalMesh, Name oldName, Name newName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RenameSocket_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.SkeletalMesh>.ToNative(IntPtr.Add(ParamsBuffer, RenameSocket_SkeletalMesh_Offset), 0, null, skeletalMesh);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, RenameSocket_OldName_Offset), 0, null, oldName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, RenameSocket_NewName_Offset), 0, null, newName);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, RenameSocket_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RenameSocket_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/EditorScriptingUtilities.EditorSkeletalMeshLibrary:RemoveLODs
    static readonly IntPtr RemoveLODs_NativeFunction;
    static readonly int RemoveLODs_ParamsSize;
    static readonly int RemoveLODs_SkeletalMesh_Offset;
    static readonly int RemoveLODs_ToRemoveLODs_Offset;
    static readonly int RemoveLODs_ToRemoveLODs_ElementSize;
    static readonly int RemoveLODs_ReturnValue_Offset;
    
    public static bool RemoveLODs(UnrealSharp.Engine.SkeletalMesh skeletalMesh, System.Collections.Generic.IList<int> toRemoveLODs)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveLODs_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.SkeletalMesh>.ToNative(IntPtr.Add(ParamsBuffer, RemoveLODs_SkeletalMesh_Offset), 0, null, skeletalMesh);
            IntPtr ToRemoveLODs_NativeBuffer = IntPtr.Add(ParamsBuffer, RemoveLODs_ToRemoveLODs_Offset);
            UnrealArrayCopyMarshaler<int> ToRemoveLODs_Marshaler = new UnrealArrayCopyMarshaler<int>(1, BlittableMarshaller<int>.ToNative, BlittableMarshaller<int>.FromNative, RemoveLODs_ToRemoveLODs_ElementSize);
            ToRemoveLODs_Marshaler.ToNative(ToRemoveLODs_NativeBuffer, 0, null, toRemoveLODs);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, RemoveLODs_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveLODs_ReturnValue_Offset), 0, null);
            
            UnrealArrayCopyMarshaler<int>.DestructInstance(ToRemoveLODs_NativeBuffer, 0);
            return returnValue;
        }
    }
    
    // Function /Script/EditorScriptingUtilities.EditorSkeletalMeshLibrary:ReimportAllCustomLODs
    static readonly IntPtr ReimportAllCustomLODs_NativeFunction;
    static readonly int ReimportAllCustomLODs_ParamsSize;
    static readonly int ReimportAllCustomLODs_SkeletalMesh_Offset;
    static readonly int ReimportAllCustomLODs_ReturnValue_Offset;
    
    [Obsolete("The Editor Scripting Utilities Plugin is deprecated - Use the function in Skeletal Mesh Editor Subsystem")]
    public static bool ReimportAllCustomLODs(UnrealSharp.Engine.SkeletalMesh skeletalMesh)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ReimportAllCustomLODs_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.SkeletalMesh>.ToNative(IntPtr.Add(ParamsBuffer, ReimportAllCustomLODs_SkeletalMesh_Offset), 0, null, skeletalMesh);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ReimportAllCustomLODs_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, ReimportAllCustomLODs_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/EditorScriptingUtilities.EditorSkeletalMeshLibrary:RegenerateLOD
    static readonly IntPtr RegenerateLOD_NativeFunction;
    static readonly int RegenerateLOD_ParamsSize;
    static readonly int RegenerateLOD_SkeletalMesh_Offset;
    static readonly int RegenerateLOD_NewLODCount_Offset;
    static readonly int RegenerateLOD_bRegenerateEvenIfImported_Offset;
    static readonly int RegenerateLOD_bGenerateBaseLOD_Offset;
    static readonly int RegenerateLOD_ReturnValue_Offset;
    
    [Obsolete("The Editor Scripting Utilities Plugin is deprecated - Use the function in Skeletal Mesh Editor Subsystem")]
    public static bool RegenerateLOD(UnrealSharp.Engine.SkeletalMesh skeletalMesh, int newLODCount = 0, bool bRegenerateEvenIfImported = false, bool bGenerateBaseLOD = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RegenerateLOD_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.SkeletalMesh>.ToNative(IntPtr.Add(ParamsBuffer, RegenerateLOD_SkeletalMesh_Offset), 0, null, skeletalMesh);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, RegenerateLOD_NewLODCount_Offset), 0, null, newLODCount);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RegenerateLOD_bRegenerateEvenIfImported_Offset), 0, null, bRegenerateEvenIfImported);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RegenerateLOD_bGenerateBaseLOD_Offset), 0, null, bGenerateBaseLOD);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, RegenerateLOD_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RegenerateLOD_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/EditorScriptingUtilities.EditorSkeletalMeshLibrary:ImportLOD
    static readonly IntPtr ImportLOD_NativeFunction;
    static readonly int ImportLOD_ParamsSize;
    static readonly int ImportLOD_BaseMesh_Offset;
    static readonly int ImportLOD_LODIndex_Offset;
    static readonly int ImportLOD_SourceFilename_Offset;
    static readonly int ImportLOD_ReturnValue_Offset;
    
    [Obsolete("The Editor Scripting Utilities Plugin is deprecated - Use the function in Skeletal Mesh Editor Subsystem")]
    public static int ImportLOD(UnrealSharp.Engine.SkeletalMesh baseMesh, int lODIndex, string sourceFilename)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ImportLOD_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.SkeletalMesh>.ToNative(IntPtr.Add(ParamsBuffer, ImportLOD_BaseMesh_Offset), 0, null, baseMesh);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, ImportLOD_LODIndex_Offset), 0, null, lODIndex);
            IntPtr SourceFilename_NativePtr = IntPtr.Add(ParamsBuffer,ImportLOD_SourceFilename_Offset);
            StringMarshaller.ToNative(SourceFilename_NativePtr,0,null,sourceFilename);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ImportLOD_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, ImportLOD_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(SourceFilename_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/EditorScriptingUtilities.EditorSkeletalMeshLibrary:GetNumVerts
    static readonly IntPtr GetNumVerts_NativeFunction;
    static readonly int GetNumVerts_ParamsSize;
    static readonly int GetNumVerts_SkeletalMesh_Offset;
    static readonly int GetNumVerts_LODIndex_Offset;
    static readonly int GetNumVerts_ReturnValue_Offset;
    
    [Obsolete("The Editor Scripting Utilities Plugin is deprecated - Use the function in Skeletal Mesh Editor Subsystem")]
    public static int GetNumVerts(UnrealSharp.Engine.SkeletalMesh skeletalMesh, int lODIndex)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetNumVerts_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.SkeletalMesh>.ToNative(IntPtr.Add(ParamsBuffer, GetNumVerts_SkeletalMesh_Offset), 0, null, skeletalMesh);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetNumVerts_LODIndex_Offset), 0, null, lODIndex);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetNumVerts_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetNumVerts_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/EditorScriptingUtilities.EditorSkeletalMeshLibrary:GetLODCount
    static readonly IntPtr GetLODCount_NativeFunction;
    static readonly int GetLODCount_ParamsSize;
    static readonly int GetLODCount_SkeletalMesh_Offset;
    static readonly int GetLODCount_ReturnValue_Offset;
    
    [Obsolete("The Editor Scripting Utilities Plugin is deprecated - Use the function in Skeletal Mesh Editor Subsystem")]
    public static int GetLODCount(UnrealSharp.Engine.SkeletalMesh skeletalMesh)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetLODCount_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.SkeletalMesh>.ToNative(IntPtr.Add(ParamsBuffer, GetLODCount_SkeletalMesh_Offset), 0, null, skeletalMesh);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetLODCount_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetLODCount_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/EditorScriptingUtilities.EditorSkeletalMeshLibrary:GetLodBuildSettings
    static readonly IntPtr GetLodBuildSettings_NativeFunction;
    static readonly int GetLodBuildSettings_ParamsSize;
    static readonly int GetLodBuildSettings_SkeletalMesh_Offset;
    static readonly int GetLodBuildSettings_LodIndex_Offset;
    static readonly int GetLodBuildSettings_OutBuildOptions_Offset;
    
    [Obsolete("The Editor Scripting Utilities Plugin is deprecated - Use the function in Skeletal Mesh Editor Subsystem")]
    public static void GetLodBuildSettings(UnrealSharp.Engine.SkeletalMesh skeletalMesh, int lodIndex, out UnrealSharp.Engine.SkeletalMeshBuildSettings outBuildOptions)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetLodBuildSettings_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.SkeletalMesh>.ToNative(IntPtr.Add(ParamsBuffer, GetLodBuildSettings_SkeletalMesh_Offset), 0, null, skeletalMesh);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetLodBuildSettings_LodIndex_Offset), 0, null, lodIndex);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetLodBuildSettings_NativeFunction, ParamsBuffer);
            
            outBuildOptions = UnrealSharp.Engine.SkeletalMeshBuildSettingsMarshaler.FromNative(IntPtr.Add(ParamsBuffer, GetLodBuildSettings_OutBuildOptions_Offset), 0, null);
            
        }
    }
    
    // Function /Script/EditorScriptingUtilities.EditorSkeletalMeshLibrary:CreatePhysicsAsset
    static readonly IntPtr CreatePhysicsAsset_NativeFunction;
    static readonly int CreatePhysicsAsset_ParamsSize;
    static readonly int CreatePhysicsAsset_SkeletalMesh_Offset;
    static readonly int CreatePhysicsAsset_ReturnValue_Offset;
    
    public static UnrealSharp.Engine.PhysicsAsset CreatePhysicsAsset(UnrealSharp.Engine.SkeletalMesh skeletalMesh)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[CreatePhysicsAsset_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.SkeletalMesh>.ToNative(IntPtr.Add(ParamsBuffer, CreatePhysicsAsset_SkeletalMesh_Offset), 0, null, skeletalMesh);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, CreatePhysicsAsset_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.PhysicsAsset returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.PhysicsAsset>.FromNative(IntPtr.Add(ParamsBuffer, CreatePhysicsAsset_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class AnimNotifyState_Trail : UnrealSharp.Engine.AnimNotifyState
{
    
    static AnimNotifyState_Trail()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("AnimNotifyState_Trail");
        
        PSTemplate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "PSTemplate");
        FirstSocketName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "FirstSocketName");
        SecondSocketName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "SecondSocketName");
        WidthScaleMode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "WidthScaleMode");
        WidthScaleCurve_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "WidthScaleCurve");
        bRecycleSpawnedSystems_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bRecycleSpawnedSystems");
        bRecycleSpawnedSystems_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bRecycleSpawnedSystems");
        
        
        IntPtr OverridePSTemplate_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "OverridePSTemplate");
        OverridePSTemplate_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(OverridePSTemplate_NativeFunction);
        OverridePSTemplate_MeshComp_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(OverridePSTemplate_NativeFunction, "MeshComp");
        OverridePSTemplate_Animation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(OverridePSTemplate_NativeFunction, "Animation");
        OverridePSTemplate_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(OverridePSTemplate_NativeFunction, "ReturnValue");
        
        
    }
    
    protected AnimNotifyState_Trail(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ObjectProperty /Script/Engine.AnimNotifyState_Trail:PSTemplate
    static readonly int PSTemplate_Offset;
    
    public UnrealSharp.Engine.ParticleSystem PSTemplate
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.Engine.ParticleSystem>.FromNative(IntPtr.Add(NativeObject, PSTemplate_Offset), 0, this);
        }
    }
    
    // NameProperty /Script/Engine.AnimNotifyState_Trail:FirstSocketName
    static readonly int FirstSocketName_Offset;
    
    public Name FirstSocketName
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<Name>.FromNative(IntPtr.Add(NativeObject, FirstSocketName_Offset), 0, this);
        }
    }
    
    // NameProperty /Script/Engine.AnimNotifyState_Trail:SecondSocketName
    static readonly int SecondSocketName_Offset;
    
    public Name SecondSocketName
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<Name>.FromNative(IntPtr.Add(NativeObject, SecondSocketName_Offset), 0, this);
        }
    }
    
    // ByteProperty /Script/Engine.AnimNotifyState_Trail:WidthScaleMode
    static readonly int WidthScaleMode_Offset;
    
    public UnrealSharp.Engine.ETrailWidthMode WidthScaleMode
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Engine.ETrailWidthMode>.FromNative(IntPtr.Add(NativeObject, WidthScaleMode_Offset), 0, this);
        }
    }
    
    // NameProperty /Script/Engine.AnimNotifyState_Trail:WidthScaleCurve
    static readonly int WidthScaleCurve_Offset;
    
    public Name WidthScaleCurve
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<Name>.FromNative(IntPtr.Add(NativeObject, WidthScaleCurve_Offset), 0, this);
        }
    }
    
    // BoolProperty /Script/Engine.AnimNotifyState_Trail:bRecycleSpawnedSystems
    static readonly int bRecycleSpawnedSystems_Offset;
    static readonly IntPtr bRecycleSpawnedSystems_NativeProperty;
    
    public bool bRecycleSpawnedSystems
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bRecycleSpawnedSystems_NativeProperty, bRecycleSpawnedSystems_Offset);
        }
    }
    
    // Function /Script/Engine.AnimNotifyState_Trail:OverridePSTemplate
    IntPtr OverridePSTemplate_NativeFunction;
    static readonly int OverridePSTemplate_ParamsSize;
    static readonly int OverridePSTemplate_MeshComp_Offset;
    static readonly int OverridePSTemplate_Animation_Offset;
    static readonly int OverridePSTemplate_ReturnValue_Offset;
    
    [UFunction(FunctionFlags.BlueprintEvent)]
    public virtual UnrealSharp.Engine.ParticleSystem OverridePSTemplate(UnrealSharp.Engine.SkeletalMeshComponent meshComp, UnrealSharp.Engine.AnimSequenceBase animation)
    {
        unsafe
        {
            if (OverridePSTemplate_NativeFunction == IntPtr.Zero)
            {
                OverridePSTemplate_NativeFunction = UClassExporter.CallGetNativeFunctionFromInstanceAndName(NativeObject, "OverridePSTemplate");
            }
            byte* ParamsBufferAllocation = stackalloc byte[OverridePSTemplate_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.SkeletalMeshComponent>.ToNative(IntPtr.Add(ParamsBuffer, OverridePSTemplate_MeshComp_Offset), 0, null, meshComp);
            ObjectMarshaller<UnrealSharp.Engine.AnimSequenceBase>.ToNative(IntPtr.Add(ParamsBuffer, OverridePSTemplate_Animation_Offset), 0, null, animation);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, OverridePSTemplate_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.ParticleSystem returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.ParticleSystem>.FromNative(IntPtr.Add(ParamsBuffer, OverridePSTemplate_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    //Hide implementation function from Intellisense/ReSharper
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    protected virtual UnrealSharp.Engine.ParticleSystem OverridePSTemplate_Implementation(UnrealSharp.Engine.SkeletalMeshComponent meshComp, UnrealSharp.Engine.AnimSequenceBase animation)
    {
        return default(UnrealSharp.Engine.ParticleSystem);
    }
    void Invoke_OverridePSTemplate(IntPtr buffer, IntPtr returnBuffer)
    {
        unsafe
        {
            UnrealSharp.Engine.SkeletalMeshComponent meshComp = ObjectMarshaller<UnrealSharp.Engine.SkeletalMeshComponent>.FromNative(IntPtr.Add(buffer, OverridePSTemplate_MeshComp_Offset), 0, null);
            UnrealSharp.Engine.AnimSequenceBase animation = ObjectMarshaller<UnrealSharp.Engine.AnimSequenceBase>.FromNative(IntPtr.Add(buffer, OverridePSTemplate_Animation_Offset), 0, null);
            UnrealSharp.Engine.ParticleSystem returnValue = OverridePSTemplate_Implementation(meshComp, animation);
            ObjectMarshaller<UnrealSharp.Engine.ParticleSystem>.ToNative(IntPtr.Add(returnBuffer, 0), 0, null, returnValue);
        }
    }
    
    
}
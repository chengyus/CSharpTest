// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class AnimNotify_PlayParticleEffect : UnrealSharp.Engine.AnimNotify
{
    
    static AnimNotify_PlayParticleEffect()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("AnimNotify_PlayParticleEffect");
        
        PSTemplate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "PSTemplate");
        LocationOffset_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "LocationOffset");
        RotationOffset_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "RotationOffset");
        Attached_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Attached");
        Attached_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "Attached");
        SocketName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "SocketName");
        
        
        
    }
    
    protected AnimNotify_PlayParticleEffect(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ObjectProperty /Script/Engine.AnimNotify_PlayParticleEffect:PSTemplate
    static readonly int PSTemplate_Offset;
    
    public UnrealSharp.Engine.ParticleSystem PSTemplate
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.Engine.ParticleSystem>.FromNative(IntPtr.Add(NativeObject, PSTemplate_Offset), 0, this);
        }
    }
    
    // StructProperty /Script/Engine.AnimNotify_PlayParticleEffect:LocationOffset
    static readonly int LocationOffset_Offset;
    
    public System.DoubleNumerics.Vector3 LocationOffset
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(NativeObject, LocationOffset_Offset), 0, this);
        }
    }
    
    // StructProperty /Script/Engine.AnimNotify_PlayParticleEffect:RotationOffset
    static readonly int RotationOffset_Offset;
    
    public UnrealSharp.Rotator RotationOffset
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Rotator>.FromNative(IntPtr.Add(NativeObject, RotationOffset_Offset), 0, this);
        }
    }
    
    // BoolProperty /Script/Engine.AnimNotify_PlayParticleEffect:Attached
    static readonly int Attached_Offset;
    static readonly IntPtr Attached_NativeProperty;
    
    public bool Attached
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, Attached_NativeProperty, Attached_Offset);
        }
    }
    
    // NameProperty /Script/Engine.AnimNotify_PlayParticleEffect:SocketName
    static readonly int SocketName_Offset;
    
    public Name SocketName
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<Name>.FromNative(IntPtr.Add(NativeObject, SocketName_Offset), 0, this);
        }
    }
    
    
}
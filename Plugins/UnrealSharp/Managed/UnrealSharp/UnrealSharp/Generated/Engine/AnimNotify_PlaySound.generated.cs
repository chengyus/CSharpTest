// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class AnimNotify_PlaySound : UnrealSharp.Engine.AnimNotify
{
    
    static AnimNotify_PlaySound()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("AnimNotify_PlaySound");
        
        Sound_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Sound");
        VolumeMultiplier_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "VolumeMultiplier");
        PitchMultiplier_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "PitchMultiplier");
        bFollow_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bFollow");
        bFollow_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bFollow");
        AttachName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "AttachName");
        
        
        
    }
    
    protected AnimNotify_PlaySound(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ObjectProperty /Script/Engine.AnimNotify_PlaySound:Sound
    static readonly int Sound_Offset;
    
    public UnrealSharp.Engine.SoundBase Sound
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.Engine.SoundBase>.FromNative(IntPtr.Add(NativeObject, Sound_Offset), 0, this);
        }
    }
    
    // FloatProperty /Script/Engine.AnimNotify_PlaySound:VolumeMultiplier
    static readonly int VolumeMultiplier_Offset;
    
    public float VolumeMultiplier
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, VolumeMultiplier_Offset), 0, this);
        }
    }
    
    // FloatProperty /Script/Engine.AnimNotify_PlaySound:PitchMultiplier
    static readonly int PitchMultiplier_Offset;
    
    public float PitchMultiplier
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, PitchMultiplier_Offset), 0, this);
        }
    }
    
    // BoolProperty /Script/Engine.AnimNotify_PlaySound:bFollow
    static readonly int bFollow_Offset;
    static readonly IntPtr bFollow_NativeProperty;
    
    public bool bFollow
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bFollow_NativeProperty, bFollow_Offset);
        }
    }
    
    // NameProperty /Script/Engine.AnimNotify_PlaySound:AttachName
    static readonly int AttachName_Offset;
    
    public Name AttachName
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<Name>.FromNative(IntPtr.Add(NativeObject, AttachName_Offset), 0, this);
        }
    }
    
    
}
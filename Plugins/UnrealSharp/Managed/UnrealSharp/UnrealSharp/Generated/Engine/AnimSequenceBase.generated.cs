// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
abstract public partial class AnimSequenceBase : UnrealSharp.Engine.AnimationAsset
{
    
    static AnimSequenceBase()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("AnimSequenceBase");
        
        SequenceLength_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "SequenceLength");
        DataModel_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "DataModel");
        
        
        
    }
    
    protected AnimSequenceBase(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // FloatProperty /Script/Engine.AnimSequenceBase:SequenceLength
    static readonly int SequenceLength_Offset;
    
    public float SequenceLength
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, SequenceLength_Offset), 0, this);
        }
    }
    
    // ObjectProperty /Script/Engine.AnimSequenceBase:DataModel
    static readonly int DataModel_Offset;
    
    public UnrealSharp.Engine.AnimDataModel DataModel
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.Engine.AnimDataModel>.FromNative(IntPtr.Add(NativeObject, DataModel_Offset), 0, this);
        }
    }
    
    
}
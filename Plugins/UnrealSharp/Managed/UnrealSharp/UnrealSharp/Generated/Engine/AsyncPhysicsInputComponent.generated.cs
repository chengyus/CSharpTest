// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class AsyncPhysicsInputComponent : UnrealSharp.Engine.ActorComponent
{
    
    static AsyncPhysicsInputComponent()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("AsyncPhysicsInputComponent");
        
        
        GetDataToWrite_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetDataToWrite");
        GetDataToWrite_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetDataToWrite_NativeFunction);
        GetDataToWrite_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDataToWrite_NativeFunction, "ReturnValue");
        GetDataToConsume_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetDataToConsume");
        GetDataToConsume_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetDataToConsume_NativeFunction);
        GetDataToConsume_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDataToConsume_NativeFunction, "ReturnValue");
        
        
    }
    
    protected AsyncPhysicsInputComponent(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Engine.AsyncPhysicsInputComponent:GetDataToWrite
    static readonly IntPtr GetDataToWrite_NativeFunction;
    static readonly int GetDataToWrite_ParamsSize;
    static readonly int GetDataToWrite_ReturnValue_Offset;
    
    public UnrealSharp.Engine.AsyncPhysicsData GetDataToWrite()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetDataToWrite_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetDataToWrite_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.AsyncPhysicsData returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.AsyncPhysicsData>.FromNative(IntPtr.Add(ParamsBuffer, GetDataToWrite_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.AsyncPhysicsInputComponent:GetDataToConsume
    static readonly IntPtr GetDataToConsume_NativeFunction;
    static readonly int GetDataToConsume_ParamsSize;
    static readonly int GetDataToConsume_ReturnValue_Offset;
    
    public UnrealSharp.Engine.AsyncPhysicsData GetDataToConsume()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetDataToConsume_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetDataToConsume_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.AsyncPhysicsData returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.AsyncPhysicsData>.FromNative(IntPtr.Add(ParamsBuffer, GetDataToConsume_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
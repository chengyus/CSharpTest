// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class AvoidanceManager : UnrealSharp.CoreUObject.Object
{
    
    static AvoidanceManager()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("AvoidanceManager");
        
        
        RegisterMovementComponent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RegisterMovementComponent");
        RegisterMovementComponent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RegisterMovementComponent_NativeFunction);
        RegisterMovementComponent_MovementComp_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RegisterMovementComponent_NativeFunction, "MovementComp");
        RegisterMovementComponent_AvoidanceWeight_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RegisterMovementComponent_NativeFunction, "AvoidanceWeight");
        RegisterMovementComponent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RegisterMovementComponent_NativeFunction, "ReturnValue");
        GetObjectCount_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetObjectCount");
        GetObjectCount_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetObjectCount_NativeFunction);
        GetObjectCount_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetObjectCount_NativeFunction, "ReturnValue");
        GetNewAvoidanceUID_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetNewAvoidanceUID");
        GetNewAvoidanceUID_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetNewAvoidanceUID_NativeFunction);
        GetNewAvoidanceUID_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetNewAvoidanceUID_NativeFunction, "ReturnValue");
        GetAvoidanceVelocityForComponent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetAvoidanceVelocityForComponent");
        GetAvoidanceVelocityForComponent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetAvoidanceVelocityForComponent_NativeFunction);
        GetAvoidanceVelocityForComponent_MovementComp_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAvoidanceVelocityForComponent_NativeFunction, "MovementComp");
        GetAvoidanceVelocityForComponent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAvoidanceVelocityForComponent_NativeFunction, "ReturnValue");
        
        
    }
    
    protected AvoidanceManager(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Engine.AvoidanceManager:RegisterMovementComponent
    static readonly IntPtr RegisterMovementComponent_NativeFunction;
    static readonly int RegisterMovementComponent_ParamsSize;
    static readonly int RegisterMovementComponent_MovementComp_Offset;
    static readonly int RegisterMovementComponent_AvoidanceWeight_Offset;
    static readonly int RegisterMovementComponent_ReturnValue_Offset;
    
    public bool RegisterMovementComponent(UnrealSharp.Engine.MovementComponent movementComp, float avoidanceWeight = 0.500000f)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RegisterMovementComponent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.MovementComponent>.ToNative(IntPtr.Add(ParamsBuffer, RegisterMovementComponent_MovementComp_Offset), 0, null, movementComp);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, RegisterMovementComponent_AvoidanceWeight_Offset), 0, null, avoidanceWeight);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RegisterMovementComponent_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RegisterMovementComponent_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.AvoidanceManager:GetObjectCount
    static readonly IntPtr GetObjectCount_NativeFunction;
    static readonly int GetObjectCount_ParamsSize;
    static readonly int GetObjectCount_ReturnValue_Offset;
    
    public int GetObjectCount()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetObjectCount_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetObjectCount_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetObjectCount_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.AvoidanceManager:GetNewAvoidanceUID
    static readonly IntPtr GetNewAvoidanceUID_NativeFunction;
    static readonly int GetNewAvoidanceUID_ParamsSize;
    static readonly int GetNewAvoidanceUID_ReturnValue_Offset;
    
    public int GetNewAvoidanceUID()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetNewAvoidanceUID_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetNewAvoidanceUID_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetNewAvoidanceUID_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.AvoidanceManager:GetAvoidanceVelocityForComponent
    static readonly IntPtr GetAvoidanceVelocityForComponent_NativeFunction;
    static readonly int GetAvoidanceVelocityForComponent_ParamsSize;
    static readonly int GetAvoidanceVelocityForComponent_MovementComp_Offset;
    static readonly int GetAvoidanceVelocityForComponent_ReturnValue_Offset;
    
    public System.DoubleNumerics.Vector3 GetAvoidanceVelocityForComponent(UnrealSharp.Engine.MovementComponent movementComp)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetAvoidanceVelocityForComponent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.MovementComponent>.ToNative(IntPtr.Add(ParamsBuffer, GetAvoidanceVelocityForComponent_MovementComp_Offset), 0, null, movementComp);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetAvoidanceVelocityForComponent_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector3 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, GetAvoidanceVelocityForComponent_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
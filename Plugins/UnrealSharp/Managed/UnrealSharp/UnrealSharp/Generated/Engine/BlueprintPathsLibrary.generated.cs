// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class Paths : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static Paths()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("BlueprintPathsLibrary");
        
        
        VideoCaptureDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "VideoCaptureDir");
        VideoCaptureDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(VideoCaptureDir_NativeFunction);
        VideoCaptureDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(VideoCaptureDir_NativeFunction, "ReturnValue");
        Split_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Split");
        Split_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Split_NativeFunction);
        Split_InPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Split_NativeFunction, "InPath");
        Split_PathPart_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Split_NativeFunction, "PathPart");
        Split_FilenamePart_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Split_NativeFunction, "FilenamePart");
        Split_ExtensionPart_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Split_NativeFunction, "ExtensionPart");
        SourceConfigDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SourceConfigDir");
        SourceConfigDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SourceConfigDir_NativeFunction);
        SourceConfigDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SourceConfigDir_NativeFunction, "ReturnValue");
        ShouldSaveToUserDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ShouldSaveToUserDir");
        ShouldSaveToUserDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ShouldSaveToUserDir_NativeFunction);
        ShouldSaveToUserDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ShouldSaveToUserDir_NativeFunction, "ReturnValue");
        ShaderWorkingDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ShaderWorkingDir");
        ShaderWorkingDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ShaderWorkingDir_NativeFunction);
        ShaderWorkingDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ShaderWorkingDir_NativeFunction, "ReturnValue");
        SetProjectFilePath_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetProjectFilePath");
        SetProjectFilePath_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetProjectFilePath_NativeFunction);
        SetProjectFilePath_NewGameProjectFilePath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetProjectFilePath_NativeFunction, "NewGameProjectFilePath");
        SetExtension_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetExtension");
        SetExtension_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetExtension_NativeFunction);
        SetExtension_InPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetExtension_NativeFunction, "InPath");
        SetExtension_InNewExtension_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetExtension_NativeFunction, "InNewExtension");
        SetExtension_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetExtension_NativeFunction, "ReturnValue");
        ScreenShotDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ScreenShotDir");
        ScreenShotDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ScreenShotDir_NativeFunction);
        ScreenShotDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ScreenShotDir_NativeFunction, "ReturnValue");
        SandboxesDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SandboxesDir");
        SandboxesDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SandboxesDir_NativeFunction);
        SandboxesDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SandboxesDir_NativeFunction, "ReturnValue");
        RootDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RootDir");
        RootDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RootDir_NativeFunction);
        RootDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RootDir_NativeFunction, "ReturnValue");
        RemoveDuplicateSlashes_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveDuplicateSlashes");
        RemoveDuplicateSlashes_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveDuplicateSlashes_NativeFunction);
        RemoveDuplicateSlashes_InPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveDuplicateSlashes_NativeFunction, "InPath");
        RemoveDuplicateSlashes_OutPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveDuplicateSlashes_NativeFunction, "OutPath");
        ProjectUserDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ProjectUserDir");
        ProjectUserDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ProjectUserDir_NativeFunction);
        ProjectUserDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ProjectUserDir_NativeFunction, "ReturnValue");
        ProjectSavedDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ProjectSavedDir");
        ProjectSavedDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ProjectSavedDir_NativeFunction);
        ProjectSavedDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ProjectSavedDir_NativeFunction, "ReturnValue");
        ProjectPluginsDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ProjectPluginsDir");
        ProjectPluginsDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ProjectPluginsDir_NativeFunction);
        ProjectPluginsDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ProjectPluginsDir_NativeFunction, "ReturnValue");
        ProjectPersistentDownloadDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ProjectPersistentDownloadDir");
        ProjectPersistentDownloadDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ProjectPersistentDownloadDir_NativeFunction);
        ProjectPersistentDownloadDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ProjectPersistentDownloadDir_NativeFunction, "ReturnValue");
        ProjectModsDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ProjectModsDir");
        ProjectModsDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ProjectModsDir_NativeFunction);
        ProjectModsDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ProjectModsDir_NativeFunction, "ReturnValue");
        ProjectLogDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ProjectLogDir");
        ProjectLogDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ProjectLogDir_NativeFunction);
        ProjectLogDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ProjectLogDir_NativeFunction, "ReturnValue");
        ProjectIntermediateDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ProjectIntermediateDir");
        ProjectIntermediateDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ProjectIntermediateDir_NativeFunction);
        ProjectIntermediateDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ProjectIntermediateDir_NativeFunction, "ReturnValue");
        ProjectDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ProjectDir");
        ProjectDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ProjectDir_NativeFunction);
        ProjectDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ProjectDir_NativeFunction, "ReturnValue");
        ProjectContentDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ProjectContentDir");
        ProjectContentDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ProjectContentDir_NativeFunction);
        ProjectContentDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ProjectContentDir_NativeFunction, "ReturnValue");
        ProjectConfigDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ProjectConfigDir");
        ProjectConfigDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ProjectConfigDir_NativeFunction);
        ProjectConfigDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ProjectConfigDir_NativeFunction, "ReturnValue");
        ProfilingDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ProfilingDir");
        ProfilingDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ProfilingDir_NativeFunction);
        ProfilingDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ProfilingDir_NativeFunction, "ReturnValue");
        NormalizeFilename_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "NormalizeFilename");
        NormalizeFilename_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(NormalizeFilename_NativeFunction);
        NormalizeFilename_InPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NormalizeFilename_NativeFunction, "InPath");
        NormalizeFilename_OutPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NormalizeFilename_NativeFunction, "OutPath");
        NormalizeDirectoryName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "NormalizeDirectoryName");
        NormalizeDirectoryName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(NormalizeDirectoryName_NativeFunction);
        NormalizeDirectoryName_InPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NormalizeDirectoryName_NativeFunction, "InPath");
        NormalizeDirectoryName_OutPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NormalizeDirectoryName_NativeFunction, "OutPath");
        MakeValidFileName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "MakeValidFileName");
        MakeValidFileName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(MakeValidFileName_NativeFunction);
        MakeValidFileName_InString_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeValidFileName_NativeFunction, "InString");
        MakeValidFileName_InReplacementChar_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeValidFileName_NativeFunction, "InReplacementChar");
        MakeValidFileName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeValidFileName_NativeFunction, "ReturnValue");
        MakeStandardFilename_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "MakeStandardFilename");
        MakeStandardFilename_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(MakeStandardFilename_NativeFunction);
        MakeStandardFilename_InPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeStandardFilename_NativeFunction, "InPath");
        MakeStandardFilename_OutPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeStandardFilename_NativeFunction, "OutPath");
        MakePlatformFilename_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "MakePlatformFilename");
        MakePlatformFilename_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(MakePlatformFilename_NativeFunction);
        MakePlatformFilename_InPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakePlatformFilename_NativeFunction, "InPath");
        MakePlatformFilename_OutPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakePlatformFilename_NativeFunction, "OutPath");
        MakePathRelativeTo_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "MakePathRelativeTo");
        MakePathRelativeTo_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(MakePathRelativeTo_NativeFunction);
        MakePathRelativeTo_InPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakePathRelativeTo_NativeFunction, "InPath");
        MakePathRelativeTo_InRelativeTo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakePathRelativeTo_NativeFunction, "InRelativeTo");
        MakePathRelativeTo_OutPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakePathRelativeTo_NativeFunction, "OutPath");
        MakePathRelativeTo_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakePathRelativeTo_NativeFunction, "ReturnValue");
        LaunchDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "LaunchDir");
        LaunchDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(LaunchDir_NativeFunction);
        LaunchDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LaunchDir_NativeFunction, "ReturnValue");
        IsSamePath_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsSamePath");
        IsSamePath_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsSamePath_NativeFunction);
        IsSamePath_PathA_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsSamePath_NativeFunction, "PathA");
        IsSamePath_PathB_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsSamePath_NativeFunction, "PathB");
        IsSamePath_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsSamePath_NativeFunction, "ReturnValue");
        IsRestrictedPath_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsRestrictedPath");
        IsRestrictedPath_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsRestrictedPath_NativeFunction);
        IsRestrictedPath_InPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsRestrictedPath_NativeFunction, "InPath");
        IsRestrictedPath_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsRestrictedPath_NativeFunction, "ReturnValue");
        IsRelative_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsRelative");
        IsRelative_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsRelative_NativeFunction);
        IsRelative_InPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsRelative_NativeFunction, "InPath");
        IsRelative_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsRelative_NativeFunction, "ReturnValue");
        IsProjectFilePathSet_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsProjectFilePathSet");
        IsProjectFilePathSet_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsProjectFilePathSet_NativeFunction);
        IsProjectFilePathSet_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsProjectFilePathSet_NativeFunction, "ReturnValue");
        IsDrive_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsDrive");
        IsDrive_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsDrive_NativeFunction);
        IsDrive_InPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsDrive_NativeFunction, "InPath");
        IsDrive_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsDrive_NativeFunction, "ReturnValue");
        HasProjectPersistentDownloadDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "HasProjectPersistentDownloadDir");
        HasProjectPersistentDownloadDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(HasProjectPersistentDownloadDir_NativeFunction);
        HasProjectPersistentDownloadDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasProjectPersistentDownloadDir_NativeFunction, "ReturnValue");
        GetRelativePathToRoot_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetRelativePathToRoot");
        GetRelativePathToRoot_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetRelativePathToRoot_NativeFunction);
        GetRelativePathToRoot_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetRelativePathToRoot_NativeFunction, "ReturnValue");
        GetProjectFilePath_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetProjectFilePath");
        GetProjectFilePath_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetProjectFilePath_NativeFunction);
        GetProjectFilePath_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetProjectFilePath_NativeFunction, "ReturnValue");
        GetPath_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetPath");
        GetPath_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetPath_NativeFunction);
        GetPath_InPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetPath_NativeFunction, "InPath");
        GetPath_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetPath_NativeFunction, "ReturnValue");
        GetInvalidFileSystemChars_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetInvalidFileSystemChars");
        GetInvalidFileSystemChars_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetInvalidFileSystemChars_NativeFunction);
        GetInvalidFileSystemChars_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetInvalidFileSystemChars_NativeFunction, "ReturnValue");
        GetExtension_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetExtension");
        GetExtension_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetExtension_NativeFunction);
        GetExtension_InPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetExtension_NativeFunction, "InPath");
        GetExtension_bIncludeDot_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetExtension_NativeFunction, "bIncludeDot");
        GetExtension_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetExtension_NativeFunction, "ReturnValue");
        GetCleanFilename_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCleanFilename");
        GetCleanFilename_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCleanFilename_NativeFunction);
        GetCleanFilename_InPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCleanFilename_NativeFunction, "InPath");
        GetCleanFilename_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCleanFilename_NativeFunction, "ReturnValue");
        GetBaseFilename_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBaseFilename");
        GetBaseFilename_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBaseFilename_NativeFunction);
        GetBaseFilename_InPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBaseFilename_NativeFunction, "InPath");
        GetBaseFilename_bRemovePath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBaseFilename_NativeFunction, "bRemovePath");
        GetBaseFilename_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBaseFilename_NativeFunction, "ReturnValue");
        GeneratedConfigDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GeneratedConfigDir");
        GeneratedConfigDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GeneratedConfigDir_NativeFunction);
        GeneratedConfigDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GeneratedConfigDir_NativeFunction, "ReturnValue");
        GameUserDeveloperDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GameUserDeveloperDir");
        GameUserDeveloperDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GameUserDeveloperDir_NativeFunction);
        GameUserDeveloperDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GameUserDeveloperDir_NativeFunction, "ReturnValue");
        GameSourceDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GameSourceDir");
        GameSourceDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GameSourceDir_NativeFunction);
        GameSourceDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GameSourceDir_NativeFunction, "ReturnValue");
        GameDevelopersDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GameDevelopersDir");
        GameDevelopersDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GameDevelopersDir_NativeFunction);
        GameDevelopersDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GameDevelopersDir_NativeFunction, "ReturnValue");
        GameAgnosticSavedDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GameAgnosticSavedDir");
        GameAgnosticSavedDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GameAgnosticSavedDir_NativeFunction);
        GameAgnosticSavedDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GameAgnosticSavedDir_NativeFunction, "ReturnValue");
        FileExists_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "FileExists");
        FileExists_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(FileExists_NativeFunction);
        FileExists_InPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(FileExists_NativeFunction, "InPath");
        FileExists_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(FileExists_NativeFunction, "ReturnValue");
        FeaturePackDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "FeaturePackDir");
        FeaturePackDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(FeaturePackDir_NativeFunction);
        FeaturePackDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(FeaturePackDir_NativeFunction, "ReturnValue");
        EnterprisePluginsDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "EnterprisePluginsDir");
        EnterprisePluginsDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(EnterprisePluginsDir_NativeFunction);
        EnterprisePluginsDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EnterprisePluginsDir_NativeFunction, "ReturnValue");
        EnterpriseFeaturePackDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "EnterpriseFeaturePackDir");
        EnterpriseFeaturePackDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(EnterpriseFeaturePackDir_NativeFunction);
        EnterpriseFeaturePackDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EnterpriseFeaturePackDir_NativeFunction, "ReturnValue");
        EnterpriseDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "EnterpriseDir");
        EnterpriseDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(EnterpriseDir_NativeFunction);
        EnterpriseDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EnterpriseDir_NativeFunction, "ReturnValue");
        EngineVersionAgnosticUserDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "EngineVersionAgnosticUserDir");
        EngineVersionAgnosticUserDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(EngineVersionAgnosticUserDir_NativeFunction);
        EngineVersionAgnosticUserDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EngineVersionAgnosticUserDir_NativeFunction, "ReturnValue");
        EngineUserDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "EngineUserDir");
        EngineUserDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(EngineUserDir_NativeFunction);
        EngineUserDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EngineUserDir_NativeFunction, "ReturnValue");
        EngineSourceDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "EngineSourceDir");
        EngineSourceDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(EngineSourceDir_NativeFunction);
        EngineSourceDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EngineSourceDir_NativeFunction, "ReturnValue");
        EngineSavedDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "EngineSavedDir");
        EngineSavedDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(EngineSavedDir_NativeFunction);
        EngineSavedDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EngineSavedDir_NativeFunction, "ReturnValue");
        EnginePluginsDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "EnginePluginsDir");
        EnginePluginsDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(EnginePluginsDir_NativeFunction);
        EnginePluginsDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EnginePluginsDir_NativeFunction, "ReturnValue");
        EngineIntermediateDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "EngineIntermediateDir");
        EngineIntermediateDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(EngineIntermediateDir_NativeFunction);
        EngineIntermediateDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EngineIntermediateDir_NativeFunction, "ReturnValue");
        EngineDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "EngineDir");
        EngineDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(EngineDir_NativeFunction);
        EngineDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EngineDir_NativeFunction, "ReturnValue");
        EngineContentDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "EngineContentDir");
        EngineContentDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(EngineContentDir_NativeFunction);
        EngineContentDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EngineContentDir_NativeFunction, "ReturnValue");
        EngineConfigDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "EngineConfigDir");
        EngineConfigDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(EngineConfigDir_NativeFunction);
        EngineConfigDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EngineConfigDir_NativeFunction, "ReturnValue");
        DirectoryExists_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "DirectoryExists");
        DirectoryExists_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(DirectoryExists_NativeFunction);
        DirectoryExists_InPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(DirectoryExists_NativeFunction, "InPath");
        DirectoryExists_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(DirectoryExists_NativeFunction, "ReturnValue");
        DiffDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "DiffDir");
        DiffDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(DiffDir_NativeFunction);
        DiffDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(DiffDir_NativeFunction, "ReturnValue");
        CreateTempFilename_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CreateTempFilename");
        CreateTempFilename_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(CreateTempFilename_NativeFunction);
        CreateTempFilename_Path_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CreateTempFilename_NativeFunction, "Path");
        CreateTempFilename_Prefix_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CreateTempFilename_NativeFunction, "Prefix");
        CreateTempFilename_Extension_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CreateTempFilename_NativeFunction, "Extension");
        CreateTempFilename_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CreateTempFilename_NativeFunction, "ReturnValue");
        ConvertToSandboxPath_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ConvertToSandboxPath");
        ConvertToSandboxPath_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ConvertToSandboxPath_NativeFunction);
        ConvertToSandboxPath_InPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ConvertToSandboxPath_NativeFunction, "InPath");
        ConvertToSandboxPath_InSandboxName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ConvertToSandboxPath_NativeFunction, "InSandboxName");
        ConvertToSandboxPath_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ConvertToSandboxPath_NativeFunction, "ReturnValue");
        ConvertRelativePathToFull_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ConvertRelativePathToFull");
        ConvertRelativePathToFull_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ConvertRelativePathToFull_NativeFunction);
        ConvertRelativePathToFull_InPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ConvertRelativePathToFull_NativeFunction, "InPath");
        ConvertRelativePathToFull_InBasePath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ConvertRelativePathToFull_NativeFunction, "InBasePath");
        ConvertRelativePathToFull_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ConvertRelativePathToFull_NativeFunction, "ReturnValue");
        ConvertFromSandboxPath_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ConvertFromSandboxPath");
        ConvertFromSandboxPath_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ConvertFromSandboxPath_NativeFunction);
        ConvertFromSandboxPath_InPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ConvertFromSandboxPath_NativeFunction, "InPath");
        ConvertFromSandboxPath_InSandboxName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ConvertFromSandboxPath_NativeFunction, "InSandboxName");
        ConvertFromSandboxPath_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ConvertFromSandboxPath_NativeFunction, "ReturnValue");
        CollapseRelativeDirectories_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CollapseRelativeDirectories");
        CollapseRelativeDirectories_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(CollapseRelativeDirectories_NativeFunction);
        CollapseRelativeDirectories_InPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CollapseRelativeDirectories_NativeFunction, "InPath");
        CollapseRelativeDirectories_OutPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CollapseRelativeDirectories_NativeFunction, "OutPath");
        CollapseRelativeDirectories_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CollapseRelativeDirectories_NativeFunction, "ReturnValue");
        CloudDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CloudDir");
        CloudDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(CloudDir_NativeFunction);
        CloudDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CloudDir_NativeFunction, "ReturnValue");
        ChangeExtension_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ChangeExtension");
        ChangeExtension_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ChangeExtension_NativeFunction);
        ChangeExtension_InPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ChangeExtension_NativeFunction, "InPath");
        ChangeExtension_InNewExtension_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ChangeExtension_NativeFunction, "InNewExtension");
        ChangeExtension_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ChangeExtension_NativeFunction, "ReturnValue");
        BugItDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "BugItDir");
        BugItDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(BugItDir_NativeFunction);
        BugItDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BugItDir_NativeFunction, "ReturnValue");
        AutomationTransientDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AutomationTransientDir");
        AutomationTransientDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AutomationTransientDir_NativeFunction);
        AutomationTransientDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AutomationTransientDir_NativeFunction, "ReturnValue");
        AutomationLogDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AutomationLogDir");
        AutomationLogDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AutomationLogDir_NativeFunction);
        AutomationLogDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AutomationLogDir_NativeFunction, "ReturnValue");
        AutomationDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AutomationDir");
        AutomationDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AutomationDir_NativeFunction);
        AutomationDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AutomationDir_NativeFunction, "ReturnValue");
        
        
    }
    
    protected Paths(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Engine.BlueprintPathsLibrary:VideoCaptureDir
    static readonly IntPtr VideoCaptureDir_NativeFunction;
    static readonly int VideoCaptureDir_ParamsSize;
    static readonly int VideoCaptureDir_ReturnValue_Offset;
    
    public static string VideoCaptureDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[VideoCaptureDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, VideoCaptureDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,VideoCaptureDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:Split
    static readonly IntPtr Split_NativeFunction;
    static readonly int Split_ParamsSize;
    static readonly int Split_InPath_Offset;
    static readonly int Split_PathPart_Offset;
    static readonly int Split_FilenamePart_Offset;
    static readonly int Split_ExtensionPart_Offset;
    
    public static void Split(string inPath, out string pathPart, out string filenamePart, out string extensionPart)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Split_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPath_NativePtr = IntPtr.Add(ParamsBuffer,Split_InPath_Offset);
            StringMarshaller.ToNative(InPath_NativePtr,0,null,inPath);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, Split_NativeFunction, ParamsBuffer);
            
            IntPtr PathPart_NativePtr = IntPtr.Add(ParamsBuffer,Split_PathPart_Offset);
            pathPart = StringMarshaller.FromNative(PathPart_NativePtr,0,null);
            StringMarshaller.DestructInstance(PathPart_NativePtr, 0);
            IntPtr FilenamePart_NativePtr = IntPtr.Add(ParamsBuffer,Split_FilenamePart_Offset);
            filenamePart = StringMarshaller.FromNative(FilenamePart_NativePtr,0,null);
            StringMarshaller.DestructInstance(FilenamePart_NativePtr, 0);
            IntPtr ExtensionPart_NativePtr = IntPtr.Add(ParamsBuffer,Split_ExtensionPart_Offset);
            extensionPart = StringMarshaller.FromNative(ExtensionPart_NativePtr,0,null);
            StringMarshaller.DestructInstance(ExtensionPart_NativePtr, 0);
            
            StringMarshaller.DestructInstance(InPath_NativePtr, 0);
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:SourceConfigDir
    static readonly IntPtr SourceConfigDir_NativeFunction;
    static readonly int SourceConfigDir_ParamsSize;
    static readonly int SourceConfigDir_ReturnValue_Offset;
    
    public static string SourceConfigDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SourceConfigDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SourceConfigDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,SourceConfigDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:ShouldSaveToUserDir
    static readonly IntPtr ShouldSaveToUserDir_NativeFunction;
    static readonly int ShouldSaveToUserDir_ParamsSize;
    static readonly int ShouldSaveToUserDir_ReturnValue_Offset;
    
    public static bool ShouldSaveToUserDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ShouldSaveToUserDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ShouldSaveToUserDir_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, ShouldSaveToUserDir_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:ShaderWorkingDir
    static readonly IntPtr ShaderWorkingDir_NativeFunction;
    static readonly int ShaderWorkingDir_ParamsSize;
    static readonly int ShaderWorkingDir_ReturnValue_Offset;
    
    public static string ShaderWorkingDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ShaderWorkingDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ShaderWorkingDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,ShaderWorkingDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:SetProjectFilePath
    static readonly IntPtr SetProjectFilePath_NativeFunction;
    static readonly int SetProjectFilePath_ParamsSize;
    static readonly int SetProjectFilePath_NewGameProjectFilePath_Offset;
    
    public static void SetProjectFilePath(string newGameProjectFilePath)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetProjectFilePath_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr NewGameProjectFilePath_NativePtr = IntPtr.Add(ParamsBuffer,SetProjectFilePath_NewGameProjectFilePath_Offset);
            StringMarshaller.ToNative(NewGameProjectFilePath_NativePtr,0,null,newGameProjectFilePath);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetProjectFilePath_NativeFunction, ParamsBuffer);
            
            StringMarshaller.DestructInstance(NewGameProjectFilePath_NativePtr, 0);
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:SetExtension
    static readonly IntPtr SetExtension_NativeFunction;
    static readonly int SetExtension_ParamsSize;
    static readonly int SetExtension_InPath_Offset;
    static readonly int SetExtension_InNewExtension_Offset;
    static readonly int SetExtension_ReturnValue_Offset;
    
    public static string SetExtension(string inPath, string inNewExtension)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetExtension_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPath_NativePtr = IntPtr.Add(ParamsBuffer,SetExtension_InPath_Offset);
            StringMarshaller.ToNative(InPath_NativePtr,0,null,inPath);
            IntPtr InNewExtension_NativePtr = IntPtr.Add(ParamsBuffer,SetExtension_InNewExtension_Offset);
            StringMarshaller.ToNative(InNewExtension_NativePtr,0,null,inNewExtension);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetExtension_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,SetExtension_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            StringMarshaller.DestructInstance(InPath_NativePtr, 0);
            StringMarshaller.DestructInstance(InNewExtension_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:ScreenShotDir
    static readonly IntPtr ScreenShotDir_NativeFunction;
    static readonly int ScreenShotDir_ParamsSize;
    static readonly int ScreenShotDir_ReturnValue_Offset;
    
    public static string ScreenShotDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ScreenShotDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ScreenShotDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,ScreenShotDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:SandboxesDir
    static readonly IntPtr SandboxesDir_NativeFunction;
    static readonly int SandboxesDir_ParamsSize;
    static readonly int SandboxesDir_ReturnValue_Offset;
    
    public static string SandboxesDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SandboxesDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SandboxesDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,SandboxesDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:RootDir
    static readonly IntPtr RootDir_NativeFunction;
    static readonly int RootDir_ParamsSize;
    static readonly int RootDir_ReturnValue_Offset;
    
    public static string RootDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RootDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, RootDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,RootDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:RemoveDuplicateSlashes
    static readonly IntPtr RemoveDuplicateSlashes_NativeFunction;
    static readonly int RemoveDuplicateSlashes_ParamsSize;
    static readonly int RemoveDuplicateSlashes_InPath_Offset;
    static readonly int RemoveDuplicateSlashes_OutPath_Offset;
    
    public static void RemoveDuplicateSlashes(string inPath, out string outPath)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveDuplicateSlashes_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPath_NativePtr = IntPtr.Add(ParamsBuffer,RemoveDuplicateSlashes_InPath_Offset);
            StringMarshaller.ToNative(InPath_NativePtr,0,null,inPath);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, RemoveDuplicateSlashes_NativeFunction, ParamsBuffer);
            
            IntPtr OutPath_NativePtr = IntPtr.Add(ParamsBuffer,RemoveDuplicateSlashes_OutPath_Offset);
            outPath = StringMarshaller.FromNative(OutPath_NativePtr,0,null);
            StringMarshaller.DestructInstance(OutPath_NativePtr, 0);
            
            StringMarshaller.DestructInstance(InPath_NativePtr, 0);
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:ProjectUserDir
    static readonly IntPtr ProjectUserDir_NativeFunction;
    static readonly int ProjectUserDir_ParamsSize;
    static readonly int ProjectUserDir_ReturnValue_Offset;
    
    public static string ProjectUserDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ProjectUserDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ProjectUserDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,ProjectUserDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:ProjectSavedDir
    static readonly IntPtr ProjectSavedDir_NativeFunction;
    static readonly int ProjectSavedDir_ParamsSize;
    static readonly int ProjectSavedDir_ReturnValue_Offset;
    
    public static string ProjectSavedDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ProjectSavedDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ProjectSavedDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,ProjectSavedDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:ProjectPluginsDir
    static readonly IntPtr ProjectPluginsDir_NativeFunction;
    static readonly int ProjectPluginsDir_ParamsSize;
    static readonly int ProjectPluginsDir_ReturnValue_Offset;
    
    public static string ProjectPluginsDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ProjectPluginsDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ProjectPluginsDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,ProjectPluginsDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:ProjectPersistentDownloadDir
    static readonly IntPtr ProjectPersistentDownloadDir_NativeFunction;
    static readonly int ProjectPersistentDownloadDir_ParamsSize;
    static readonly int ProjectPersistentDownloadDir_ReturnValue_Offset;
    
    public static string ProjectPersistentDownloadDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ProjectPersistentDownloadDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ProjectPersistentDownloadDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,ProjectPersistentDownloadDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:ProjectModsDir
    static readonly IntPtr ProjectModsDir_NativeFunction;
    static readonly int ProjectModsDir_ParamsSize;
    static readonly int ProjectModsDir_ReturnValue_Offset;
    
    public static string ProjectModsDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ProjectModsDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ProjectModsDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,ProjectModsDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:ProjectLogDir
    static readonly IntPtr ProjectLogDir_NativeFunction;
    static readonly int ProjectLogDir_ParamsSize;
    static readonly int ProjectLogDir_ReturnValue_Offset;
    
    public static string ProjectLogDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ProjectLogDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ProjectLogDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,ProjectLogDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:ProjectIntermediateDir
    static readonly IntPtr ProjectIntermediateDir_NativeFunction;
    static readonly int ProjectIntermediateDir_ParamsSize;
    static readonly int ProjectIntermediateDir_ReturnValue_Offset;
    
    public static string ProjectIntermediateDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ProjectIntermediateDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ProjectIntermediateDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,ProjectIntermediateDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:ProjectDir
    static readonly IntPtr ProjectDir_NativeFunction;
    static readonly int ProjectDir_ParamsSize;
    static readonly int ProjectDir_ReturnValue_Offset;
    
    public static string ProjectDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ProjectDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ProjectDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,ProjectDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:ProjectContentDir
    static readonly IntPtr ProjectContentDir_NativeFunction;
    static readonly int ProjectContentDir_ParamsSize;
    static readonly int ProjectContentDir_ReturnValue_Offset;
    
    public static string ProjectContentDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ProjectContentDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ProjectContentDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,ProjectContentDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:ProjectConfigDir
    static readonly IntPtr ProjectConfigDir_NativeFunction;
    static readonly int ProjectConfigDir_ParamsSize;
    static readonly int ProjectConfigDir_ReturnValue_Offset;
    
    public static string ProjectConfigDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ProjectConfigDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ProjectConfigDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,ProjectConfigDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:ProfilingDir
    static readonly IntPtr ProfilingDir_NativeFunction;
    static readonly int ProfilingDir_ParamsSize;
    static readonly int ProfilingDir_ReturnValue_Offset;
    
    public static string ProfilingDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ProfilingDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ProfilingDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,ProfilingDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:NormalizeFilename
    static readonly IntPtr NormalizeFilename_NativeFunction;
    static readonly int NormalizeFilename_ParamsSize;
    static readonly int NormalizeFilename_InPath_Offset;
    static readonly int NormalizeFilename_OutPath_Offset;
    
    public static void NormalizeFilename(string inPath, out string outPath)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[NormalizeFilename_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPath_NativePtr = IntPtr.Add(ParamsBuffer,NormalizeFilename_InPath_Offset);
            StringMarshaller.ToNative(InPath_NativePtr,0,null,inPath);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, NormalizeFilename_NativeFunction, ParamsBuffer);
            
            IntPtr OutPath_NativePtr = IntPtr.Add(ParamsBuffer,NormalizeFilename_OutPath_Offset);
            outPath = StringMarshaller.FromNative(OutPath_NativePtr,0,null);
            StringMarshaller.DestructInstance(OutPath_NativePtr, 0);
            
            StringMarshaller.DestructInstance(InPath_NativePtr, 0);
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:NormalizeDirectoryName
    static readonly IntPtr NormalizeDirectoryName_NativeFunction;
    static readonly int NormalizeDirectoryName_ParamsSize;
    static readonly int NormalizeDirectoryName_InPath_Offset;
    static readonly int NormalizeDirectoryName_OutPath_Offset;
    
    public static void NormalizeDirectoryName(string inPath, out string outPath)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[NormalizeDirectoryName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPath_NativePtr = IntPtr.Add(ParamsBuffer,NormalizeDirectoryName_InPath_Offset);
            StringMarshaller.ToNative(InPath_NativePtr,0,null,inPath);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, NormalizeDirectoryName_NativeFunction, ParamsBuffer);
            
            IntPtr OutPath_NativePtr = IntPtr.Add(ParamsBuffer,NormalizeDirectoryName_OutPath_Offset);
            outPath = StringMarshaller.FromNative(OutPath_NativePtr,0,null);
            StringMarshaller.DestructInstance(OutPath_NativePtr, 0);
            
            StringMarshaller.DestructInstance(InPath_NativePtr, 0);
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:MakeValidFileName
    static readonly IntPtr MakeValidFileName_NativeFunction;
    static readonly int MakeValidFileName_ParamsSize;
    static readonly int MakeValidFileName_InString_Offset;
    static readonly int MakeValidFileName_InReplacementChar_Offset;
    static readonly int MakeValidFileName_ReturnValue_Offset;
    
    public static string MakeValidFileName(string inString, string inReplacementChar)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[MakeValidFileName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InString_NativePtr = IntPtr.Add(ParamsBuffer,MakeValidFileName_InString_Offset);
            StringMarshaller.ToNative(InString_NativePtr,0,null,inString);
            IntPtr InReplacementChar_NativePtr = IntPtr.Add(ParamsBuffer,MakeValidFileName_InReplacementChar_Offset);
            StringMarshaller.ToNative(InReplacementChar_NativePtr,0,null,inReplacementChar);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, MakeValidFileName_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,MakeValidFileName_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            StringMarshaller.DestructInstance(InString_NativePtr, 0);
            StringMarshaller.DestructInstance(InReplacementChar_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:MakeStandardFilename
    static readonly IntPtr MakeStandardFilename_NativeFunction;
    static readonly int MakeStandardFilename_ParamsSize;
    static readonly int MakeStandardFilename_InPath_Offset;
    static readonly int MakeStandardFilename_OutPath_Offset;
    
    public static void MakeStandardFilename(string inPath, out string outPath)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[MakeStandardFilename_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPath_NativePtr = IntPtr.Add(ParamsBuffer,MakeStandardFilename_InPath_Offset);
            StringMarshaller.ToNative(InPath_NativePtr,0,null,inPath);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, MakeStandardFilename_NativeFunction, ParamsBuffer);
            
            IntPtr OutPath_NativePtr = IntPtr.Add(ParamsBuffer,MakeStandardFilename_OutPath_Offset);
            outPath = StringMarshaller.FromNative(OutPath_NativePtr,0,null);
            StringMarshaller.DestructInstance(OutPath_NativePtr, 0);
            
            StringMarshaller.DestructInstance(InPath_NativePtr, 0);
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:MakePlatformFilename
    static readonly IntPtr MakePlatformFilename_NativeFunction;
    static readonly int MakePlatformFilename_ParamsSize;
    static readonly int MakePlatformFilename_InPath_Offset;
    static readonly int MakePlatformFilename_OutPath_Offset;
    
    public static void MakePlatformFilename(string inPath, out string outPath)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[MakePlatformFilename_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPath_NativePtr = IntPtr.Add(ParamsBuffer,MakePlatformFilename_InPath_Offset);
            StringMarshaller.ToNative(InPath_NativePtr,0,null,inPath);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, MakePlatformFilename_NativeFunction, ParamsBuffer);
            
            IntPtr OutPath_NativePtr = IntPtr.Add(ParamsBuffer,MakePlatformFilename_OutPath_Offset);
            outPath = StringMarshaller.FromNative(OutPath_NativePtr,0,null);
            StringMarshaller.DestructInstance(OutPath_NativePtr, 0);
            
            StringMarshaller.DestructInstance(InPath_NativePtr, 0);
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:MakePathRelativeTo
    static readonly IntPtr MakePathRelativeTo_NativeFunction;
    static readonly int MakePathRelativeTo_ParamsSize;
    static readonly int MakePathRelativeTo_InPath_Offset;
    static readonly int MakePathRelativeTo_InRelativeTo_Offset;
    static readonly int MakePathRelativeTo_OutPath_Offset;
    static readonly int MakePathRelativeTo_ReturnValue_Offset;
    
    public static bool MakePathRelativeTo(string inPath, string inRelativeTo, out string outPath)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[MakePathRelativeTo_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPath_NativePtr = IntPtr.Add(ParamsBuffer,MakePathRelativeTo_InPath_Offset);
            StringMarshaller.ToNative(InPath_NativePtr,0,null,inPath);
            IntPtr InRelativeTo_NativePtr = IntPtr.Add(ParamsBuffer,MakePathRelativeTo_InRelativeTo_Offset);
            StringMarshaller.ToNative(InRelativeTo_NativePtr,0,null,inRelativeTo);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, MakePathRelativeTo_NativeFunction, ParamsBuffer);
            
            IntPtr OutPath_NativePtr = IntPtr.Add(ParamsBuffer,MakePathRelativeTo_OutPath_Offset);
            outPath = StringMarshaller.FromNative(OutPath_NativePtr,0,null);
            StringMarshaller.DestructInstance(OutPath_NativePtr, 0);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, MakePathRelativeTo_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InPath_NativePtr, 0);
            StringMarshaller.DestructInstance(InRelativeTo_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:LaunchDir
    static readonly IntPtr LaunchDir_NativeFunction;
    static readonly int LaunchDir_ParamsSize;
    static readonly int LaunchDir_ReturnValue_Offset;
    
    public static string LaunchDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[LaunchDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, LaunchDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,LaunchDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:IsSamePath
    static readonly IntPtr IsSamePath_NativeFunction;
    static readonly int IsSamePath_ParamsSize;
    static readonly int IsSamePath_PathA_Offset;
    static readonly int IsSamePath_PathB_Offset;
    static readonly int IsSamePath_ReturnValue_Offset;
    
    public static bool IsSamePath(string pathA, string pathB)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsSamePath_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr PathA_NativePtr = IntPtr.Add(ParamsBuffer,IsSamePath_PathA_Offset);
            StringMarshaller.ToNative(PathA_NativePtr,0,null,pathA);
            IntPtr PathB_NativePtr = IntPtr.Add(ParamsBuffer,IsSamePath_PathB_Offset);
            StringMarshaller.ToNative(PathB_NativePtr,0,null,pathB);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, IsSamePath_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsSamePath_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(PathA_NativePtr, 0);
            StringMarshaller.DestructInstance(PathB_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:IsRestrictedPath
    static readonly IntPtr IsRestrictedPath_NativeFunction;
    static readonly int IsRestrictedPath_ParamsSize;
    static readonly int IsRestrictedPath_InPath_Offset;
    static readonly int IsRestrictedPath_ReturnValue_Offset;
    
    public static bool IsRestrictedPath(string inPath)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsRestrictedPath_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPath_NativePtr = IntPtr.Add(ParamsBuffer,IsRestrictedPath_InPath_Offset);
            StringMarshaller.ToNative(InPath_NativePtr,0,null,inPath);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, IsRestrictedPath_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsRestrictedPath_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:IsRelative
    static readonly IntPtr IsRelative_NativeFunction;
    static readonly int IsRelative_ParamsSize;
    static readonly int IsRelative_InPath_Offset;
    static readonly int IsRelative_ReturnValue_Offset;
    
    public static bool IsRelative(string inPath)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsRelative_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPath_NativePtr = IntPtr.Add(ParamsBuffer,IsRelative_InPath_Offset);
            StringMarshaller.ToNative(InPath_NativePtr,0,null,inPath);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, IsRelative_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsRelative_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:IsProjectFilePathSet
    static readonly IntPtr IsProjectFilePathSet_NativeFunction;
    static readonly int IsProjectFilePathSet_ParamsSize;
    static readonly int IsProjectFilePathSet_ReturnValue_Offset;
    
    public static bool IsProjectFilePathSet()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsProjectFilePathSet_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, IsProjectFilePathSet_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsProjectFilePathSet_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:IsDrive
    static readonly IntPtr IsDrive_NativeFunction;
    static readonly int IsDrive_ParamsSize;
    static readonly int IsDrive_InPath_Offset;
    static readonly int IsDrive_ReturnValue_Offset;
    
    public static bool IsDrive(string inPath)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsDrive_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPath_NativePtr = IntPtr.Add(ParamsBuffer,IsDrive_InPath_Offset);
            StringMarshaller.ToNative(InPath_NativePtr,0,null,inPath);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, IsDrive_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsDrive_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:HasProjectPersistentDownloadDir
    static readonly IntPtr HasProjectPersistentDownloadDir_NativeFunction;
    static readonly int HasProjectPersistentDownloadDir_ParamsSize;
    static readonly int HasProjectPersistentDownloadDir_ReturnValue_Offset;
    
    public static bool HasProjectPersistentDownloadDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[HasProjectPersistentDownloadDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, HasProjectPersistentDownloadDir_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, HasProjectPersistentDownloadDir_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:GetRelativePathToRoot
    static readonly IntPtr GetRelativePathToRoot_NativeFunction;
    static readonly int GetRelativePathToRoot_ParamsSize;
    static readonly int GetRelativePathToRoot_ReturnValue_Offset;
    
    public static string GetRelativePathToRoot()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetRelativePathToRoot_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetRelativePathToRoot_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetRelativePathToRoot_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:GetProjectFilePath
    static readonly IntPtr GetProjectFilePath_NativeFunction;
    static readonly int GetProjectFilePath_ParamsSize;
    static readonly int GetProjectFilePath_ReturnValue_Offset;
    
    public static string GetProjectFilePath()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetProjectFilePath_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetProjectFilePath_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetProjectFilePath_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:GetPath
    static readonly IntPtr GetPath_NativeFunction;
    static readonly int GetPath_ParamsSize;
    static readonly int GetPath_InPath_Offset;
    static readonly int GetPath_ReturnValue_Offset;
    
    public static string GetPath(string inPath)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetPath_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPath_NativePtr = IntPtr.Add(ParamsBuffer,GetPath_InPath_Offset);
            StringMarshaller.ToNative(InPath_NativePtr,0,null,inPath);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetPath_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetPath_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            StringMarshaller.DestructInstance(InPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:GetInvalidFileSystemChars
    static readonly IntPtr GetInvalidFileSystemChars_NativeFunction;
    static readonly int GetInvalidFileSystemChars_ParamsSize;
    static readonly int GetInvalidFileSystemChars_ReturnValue_Offset;
    
    public static string GetInvalidFileSystemChars()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetInvalidFileSystemChars_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetInvalidFileSystemChars_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetInvalidFileSystemChars_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:GetExtension
    static readonly IntPtr GetExtension_NativeFunction;
    static readonly int GetExtension_ParamsSize;
    static readonly int GetExtension_InPath_Offset;
    static readonly int GetExtension_bIncludeDot_Offset;
    static readonly int GetExtension_ReturnValue_Offset;
    
    public static string GetExtension(string inPath, bool bIncludeDot = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetExtension_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPath_NativePtr = IntPtr.Add(ParamsBuffer,GetExtension_InPath_Offset);
            StringMarshaller.ToNative(InPath_NativePtr,0,null,inPath);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, GetExtension_bIncludeDot_Offset), 0, null, bIncludeDot);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetExtension_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetExtension_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            StringMarshaller.DestructInstance(InPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:GetCleanFilename
    static readonly IntPtr GetCleanFilename_NativeFunction;
    static readonly int GetCleanFilename_ParamsSize;
    static readonly int GetCleanFilename_InPath_Offset;
    static readonly int GetCleanFilename_ReturnValue_Offset;
    
    public static string GetCleanFilename(string inPath)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCleanFilename_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPath_NativePtr = IntPtr.Add(ParamsBuffer,GetCleanFilename_InPath_Offset);
            StringMarshaller.ToNative(InPath_NativePtr,0,null,inPath);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetCleanFilename_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetCleanFilename_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            StringMarshaller.DestructInstance(InPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:GetBaseFilename
    static readonly IntPtr GetBaseFilename_NativeFunction;
    static readonly int GetBaseFilename_ParamsSize;
    static readonly int GetBaseFilename_InPath_Offset;
    static readonly int GetBaseFilename_bRemovePath_Offset;
    static readonly int GetBaseFilename_ReturnValue_Offset;
    
    public static string GetBaseFilename(string inPath, bool bRemovePath = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBaseFilename_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPath_NativePtr = IntPtr.Add(ParamsBuffer,GetBaseFilename_InPath_Offset);
            StringMarshaller.ToNative(InPath_NativePtr,0,null,inPath);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, GetBaseFilename_bRemovePath_Offset), 0, null, bRemovePath);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetBaseFilename_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetBaseFilename_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            StringMarshaller.DestructInstance(InPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:GeneratedConfigDir
    static readonly IntPtr GeneratedConfigDir_NativeFunction;
    static readonly int GeneratedConfigDir_ParamsSize;
    static readonly int GeneratedConfigDir_ReturnValue_Offset;
    
    public static string GeneratedConfigDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GeneratedConfigDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GeneratedConfigDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GeneratedConfigDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:GameUserDeveloperDir
    static readonly IntPtr GameUserDeveloperDir_NativeFunction;
    static readonly int GameUserDeveloperDir_ParamsSize;
    static readonly int GameUserDeveloperDir_ReturnValue_Offset;
    
    public static string GameUserDeveloperDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GameUserDeveloperDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GameUserDeveloperDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GameUserDeveloperDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:GameSourceDir
    static readonly IntPtr GameSourceDir_NativeFunction;
    static readonly int GameSourceDir_ParamsSize;
    static readonly int GameSourceDir_ReturnValue_Offset;
    
    public static string GameSourceDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GameSourceDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GameSourceDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GameSourceDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:GameDevelopersDir
    static readonly IntPtr GameDevelopersDir_NativeFunction;
    static readonly int GameDevelopersDir_ParamsSize;
    static readonly int GameDevelopersDir_ReturnValue_Offset;
    
    public static string GameDevelopersDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GameDevelopersDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GameDevelopersDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GameDevelopersDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:GameAgnosticSavedDir
    static readonly IntPtr GameAgnosticSavedDir_NativeFunction;
    static readonly int GameAgnosticSavedDir_ParamsSize;
    static readonly int GameAgnosticSavedDir_ReturnValue_Offset;
    
    public static string GameAgnosticSavedDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GameAgnosticSavedDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GameAgnosticSavedDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GameAgnosticSavedDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:FileExists
    static readonly IntPtr FileExists_NativeFunction;
    static readonly int FileExists_ParamsSize;
    static readonly int FileExists_InPath_Offset;
    static readonly int FileExists_ReturnValue_Offset;
    
    public static bool FileExists(string inPath)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[FileExists_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPath_NativePtr = IntPtr.Add(ParamsBuffer,FileExists_InPath_Offset);
            StringMarshaller.ToNative(InPath_NativePtr,0,null,inPath);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, FileExists_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, FileExists_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:FeaturePackDir
    static readonly IntPtr FeaturePackDir_NativeFunction;
    static readonly int FeaturePackDir_ParamsSize;
    static readonly int FeaturePackDir_ReturnValue_Offset;
    
    public static string FeaturePackDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[FeaturePackDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, FeaturePackDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,FeaturePackDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:EnterprisePluginsDir
    static readonly IntPtr EnterprisePluginsDir_NativeFunction;
    static readonly int EnterprisePluginsDir_ParamsSize;
    static readonly int EnterprisePluginsDir_ReturnValue_Offset;
    
    public static string EnterprisePluginsDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[EnterprisePluginsDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, EnterprisePluginsDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,EnterprisePluginsDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:EnterpriseFeaturePackDir
    static readonly IntPtr EnterpriseFeaturePackDir_NativeFunction;
    static readonly int EnterpriseFeaturePackDir_ParamsSize;
    static readonly int EnterpriseFeaturePackDir_ReturnValue_Offset;
    
    public static string EnterpriseFeaturePackDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[EnterpriseFeaturePackDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, EnterpriseFeaturePackDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,EnterpriseFeaturePackDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:EnterpriseDir
    static readonly IntPtr EnterpriseDir_NativeFunction;
    static readonly int EnterpriseDir_ParamsSize;
    static readonly int EnterpriseDir_ReturnValue_Offset;
    
    public static string EnterpriseDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[EnterpriseDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, EnterpriseDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,EnterpriseDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:EngineVersionAgnosticUserDir
    static readonly IntPtr EngineVersionAgnosticUserDir_NativeFunction;
    static readonly int EngineVersionAgnosticUserDir_ParamsSize;
    static readonly int EngineVersionAgnosticUserDir_ReturnValue_Offset;
    
    public static string EngineVersionAgnosticUserDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[EngineVersionAgnosticUserDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, EngineVersionAgnosticUserDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,EngineVersionAgnosticUserDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:EngineUserDir
    static readonly IntPtr EngineUserDir_NativeFunction;
    static readonly int EngineUserDir_ParamsSize;
    static readonly int EngineUserDir_ReturnValue_Offset;
    
    public static string EngineUserDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[EngineUserDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, EngineUserDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,EngineUserDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:EngineSourceDir
    static readonly IntPtr EngineSourceDir_NativeFunction;
    static readonly int EngineSourceDir_ParamsSize;
    static readonly int EngineSourceDir_ReturnValue_Offset;
    
    public static string EngineSourceDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[EngineSourceDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, EngineSourceDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,EngineSourceDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:EngineSavedDir
    static readonly IntPtr EngineSavedDir_NativeFunction;
    static readonly int EngineSavedDir_ParamsSize;
    static readonly int EngineSavedDir_ReturnValue_Offset;
    
    public static string EngineSavedDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[EngineSavedDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, EngineSavedDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,EngineSavedDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:EnginePluginsDir
    static readonly IntPtr EnginePluginsDir_NativeFunction;
    static readonly int EnginePluginsDir_ParamsSize;
    static readonly int EnginePluginsDir_ReturnValue_Offset;
    
    public static string EnginePluginsDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[EnginePluginsDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, EnginePluginsDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,EnginePluginsDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:EngineIntermediateDir
    static readonly IntPtr EngineIntermediateDir_NativeFunction;
    static readonly int EngineIntermediateDir_ParamsSize;
    static readonly int EngineIntermediateDir_ReturnValue_Offset;
    
    public static string EngineIntermediateDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[EngineIntermediateDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, EngineIntermediateDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,EngineIntermediateDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:EngineDir
    static readonly IntPtr EngineDir_NativeFunction;
    static readonly int EngineDir_ParamsSize;
    static readonly int EngineDir_ReturnValue_Offset;
    
    public static string EngineDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[EngineDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, EngineDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,EngineDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:EngineContentDir
    static readonly IntPtr EngineContentDir_NativeFunction;
    static readonly int EngineContentDir_ParamsSize;
    static readonly int EngineContentDir_ReturnValue_Offset;
    
    public static string EngineContentDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[EngineContentDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, EngineContentDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,EngineContentDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:EngineConfigDir
    static readonly IntPtr EngineConfigDir_NativeFunction;
    static readonly int EngineConfigDir_ParamsSize;
    static readonly int EngineConfigDir_ReturnValue_Offset;
    
    public static string EngineConfigDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[EngineConfigDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, EngineConfigDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,EngineConfigDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:DirectoryExists
    static readonly IntPtr DirectoryExists_NativeFunction;
    static readonly int DirectoryExists_ParamsSize;
    static readonly int DirectoryExists_InPath_Offset;
    static readonly int DirectoryExists_ReturnValue_Offset;
    
    public static bool DirectoryExists(string inPath)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[DirectoryExists_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPath_NativePtr = IntPtr.Add(ParamsBuffer,DirectoryExists_InPath_Offset);
            StringMarshaller.ToNative(InPath_NativePtr,0,null,inPath);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, DirectoryExists_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, DirectoryExists_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:DiffDir
    static readonly IntPtr DiffDir_NativeFunction;
    static readonly int DiffDir_ParamsSize;
    static readonly int DiffDir_ReturnValue_Offset;
    
    public static string DiffDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[DiffDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, DiffDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,DiffDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:CreateTempFilename
    static readonly IntPtr CreateTempFilename_NativeFunction;
    static readonly int CreateTempFilename_ParamsSize;
    static readonly int CreateTempFilename_Path_Offset;
    static readonly int CreateTempFilename_Prefix_Offset;
    static readonly int CreateTempFilename_Extension_Offset;
    static readonly int CreateTempFilename_ReturnValue_Offset;
    
    public static string CreateTempFilename(string path, string prefix, string extension = ".tmp")
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[CreateTempFilename_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr Path_NativePtr = IntPtr.Add(ParamsBuffer,CreateTempFilename_Path_Offset);
            StringMarshaller.ToNative(Path_NativePtr,0,null,path);
            IntPtr Prefix_NativePtr = IntPtr.Add(ParamsBuffer,CreateTempFilename_Prefix_Offset);
            StringMarshaller.ToNative(Prefix_NativePtr,0,null,prefix);
            IntPtr Extension_NativePtr = IntPtr.Add(ParamsBuffer,CreateTempFilename_Extension_Offset);
            StringMarshaller.ToNative(Extension_NativePtr,0,null,extension);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, CreateTempFilename_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,CreateTempFilename_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            StringMarshaller.DestructInstance(Path_NativePtr, 0);
            StringMarshaller.DestructInstance(Prefix_NativePtr, 0);
            StringMarshaller.DestructInstance(Extension_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:ConvertToSandboxPath
    static readonly IntPtr ConvertToSandboxPath_NativeFunction;
    static readonly int ConvertToSandboxPath_ParamsSize;
    static readonly int ConvertToSandboxPath_InPath_Offset;
    static readonly int ConvertToSandboxPath_InSandboxName_Offset;
    static readonly int ConvertToSandboxPath_ReturnValue_Offset;
    
    public static string ConvertToSandboxPath(string inPath, string inSandboxName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ConvertToSandboxPath_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPath_NativePtr = IntPtr.Add(ParamsBuffer,ConvertToSandboxPath_InPath_Offset);
            StringMarshaller.ToNative(InPath_NativePtr,0,null,inPath);
            IntPtr InSandboxName_NativePtr = IntPtr.Add(ParamsBuffer,ConvertToSandboxPath_InSandboxName_Offset);
            StringMarshaller.ToNative(InSandboxName_NativePtr,0,null,inSandboxName);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ConvertToSandboxPath_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,ConvertToSandboxPath_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            StringMarshaller.DestructInstance(InPath_NativePtr, 0);
            StringMarshaller.DestructInstance(InSandboxName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:ConvertRelativePathToFull
    static readonly IntPtr ConvertRelativePathToFull_NativeFunction;
    static readonly int ConvertRelativePathToFull_ParamsSize;
    static readonly int ConvertRelativePathToFull_InPath_Offset;
    static readonly int ConvertRelativePathToFull_InBasePath_Offset;
    static readonly int ConvertRelativePathToFull_ReturnValue_Offset;
    
    public static string ConvertRelativePathToFull(string inPath, string inBasePath)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ConvertRelativePathToFull_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPath_NativePtr = IntPtr.Add(ParamsBuffer,ConvertRelativePathToFull_InPath_Offset);
            StringMarshaller.ToNative(InPath_NativePtr,0,null,inPath);
            IntPtr InBasePath_NativePtr = IntPtr.Add(ParamsBuffer,ConvertRelativePathToFull_InBasePath_Offset);
            StringMarshaller.ToNative(InBasePath_NativePtr,0,null,inBasePath);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ConvertRelativePathToFull_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,ConvertRelativePathToFull_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            StringMarshaller.DestructInstance(InPath_NativePtr, 0);
            StringMarshaller.DestructInstance(InBasePath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:ConvertFromSandboxPath
    static readonly IntPtr ConvertFromSandboxPath_NativeFunction;
    static readonly int ConvertFromSandboxPath_ParamsSize;
    static readonly int ConvertFromSandboxPath_InPath_Offset;
    static readonly int ConvertFromSandboxPath_InSandboxName_Offset;
    static readonly int ConvertFromSandboxPath_ReturnValue_Offset;
    
    public static string ConvertFromSandboxPath(string inPath, string inSandboxName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ConvertFromSandboxPath_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPath_NativePtr = IntPtr.Add(ParamsBuffer,ConvertFromSandboxPath_InPath_Offset);
            StringMarshaller.ToNative(InPath_NativePtr,0,null,inPath);
            IntPtr InSandboxName_NativePtr = IntPtr.Add(ParamsBuffer,ConvertFromSandboxPath_InSandboxName_Offset);
            StringMarshaller.ToNative(InSandboxName_NativePtr,0,null,inSandboxName);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ConvertFromSandboxPath_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,ConvertFromSandboxPath_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            StringMarshaller.DestructInstance(InPath_NativePtr, 0);
            StringMarshaller.DestructInstance(InSandboxName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:CollapseRelativeDirectories
    static readonly IntPtr CollapseRelativeDirectories_NativeFunction;
    static readonly int CollapseRelativeDirectories_ParamsSize;
    static readonly int CollapseRelativeDirectories_InPath_Offset;
    static readonly int CollapseRelativeDirectories_OutPath_Offset;
    static readonly int CollapseRelativeDirectories_ReturnValue_Offset;
    
    public static bool CollapseRelativeDirectories(string inPath, out string outPath)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[CollapseRelativeDirectories_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPath_NativePtr = IntPtr.Add(ParamsBuffer,CollapseRelativeDirectories_InPath_Offset);
            StringMarshaller.ToNative(InPath_NativePtr,0,null,inPath);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, CollapseRelativeDirectories_NativeFunction, ParamsBuffer);
            
            IntPtr OutPath_NativePtr = IntPtr.Add(ParamsBuffer,CollapseRelativeDirectories_OutPath_Offset);
            outPath = StringMarshaller.FromNative(OutPath_NativePtr,0,null);
            StringMarshaller.DestructInstance(OutPath_NativePtr, 0);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, CollapseRelativeDirectories_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:CloudDir
    static readonly IntPtr CloudDir_NativeFunction;
    static readonly int CloudDir_ParamsSize;
    static readonly int CloudDir_ReturnValue_Offset;
    
    public static string CloudDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[CloudDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, CloudDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,CloudDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:ChangeExtension
    static readonly IntPtr ChangeExtension_NativeFunction;
    static readonly int ChangeExtension_ParamsSize;
    static readonly int ChangeExtension_InPath_Offset;
    static readonly int ChangeExtension_InNewExtension_Offset;
    static readonly int ChangeExtension_ReturnValue_Offset;
    
    public static string ChangeExtension(string inPath, string inNewExtension)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ChangeExtension_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPath_NativePtr = IntPtr.Add(ParamsBuffer,ChangeExtension_InPath_Offset);
            StringMarshaller.ToNative(InPath_NativePtr,0,null,inPath);
            IntPtr InNewExtension_NativePtr = IntPtr.Add(ParamsBuffer,ChangeExtension_InNewExtension_Offset);
            StringMarshaller.ToNative(InNewExtension_NativePtr,0,null,inNewExtension);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ChangeExtension_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,ChangeExtension_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            StringMarshaller.DestructInstance(InPath_NativePtr, 0);
            StringMarshaller.DestructInstance(InNewExtension_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:BugItDir
    static readonly IntPtr BugItDir_NativeFunction;
    static readonly int BugItDir_ParamsSize;
    static readonly int BugItDir_ReturnValue_Offset;
    
    public static string BugItDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[BugItDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, BugItDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,BugItDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:AutomationTransientDir
    static readonly IntPtr AutomationTransientDir_NativeFunction;
    static readonly int AutomationTransientDir_ParamsSize;
    static readonly int AutomationTransientDir_ReturnValue_Offset;
    
    public static string AutomationTransientDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AutomationTransientDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, AutomationTransientDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,AutomationTransientDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:AutomationLogDir
    static readonly IntPtr AutomationLogDir_NativeFunction;
    static readonly int AutomationLogDir_ParamsSize;
    static readonly int AutomationLogDir_ReturnValue_Offset;
    
    public static string AutomationLogDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AutomationLogDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, AutomationLogDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,AutomationLogDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPathsLibrary:AutomationDir
    static readonly IntPtr AutomationDir_NativeFunction;
    static readonly int AutomationDir_ParamsSize;
    static readonly int AutomationDir_ReturnValue_Offset;
    
    public static string AutomationDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AutomationDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, AutomationDir_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,AutomationDir_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    
}
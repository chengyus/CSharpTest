// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class PlatformLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static PlatformLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("BlueprintPlatformLibrary");
        
        
        SetAllowedDeviceOrientation_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAllowedDeviceOrientation");
        SetAllowedDeviceOrientation_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAllowedDeviceOrientation_NativeFunction);
        SetAllowedDeviceOrientation_NewAllowedDeviceOrientation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllowedDeviceOrientation_NativeFunction, "NewAllowedDeviceOrientation");
        ScheduleLocalNotificationBadgeFromNow_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ScheduleLocalNotificationBadgeFromNow");
        ScheduleLocalNotificationBadgeFromNow_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ScheduleLocalNotificationBadgeFromNow_NativeFunction);
        ScheduleLocalNotificationBadgeFromNow_inSecondsFromNow_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ScheduleLocalNotificationBadgeFromNow_NativeFunction, "inSecondsFromNow");
        ScheduleLocalNotificationBadgeFromNow_ActivationEvent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ScheduleLocalNotificationBadgeFromNow_NativeFunction, "ActivationEvent");
        ScheduleLocalNotificationBadgeAtTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ScheduleLocalNotificationBadgeAtTime");
        ScheduleLocalNotificationBadgeAtTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ScheduleLocalNotificationBadgeAtTime_NativeFunction);
        ScheduleLocalNotificationBadgeAtTime_FireDateTime_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ScheduleLocalNotificationBadgeAtTime_NativeFunction, "FireDateTime");
        ScheduleLocalNotificationBadgeAtTime_LocalTime_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ScheduleLocalNotificationBadgeAtTime_NativeFunction, "LocalTime");
        ScheduleLocalNotificationBadgeAtTime_ActivationEvent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ScheduleLocalNotificationBadgeAtTime_NativeFunction, "ActivationEvent");
        ScheduleLocalNotificationBadgeAtTime_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ScheduleLocalNotificationBadgeAtTime_NativeFunction, "ReturnValue");
        GetLaunchNotification_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetLaunchNotification");
        GetLaunchNotification_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetLaunchNotification_NativeFunction);
        GetLaunchNotification_NotificationLaunchedApp_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLaunchNotification_NativeFunction, "NotificationLaunchedApp");
        GetLaunchNotification_ActivationEvent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLaunchNotification_NativeFunction, "ActivationEvent");
        GetLaunchNotification_FireDate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLaunchNotification_NativeFunction, "FireDate");
        GetDeviceOrientation_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetDeviceOrientation");
        GetDeviceOrientation_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetDeviceOrientation_NativeFunction);
        GetDeviceOrientation_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDeviceOrientation_NativeFunction, "ReturnValue");
        GetAllowedDeviceOrientation_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetAllowedDeviceOrientation");
        GetAllowedDeviceOrientation_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetAllowedDeviceOrientation_NativeFunction);
        GetAllowedDeviceOrientation_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAllowedDeviceOrientation_NativeFunction, "ReturnValue");
        ClearAllLocalNotifications_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ClearAllLocalNotifications");
        CancelLocalNotificationById_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CancelLocalNotificationById");
        CancelLocalNotificationById_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(CancelLocalNotificationById_NativeFunction);
        CancelLocalNotificationById_NotificationId_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CancelLocalNotificationById_NativeFunction, "NotificationId");
        CancelLocalNotification_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CancelLocalNotification");
        CancelLocalNotification_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(CancelLocalNotification_NativeFunction);
        CancelLocalNotification_ActivationEvent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CancelLocalNotification_NativeFunction, "ActivationEvent");
        
        
    }
    
    protected PlatformLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Engine.BlueprintPlatformLibrary:SetAllowedDeviceOrientation
    static readonly IntPtr SetAllowedDeviceOrientation_NativeFunction;
    static readonly int SetAllowedDeviceOrientation_ParamsSize;
    static readonly int SetAllowedDeviceOrientation_NewAllowedDeviceOrientation_Offset;
    
    public static void SetAllowedDeviceOrientation(UnrealSharp.Engine.EScreenOrientation newAllowedDeviceOrientation)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAllowedDeviceOrientation_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.Engine.EScreenOrientation>.ToNative(IntPtr.Add(ParamsBuffer, SetAllowedDeviceOrientation_NewAllowedDeviceOrientation_Offset), 0, null, newAllowedDeviceOrientation);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetAllowedDeviceOrientation_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.BlueprintPlatformLibrary:ScheduleLocalNotificationBadgeFromNow
    static readonly IntPtr ScheduleLocalNotificationBadgeFromNow_NativeFunction;
    static readonly int ScheduleLocalNotificationBadgeFromNow_ParamsSize;
    static readonly int ScheduleLocalNotificationBadgeFromNow_inSecondsFromNow_Offset;
    static readonly int ScheduleLocalNotificationBadgeFromNow_ActivationEvent_Offset;
    
    public static void ScheduleLocalNotificationBadgeFromNow(int inSecondsFromNow, string activationEvent)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ScheduleLocalNotificationBadgeFromNow_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, ScheduleLocalNotificationBadgeFromNow_inSecondsFromNow_Offset), 0, null, inSecondsFromNow);
            IntPtr ActivationEvent_NativePtr = IntPtr.Add(ParamsBuffer,ScheduleLocalNotificationBadgeFromNow_ActivationEvent_Offset);
            StringMarshaller.ToNative(ActivationEvent_NativePtr,0,null,activationEvent);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ScheduleLocalNotificationBadgeFromNow_NativeFunction, ParamsBuffer);
            
            StringMarshaller.DestructInstance(ActivationEvent_NativePtr, 0);
        }
    }
    
    // Function /Script/Engine.BlueprintPlatformLibrary:ScheduleLocalNotificationBadgeAtTime
    static readonly IntPtr ScheduleLocalNotificationBadgeAtTime_NativeFunction;
    static readonly int ScheduleLocalNotificationBadgeAtTime_ParamsSize;
    static readonly int ScheduleLocalNotificationBadgeAtTime_FireDateTime_Offset;
    static readonly int ScheduleLocalNotificationBadgeAtTime_LocalTime_Offset;
    static readonly int ScheduleLocalNotificationBadgeAtTime_ActivationEvent_Offset;
    static readonly int ScheduleLocalNotificationBadgeAtTime_ReturnValue_Offset;
    
    public static int ScheduleLocalNotificationBadgeAtTime(UnrealSharp.CoreUObject.DateTime fireDateTime, bool localTime, string activationEvent)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ScheduleLocalNotificationBadgeAtTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.CoreUObject.DateTimeMarshaler.ToNative(IntPtr.Add(ParamsBuffer, ScheduleLocalNotificationBadgeAtTime_FireDateTime_Offset), 0, null, fireDateTime);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ScheduleLocalNotificationBadgeAtTime_LocalTime_Offset), 0, null, localTime);
            IntPtr ActivationEvent_NativePtr = IntPtr.Add(ParamsBuffer,ScheduleLocalNotificationBadgeAtTime_ActivationEvent_Offset);
            StringMarshaller.ToNative(ActivationEvent_NativePtr,0,null,activationEvent);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ScheduleLocalNotificationBadgeAtTime_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, ScheduleLocalNotificationBadgeAtTime_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(ActivationEvent_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPlatformLibrary:GetLaunchNotification
    static readonly IntPtr GetLaunchNotification_NativeFunction;
    static readonly int GetLaunchNotification_ParamsSize;
    static readonly int GetLaunchNotification_NotificationLaunchedApp_Offset;
    static readonly int GetLaunchNotification_ActivationEvent_Offset;
    static readonly int GetLaunchNotification_FireDate_Offset;
    
    public static void GetLaunchNotification(out bool notificationLaunchedApp, out string activationEvent, out int fireDate)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetLaunchNotification_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetLaunchNotification_NativeFunction, ParamsBuffer);
            
            notificationLaunchedApp = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetLaunchNotification_NotificationLaunchedApp_Offset), 0, null);
            IntPtr ActivationEvent_NativePtr = IntPtr.Add(ParamsBuffer,GetLaunchNotification_ActivationEvent_Offset);
            activationEvent = StringMarshaller.FromNative(ActivationEvent_NativePtr,0,null);
            StringMarshaller.DestructInstance(ActivationEvent_NativePtr, 0);
            fireDate = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetLaunchNotification_FireDate_Offset), 0, null);
            
        }
    }
    
    // Function /Script/Engine.BlueprintPlatformLibrary:GetDeviceOrientation
    static readonly IntPtr GetDeviceOrientation_NativeFunction;
    static readonly int GetDeviceOrientation_ParamsSize;
    static readonly int GetDeviceOrientation_ReturnValue_Offset;
    
    public static UnrealSharp.Engine.EScreenOrientation GetDeviceOrientation()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetDeviceOrientation_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetDeviceOrientation_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.EScreenOrientation returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.Engine.EScreenOrientation>.FromNative(IntPtr.Add(ParamsBuffer, GetDeviceOrientation_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPlatformLibrary:GetAllowedDeviceOrientation
    static readonly IntPtr GetAllowedDeviceOrientation_NativeFunction;
    static readonly int GetAllowedDeviceOrientation_ParamsSize;
    static readonly int GetAllowedDeviceOrientation_ReturnValue_Offset;
    
    public static UnrealSharp.Engine.EScreenOrientation GetAllowedDeviceOrientation()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetAllowedDeviceOrientation_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetAllowedDeviceOrientation_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.EScreenOrientation returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.Engine.EScreenOrientation>.FromNative(IntPtr.Add(ParamsBuffer, GetAllowedDeviceOrientation_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BlueprintPlatformLibrary:ClearAllLocalNotifications
    static readonly IntPtr ClearAllLocalNotifications_NativeFunction;
    
    public static void ClearAllLocalNotifications()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ClearAllLocalNotifications_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/Engine.BlueprintPlatformLibrary:CancelLocalNotificationById
    static readonly IntPtr CancelLocalNotificationById_NativeFunction;
    static readonly int CancelLocalNotificationById_ParamsSize;
    static readonly int CancelLocalNotificationById_NotificationId_Offset;
    
    public static void CancelLocalNotificationById(int notificationId)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[CancelLocalNotificationById_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, CancelLocalNotificationById_NotificationId_Offset), 0, null, notificationId);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, CancelLocalNotificationById_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.BlueprintPlatformLibrary:CancelLocalNotification
    static readonly IntPtr CancelLocalNotification_NativeFunction;
    static readonly int CancelLocalNotification_ParamsSize;
    static readonly int CancelLocalNotification_ActivationEvent_Offset;
    
    public static void CancelLocalNotification(string activationEvent)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[CancelLocalNotification_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr ActivationEvent_NativePtr = IntPtr.Add(ParamsBuffer,CancelLocalNotification_ActivationEvent_Offset);
            StringMarshaller.ToNative(ActivationEvent_NativePtr,0,null,activationEvent);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, CancelLocalNotification_NativeFunction, ParamsBuffer);
            
            StringMarshaller.DestructInstance(ActivationEvent_NativePtr, 0);
        }
    }
    
    
}
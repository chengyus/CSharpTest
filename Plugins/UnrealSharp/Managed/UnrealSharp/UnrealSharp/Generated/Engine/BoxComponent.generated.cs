// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class BoxComponent : UnrealSharp.Engine.ShapeComponent
{
    
    static BoxComponent()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("BoxComponent");
        
        BoxExtent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "BoxExtent");
        LineThickness_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "LineThickness");
        
        SetLineThickness_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetLineThickness");
        SetLineThickness_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetLineThickness_NativeFunction);
        SetLineThickness_Thickness_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLineThickness_NativeFunction, "Thickness");
        SetBoxExtent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetBoxExtent");
        SetBoxExtent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetBoxExtent_NativeFunction);
        SetBoxExtent_InBoxExtent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBoxExtent_NativeFunction, "InBoxExtent");
        SetBoxExtent_bUpdateOverlaps_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBoxExtent_NativeFunction, "bUpdateOverlaps");
        GetUnscaledBoxExtent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetUnscaledBoxExtent");
        GetUnscaledBoxExtent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetUnscaledBoxExtent_NativeFunction);
        GetUnscaledBoxExtent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetUnscaledBoxExtent_NativeFunction, "ReturnValue");
        GetScaledBoxExtent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetScaledBoxExtent");
        GetScaledBoxExtent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetScaledBoxExtent_NativeFunction);
        GetScaledBoxExtent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetScaledBoxExtent_NativeFunction, "ReturnValue");
        
        
    }
    
    protected BoxComponent(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // StructProperty /Script/Engine.BoxComponent:BoxExtent
    static readonly int BoxExtent_Offset;
    
    public System.DoubleNumerics.Vector3 BoxExtent
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(NativeObject, BoxExtent_Offset), 0, this);
        }
    }
    
    // FloatProperty /Script/Engine.BoxComponent:LineThickness
    static readonly int LineThickness_Offset;
    
    public float LineThickness
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, LineThickness_Offset), 0, this);
        }
    }
    
    // Function /Script/Engine.BoxComponent:SetLineThickness
    static readonly IntPtr SetLineThickness_NativeFunction;
    static readonly int SetLineThickness_ParamsSize;
    static readonly int SetLineThickness_Thickness_Offset;
    
    public void SetLineThickness(float thickness)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetLineThickness_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetLineThickness_Thickness_Offset), 0, null, thickness);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetLineThickness_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.BoxComponent:SetBoxExtent
    static readonly IntPtr SetBoxExtent_NativeFunction;
    static readonly int SetBoxExtent_ParamsSize;
    static readonly int SetBoxExtent_InBoxExtent_Offset;
    static readonly int SetBoxExtent_bUpdateOverlaps_Offset;
    
    public void SetBoxExtent(System.DoubleNumerics.Vector3 inBoxExtent, bool bUpdateOverlaps = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetBoxExtent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, SetBoxExtent_InBoxExtent_Offset), 0, null, inBoxExtent);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetBoxExtent_bUpdateOverlaps_Offset), 0, null, bUpdateOverlaps);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetBoxExtent_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.BoxComponent:GetUnscaledBoxExtent
    static readonly IntPtr GetUnscaledBoxExtent_NativeFunction;
    static readonly int GetUnscaledBoxExtent_ParamsSize;
    static readonly int GetUnscaledBoxExtent_ReturnValue_Offset;
    
    public System.DoubleNumerics.Vector3 GetUnscaledBoxExtent()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetUnscaledBoxExtent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetUnscaledBoxExtent_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector3 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, GetUnscaledBoxExtent_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.BoxComponent:GetScaledBoxExtent
    static readonly IntPtr GetScaledBoxExtent_NativeFunction;
    static readonly int GetScaledBoxExtent_ParamsSize;
    static readonly int GetScaledBoxExtent_ReturnValue_Offset;
    
    public System.DoubleNumerics.Vector3 GetScaledBoxExtent()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetScaledBoxExtent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetScaledBoxExtent_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector3 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, GetScaledBoxExtent_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class CachedAnimDataLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static CachedAnimDataLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("CachedAnimDataLibrary");
        
        
        StateMachine_IsStateRelevant_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "StateMachine_IsStateRelevant");
        StateMachine_IsStateRelevant_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(StateMachine_IsStateRelevant_NativeFunction);
        StateMachine_IsStateRelevant_InAnimInstance_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StateMachine_IsStateRelevant_NativeFunction, "InAnimInstance");
        StateMachine_IsStateRelevant_CachedAnimStateData_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StateMachine_IsStateRelevant_NativeFunction, "CachedAnimStateData");
        StateMachine_IsStateRelevant_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StateMachine_IsStateRelevant_NativeFunction, "ReturnValue");
        StateMachine_GetLocalWeight_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "StateMachine_GetLocalWeight");
        StateMachine_GetLocalWeight_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(StateMachine_GetLocalWeight_NativeFunction);
        StateMachine_GetLocalWeight_InAnimInstance_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StateMachine_GetLocalWeight_NativeFunction, "InAnimInstance");
        StateMachine_GetLocalWeight_CachedAnimStateData_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StateMachine_GetLocalWeight_NativeFunction, "CachedAnimStateData");
        StateMachine_GetLocalWeight_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StateMachine_GetLocalWeight_NativeFunction, "ReturnValue");
        StateMachine_GetGlobalWeight_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "StateMachine_GetGlobalWeight");
        StateMachine_GetGlobalWeight_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(StateMachine_GetGlobalWeight_NativeFunction);
        StateMachine_GetGlobalWeight_InAnimInstance_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StateMachine_GetGlobalWeight_NativeFunction, "InAnimInstance");
        StateMachine_GetGlobalWeight_CachedAnimStateData_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StateMachine_GetGlobalWeight_NativeFunction, "CachedAnimStateData");
        StateMachine_GetGlobalWeight_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StateMachine_GetGlobalWeight_NativeFunction, "ReturnValue");
        
        
    }
    
    protected CachedAnimDataLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Engine.CachedAnimDataLibrary:StateMachine_IsStateRelevant
    static readonly IntPtr StateMachine_IsStateRelevant_NativeFunction;
    static readonly int StateMachine_IsStateRelevant_ParamsSize;
    static readonly int StateMachine_IsStateRelevant_InAnimInstance_Offset;
    static readonly int StateMachine_IsStateRelevant_CachedAnimStateData_Offset;
    static readonly int StateMachine_IsStateRelevant_ReturnValue_Offset;
    
    public static bool StateMachine_IsStateRelevant(UnrealSharp.Engine.AnimInstance inAnimInstance, UnrealSharp.Engine.CachedAnimStateData cachedAnimStateData)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[StateMachine_IsStateRelevant_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.AnimInstance>.ToNative(IntPtr.Add(ParamsBuffer, StateMachine_IsStateRelevant_InAnimInstance_Offset), 0, null, inAnimInstance);
            UnrealSharp.Engine.CachedAnimStateDataMarshaler.ToNative(IntPtr.Add(ParamsBuffer, StateMachine_IsStateRelevant_CachedAnimStateData_Offset), 0, null, cachedAnimStateData);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, StateMachine_IsStateRelevant_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, StateMachine_IsStateRelevant_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.CachedAnimDataLibrary:StateMachine_GetLocalWeight
    static readonly IntPtr StateMachine_GetLocalWeight_NativeFunction;
    static readonly int StateMachine_GetLocalWeight_ParamsSize;
    static readonly int StateMachine_GetLocalWeight_InAnimInstance_Offset;
    static readonly int StateMachine_GetLocalWeight_CachedAnimStateData_Offset;
    static readonly int StateMachine_GetLocalWeight_ReturnValue_Offset;
    
    public static float StateMachine_GetLocalWeight(UnrealSharp.Engine.AnimInstance inAnimInstance, UnrealSharp.Engine.CachedAnimStateData cachedAnimStateData)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[StateMachine_GetLocalWeight_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.AnimInstance>.ToNative(IntPtr.Add(ParamsBuffer, StateMachine_GetLocalWeight_InAnimInstance_Offset), 0, null, inAnimInstance);
            UnrealSharp.Engine.CachedAnimStateDataMarshaler.ToNative(IntPtr.Add(ParamsBuffer, StateMachine_GetLocalWeight_CachedAnimStateData_Offset), 0, null, cachedAnimStateData);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, StateMachine_GetLocalWeight_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, StateMachine_GetLocalWeight_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.CachedAnimDataLibrary:StateMachine_GetGlobalWeight
    static readonly IntPtr StateMachine_GetGlobalWeight_NativeFunction;
    static readonly int StateMachine_GetGlobalWeight_ParamsSize;
    static readonly int StateMachine_GetGlobalWeight_InAnimInstance_Offset;
    static readonly int StateMachine_GetGlobalWeight_CachedAnimStateData_Offset;
    static readonly int StateMachine_GetGlobalWeight_ReturnValue_Offset;
    
    public static float StateMachine_GetGlobalWeight(UnrealSharp.Engine.AnimInstance inAnimInstance, UnrealSharp.Engine.CachedAnimStateData cachedAnimStateData)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[StateMachine_GetGlobalWeight_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.AnimInstance>.ToNative(IntPtr.Add(ParamsBuffer, StateMachine_GetGlobalWeight_InAnimInstance_Offset), 0, null, inAnimInstance);
            UnrealSharp.Engine.CachedAnimStateDataMarshaler.ToNative(IntPtr.Add(ParamsBuffer, StateMachine_GetGlobalWeight_CachedAnimStateData_Offset), 0, null, cachedAnimStateData);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, StateMachine_GetGlobalWeight_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, StateMachine_GetGlobalWeight_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
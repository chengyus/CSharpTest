// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class CameraShakeSourceComponent : UnrealSharp.Engine.SceneComponent
{
    
    static CameraShakeSourceComponent()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("CameraShakeSourceComponent");
        
        Attenuation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Attenuation");
        InnerAttenuationRadius_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "InnerAttenuationRadius");
        OuterAttenuationRadius_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "OuterAttenuationRadius");
        CameraShake_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "CameraShake");
        bAutoStart_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bAutoStart");
        
        StopAllCameraShakesOfType_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "StopAllCameraShakesOfType");
        StopAllCameraShakesOfType_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(StopAllCameraShakesOfType_NativeFunction);
        StopAllCameraShakesOfType_InCameraShake_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StopAllCameraShakesOfType_NativeFunction, "InCameraShake");
        StopAllCameraShakesOfType_bImmediately_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StopAllCameraShakesOfType_NativeFunction, "bImmediately");
        StopAllCameraShakes_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "StopAllCameraShakes");
        StopAllCameraShakes_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(StopAllCameraShakes_NativeFunction);
        StopAllCameraShakes_bImmediately_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StopAllCameraShakes_NativeFunction, "bImmediately");
        StartCameraShake_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "StartCameraShake");
        StartCameraShake_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(StartCameraShake_NativeFunction);
        StartCameraShake_InCameraShake_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StartCameraShake_NativeFunction, "InCameraShake");
        StartCameraShake_Scale_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StartCameraShake_NativeFunction, "Scale");
        StartCameraShake_PlaySpace_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StartCameraShake_NativeFunction, "PlaySpace");
        StartCameraShake_UserPlaySpaceRot_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(StartCameraShake_NativeFunction, "UserPlaySpaceRot");
        Start_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Start");
        GetAttenuationFactor_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetAttenuationFactor");
        GetAttenuationFactor_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetAttenuationFactor_NativeFunction);
        GetAttenuationFactor_Location_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAttenuationFactor_NativeFunction, "Location");
        GetAttenuationFactor_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAttenuationFactor_NativeFunction, "ReturnValue");
        
        
    }
    
    protected CameraShakeSourceComponent(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // EnumProperty /Script/Engine.CameraShakeSourceComponent:Attenuation
    static readonly int Attenuation_Offset;
    
    public UnrealSharp.Engine.ECameraShakeAttenuation Attenuation
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Engine.ECameraShakeAttenuation>.FromNative(IntPtr.Add(NativeObject, Attenuation_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.Engine.ECameraShakeAttenuation>.ToNative(IntPtr.Add(NativeObject, Attenuation_Offset), 0, this, value);
        }
    }
    
    // FloatProperty /Script/Engine.CameraShakeSourceComponent:InnerAttenuationRadius
    static readonly int InnerAttenuationRadius_Offset;
    
    public float InnerAttenuationRadius
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, InnerAttenuationRadius_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, InnerAttenuationRadius_Offset), 0, this, value);
        }
    }
    
    // FloatProperty /Script/Engine.CameraShakeSourceComponent:OuterAttenuationRadius
    static readonly int OuterAttenuationRadius_Offset;
    
    public float OuterAttenuationRadius
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, OuterAttenuationRadius_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, OuterAttenuationRadius_Offset), 0, this, value);
        }
    }
    
    // ClassProperty /Script/Engine.CameraShakeSourceComponent:CameraShake
    static readonly int CameraShake_Offset;
    
    public SubclassOf<UnrealSharp.Engine.CameraShakeBase> CameraShake
    {
        get
        {
            CheckObjectForValidity();
            return SubclassOfMarshaller<UnrealSharp.Engine.CameraShakeBase>.FromNative(IntPtr.Add(NativeObject, CameraShake_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            SubclassOfMarshaller<UnrealSharp.Engine.CameraShakeBase>.ToNative(IntPtr.Add(NativeObject, CameraShake_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/Engine.CameraShakeSourceComponent:bAutoStart
    static readonly int bAutoStart_Offset;
    
    public bool bAutoStart
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bAutoStart_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, bAutoStart_Offset), 0, this, value);
        }
    }
    
    // Function /Script/Engine.CameraShakeSourceComponent:StopAllCameraShakesOfType
    static readonly IntPtr StopAllCameraShakesOfType_NativeFunction;
    static readonly int StopAllCameraShakesOfType_ParamsSize;
    static readonly int StopAllCameraShakesOfType_InCameraShake_Offset;
    static readonly int StopAllCameraShakesOfType_bImmediately_Offset;
    
    public void StopAllCameraShakesOfType(SubclassOf<UnrealSharp.Engine.CameraShakeBase> inCameraShake, bool bImmediately = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[StopAllCameraShakesOfType_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            SubclassOfMarshaller<UnrealSharp.Engine.CameraShakeBase>.ToNative(IntPtr.Add(ParamsBuffer, StopAllCameraShakesOfType_InCameraShake_Offset), 0, null, inCameraShake);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, StopAllCameraShakesOfType_bImmediately_Offset), 0, null, bImmediately);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, StopAllCameraShakesOfType_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.CameraShakeSourceComponent:StopAllCameraShakes
    static readonly IntPtr StopAllCameraShakes_NativeFunction;
    static readonly int StopAllCameraShakes_ParamsSize;
    static readonly int StopAllCameraShakes_bImmediately_Offset;
    
    public void StopAllCameraShakes(bool bImmediately = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[StopAllCameraShakes_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, StopAllCameraShakes_bImmediately_Offset), 0, null, bImmediately);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, StopAllCameraShakes_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.CameraShakeSourceComponent:StartCameraShake
    static readonly IntPtr StartCameraShake_NativeFunction;
    static readonly int StartCameraShake_ParamsSize;
    static readonly int StartCameraShake_InCameraShake_Offset;
    static readonly int StartCameraShake_Scale_Offset;
    static readonly int StartCameraShake_PlaySpace_Offset;
    static readonly int StartCameraShake_UserPlaySpaceRot_Offset;
    
    public void StartCameraShake(SubclassOf<UnrealSharp.Engine.CameraShakeBase> inCameraShake, float scale = 1.000000f, UnrealSharp.Engine.ECameraShakePlaySpace playSpace = UnrealSharp.Engine.ECameraShakePlaySpace.CameraLocal, UnrealSharp.Rotator userPlaySpaceRot = default(UnrealSharp.Rotator))
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[StartCameraShake_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            SubclassOfMarshaller<UnrealSharp.Engine.CameraShakeBase>.ToNative(IntPtr.Add(ParamsBuffer, StartCameraShake_InCameraShake_Offset), 0, null, inCameraShake);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, StartCameraShake_Scale_Offset), 0, null, scale);
            BlittableMarshaller<UnrealSharp.Engine.ECameraShakePlaySpace>.ToNative(IntPtr.Add(ParamsBuffer, StartCameraShake_PlaySpace_Offset), 0, null, playSpace);
            BlittableMarshaller<UnrealSharp.Rotator>.ToNative(IntPtr.Add(ParamsBuffer, StartCameraShake_UserPlaySpaceRot_Offset), 0, null, userPlaySpaceRot);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, StartCameraShake_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.CameraShakeSourceComponent:Start
    static readonly IntPtr Start_NativeFunction;
    
    public void Start()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, Start_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/Engine.CameraShakeSourceComponent:GetAttenuationFactor
    static readonly IntPtr GetAttenuationFactor_NativeFunction;
    static readonly int GetAttenuationFactor_ParamsSize;
    static readonly int GetAttenuationFactor_Location_Offset;
    static readonly int GetAttenuationFactor_ReturnValue_Offset;
    
    public float GetAttenuationFactor(System.DoubleNumerics.Vector3 location)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetAttenuationFactor_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, GetAttenuationFactor_Location_Offset), 0, null, location);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetAttenuationFactor_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetAttenuationFactor_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
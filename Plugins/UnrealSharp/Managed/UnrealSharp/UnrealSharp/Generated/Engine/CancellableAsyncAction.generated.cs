// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
abstract public partial class CancellableAsyncAction : UnrealSharp.Engine.BlueprintAsyncActionBase
{
    
    static CancellableAsyncAction()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("CancellableAsyncAction");
        
        
        IsActive_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsActive");
        IsActive_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsActive_NativeFunction);
        IsActive_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsActive_NativeFunction, "ReturnValue");
        Cancel_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Cancel");
        
        
    }
    
    protected CancellableAsyncAction(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Engine.CancellableAsyncAction:IsActive
    static readonly IntPtr IsActive_NativeFunction;
    static readonly int IsActive_ParamsSize;
    static readonly int IsActive_ReturnValue_Offset;
    
    public bool IsActive()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsActive_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsActive_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsActive_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.CancellableAsyncAction:Cancel
    static readonly IntPtr Cancel_NativeFunction;
    
    public void Cancel()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, Cancel_NativeFunction, IntPtr.Zero);
        }
    }
    
    
}
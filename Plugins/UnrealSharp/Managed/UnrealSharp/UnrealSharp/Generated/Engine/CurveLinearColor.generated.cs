// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class CurveLinearColor : UnrealSharp.Engine.CurveBase
{
    
    static CurveLinearColor()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("CurveLinearColor");
        
        
        GetUnadjustedLinearColorValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetUnadjustedLinearColorValue");
        GetUnadjustedLinearColorValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetUnadjustedLinearColorValue_NativeFunction);
        GetUnadjustedLinearColorValue_InTime_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetUnadjustedLinearColorValue_NativeFunction, "InTime");
        GetUnadjustedLinearColorValue_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetUnadjustedLinearColorValue_NativeFunction, "ReturnValue");
        GetLinearColorValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetLinearColorValue");
        GetLinearColorValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetLinearColorValue_NativeFunction);
        GetLinearColorValue_InTime_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLinearColorValue_NativeFunction, "InTime");
        GetLinearColorValue_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLinearColorValue_NativeFunction, "ReturnValue");
        GetClampedLinearColorValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetClampedLinearColorValue");
        GetClampedLinearColorValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetClampedLinearColorValue_NativeFunction);
        GetClampedLinearColorValue_InTime_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetClampedLinearColorValue_NativeFunction, "InTime");
        GetClampedLinearColorValue_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetClampedLinearColorValue_NativeFunction, "ReturnValue");
        
        
    }
    
    protected CurveLinearColor(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Engine.CurveLinearColor:GetUnadjustedLinearColorValue
    static readonly IntPtr GetUnadjustedLinearColorValue_NativeFunction;
    static readonly int GetUnadjustedLinearColorValue_ParamsSize;
    static readonly int GetUnadjustedLinearColorValue_InTime_Offset;
    static readonly int GetUnadjustedLinearColorValue_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.LinearColor GetUnadjustedLinearColorValue(float inTime)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetUnadjustedLinearColorValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, GetUnadjustedLinearColorValue_InTime_Offset), 0, null, inTime);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetUnadjustedLinearColorValue_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.LinearColor returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.FromNative(IntPtr.Add(ParamsBuffer, GetUnadjustedLinearColorValue_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.CurveLinearColor:GetLinearColorValue
    static readonly IntPtr GetLinearColorValue_NativeFunction;
    static readonly int GetLinearColorValue_ParamsSize;
    static readonly int GetLinearColorValue_InTime_Offset;
    static readonly int GetLinearColorValue_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.LinearColor GetLinearColorValue(float inTime)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetLinearColorValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, GetLinearColorValue_InTime_Offset), 0, null, inTime);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetLinearColorValue_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.LinearColor returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.FromNative(IntPtr.Add(ParamsBuffer, GetLinearColorValue_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.CurveLinearColor:GetClampedLinearColorValue
    static readonly IntPtr GetClampedLinearColorValue_NativeFunction;
    static readonly int GetClampedLinearColorValue_ParamsSize;
    static readonly int GetClampedLinearColorValue_InTime_Offset;
    static readonly int GetClampedLinearColorValue_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.LinearColor GetClampedLinearColorValue(float inTime)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetClampedLinearColorValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, GetClampedLinearColorValue_InTime_Offset), 0, null, inTime);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetClampedLinearColorValue_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.LinearColor returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.FromNative(IntPtr.Add(ParamsBuffer, GetClampedLinearColorValue_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
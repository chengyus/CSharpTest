// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class CurveVector : UnrealSharp.Engine.CurveBase
{
    
    static CurveVector()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("CurveVector");
        
        
        GetVectorValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetVectorValue");
        GetVectorValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetVectorValue_NativeFunction);
        GetVectorValue_InTime_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetVectorValue_NativeFunction, "InTime");
        GetVectorValue_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetVectorValue_NativeFunction, "ReturnValue");
        
        
    }
    
    protected CurveVector(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Engine.CurveVector:GetVectorValue
    static readonly IntPtr GetVectorValue_NativeFunction;
    static readonly int GetVectorValue_ParamsSize;
    static readonly int GetVectorValue_InTime_Offset;
    static readonly int GetVectorValue_ReturnValue_Offset;
    
    public System.DoubleNumerics.Vector3 GetVectorValue(float inTime)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetVectorValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, GetVectorValue_InTime_Offset), 0, null, inTime);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetVectorValue_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector3 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, GetVectorValue_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
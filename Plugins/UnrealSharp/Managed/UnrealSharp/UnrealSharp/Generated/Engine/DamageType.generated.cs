// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class DamageType : UnrealSharp.CoreUObject.Object
{
    
    static DamageType()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("DamageType");
        
        bCausedByWorld_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bCausedByWorld");
        bCausedByWorld_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bCausedByWorld");
        bScaleMomentumByMass_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bScaleMomentumByMass");
        bScaleMomentumByMass_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bScaleMomentumByMass");
        bRadialDamageVelChange_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bRadialDamageVelChange");
        bRadialDamageVelChange_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bRadialDamageVelChange");
        DamageImpulse_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "DamageImpulse");
        DestructibleImpulse_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "DestructibleImpulse");
        DestructibleDamageSpreadScale_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "DestructibleDamageSpreadScale");
        DamageFalloff_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "DamageFalloff");
        
        
        
    }
    
    protected DamageType(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // BoolProperty /Script/Engine.DamageType:bCausedByWorld
    static readonly int bCausedByWorld_Offset;
    static readonly IntPtr bCausedByWorld_NativeProperty;
    
    public bool bCausedByWorld
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bCausedByWorld_NativeProperty, bCausedByWorld_Offset);
        }
    }
    
    // BoolProperty /Script/Engine.DamageType:bScaleMomentumByMass
    static readonly int bScaleMomentumByMass_Offset;
    static readonly IntPtr bScaleMomentumByMass_NativeProperty;
    
    public bool bScaleMomentumByMass
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bScaleMomentumByMass_NativeProperty, bScaleMomentumByMass_Offset);
        }
    }
    
    // BoolProperty /Script/Engine.DamageType:bRadialDamageVelChange
    static readonly int bRadialDamageVelChange_Offset;
    static readonly IntPtr bRadialDamageVelChange_NativeProperty;
    
    public bool bRadialDamageVelChange
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bRadialDamageVelChange_NativeProperty, bRadialDamageVelChange_Offset);
        }
    }
    
    // FloatProperty /Script/Engine.DamageType:DamageImpulse
    static readonly int DamageImpulse_Offset;
    
    public float DamageImpulse
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, DamageImpulse_Offset), 0, this);
        }
    }
    
    // FloatProperty /Script/Engine.DamageType:DestructibleImpulse
    static readonly int DestructibleImpulse_Offset;
    
    public float DestructibleImpulse
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, DestructibleImpulse_Offset), 0, this);
        }
    }
    
    // FloatProperty /Script/Engine.DamageType:DestructibleDamageSpreadScale
    static readonly int DestructibleDamageSpreadScale_Offset;
    
    public float DestructibleDamageSpreadScale
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, DestructibleDamageSpreadScale_Offset), 0, this);
        }
    }
    
    // FloatProperty /Script/Engine.DamageType:DamageFalloff
    static readonly int DamageFalloff_Offset;
    
    public float DamageFalloff
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, DamageFalloff_Offset), 0, this);
        }
    }
    
    
}
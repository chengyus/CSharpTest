// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class DataLayer : UnrealSharp.CoreUObject.Object
{
    
    static DataLayer()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("DataLayer");
        
        
        IsVisible_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsVisible");
        IsVisible_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsVisible_NativeFunction);
        IsVisible_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsVisible_NativeFunction, "ReturnValue");
        IsRuntime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsRuntime");
        IsRuntime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsRuntime_NativeFunction);
        IsRuntime_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsRuntime_NativeFunction, "ReturnValue");
        IsInitiallyVisible_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsInitiallyVisible");
        IsInitiallyVisible_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsInitiallyVisible_NativeFunction);
        IsInitiallyVisible_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsInitiallyVisible_NativeFunction, "ReturnValue");
        IsInitiallyActive_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsInitiallyActive");
        IsInitiallyActive_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsInitiallyActive_NativeFunction);
        IsInitiallyActive_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsInitiallyActive_NativeFunction, "ReturnValue");
        IsEffectiveVisible_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsEffectiveVisible");
        IsEffectiveVisible_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsEffectiveVisible_NativeFunction);
        IsEffectiveVisible_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsEffectiveVisible_NativeFunction, "ReturnValue");
        IsDynamicallyLoaded_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsDynamicallyLoaded");
        IsDynamicallyLoaded_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsDynamicallyLoaded_NativeFunction);
        IsDynamicallyLoaded_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsDynamicallyLoaded_NativeFunction, "ReturnValue");
        GetInitialState_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetInitialState");
        GetInitialState_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetInitialState_NativeFunction);
        GetInitialState_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetInitialState_NativeFunction, "ReturnValue");
        GetInitialRuntimeState_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetInitialRuntimeState");
        GetInitialRuntimeState_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetInitialRuntimeState_NativeFunction);
        GetInitialRuntimeState_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetInitialRuntimeState_NativeFunction, "ReturnValue");
        GetDebugColor_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetDebugColor");
        GetDebugColor_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetDebugColor_NativeFunction);
        GetDebugColor_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDebugColor_NativeFunction, "ReturnValue");
        GetDataLayerLabel_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetDataLayerLabel");
        GetDataLayerLabel_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetDataLayerLabel_NativeFunction);
        GetDataLayerLabel_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDataLayerLabel_NativeFunction, "ReturnValue");
        Equals_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Equals");
        Equals_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Equals_NativeFunction);
        Equals_ActorDataLayer_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Equals_NativeFunction, "ActorDataLayer");
        Equals_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Equals_NativeFunction, "ReturnValue");
        
        
    }
    
    protected DataLayer(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Engine.DataLayer:IsVisible
    static readonly IntPtr IsVisible_NativeFunction;
    static readonly int IsVisible_ParamsSize;
    static readonly int IsVisible_ReturnValue_Offset;
    
    public bool IsVisible()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsVisible_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsVisible_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsVisible_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.DataLayer:IsRuntime
    static readonly IntPtr IsRuntime_NativeFunction;
    static readonly int IsRuntime_ParamsSize;
    static readonly int IsRuntime_ReturnValue_Offset;
    
    public bool IsRuntime()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsRuntime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsRuntime_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsRuntime_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.DataLayer:IsInitiallyVisible
    static readonly IntPtr IsInitiallyVisible_NativeFunction;
    static readonly int IsInitiallyVisible_ParamsSize;
    static readonly int IsInitiallyVisible_ReturnValue_Offset;
    
    public bool IsInitiallyVisible()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsInitiallyVisible_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsInitiallyVisible_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsInitiallyVisible_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.DataLayer:IsInitiallyActive
    static readonly IntPtr IsInitiallyActive_NativeFunction;
    static readonly int IsInitiallyActive_ParamsSize;
    static readonly int IsInitiallyActive_ReturnValue_Offset;
    
    [Obsolete("Use GetInitialRuntimeState instead")]
    public bool IsInitiallyActive()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsInitiallyActive_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsInitiallyActive_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsInitiallyActive_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.DataLayer:IsEffectiveVisible
    static readonly IntPtr IsEffectiveVisible_NativeFunction;
    static readonly int IsEffectiveVisible_ParamsSize;
    static readonly int IsEffectiveVisible_ReturnValue_Offset;
    
    public bool IsEffectiveVisible()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsEffectiveVisible_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsEffectiveVisible_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsEffectiveVisible_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.DataLayer:IsDynamicallyLoaded
    static readonly IntPtr IsDynamicallyLoaded_NativeFunction;
    static readonly int IsDynamicallyLoaded_ParamsSize;
    static readonly int IsDynamicallyLoaded_ReturnValue_Offset;
    
    [Obsolete("Use IsRuntime instead")]
    public bool IsDynamicallyLoaded()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsDynamicallyLoaded_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsDynamicallyLoaded_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsDynamicallyLoaded_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.DataLayer:GetInitialState
    static readonly IntPtr GetInitialState_NativeFunction;
    static readonly int GetInitialState_ParamsSize;
    static readonly int GetInitialState_ReturnValue_Offset;
    
    [Obsolete("Use GetInitialRuntimeState instead")]
    public UnrealSharp.Engine.EDataLayerState GetInitialState()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetInitialState_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetInitialState_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.EDataLayerState returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.Engine.EDataLayerState>.FromNative(IntPtr.Add(ParamsBuffer, GetInitialState_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.DataLayer:GetInitialRuntimeState
    static readonly IntPtr GetInitialRuntimeState_NativeFunction;
    static readonly int GetInitialRuntimeState_ParamsSize;
    static readonly int GetInitialRuntimeState_ReturnValue_Offset;
    
    public UnrealSharp.Engine.EDataLayerRuntimeState GetInitialRuntimeState()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetInitialRuntimeState_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetInitialRuntimeState_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.EDataLayerRuntimeState returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.Engine.EDataLayerRuntimeState>.FromNative(IntPtr.Add(ParamsBuffer, GetInitialRuntimeState_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.DataLayer:GetDebugColor
    static readonly IntPtr GetDebugColor_NativeFunction;
    static readonly int GetDebugColor_ParamsSize;
    static readonly int GetDebugColor_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.Color GetDebugColor()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetDebugColor_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetDebugColor_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.Color returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.CoreUObject.Color>.FromNative(IntPtr.Add(ParamsBuffer, GetDebugColor_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.DataLayer:GetDataLayerLabel
    static readonly IntPtr GetDataLayerLabel_NativeFunction;
    static readonly int GetDataLayerLabel_ParamsSize;
    static readonly int GetDataLayerLabel_ReturnValue_Offset;
    
    public Name GetDataLayerLabel()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetDataLayerLabel_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetDataLayerLabel_NativeFunction, ParamsBuffer);
            
            Name returnValue;
            returnValue = BlittableMarshaller<Name>.FromNative(IntPtr.Add(ParamsBuffer, GetDataLayerLabel_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.DataLayer:Equals
    static readonly IntPtr Equals_NativeFunction;
    static readonly int Equals_ParamsSize;
    static readonly int Equals_ActorDataLayer_Offset;
    static readonly int Equals_ReturnValue_Offset;
    
    public bool Equals(UnrealSharp.Engine.ActorDataLayer actorDataLayer)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Equals_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.Engine.ActorDataLayer>.ToNative(IntPtr.Add(ParamsBuffer, Equals_ActorDataLayer_Offset), 0, null, actorDataLayer);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, Equals_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, Equals_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
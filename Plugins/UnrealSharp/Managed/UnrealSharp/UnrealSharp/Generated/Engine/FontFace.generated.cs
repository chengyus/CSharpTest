// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class FontFace : UnrealSharp.CoreUObject.Object
{
    
    static FontFace()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("FontFace");
        
        SourceFilename_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "SourceFilename");
        SourceFilename_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "SourceFilename");
        Hinting_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Hinting");
        LoadingPolicy_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "LoadingPolicy");
        LayoutMethod_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "LayoutMethod");
        
        
        
    }
    
    protected FontFace(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // StrProperty /Script/Engine.FontFace:SourceFilename
    static readonly int SourceFilename_Offset;
    static readonly IntPtr SourceFilename_NativeProperty;
    
    public string SourceFilename
    {
        get
        {
            CheckObjectForValidity();
            return StringMarshaller.FromNative(IntPtr.Add(NativeObject,SourceFilename_Offset),0,this);
        }
    }
    
    // EnumProperty /Script/Engine.FontFace:Hinting
    static readonly int Hinting_Offset;
    
    public UnrealSharp.SlateCore.EFontHinting Hinting
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.SlateCore.EFontHinting>.FromNative(IntPtr.Add(NativeObject, Hinting_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.SlateCore.EFontHinting>.ToNative(IntPtr.Add(NativeObject, Hinting_Offset), 0, this, value);
        }
    }
    
    // EnumProperty /Script/Engine.FontFace:LoadingPolicy
    static readonly int LoadingPolicy_Offset;
    
    public UnrealSharp.SlateCore.EFontLoadingPolicy LoadingPolicy
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.SlateCore.EFontLoadingPolicy>.FromNative(IntPtr.Add(NativeObject, LoadingPolicy_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.SlateCore.EFontLoadingPolicy>.ToNative(IntPtr.Add(NativeObject, LoadingPolicy_Offset), 0, this, value);
        }
    }
    
    // EnumProperty /Script/Engine.FontFace:LayoutMethod
    static readonly int LayoutMethod_Offset;
    
    public UnrealSharp.SlateCore.EFontLayoutMethod LayoutMethod
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.SlateCore.EFontLayoutMethod>.FromNative(IntPtr.Add(NativeObject, LayoutMethod_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.SlateCore.EFontLayoutMethod>.ToNative(IntPtr.Add(NativeObject, LayoutMethod_Offset), 0, this, value);
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class GameState : UnrealSharp.Engine.GameStateBase
{
    
    static GameState()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("GameState");
        
        MatchState_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "MatchState");
        PreviousMatchState_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "PreviousMatchState");
        ElapsedTime_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ElapsedTime");
        
        
        
    }
    
    protected GameState(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // NameProperty /Script/Engine.GameState:MatchState
    static readonly int MatchState_Offset;
    
    public Name MatchState
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<Name>.FromNative(IntPtr.Add(NativeObject, MatchState_Offset), 0, this);
        }
    }
    
    // NameProperty /Script/Engine.GameState:PreviousMatchState
    static readonly int PreviousMatchState_Offset;
    
    public Name PreviousMatchState
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<Name>.FromNative(IntPtr.Add(NativeObject, PreviousMatchState_Offset), 0, this);
        }
    }
    
    // IntProperty /Script/Engine.GameState:ElapsedTime
    static readonly int ElapsedTime_Offset;
    
    public int ElapsedTime
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<int>.FromNative(IntPtr.Add(NativeObject, ElapsedTime_Offset), 0, this);
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class InitialActiveSoundParams : UnrealSharp.CoreUObject.Object
{
    
    static InitialActiveSoundParams()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("InitialActiveSoundParams");
        
        AudioParams_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "AudioParams");
        AudioParams_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "AudioParams");
        
        
        
    }
    
    protected InitialActiveSoundParams(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ArrayProperty /Script/Engine.InitialActiveSoundParams:AudioParams
    static readonly int AudioParams_Offset;
    static readonly IntPtr AudioParams_NativeProperty;
    UnrealArrayReadWriteMarshaler<UnrealSharp.AudioExtensions.AudioParameter> AudioParams_Wrapper = null;
    
    public System.Collections.Generic.IList<UnrealSharp.AudioExtensions.AudioParameter> AudioParams
    {
        get
        {
            if(AudioParams_Wrapper == null)
            {
                AudioParams_Wrapper = new UnrealArrayReadWriteMarshaler<UnrealSharp.AudioExtensions.AudioParameter>(1, AudioParams_NativeProperty, UnrealSharp.AudioExtensions.AudioParameterMarshaler.ToNative, UnrealSharp.AudioExtensions.AudioParameterMarshaler.FromNative);
            }
            
            return AudioParams_Wrapper.FromNative(IntPtr.Add(NativeObject,AudioParams_Offset),0,this);
        }
    }
    
    
}
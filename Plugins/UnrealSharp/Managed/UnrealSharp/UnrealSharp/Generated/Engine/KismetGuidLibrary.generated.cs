// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class GuidLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static GuidLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("KismetGuidLibrary");
        
        
        Parse_StringToGuid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Parse_StringToGuid");
        Parse_StringToGuid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Parse_StringToGuid_NativeFunction);
        Parse_StringToGuid_GuidString_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Parse_StringToGuid_NativeFunction, "GuidString");
        Parse_StringToGuid_OutGuid_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Parse_StringToGuid_NativeFunction, "OutGuid");
        Parse_StringToGuid_Success_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Parse_StringToGuid_NativeFunction, "Success");
        NotEqual_GuidGuid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "NotEqual_GuidGuid");
        NotEqual_GuidGuid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(NotEqual_GuidGuid_NativeFunction);
        NotEqual_GuidGuid_A_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NotEqual_GuidGuid_NativeFunction, "A");
        NotEqual_GuidGuid_B_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NotEqual_GuidGuid_NativeFunction, "B");
        NotEqual_GuidGuid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NotEqual_GuidGuid_NativeFunction, "ReturnValue");
        NewGuid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "NewGuid");
        NewGuid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(NewGuid_NativeFunction);
        NewGuid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NewGuid_NativeFunction, "ReturnValue");
        IsValid_Guid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsValid_Guid");
        IsValid_Guid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsValid_Guid_NativeFunction);
        IsValid_Guid_InGuid_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsValid_Guid_NativeFunction, "InGuid");
        IsValid_Guid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsValid_Guid_NativeFunction, "ReturnValue");
        Invalidate_Guid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Invalidate_Guid");
        Invalidate_Guid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Invalidate_Guid_NativeFunction);
        Invalidate_Guid_InGuid_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Invalidate_Guid_NativeFunction, "InGuid");
        EqualEqual_GuidGuid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "EqualEqual_GuidGuid");
        EqualEqual_GuidGuid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(EqualEqual_GuidGuid_NativeFunction);
        EqualEqual_GuidGuid_A_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EqualEqual_GuidGuid_NativeFunction, "A");
        EqualEqual_GuidGuid_B_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EqualEqual_GuidGuid_NativeFunction, "B");
        EqualEqual_GuidGuid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EqualEqual_GuidGuid_NativeFunction, "ReturnValue");
        Conv_GuidToString_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Conv_GuidToString");
        Conv_GuidToString_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Conv_GuidToString_NativeFunction);
        Conv_GuidToString_InGuid_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Conv_GuidToString_NativeFunction, "InGuid");
        Conv_GuidToString_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Conv_GuidToString_NativeFunction, "ReturnValue");
        
        
    }
    
    protected GuidLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Engine.KismetGuidLibrary:Parse_StringToGuid
    static readonly IntPtr Parse_StringToGuid_NativeFunction;
    static readonly int Parse_StringToGuid_ParamsSize;
    static readonly int Parse_StringToGuid_GuidString_Offset;
    static readonly int Parse_StringToGuid_OutGuid_Offset;
    static readonly int Parse_StringToGuid_Success_Offset;
    
    public static void Parse_StringToGuid(string guidString, out UnrealSharp.CoreUObject.Guid outGuid, out bool success)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Parse_StringToGuid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr GuidString_NativePtr = IntPtr.Add(ParamsBuffer,Parse_StringToGuid_GuidString_Offset);
            StringMarshaller.ToNative(GuidString_NativePtr,0,null,guidString);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, Parse_StringToGuid_NativeFunction, ParamsBuffer);
            
            outGuid = UnrealSharp.CoreUObject.GuidMarshaler.FromNative(IntPtr.Add(ParamsBuffer, Parse_StringToGuid_OutGuid_Offset), 0, null);
            success = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, Parse_StringToGuid_Success_Offset), 0, null);
            
            StringMarshaller.DestructInstance(GuidString_NativePtr, 0);
        }
    }
    
    // Function /Script/Engine.KismetGuidLibrary:NotEqual_GuidGuid
    static readonly IntPtr NotEqual_GuidGuid_NativeFunction;
    static readonly int NotEqual_GuidGuid_ParamsSize;
    static readonly int NotEqual_GuidGuid_A_Offset;
    static readonly int NotEqual_GuidGuid_B_Offset;
    static readonly int NotEqual_GuidGuid_ReturnValue_Offset;
    
    public static bool NotEqual_GuidGuid(UnrealSharp.CoreUObject.Guid a, UnrealSharp.CoreUObject.Guid b)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[NotEqual_GuidGuid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.CoreUObject.GuidMarshaler.ToNative(IntPtr.Add(ParamsBuffer, NotEqual_GuidGuid_A_Offset), 0, null, a);
            UnrealSharp.CoreUObject.GuidMarshaler.ToNative(IntPtr.Add(ParamsBuffer, NotEqual_GuidGuid_B_Offset), 0, null, b);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, NotEqual_GuidGuid_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, NotEqual_GuidGuid_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetGuidLibrary:NewGuid
    static readonly IntPtr NewGuid_NativeFunction;
    static readonly int NewGuid_ParamsSize;
    static readonly int NewGuid_ReturnValue_Offset;
    
    public static UnrealSharp.CoreUObject.Guid NewGuid()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[NewGuid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, NewGuid_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.Guid returnValue;
            returnValue = UnrealSharp.CoreUObject.GuidMarshaler.FromNative(IntPtr.Add(ParamsBuffer, NewGuid_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetGuidLibrary:IsValid_Guid
    static readonly IntPtr IsValid_Guid_NativeFunction;
    static readonly int IsValid_Guid_ParamsSize;
    static readonly int IsValid_Guid_InGuid_Offset;
    static readonly int IsValid_Guid_ReturnValue_Offset;
    
    public static bool IsValid_Guid(UnrealSharp.CoreUObject.Guid inGuid)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsValid_Guid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.CoreUObject.GuidMarshaler.ToNative(IntPtr.Add(ParamsBuffer, IsValid_Guid_InGuid_Offset), 0, null, inGuid);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, IsValid_Guid_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsValid_Guid_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetGuidLibrary:Invalidate_Guid
    static readonly IntPtr Invalidate_Guid_NativeFunction;
    static readonly int Invalidate_Guid_ParamsSize;
    static readonly int Invalidate_Guid_InGuid_Offset;
    
    public static void Invalidate_Guid(ref UnrealSharp.CoreUObject.Guid inGuid)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Invalidate_Guid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.CoreUObject.GuidMarshaler.ToNative(IntPtr.Add(ParamsBuffer, Invalidate_Guid_InGuid_Offset), 0, null, inGuid);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, Invalidate_Guid_NativeFunction, ParamsBuffer);
            
            inGuid = UnrealSharp.CoreUObject.GuidMarshaler.FromNative(IntPtr.Add(ParamsBuffer, Invalidate_Guid_InGuid_Offset), 0, null);
            
        }
    }
    
    // Function /Script/Engine.KismetGuidLibrary:EqualEqual_GuidGuid
    static readonly IntPtr EqualEqual_GuidGuid_NativeFunction;
    static readonly int EqualEqual_GuidGuid_ParamsSize;
    static readonly int EqualEqual_GuidGuid_A_Offset;
    static readonly int EqualEqual_GuidGuid_B_Offset;
    static readonly int EqualEqual_GuidGuid_ReturnValue_Offset;
    
    public static bool EqualEqual_GuidGuid(UnrealSharp.CoreUObject.Guid a, UnrealSharp.CoreUObject.Guid b)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[EqualEqual_GuidGuid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.CoreUObject.GuidMarshaler.ToNative(IntPtr.Add(ParamsBuffer, EqualEqual_GuidGuid_A_Offset), 0, null, a);
            UnrealSharp.CoreUObject.GuidMarshaler.ToNative(IntPtr.Add(ParamsBuffer, EqualEqual_GuidGuid_B_Offset), 0, null, b);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, EqualEqual_GuidGuid_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, EqualEqual_GuidGuid_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetGuidLibrary:Conv_GuidToString
    static readonly IntPtr Conv_GuidToString_NativeFunction;
    static readonly int Conv_GuidToString_ParamsSize;
    static readonly int Conv_GuidToString_InGuid_Offset;
    static readonly int Conv_GuidToString_ReturnValue_Offset;
    
    public static string ToString(UnrealSharp.CoreUObject.Guid inGuid)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Conv_GuidToString_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.CoreUObject.GuidMarshaler.ToNative(IntPtr.Add(ParamsBuffer, Conv_GuidToString_InGuid_Offset), 0, null, inGuid);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, Conv_GuidToString_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,Conv_GuidToString_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    
}
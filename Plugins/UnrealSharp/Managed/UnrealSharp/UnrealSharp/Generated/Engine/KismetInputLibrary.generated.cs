// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class InputLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static InputLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("KismetInputLibrary");
        
        
        PointerEvent_IsTouchEvent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "PointerEvent_IsTouchEvent");
        PointerEvent_IsTouchEvent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(PointerEvent_IsTouchEvent_NativeFunction);
        PointerEvent_IsTouchEvent_Input_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PointerEvent_IsTouchEvent_NativeFunction, "Input");
        PointerEvent_IsTouchEvent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PointerEvent_IsTouchEvent_NativeFunction, "ReturnValue");
        PointerEvent_IsMouseButtonDown_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "PointerEvent_IsMouseButtonDown");
        PointerEvent_IsMouseButtonDown_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(PointerEvent_IsMouseButtonDown_NativeFunction);
        PointerEvent_IsMouseButtonDown_Input_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PointerEvent_IsMouseButtonDown_NativeFunction, "Input");
        PointerEvent_IsMouseButtonDown_MouseButton_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PointerEvent_IsMouseButtonDown_NativeFunction, "MouseButton");
        PointerEvent_IsMouseButtonDown_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PointerEvent_IsMouseButtonDown_NativeFunction, "ReturnValue");
        PointerEvent_GetWheelDelta_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "PointerEvent_GetWheelDelta");
        PointerEvent_GetWheelDelta_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(PointerEvent_GetWheelDelta_NativeFunction);
        PointerEvent_GetWheelDelta_Input_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PointerEvent_GetWheelDelta_NativeFunction, "Input");
        PointerEvent_GetWheelDelta_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PointerEvent_GetWheelDelta_NativeFunction, "ReturnValue");
        PointerEvent_GetUserIndex_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "PointerEvent_GetUserIndex");
        PointerEvent_GetUserIndex_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(PointerEvent_GetUserIndex_NativeFunction);
        PointerEvent_GetUserIndex_Input_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PointerEvent_GetUserIndex_NativeFunction, "Input");
        PointerEvent_GetUserIndex_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PointerEvent_GetUserIndex_NativeFunction, "ReturnValue");
        PointerEvent_GetTouchpadIndex_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "PointerEvent_GetTouchpadIndex");
        PointerEvent_GetTouchpadIndex_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(PointerEvent_GetTouchpadIndex_NativeFunction);
        PointerEvent_GetTouchpadIndex_Input_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PointerEvent_GetTouchpadIndex_NativeFunction, "Input");
        PointerEvent_GetTouchpadIndex_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PointerEvent_GetTouchpadIndex_NativeFunction, "ReturnValue");
        PointerEvent_GetScreenSpacePosition_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "PointerEvent_GetScreenSpacePosition");
        PointerEvent_GetScreenSpacePosition_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(PointerEvent_GetScreenSpacePosition_NativeFunction);
        PointerEvent_GetScreenSpacePosition_Input_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PointerEvent_GetScreenSpacePosition_NativeFunction, "Input");
        PointerEvent_GetScreenSpacePosition_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PointerEvent_GetScreenSpacePosition_NativeFunction, "ReturnValue");
        PointerEvent_GetPointerIndex_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "PointerEvent_GetPointerIndex");
        PointerEvent_GetPointerIndex_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(PointerEvent_GetPointerIndex_NativeFunction);
        PointerEvent_GetPointerIndex_Input_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PointerEvent_GetPointerIndex_NativeFunction, "Input");
        PointerEvent_GetPointerIndex_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PointerEvent_GetPointerIndex_NativeFunction, "ReturnValue");
        PointerEvent_GetLastScreenSpacePosition_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "PointerEvent_GetLastScreenSpacePosition");
        PointerEvent_GetLastScreenSpacePosition_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(PointerEvent_GetLastScreenSpacePosition_NativeFunction);
        PointerEvent_GetLastScreenSpacePosition_Input_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PointerEvent_GetLastScreenSpacePosition_NativeFunction, "Input");
        PointerEvent_GetLastScreenSpacePosition_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PointerEvent_GetLastScreenSpacePosition_NativeFunction, "ReturnValue");
        PointerEvent_GetGestureType_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "PointerEvent_GetGestureType");
        PointerEvent_GetGestureType_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(PointerEvent_GetGestureType_NativeFunction);
        PointerEvent_GetGestureType_Input_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PointerEvent_GetGestureType_NativeFunction, "Input");
        PointerEvent_GetGestureType_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PointerEvent_GetGestureType_NativeFunction, "ReturnValue");
        PointerEvent_GetGestureDelta_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "PointerEvent_GetGestureDelta");
        PointerEvent_GetGestureDelta_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(PointerEvent_GetGestureDelta_NativeFunction);
        PointerEvent_GetGestureDelta_Input_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PointerEvent_GetGestureDelta_NativeFunction, "Input");
        PointerEvent_GetGestureDelta_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PointerEvent_GetGestureDelta_NativeFunction, "ReturnValue");
        PointerEvent_GetEffectingButton_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "PointerEvent_GetEffectingButton");
        PointerEvent_GetEffectingButton_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(PointerEvent_GetEffectingButton_NativeFunction);
        PointerEvent_GetEffectingButton_Input_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PointerEvent_GetEffectingButton_NativeFunction, "Input");
        PointerEvent_GetEffectingButton_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PointerEvent_GetEffectingButton_NativeFunction, "ReturnValue");
        PointerEvent_GetCursorDelta_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "PointerEvent_GetCursorDelta");
        PointerEvent_GetCursorDelta_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(PointerEvent_GetCursorDelta_NativeFunction);
        PointerEvent_GetCursorDelta_Input_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PointerEvent_GetCursorDelta_NativeFunction, "Input");
        PointerEvent_GetCursorDelta_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PointerEvent_GetCursorDelta_NativeFunction, "ReturnValue");
        ModifierKeysState_IsShiftDown_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ModifierKeysState_IsShiftDown");
        ModifierKeysState_IsShiftDown_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ModifierKeysState_IsShiftDown_NativeFunction);
        ModifierKeysState_IsShiftDown_KeysState_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ModifierKeysState_IsShiftDown_NativeFunction, "KeysState");
        ModifierKeysState_IsShiftDown_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ModifierKeysState_IsShiftDown_NativeFunction, "ReturnValue");
        ModifierKeysState_IsControlDown_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ModifierKeysState_IsControlDown");
        ModifierKeysState_IsControlDown_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ModifierKeysState_IsControlDown_NativeFunction);
        ModifierKeysState_IsControlDown_KeysState_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ModifierKeysState_IsControlDown_NativeFunction, "KeysState");
        ModifierKeysState_IsControlDown_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ModifierKeysState_IsControlDown_NativeFunction, "ReturnValue");
        ModifierKeysState_IsCommandDown_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ModifierKeysState_IsCommandDown");
        ModifierKeysState_IsCommandDown_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ModifierKeysState_IsCommandDown_NativeFunction);
        ModifierKeysState_IsCommandDown_KeysState_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ModifierKeysState_IsCommandDown_NativeFunction, "KeysState");
        ModifierKeysState_IsCommandDown_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ModifierKeysState_IsCommandDown_NativeFunction, "ReturnValue");
        ModifierKeysState_IsAltDown_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ModifierKeysState_IsAltDown");
        ModifierKeysState_IsAltDown_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ModifierKeysState_IsAltDown_NativeFunction);
        ModifierKeysState_IsAltDown_KeysState_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ModifierKeysState_IsAltDown_NativeFunction, "KeysState");
        ModifierKeysState_IsAltDown_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ModifierKeysState_IsAltDown_NativeFunction, "ReturnValue");
        Key_IsVectorAxis_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Key_IsVectorAxis");
        Key_IsVectorAxis_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Key_IsVectorAxis_NativeFunction);
        Key_IsVectorAxis_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_IsVectorAxis_NativeFunction, "Key");
        Key_IsVectorAxis_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_IsVectorAxis_NativeFunction, "ReturnValue");
        Key_IsValid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Key_IsValid");
        Key_IsValid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Key_IsValid_NativeFunction);
        Key_IsValid_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_IsValid_NativeFunction, "Key");
        Key_IsValid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_IsValid_NativeFunction, "ReturnValue");
        Key_IsMouseButton_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Key_IsMouseButton");
        Key_IsMouseButton_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Key_IsMouseButton_NativeFunction);
        Key_IsMouseButton_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_IsMouseButton_NativeFunction, "Key");
        Key_IsMouseButton_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_IsMouseButton_NativeFunction, "ReturnValue");
        Key_IsModifierKey_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Key_IsModifierKey");
        Key_IsModifierKey_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Key_IsModifierKey_NativeFunction);
        Key_IsModifierKey_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_IsModifierKey_NativeFunction, "Key");
        Key_IsModifierKey_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_IsModifierKey_NativeFunction, "ReturnValue");
        Key_IsKeyboardKey_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Key_IsKeyboardKey");
        Key_IsKeyboardKey_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Key_IsKeyboardKey_NativeFunction);
        Key_IsKeyboardKey_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_IsKeyboardKey_NativeFunction, "Key");
        Key_IsKeyboardKey_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_IsKeyboardKey_NativeFunction, "ReturnValue");
        Key_IsGamepadKey_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Key_IsGamepadKey");
        Key_IsGamepadKey_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Key_IsGamepadKey_NativeFunction);
        Key_IsGamepadKey_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_IsGamepadKey_NativeFunction, "Key");
        Key_IsGamepadKey_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_IsGamepadKey_NativeFunction, "ReturnValue");
        Key_IsDigital_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Key_IsDigital");
        Key_IsDigital_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Key_IsDigital_NativeFunction);
        Key_IsDigital_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_IsDigital_NativeFunction, "Key");
        Key_IsDigital_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_IsDigital_NativeFunction, "ReturnValue");
        Key_IsButtonAxis_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Key_IsButtonAxis");
        Key_IsButtonAxis_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Key_IsButtonAxis_NativeFunction);
        Key_IsButtonAxis_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_IsButtonAxis_NativeFunction, "Key");
        Key_IsButtonAxis_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_IsButtonAxis_NativeFunction, "ReturnValue");
        Key_IsAxis3D_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Key_IsAxis3D");
        Key_IsAxis3D_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Key_IsAxis3D_NativeFunction);
        Key_IsAxis3D_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_IsAxis3D_NativeFunction, "Key");
        Key_IsAxis3D_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_IsAxis3D_NativeFunction, "ReturnValue");
        Key_IsAxis2D_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Key_IsAxis2D");
        Key_IsAxis2D_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Key_IsAxis2D_NativeFunction);
        Key_IsAxis2D_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_IsAxis2D_NativeFunction, "Key");
        Key_IsAxis2D_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_IsAxis2D_NativeFunction, "ReturnValue");
        Key_IsAxis1D_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Key_IsAxis1D");
        Key_IsAxis1D_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Key_IsAxis1D_NativeFunction);
        Key_IsAxis1D_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_IsAxis1D_NativeFunction, "Key");
        Key_IsAxis1D_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_IsAxis1D_NativeFunction, "ReturnValue");
        Key_IsAnalog_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Key_IsAnalog");
        Key_IsAnalog_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Key_IsAnalog_NativeFunction);
        Key_IsAnalog_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_IsAnalog_NativeFunction, "Key");
        Key_IsAnalog_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_IsAnalog_NativeFunction, "ReturnValue");
        Key_GetNavigationDirectionFromKey_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Key_GetNavigationDirectionFromKey");
        Key_GetNavigationDirectionFromKey_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Key_GetNavigationDirectionFromKey_NativeFunction);
        Key_GetNavigationDirectionFromKey_InKeyEvent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_GetNavigationDirectionFromKey_NativeFunction, "InKeyEvent");
        Key_GetNavigationDirectionFromKey_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_GetNavigationDirectionFromKey_NativeFunction, "ReturnValue");
        Key_GetNavigationDirectionFromAnalog_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Key_GetNavigationDirectionFromAnalog");
        Key_GetNavigationDirectionFromAnalog_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Key_GetNavigationDirectionFromAnalog_NativeFunction);
        Key_GetNavigationDirectionFromAnalog_InAnalogEvent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_GetNavigationDirectionFromAnalog_NativeFunction, "InAnalogEvent");
        Key_GetNavigationDirectionFromAnalog_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_GetNavigationDirectionFromAnalog_NativeFunction, "ReturnValue");
        Key_GetNavigationActionFromKey_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Key_GetNavigationActionFromKey");
        Key_GetNavigationActionFromKey_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Key_GetNavigationActionFromKey_NativeFunction);
        Key_GetNavigationActionFromKey_InKeyEvent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_GetNavigationActionFromKey_NativeFunction, "InKeyEvent");
        Key_GetNavigationActionFromKey_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_GetNavigationActionFromKey_NativeFunction, "ReturnValue");
        Key_GetNavigationAction_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Key_GetNavigationAction");
        Key_GetNavigationAction_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Key_GetNavigationAction_NativeFunction);
        Key_GetNavigationAction_InKey_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_GetNavigationAction_NativeFunction, "InKey");
        Key_GetNavigationAction_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Key_GetNavigationAction_NativeFunction, "ReturnValue");
        InputEvent_IsShiftDown_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "InputEvent_IsShiftDown");
        InputEvent_IsShiftDown_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(InputEvent_IsShiftDown_NativeFunction);
        InputEvent_IsShiftDown_Input_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InputEvent_IsShiftDown_NativeFunction, "Input");
        InputEvent_IsShiftDown_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InputEvent_IsShiftDown_NativeFunction, "ReturnValue");
        InputEvent_IsRightShiftDown_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "InputEvent_IsRightShiftDown");
        InputEvent_IsRightShiftDown_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(InputEvent_IsRightShiftDown_NativeFunction);
        InputEvent_IsRightShiftDown_Input_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InputEvent_IsRightShiftDown_NativeFunction, "Input");
        InputEvent_IsRightShiftDown_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InputEvent_IsRightShiftDown_NativeFunction, "ReturnValue");
        InputEvent_IsRightControlDown_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "InputEvent_IsRightControlDown");
        InputEvent_IsRightControlDown_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(InputEvent_IsRightControlDown_NativeFunction);
        InputEvent_IsRightControlDown_Input_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InputEvent_IsRightControlDown_NativeFunction, "Input");
        InputEvent_IsRightControlDown_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InputEvent_IsRightControlDown_NativeFunction, "ReturnValue");
        InputEvent_IsRightCommandDown_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "InputEvent_IsRightCommandDown");
        InputEvent_IsRightCommandDown_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(InputEvent_IsRightCommandDown_NativeFunction);
        InputEvent_IsRightCommandDown_Input_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InputEvent_IsRightCommandDown_NativeFunction, "Input");
        InputEvent_IsRightCommandDown_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InputEvent_IsRightCommandDown_NativeFunction, "ReturnValue");
        InputEvent_IsRightAltDown_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "InputEvent_IsRightAltDown");
        InputEvent_IsRightAltDown_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(InputEvent_IsRightAltDown_NativeFunction);
        InputEvent_IsRightAltDown_Input_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InputEvent_IsRightAltDown_NativeFunction, "Input");
        InputEvent_IsRightAltDown_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InputEvent_IsRightAltDown_NativeFunction, "ReturnValue");
        InputEvent_IsRepeat_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "InputEvent_IsRepeat");
        InputEvent_IsRepeat_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(InputEvent_IsRepeat_NativeFunction);
        InputEvent_IsRepeat_Input_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InputEvent_IsRepeat_NativeFunction, "Input");
        InputEvent_IsRepeat_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InputEvent_IsRepeat_NativeFunction, "ReturnValue");
        InputEvent_IsLeftShiftDown_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "InputEvent_IsLeftShiftDown");
        InputEvent_IsLeftShiftDown_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(InputEvent_IsLeftShiftDown_NativeFunction);
        InputEvent_IsLeftShiftDown_Input_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InputEvent_IsLeftShiftDown_NativeFunction, "Input");
        InputEvent_IsLeftShiftDown_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InputEvent_IsLeftShiftDown_NativeFunction, "ReturnValue");
        InputEvent_IsLeftControlDown_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "InputEvent_IsLeftControlDown");
        InputEvent_IsLeftControlDown_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(InputEvent_IsLeftControlDown_NativeFunction);
        InputEvent_IsLeftControlDown_Input_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InputEvent_IsLeftControlDown_NativeFunction, "Input");
        InputEvent_IsLeftControlDown_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InputEvent_IsLeftControlDown_NativeFunction, "ReturnValue");
        InputEvent_IsLeftCommandDown_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "InputEvent_IsLeftCommandDown");
        InputEvent_IsLeftCommandDown_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(InputEvent_IsLeftCommandDown_NativeFunction);
        InputEvent_IsLeftCommandDown_Input_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InputEvent_IsLeftCommandDown_NativeFunction, "Input");
        InputEvent_IsLeftCommandDown_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InputEvent_IsLeftCommandDown_NativeFunction, "ReturnValue");
        InputEvent_IsLeftAltDown_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "InputEvent_IsLeftAltDown");
        InputEvent_IsLeftAltDown_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(InputEvent_IsLeftAltDown_NativeFunction);
        InputEvent_IsLeftAltDown_Input_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InputEvent_IsLeftAltDown_NativeFunction, "Input");
        InputEvent_IsLeftAltDown_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InputEvent_IsLeftAltDown_NativeFunction, "ReturnValue");
        InputEvent_IsControlDown_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "InputEvent_IsControlDown");
        InputEvent_IsControlDown_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(InputEvent_IsControlDown_NativeFunction);
        InputEvent_IsControlDown_Input_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InputEvent_IsControlDown_NativeFunction, "Input");
        InputEvent_IsControlDown_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InputEvent_IsControlDown_NativeFunction, "ReturnValue");
        InputEvent_IsCommandDown_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "InputEvent_IsCommandDown");
        InputEvent_IsCommandDown_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(InputEvent_IsCommandDown_NativeFunction);
        InputEvent_IsCommandDown_Input_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InputEvent_IsCommandDown_NativeFunction, "Input");
        InputEvent_IsCommandDown_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InputEvent_IsCommandDown_NativeFunction, "ReturnValue");
        InputEvent_IsAltDown_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "InputEvent_IsAltDown");
        InputEvent_IsAltDown_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(InputEvent_IsAltDown_NativeFunction);
        InputEvent_IsAltDown_Input_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InputEvent_IsAltDown_NativeFunction, "Input");
        InputEvent_IsAltDown_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InputEvent_IsAltDown_NativeFunction, "ReturnValue");
        GetUserIndex_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetUserIndex");
        GetUserIndex_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetUserIndex_NativeFunction);
        GetUserIndex_Input_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetUserIndex_NativeFunction, "Input");
        GetUserIndex_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetUserIndex_NativeFunction, "ReturnValue");
        GetModifierKeysState_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetModifierKeysState");
        GetModifierKeysState_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetModifierKeysState_NativeFunction);
        GetModifierKeysState_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetModifierKeysState_NativeFunction, "ReturnValue");
        GetKey_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetKey");
        GetKey_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetKey_NativeFunction);
        GetKey_Input_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetKey_NativeFunction, "Input");
        GetKey_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetKey_NativeFunction, "ReturnValue");
        GetAnalogValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetAnalogValue");
        GetAnalogValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetAnalogValue_NativeFunction);
        GetAnalogValue_Input_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAnalogValue_NativeFunction, "Input");
        GetAnalogValue_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAnalogValue_NativeFunction, "ReturnValue");
        EqualEqual_KeyKey_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "EqualEqual_KeyKey");
        EqualEqual_KeyKey_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(EqualEqual_KeyKey_NativeFunction);
        EqualEqual_KeyKey_A_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EqualEqual_KeyKey_NativeFunction, "A");
        EqualEqual_KeyKey_B_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EqualEqual_KeyKey_NativeFunction, "B");
        EqualEqual_KeyKey_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EqualEqual_KeyKey_NativeFunction, "ReturnValue");
        EqualEqual_InputChordInputChord_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "EqualEqual_InputChordInputChord");
        EqualEqual_InputChordInputChord_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(EqualEqual_InputChordInputChord_NativeFunction);
        EqualEqual_InputChordInputChord_A_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EqualEqual_InputChordInputChord_NativeFunction, "A");
        EqualEqual_InputChordInputChord_B_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EqualEqual_InputChordInputChord_NativeFunction, "B");
        EqualEqual_InputChordInputChord_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EqualEqual_InputChordInputChord_NativeFunction, "ReturnValue");
        CalibrateTilt_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CalibrateTilt");
        
        
    }
    
    protected InputLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Engine.KismetInputLibrary:PointerEvent_IsTouchEvent
    static readonly IntPtr PointerEvent_IsTouchEvent_NativeFunction;
    static readonly int PointerEvent_IsTouchEvent_ParamsSize;
    static readonly int PointerEvent_IsTouchEvent_Input_Offset;
    static readonly int PointerEvent_IsTouchEvent_ReturnValue_Offset;
    
    public static bool PointerEvent_IsTouchEvent(UnrealSharp.SlateCore.PointerEvent input)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[PointerEvent_IsTouchEvent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.PointerEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, PointerEvent_IsTouchEvent_Input_Offset), 0, null, input);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, PointerEvent_IsTouchEvent_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, PointerEvent_IsTouchEvent_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:PointerEvent_IsMouseButtonDown
    static readonly IntPtr PointerEvent_IsMouseButtonDown_NativeFunction;
    static readonly int PointerEvent_IsMouseButtonDown_ParamsSize;
    static readonly int PointerEvent_IsMouseButtonDown_Input_Offset;
    static readonly int PointerEvent_IsMouseButtonDown_MouseButton_Offset;
    static readonly int PointerEvent_IsMouseButtonDown_ReturnValue_Offset;
    
    public static bool PointerEvent_IsMouseButtonDown(UnrealSharp.SlateCore.PointerEvent input, UnrealSharp.InputCore.Key mouseButton)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[PointerEvent_IsMouseButtonDown_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.PointerEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, PointerEvent_IsMouseButtonDown_Input_Offset), 0, null, input);
            UnrealSharp.InputCore.KeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, PointerEvent_IsMouseButtonDown_MouseButton_Offset), 0, null, mouseButton);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, PointerEvent_IsMouseButtonDown_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, PointerEvent_IsMouseButtonDown_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:PointerEvent_GetWheelDelta
    static readonly IntPtr PointerEvent_GetWheelDelta_NativeFunction;
    static readonly int PointerEvent_GetWheelDelta_ParamsSize;
    static readonly int PointerEvent_GetWheelDelta_Input_Offset;
    static readonly int PointerEvent_GetWheelDelta_ReturnValue_Offset;
    
    public static float PointerEvent_GetWheelDelta(UnrealSharp.SlateCore.PointerEvent input)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[PointerEvent_GetWheelDelta_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.PointerEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, PointerEvent_GetWheelDelta_Input_Offset), 0, null, input);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, PointerEvent_GetWheelDelta_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, PointerEvent_GetWheelDelta_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:PointerEvent_GetUserIndex
    static readonly IntPtr PointerEvent_GetUserIndex_NativeFunction;
    static readonly int PointerEvent_GetUserIndex_ParamsSize;
    static readonly int PointerEvent_GetUserIndex_Input_Offset;
    static readonly int PointerEvent_GetUserIndex_ReturnValue_Offset;
    
    public static int PointerEvent_GetUserIndex(UnrealSharp.SlateCore.PointerEvent input)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[PointerEvent_GetUserIndex_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.PointerEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, PointerEvent_GetUserIndex_Input_Offset), 0, null, input);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, PointerEvent_GetUserIndex_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, PointerEvent_GetUserIndex_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:PointerEvent_GetTouchpadIndex
    static readonly IntPtr PointerEvent_GetTouchpadIndex_NativeFunction;
    static readonly int PointerEvent_GetTouchpadIndex_ParamsSize;
    static readonly int PointerEvent_GetTouchpadIndex_Input_Offset;
    static readonly int PointerEvent_GetTouchpadIndex_ReturnValue_Offset;
    
    public static int PointerEvent_GetTouchpadIndex(UnrealSharp.SlateCore.PointerEvent input)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[PointerEvent_GetTouchpadIndex_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.PointerEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, PointerEvent_GetTouchpadIndex_Input_Offset), 0, null, input);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, PointerEvent_GetTouchpadIndex_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, PointerEvent_GetTouchpadIndex_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:PointerEvent_GetScreenSpacePosition
    static readonly IntPtr PointerEvent_GetScreenSpacePosition_NativeFunction;
    static readonly int PointerEvent_GetScreenSpacePosition_ParamsSize;
    static readonly int PointerEvent_GetScreenSpacePosition_Input_Offset;
    static readonly int PointerEvent_GetScreenSpacePosition_ReturnValue_Offset;
    
    public static System.DoubleNumerics.Vector2 PointerEvent_GetScreenSpacePosition(UnrealSharp.SlateCore.PointerEvent input)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[PointerEvent_GetScreenSpacePosition_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.PointerEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, PointerEvent_GetScreenSpacePosition_Input_Offset), 0, null, input);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, PointerEvent_GetScreenSpacePosition_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector2 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(ParamsBuffer, PointerEvent_GetScreenSpacePosition_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:PointerEvent_GetPointerIndex
    static readonly IntPtr PointerEvent_GetPointerIndex_NativeFunction;
    static readonly int PointerEvent_GetPointerIndex_ParamsSize;
    static readonly int PointerEvent_GetPointerIndex_Input_Offset;
    static readonly int PointerEvent_GetPointerIndex_ReturnValue_Offset;
    
    public static int PointerEvent_GetPointerIndex(UnrealSharp.SlateCore.PointerEvent input)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[PointerEvent_GetPointerIndex_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.PointerEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, PointerEvent_GetPointerIndex_Input_Offset), 0, null, input);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, PointerEvent_GetPointerIndex_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, PointerEvent_GetPointerIndex_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:PointerEvent_GetLastScreenSpacePosition
    static readonly IntPtr PointerEvent_GetLastScreenSpacePosition_NativeFunction;
    static readonly int PointerEvent_GetLastScreenSpacePosition_ParamsSize;
    static readonly int PointerEvent_GetLastScreenSpacePosition_Input_Offset;
    static readonly int PointerEvent_GetLastScreenSpacePosition_ReturnValue_Offset;
    
    public static System.DoubleNumerics.Vector2 PointerEvent_GetLastScreenSpacePosition(UnrealSharp.SlateCore.PointerEvent input)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[PointerEvent_GetLastScreenSpacePosition_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.PointerEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, PointerEvent_GetLastScreenSpacePosition_Input_Offset), 0, null, input);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, PointerEvent_GetLastScreenSpacePosition_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector2 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(ParamsBuffer, PointerEvent_GetLastScreenSpacePosition_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:PointerEvent_GetGestureType
    static readonly IntPtr PointerEvent_GetGestureType_NativeFunction;
    static readonly int PointerEvent_GetGestureType_ParamsSize;
    static readonly int PointerEvent_GetGestureType_Input_Offset;
    static readonly int PointerEvent_GetGestureType_ReturnValue_Offset;
    
    public static UnrealSharp.Engine.ESlateGesture PointerEvent_GetGestureType(UnrealSharp.SlateCore.PointerEvent input)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[PointerEvent_GetGestureType_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.PointerEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, PointerEvent_GetGestureType_Input_Offset), 0, null, input);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, PointerEvent_GetGestureType_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.ESlateGesture returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.Engine.ESlateGesture>.FromNative(IntPtr.Add(ParamsBuffer, PointerEvent_GetGestureType_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:PointerEvent_GetGestureDelta
    static readonly IntPtr PointerEvent_GetGestureDelta_NativeFunction;
    static readonly int PointerEvent_GetGestureDelta_ParamsSize;
    static readonly int PointerEvent_GetGestureDelta_Input_Offset;
    static readonly int PointerEvent_GetGestureDelta_ReturnValue_Offset;
    
    public static System.DoubleNumerics.Vector2 PointerEvent_GetGestureDelta(UnrealSharp.SlateCore.PointerEvent input)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[PointerEvent_GetGestureDelta_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.PointerEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, PointerEvent_GetGestureDelta_Input_Offset), 0, null, input);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, PointerEvent_GetGestureDelta_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector2 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(ParamsBuffer, PointerEvent_GetGestureDelta_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:PointerEvent_GetEffectingButton
    static readonly IntPtr PointerEvent_GetEffectingButton_NativeFunction;
    static readonly int PointerEvent_GetEffectingButton_ParamsSize;
    static readonly int PointerEvent_GetEffectingButton_Input_Offset;
    static readonly int PointerEvent_GetEffectingButton_ReturnValue_Offset;
    
    public static UnrealSharp.InputCore.Key PointerEvent_GetEffectingButton(UnrealSharp.SlateCore.PointerEvent input)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[PointerEvent_GetEffectingButton_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.PointerEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, PointerEvent_GetEffectingButton_Input_Offset), 0, null, input);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, PointerEvent_GetEffectingButton_NativeFunction, ParamsBuffer);
            
            UnrealSharp.InputCore.Key returnValue;
            returnValue = UnrealSharp.InputCore.KeyMarshaler.FromNative(IntPtr.Add(ParamsBuffer, PointerEvent_GetEffectingButton_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:PointerEvent_GetCursorDelta
    static readonly IntPtr PointerEvent_GetCursorDelta_NativeFunction;
    static readonly int PointerEvent_GetCursorDelta_ParamsSize;
    static readonly int PointerEvent_GetCursorDelta_Input_Offset;
    static readonly int PointerEvent_GetCursorDelta_ReturnValue_Offset;
    
    public static System.DoubleNumerics.Vector2 PointerEvent_GetCursorDelta(UnrealSharp.SlateCore.PointerEvent input)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[PointerEvent_GetCursorDelta_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.PointerEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, PointerEvent_GetCursorDelta_Input_Offset), 0, null, input);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, PointerEvent_GetCursorDelta_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector2 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(ParamsBuffer, PointerEvent_GetCursorDelta_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:ModifierKeysState_IsShiftDown
    static readonly IntPtr ModifierKeysState_IsShiftDown_NativeFunction;
    static readonly int ModifierKeysState_IsShiftDown_ParamsSize;
    static readonly int ModifierKeysState_IsShiftDown_KeysState_Offset;
    static readonly int ModifierKeysState_IsShiftDown_ReturnValue_Offset;
    
    public static bool ModifierKeysState_IsShiftDown(UnrealSharp.Engine.SlateModifierKeysState keysState)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ModifierKeysState_IsShiftDown_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.Engine.SlateModifierKeysStateMarshaler.ToNative(IntPtr.Add(ParamsBuffer, ModifierKeysState_IsShiftDown_KeysState_Offset), 0, null, keysState);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ModifierKeysState_IsShiftDown_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, ModifierKeysState_IsShiftDown_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:ModifierKeysState_IsControlDown
    static readonly IntPtr ModifierKeysState_IsControlDown_NativeFunction;
    static readonly int ModifierKeysState_IsControlDown_ParamsSize;
    static readonly int ModifierKeysState_IsControlDown_KeysState_Offset;
    static readonly int ModifierKeysState_IsControlDown_ReturnValue_Offset;
    
    public static bool ModifierKeysState_IsControlDown(UnrealSharp.Engine.SlateModifierKeysState keysState)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ModifierKeysState_IsControlDown_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.Engine.SlateModifierKeysStateMarshaler.ToNative(IntPtr.Add(ParamsBuffer, ModifierKeysState_IsControlDown_KeysState_Offset), 0, null, keysState);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ModifierKeysState_IsControlDown_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, ModifierKeysState_IsControlDown_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:ModifierKeysState_IsCommandDown
    static readonly IntPtr ModifierKeysState_IsCommandDown_NativeFunction;
    static readonly int ModifierKeysState_IsCommandDown_ParamsSize;
    static readonly int ModifierKeysState_IsCommandDown_KeysState_Offset;
    static readonly int ModifierKeysState_IsCommandDown_ReturnValue_Offset;
    
    public static bool ModifierKeysState_IsCommandDown(UnrealSharp.Engine.SlateModifierKeysState keysState)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ModifierKeysState_IsCommandDown_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.Engine.SlateModifierKeysStateMarshaler.ToNative(IntPtr.Add(ParamsBuffer, ModifierKeysState_IsCommandDown_KeysState_Offset), 0, null, keysState);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ModifierKeysState_IsCommandDown_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, ModifierKeysState_IsCommandDown_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:ModifierKeysState_IsAltDown
    static readonly IntPtr ModifierKeysState_IsAltDown_NativeFunction;
    static readonly int ModifierKeysState_IsAltDown_ParamsSize;
    static readonly int ModifierKeysState_IsAltDown_KeysState_Offset;
    static readonly int ModifierKeysState_IsAltDown_ReturnValue_Offset;
    
    public static bool ModifierKeysState_IsAltDown(UnrealSharp.Engine.SlateModifierKeysState keysState)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ModifierKeysState_IsAltDown_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.Engine.SlateModifierKeysStateMarshaler.ToNative(IntPtr.Add(ParamsBuffer, ModifierKeysState_IsAltDown_KeysState_Offset), 0, null, keysState);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ModifierKeysState_IsAltDown_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, ModifierKeysState_IsAltDown_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:Key_IsVectorAxis
    static readonly IntPtr Key_IsVectorAxis_NativeFunction;
    static readonly int Key_IsVectorAxis_ParamsSize;
    static readonly int Key_IsVectorAxis_Key_Offset;
    static readonly int Key_IsVectorAxis_ReturnValue_Offset;
    
    [Obsolete("Use Is Axis 2D/3D instead.")]
    public static bool Key_IsVectorAxis(UnrealSharp.InputCore.Key key)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Key_IsVectorAxis_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.InputCore.KeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, Key_IsVectorAxis_Key_Offset), 0, null, key);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, Key_IsVectorAxis_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, Key_IsVectorAxis_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:Key_IsValid
    static readonly IntPtr Key_IsValid_NativeFunction;
    static readonly int Key_IsValid_ParamsSize;
    static readonly int Key_IsValid_Key_Offset;
    static readonly int Key_IsValid_ReturnValue_Offset;
    
    public static bool Key_IsValid(UnrealSharp.InputCore.Key key)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Key_IsValid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.InputCore.KeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, Key_IsValid_Key_Offset), 0, null, key);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, Key_IsValid_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, Key_IsValid_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:Key_IsMouseButton
    static readonly IntPtr Key_IsMouseButton_NativeFunction;
    static readonly int Key_IsMouseButton_ParamsSize;
    static readonly int Key_IsMouseButton_Key_Offset;
    static readonly int Key_IsMouseButton_ReturnValue_Offset;
    
    public static bool Key_IsMouseButton(UnrealSharp.InputCore.Key key)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Key_IsMouseButton_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.InputCore.KeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, Key_IsMouseButton_Key_Offset), 0, null, key);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, Key_IsMouseButton_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, Key_IsMouseButton_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:Key_IsModifierKey
    static readonly IntPtr Key_IsModifierKey_NativeFunction;
    static readonly int Key_IsModifierKey_ParamsSize;
    static readonly int Key_IsModifierKey_Key_Offset;
    static readonly int Key_IsModifierKey_ReturnValue_Offset;
    
    public static bool Key_IsModifierKey(UnrealSharp.InputCore.Key key)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Key_IsModifierKey_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.InputCore.KeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, Key_IsModifierKey_Key_Offset), 0, null, key);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, Key_IsModifierKey_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, Key_IsModifierKey_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:Key_IsKeyboardKey
    static readonly IntPtr Key_IsKeyboardKey_NativeFunction;
    static readonly int Key_IsKeyboardKey_ParamsSize;
    static readonly int Key_IsKeyboardKey_Key_Offset;
    static readonly int Key_IsKeyboardKey_ReturnValue_Offset;
    
    public static bool Key_IsKeyboardKey(UnrealSharp.InputCore.Key key)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Key_IsKeyboardKey_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.InputCore.KeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, Key_IsKeyboardKey_Key_Offset), 0, null, key);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, Key_IsKeyboardKey_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, Key_IsKeyboardKey_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:Key_IsGamepadKey
    static readonly IntPtr Key_IsGamepadKey_NativeFunction;
    static readonly int Key_IsGamepadKey_ParamsSize;
    static readonly int Key_IsGamepadKey_Key_Offset;
    static readonly int Key_IsGamepadKey_ReturnValue_Offset;
    
    public static bool Key_IsGamepadKey(UnrealSharp.InputCore.Key key)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Key_IsGamepadKey_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.InputCore.KeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, Key_IsGamepadKey_Key_Offset), 0, null, key);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, Key_IsGamepadKey_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, Key_IsGamepadKey_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:Key_IsDigital
    static readonly IntPtr Key_IsDigital_NativeFunction;
    static readonly int Key_IsDigital_ParamsSize;
    static readonly int Key_IsDigital_Key_Offset;
    static readonly int Key_IsDigital_ReturnValue_Offset;
    
    public static bool Key_IsDigital(UnrealSharp.InputCore.Key key)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Key_IsDigital_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.InputCore.KeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, Key_IsDigital_Key_Offset), 0, null, key);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, Key_IsDigital_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, Key_IsDigital_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:Key_IsButtonAxis
    static readonly IntPtr Key_IsButtonAxis_NativeFunction;
    static readonly int Key_IsButtonAxis_ParamsSize;
    static readonly int Key_IsButtonAxis_Key_Offset;
    static readonly int Key_IsButtonAxis_ReturnValue_Offset;
    
    public static bool Key_IsButtonAxis(UnrealSharp.InputCore.Key key)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Key_IsButtonAxis_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.InputCore.KeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, Key_IsButtonAxis_Key_Offset), 0, null, key);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, Key_IsButtonAxis_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, Key_IsButtonAxis_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:Key_IsAxis3D
    static readonly IntPtr Key_IsAxis3D_NativeFunction;
    static readonly int Key_IsAxis3D_ParamsSize;
    static readonly int Key_IsAxis3D_Key_Offset;
    static readonly int Key_IsAxis3D_ReturnValue_Offset;
    
    public static bool Key_IsAxis3D(UnrealSharp.InputCore.Key key)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Key_IsAxis3D_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.InputCore.KeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, Key_IsAxis3D_Key_Offset), 0, null, key);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, Key_IsAxis3D_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, Key_IsAxis3D_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:Key_IsAxis2D
    static readonly IntPtr Key_IsAxis2D_NativeFunction;
    static readonly int Key_IsAxis2D_ParamsSize;
    static readonly int Key_IsAxis2D_Key_Offset;
    static readonly int Key_IsAxis2D_ReturnValue_Offset;
    
    public static bool Key_IsAxis2D(UnrealSharp.InputCore.Key key)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Key_IsAxis2D_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.InputCore.KeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, Key_IsAxis2D_Key_Offset), 0, null, key);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, Key_IsAxis2D_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, Key_IsAxis2D_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:Key_IsAxis1D
    static readonly IntPtr Key_IsAxis1D_NativeFunction;
    static readonly int Key_IsAxis1D_ParamsSize;
    static readonly int Key_IsAxis1D_Key_Offset;
    static readonly int Key_IsAxis1D_ReturnValue_Offset;
    
    public static bool Key_IsAxis1D(UnrealSharp.InputCore.Key key)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Key_IsAxis1D_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.InputCore.KeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, Key_IsAxis1D_Key_Offset), 0, null, key);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, Key_IsAxis1D_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, Key_IsAxis1D_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:Key_IsAnalog
    static readonly IntPtr Key_IsAnalog_NativeFunction;
    static readonly int Key_IsAnalog_ParamsSize;
    static readonly int Key_IsAnalog_Key_Offset;
    static readonly int Key_IsAnalog_ReturnValue_Offset;
    
    public static bool Key_IsAnalog(UnrealSharp.InputCore.Key key)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Key_IsAnalog_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.InputCore.KeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, Key_IsAnalog_Key_Offset), 0, null, key);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, Key_IsAnalog_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, Key_IsAnalog_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:Key_GetNavigationDirectionFromKey
    static readonly IntPtr Key_GetNavigationDirectionFromKey_NativeFunction;
    static readonly int Key_GetNavigationDirectionFromKey_ParamsSize;
    static readonly int Key_GetNavigationDirectionFromKey_InKeyEvent_Offset;
    static readonly int Key_GetNavigationDirectionFromKey_ReturnValue_Offset;
    
    public static UnrealSharp.SlateCore.EUINavigation Key_GetNavigationDirectionFromKey(UnrealSharp.SlateCore.KeyEvent inKeyEvent)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Key_GetNavigationDirectionFromKey_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.KeyEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, Key_GetNavigationDirectionFromKey_InKeyEvent_Offset), 0, null, inKeyEvent);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, Key_GetNavigationDirectionFromKey_NativeFunction, ParamsBuffer);
            
            UnrealSharp.SlateCore.EUINavigation returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.SlateCore.EUINavigation>.FromNative(IntPtr.Add(ParamsBuffer, Key_GetNavigationDirectionFromKey_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:Key_GetNavigationDirectionFromAnalog
    static readonly IntPtr Key_GetNavigationDirectionFromAnalog_NativeFunction;
    static readonly int Key_GetNavigationDirectionFromAnalog_ParamsSize;
    static readonly int Key_GetNavigationDirectionFromAnalog_InAnalogEvent_Offset;
    static readonly int Key_GetNavigationDirectionFromAnalog_ReturnValue_Offset;
    
    public static UnrealSharp.SlateCore.EUINavigation Key_GetNavigationDirectionFromAnalog(UnrealSharp.SlateCore.AnalogInputEvent inAnalogEvent)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Key_GetNavigationDirectionFromAnalog_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.AnalogInputEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, Key_GetNavigationDirectionFromAnalog_InAnalogEvent_Offset), 0, null, inAnalogEvent);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, Key_GetNavigationDirectionFromAnalog_NativeFunction, ParamsBuffer);
            
            UnrealSharp.SlateCore.EUINavigation returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.SlateCore.EUINavigation>.FromNative(IntPtr.Add(ParamsBuffer, Key_GetNavigationDirectionFromAnalog_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:Key_GetNavigationActionFromKey
    static readonly IntPtr Key_GetNavigationActionFromKey_NativeFunction;
    static readonly int Key_GetNavigationActionFromKey_ParamsSize;
    static readonly int Key_GetNavigationActionFromKey_InKeyEvent_Offset;
    static readonly int Key_GetNavigationActionFromKey_ReturnValue_Offset;
    
    public static UnrealSharp.SlateCore.EUINavigationAction Key_GetNavigationActionFromKey(UnrealSharp.SlateCore.KeyEvent inKeyEvent)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Key_GetNavigationActionFromKey_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.KeyEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, Key_GetNavigationActionFromKey_InKeyEvent_Offset), 0, null, inKeyEvent);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, Key_GetNavigationActionFromKey_NativeFunction, ParamsBuffer);
            
            UnrealSharp.SlateCore.EUINavigationAction returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.SlateCore.EUINavigationAction>.FromNative(IntPtr.Add(ParamsBuffer, Key_GetNavigationActionFromKey_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:Key_GetNavigationAction
    static readonly IntPtr Key_GetNavigationAction_NativeFunction;
    static readonly int Key_GetNavigationAction_ParamsSize;
    static readonly int Key_GetNavigationAction_InKey_Offset;
    static readonly int Key_GetNavigationAction_ReturnValue_Offset;
    
    [Obsolete("Use Get Key Event Navigation Action instead")]
    public static UnrealSharp.SlateCore.EUINavigationAction Key_GetNavigationAction(UnrealSharp.InputCore.Key inKey)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Key_GetNavigationAction_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.InputCore.KeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, Key_GetNavigationAction_InKey_Offset), 0, null, inKey);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, Key_GetNavigationAction_NativeFunction, ParamsBuffer);
            
            UnrealSharp.SlateCore.EUINavigationAction returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.SlateCore.EUINavigationAction>.FromNative(IntPtr.Add(ParamsBuffer, Key_GetNavigationAction_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:InputEvent_IsShiftDown
    static readonly IntPtr InputEvent_IsShiftDown_NativeFunction;
    static readonly int InputEvent_IsShiftDown_ParamsSize;
    static readonly int InputEvent_IsShiftDown_Input_Offset;
    static readonly int InputEvent_IsShiftDown_ReturnValue_Offset;
    
    public static bool InputEvent_IsShiftDown(UnrealSharp.SlateCore.InputEvent input)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[InputEvent_IsShiftDown_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.InputEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, InputEvent_IsShiftDown_Input_Offset), 0, null, input);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, InputEvent_IsShiftDown_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, InputEvent_IsShiftDown_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:InputEvent_IsRightShiftDown
    static readonly IntPtr InputEvent_IsRightShiftDown_NativeFunction;
    static readonly int InputEvent_IsRightShiftDown_ParamsSize;
    static readonly int InputEvent_IsRightShiftDown_Input_Offset;
    static readonly int InputEvent_IsRightShiftDown_ReturnValue_Offset;
    
    public static bool InputEvent_IsRightShiftDown(UnrealSharp.SlateCore.InputEvent input)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[InputEvent_IsRightShiftDown_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.InputEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, InputEvent_IsRightShiftDown_Input_Offset), 0, null, input);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, InputEvent_IsRightShiftDown_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, InputEvent_IsRightShiftDown_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:InputEvent_IsRightControlDown
    static readonly IntPtr InputEvent_IsRightControlDown_NativeFunction;
    static readonly int InputEvent_IsRightControlDown_ParamsSize;
    static readonly int InputEvent_IsRightControlDown_Input_Offset;
    static readonly int InputEvent_IsRightControlDown_ReturnValue_Offset;
    
    public static bool InputEvent_IsRightControlDown(UnrealSharp.SlateCore.InputEvent input)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[InputEvent_IsRightControlDown_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.InputEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, InputEvent_IsRightControlDown_Input_Offset), 0, null, input);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, InputEvent_IsRightControlDown_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, InputEvent_IsRightControlDown_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:InputEvent_IsRightCommandDown
    static readonly IntPtr InputEvent_IsRightCommandDown_NativeFunction;
    static readonly int InputEvent_IsRightCommandDown_ParamsSize;
    static readonly int InputEvent_IsRightCommandDown_Input_Offset;
    static readonly int InputEvent_IsRightCommandDown_ReturnValue_Offset;
    
    public static bool InputEvent_IsRightCommandDown(UnrealSharp.SlateCore.InputEvent input)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[InputEvent_IsRightCommandDown_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.InputEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, InputEvent_IsRightCommandDown_Input_Offset), 0, null, input);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, InputEvent_IsRightCommandDown_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, InputEvent_IsRightCommandDown_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:InputEvent_IsRightAltDown
    static readonly IntPtr InputEvent_IsRightAltDown_NativeFunction;
    static readonly int InputEvent_IsRightAltDown_ParamsSize;
    static readonly int InputEvent_IsRightAltDown_Input_Offset;
    static readonly int InputEvent_IsRightAltDown_ReturnValue_Offset;
    
    public static bool InputEvent_IsRightAltDown(UnrealSharp.SlateCore.InputEvent input)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[InputEvent_IsRightAltDown_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.InputEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, InputEvent_IsRightAltDown_Input_Offset), 0, null, input);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, InputEvent_IsRightAltDown_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, InputEvent_IsRightAltDown_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:InputEvent_IsRepeat
    static readonly IntPtr InputEvent_IsRepeat_NativeFunction;
    static readonly int InputEvent_IsRepeat_ParamsSize;
    static readonly int InputEvent_IsRepeat_Input_Offset;
    static readonly int InputEvent_IsRepeat_ReturnValue_Offset;
    
    public static bool InputEvent_IsRepeat(UnrealSharp.SlateCore.InputEvent input)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[InputEvent_IsRepeat_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.InputEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, InputEvent_IsRepeat_Input_Offset), 0, null, input);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, InputEvent_IsRepeat_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, InputEvent_IsRepeat_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:InputEvent_IsLeftShiftDown
    static readonly IntPtr InputEvent_IsLeftShiftDown_NativeFunction;
    static readonly int InputEvent_IsLeftShiftDown_ParamsSize;
    static readonly int InputEvent_IsLeftShiftDown_Input_Offset;
    static readonly int InputEvent_IsLeftShiftDown_ReturnValue_Offset;
    
    public static bool InputEvent_IsLeftShiftDown(UnrealSharp.SlateCore.InputEvent input)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[InputEvent_IsLeftShiftDown_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.InputEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, InputEvent_IsLeftShiftDown_Input_Offset), 0, null, input);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, InputEvent_IsLeftShiftDown_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, InputEvent_IsLeftShiftDown_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:InputEvent_IsLeftControlDown
    static readonly IntPtr InputEvent_IsLeftControlDown_NativeFunction;
    static readonly int InputEvent_IsLeftControlDown_ParamsSize;
    static readonly int InputEvent_IsLeftControlDown_Input_Offset;
    static readonly int InputEvent_IsLeftControlDown_ReturnValue_Offset;
    
    public static bool InputEvent_IsLeftControlDown(UnrealSharp.SlateCore.InputEvent input)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[InputEvent_IsLeftControlDown_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.InputEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, InputEvent_IsLeftControlDown_Input_Offset), 0, null, input);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, InputEvent_IsLeftControlDown_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, InputEvent_IsLeftControlDown_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:InputEvent_IsLeftCommandDown
    static readonly IntPtr InputEvent_IsLeftCommandDown_NativeFunction;
    static readonly int InputEvent_IsLeftCommandDown_ParamsSize;
    static readonly int InputEvent_IsLeftCommandDown_Input_Offset;
    static readonly int InputEvent_IsLeftCommandDown_ReturnValue_Offset;
    
    public static bool InputEvent_IsLeftCommandDown(UnrealSharp.SlateCore.InputEvent input)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[InputEvent_IsLeftCommandDown_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.InputEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, InputEvent_IsLeftCommandDown_Input_Offset), 0, null, input);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, InputEvent_IsLeftCommandDown_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, InputEvent_IsLeftCommandDown_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:InputEvent_IsLeftAltDown
    static readonly IntPtr InputEvent_IsLeftAltDown_NativeFunction;
    static readonly int InputEvent_IsLeftAltDown_ParamsSize;
    static readonly int InputEvent_IsLeftAltDown_Input_Offset;
    static readonly int InputEvent_IsLeftAltDown_ReturnValue_Offset;
    
    public static bool InputEvent_IsLeftAltDown(UnrealSharp.SlateCore.InputEvent input)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[InputEvent_IsLeftAltDown_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.InputEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, InputEvent_IsLeftAltDown_Input_Offset), 0, null, input);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, InputEvent_IsLeftAltDown_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, InputEvent_IsLeftAltDown_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:InputEvent_IsControlDown
    static readonly IntPtr InputEvent_IsControlDown_NativeFunction;
    static readonly int InputEvent_IsControlDown_ParamsSize;
    static readonly int InputEvent_IsControlDown_Input_Offset;
    static readonly int InputEvent_IsControlDown_ReturnValue_Offset;
    
    public static bool InputEvent_IsControlDown(UnrealSharp.SlateCore.InputEvent input)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[InputEvent_IsControlDown_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.InputEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, InputEvent_IsControlDown_Input_Offset), 0, null, input);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, InputEvent_IsControlDown_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, InputEvent_IsControlDown_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:InputEvent_IsCommandDown
    static readonly IntPtr InputEvent_IsCommandDown_NativeFunction;
    static readonly int InputEvent_IsCommandDown_ParamsSize;
    static readonly int InputEvent_IsCommandDown_Input_Offset;
    static readonly int InputEvent_IsCommandDown_ReturnValue_Offset;
    
    public static bool InputEvent_IsCommandDown(UnrealSharp.SlateCore.InputEvent input)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[InputEvent_IsCommandDown_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.InputEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, InputEvent_IsCommandDown_Input_Offset), 0, null, input);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, InputEvent_IsCommandDown_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, InputEvent_IsCommandDown_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:InputEvent_IsAltDown
    static readonly IntPtr InputEvent_IsAltDown_NativeFunction;
    static readonly int InputEvent_IsAltDown_ParamsSize;
    static readonly int InputEvent_IsAltDown_Input_Offset;
    static readonly int InputEvent_IsAltDown_ReturnValue_Offset;
    
    public static bool InputEvent_IsAltDown(UnrealSharp.SlateCore.InputEvent input)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[InputEvent_IsAltDown_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.InputEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, InputEvent_IsAltDown_Input_Offset), 0, null, input);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, InputEvent_IsAltDown_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, InputEvent_IsAltDown_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:GetUserIndex
    static readonly IntPtr GetUserIndex_NativeFunction;
    static readonly int GetUserIndex_ParamsSize;
    static readonly int GetUserIndex_Input_Offset;
    static readonly int GetUserIndex_ReturnValue_Offset;
    
    public static int GetUserIndex(UnrealSharp.SlateCore.KeyEvent input)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetUserIndex_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.KeyEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetUserIndex_Input_Offset), 0, null, input);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetUserIndex_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetUserIndex_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:GetModifierKeysState
    static readonly IntPtr GetModifierKeysState_NativeFunction;
    static readonly int GetModifierKeysState_ParamsSize;
    static readonly int GetModifierKeysState_ReturnValue_Offset;
    
    public static UnrealSharp.Engine.SlateModifierKeysState GetModifierKeysState()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetModifierKeysState_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetModifierKeysState_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.SlateModifierKeysState returnValue;
            returnValue = UnrealSharp.Engine.SlateModifierKeysStateMarshaler.FromNative(IntPtr.Add(ParamsBuffer, GetModifierKeysState_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:GetKey
    static readonly IntPtr GetKey_NativeFunction;
    static readonly int GetKey_ParamsSize;
    static readonly int GetKey_Input_Offset;
    static readonly int GetKey_ReturnValue_Offset;
    
    public static UnrealSharp.InputCore.Key GetKey(UnrealSharp.SlateCore.KeyEvent input)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetKey_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.KeyEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetKey_Input_Offset), 0, null, input);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetKey_NativeFunction, ParamsBuffer);
            
            UnrealSharp.InputCore.Key returnValue;
            returnValue = UnrealSharp.InputCore.KeyMarshaler.FromNative(IntPtr.Add(ParamsBuffer, GetKey_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:GetAnalogValue
    static readonly IntPtr GetAnalogValue_NativeFunction;
    static readonly int GetAnalogValue_ParamsSize;
    static readonly int GetAnalogValue_Input_Offset;
    static readonly int GetAnalogValue_ReturnValue_Offset;
    
    public static float GetAnalogValue(UnrealSharp.SlateCore.AnalogInputEvent input)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetAnalogValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.AnalogInputEventMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetAnalogValue_Input_Offset), 0, null, input);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetAnalogValue_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetAnalogValue_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:EqualEqual_KeyKey
    static readonly IntPtr EqualEqual_KeyKey_NativeFunction;
    static readonly int EqualEqual_KeyKey_ParamsSize;
    static readonly int EqualEqual_KeyKey_A_Offset;
    static readonly int EqualEqual_KeyKey_B_Offset;
    static readonly int EqualEqual_KeyKey_ReturnValue_Offset;
    
    public static bool EqualEqual_KeyKey(UnrealSharp.InputCore.Key a, UnrealSharp.InputCore.Key b)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[EqualEqual_KeyKey_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.InputCore.KeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, EqualEqual_KeyKey_A_Offset), 0, null, a);
            UnrealSharp.InputCore.KeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, EqualEqual_KeyKey_B_Offset), 0, null, b);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, EqualEqual_KeyKey_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, EqualEqual_KeyKey_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:EqualEqual_InputChordInputChord
    static readonly IntPtr EqualEqual_InputChordInputChord_NativeFunction;
    static readonly int EqualEqual_InputChordInputChord_ParamsSize;
    static readonly int EqualEqual_InputChordInputChord_A_Offset;
    static readonly int EqualEqual_InputChordInputChord_B_Offset;
    static readonly int EqualEqual_InputChordInputChord_ReturnValue_Offset;
    
    public static bool EqualEqual_InputChordInputChord(UnrealSharp.Slate.InputChord a, UnrealSharp.Slate.InputChord b)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[EqualEqual_InputChordInputChord_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.Slate.InputChordMarshaler.ToNative(IntPtr.Add(ParamsBuffer, EqualEqual_InputChordInputChord_A_Offset), 0, null, a);
            UnrealSharp.Slate.InputChordMarshaler.ToNative(IntPtr.Add(ParamsBuffer, EqualEqual_InputChordInputChord_B_Offset), 0, null, b);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, EqualEqual_InputChordInputChord_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, EqualEqual_InputChordInputChord_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInputLibrary:CalibrateTilt
    static readonly IntPtr CalibrateTilt_NativeFunction;
    
    public static void CalibrateTilt()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, CalibrateTilt_NativeFunction, IntPtr.Zero);
        }
    }
    
    
}
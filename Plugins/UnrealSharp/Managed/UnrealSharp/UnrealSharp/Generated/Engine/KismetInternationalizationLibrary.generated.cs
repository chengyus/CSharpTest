// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class InternationalizationLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static InternationalizationLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("KismetInternationalizationLibrary");
        
        
        SetCurrentLocale_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCurrentLocale");
        SetCurrentLocale_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCurrentLocale_NativeFunction);
        SetCurrentLocale_Culture_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCurrentLocale_NativeFunction, "Culture");
        SetCurrentLocale_SaveToConfig_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCurrentLocale_NativeFunction, "SaveToConfig");
        SetCurrentLocale_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCurrentLocale_NativeFunction, "ReturnValue");
        SetCurrentLanguageAndLocale_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCurrentLanguageAndLocale");
        SetCurrentLanguageAndLocale_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCurrentLanguageAndLocale_NativeFunction);
        SetCurrentLanguageAndLocale_Culture_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCurrentLanguageAndLocale_NativeFunction, "Culture");
        SetCurrentLanguageAndLocale_SaveToConfig_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCurrentLanguageAndLocale_NativeFunction, "SaveToConfig");
        SetCurrentLanguageAndLocale_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCurrentLanguageAndLocale_NativeFunction, "ReturnValue");
        SetCurrentLanguage_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCurrentLanguage");
        SetCurrentLanguage_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCurrentLanguage_NativeFunction);
        SetCurrentLanguage_Culture_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCurrentLanguage_NativeFunction, "Culture");
        SetCurrentLanguage_SaveToConfig_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCurrentLanguage_NativeFunction, "SaveToConfig");
        SetCurrentLanguage_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCurrentLanguage_NativeFunction, "ReturnValue");
        SetCurrentCulture_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCurrentCulture");
        SetCurrentCulture_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCurrentCulture_NativeFunction);
        SetCurrentCulture_Culture_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCurrentCulture_NativeFunction, "Culture");
        SetCurrentCulture_SaveToConfig_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCurrentCulture_NativeFunction, "SaveToConfig");
        SetCurrentCulture_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCurrentCulture_NativeFunction, "ReturnValue");
        SetCurrentAssetGroupCulture_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCurrentAssetGroupCulture");
        SetCurrentAssetGroupCulture_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCurrentAssetGroupCulture_NativeFunction);
        SetCurrentAssetGroupCulture_AssetGroup_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCurrentAssetGroupCulture_NativeFunction, "AssetGroup");
        SetCurrentAssetGroupCulture_Culture_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCurrentAssetGroupCulture_NativeFunction, "Culture");
        SetCurrentAssetGroupCulture_SaveToConfig_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCurrentAssetGroupCulture_NativeFunction, "SaveToConfig");
        SetCurrentAssetGroupCulture_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCurrentAssetGroupCulture_NativeFunction, "ReturnValue");
        GetNativeCulture_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetNativeCulture");
        GetNativeCulture_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetNativeCulture_NativeFunction);
        GetNativeCulture_TextCategory_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetNativeCulture_NativeFunction, "TextCategory");
        GetNativeCulture_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetNativeCulture_NativeFunction, "ReturnValue");
        GetCurrentLocale_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCurrentLocale");
        GetCurrentLocale_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCurrentLocale_NativeFunction);
        GetCurrentLocale_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCurrentLocale_NativeFunction, "ReturnValue");
        GetCurrentLanguage_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCurrentLanguage");
        GetCurrentLanguage_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCurrentLanguage_NativeFunction);
        GetCurrentLanguage_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCurrentLanguage_NativeFunction, "ReturnValue");
        GetCurrentCulture_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCurrentCulture");
        GetCurrentCulture_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCurrentCulture_NativeFunction);
        GetCurrentCulture_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCurrentCulture_NativeFunction, "ReturnValue");
        GetCurrentAssetGroupCulture_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCurrentAssetGroupCulture");
        GetCurrentAssetGroupCulture_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCurrentAssetGroupCulture_NativeFunction);
        GetCurrentAssetGroupCulture_AssetGroup_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCurrentAssetGroupCulture_NativeFunction, "AssetGroup");
        GetCurrentAssetGroupCulture_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCurrentAssetGroupCulture_NativeFunction, "ReturnValue");
        GetCultureDisplayName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCultureDisplayName");
        GetCultureDisplayName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCultureDisplayName_NativeFunction);
        GetCultureDisplayName_Culture_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCultureDisplayName_NativeFunction, "Culture");
        GetCultureDisplayName_Localized_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCultureDisplayName_NativeFunction, "Localized");
        GetCultureDisplayName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCultureDisplayName_NativeFunction, "ReturnValue");
        ClearCurrentAssetGroupCulture_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ClearCurrentAssetGroupCulture");
        ClearCurrentAssetGroupCulture_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ClearCurrentAssetGroupCulture_NativeFunction);
        ClearCurrentAssetGroupCulture_AssetGroup_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ClearCurrentAssetGroupCulture_NativeFunction, "AssetGroup");
        ClearCurrentAssetGroupCulture_SaveToConfig_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ClearCurrentAssetGroupCulture_NativeFunction, "SaveToConfig");
        
        
    }
    
    protected InternationalizationLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Engine.KismetInternationalizationLibrary:SetCurrentLocale
    static readonly IntPtr SetCurrentLocale_NativeFunction;
    static readonly int SetCurrentLocale_ParamsSize;
    static readonly int SetCurrentLocale_Culture_Offset;
    static readonly int SetCurrentLocale_SaveToConfig_Offset;
    static readonly int SetCurrentLocale_ReturnValue_Offset;
    
    public static bool SetCurrentLocale(string culture, bool saveToConfig = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCurrentLocale_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr Culture_NativePtr = IntPtr.Add(ParamsBuffer,SetCurrentLocale_Culture_Offset);
            StringMarshaller.ToNative(Culture_NativePtr,0,null,culture);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCurrentLocale_SaveToConfig_Offset), 0, null, saveToConfig);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetCurrentLocale_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCurrentLocale_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(Culture_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInternationalizationLibrary:SetCurrentLanguageAndLocale
    static readonly IntPtr SetCurrentLanguageAndLocale_NativeFunction;
    static readonly int SetCurrentLanguageAndLocale_ParamsSize;
    static readonly int SetCurrentLanguageAndLocale_Culture_Offset;
    static readonly int SetCurrentLanguageAndLocale_SaveToConfig_Offset;
    static readonly int SetCurrentLanguageAndLocale_ReturnValue_Offset;
    
    public static bool SetCurrentLanguageAndLocale(string culture, bool saveToConfig = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCurrentLanguageAndLocale_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr Culture_NativePtr = IntPtr.Add(ParamsBuffer,SetCurrentLanguageAndLocale_Culture_Offset);
            StringMarshaller.ToNative(Culture_NativePtr,0,null,culture);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCurrentLanguageAndLocale_SaveToConfig_Offset), 0, null, saveToConfig);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetCurrentLanguageAndLocale_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCurrentLanguageAndLocale_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(Culture_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInternationalizationLibrary:SetCurrentLanguage
    static readonly IntPtr SetCurrentLanguage_NativeFunction;
    static readonly int SetCurrentLanguage_ParamsSize;
    static readonly int SetCurrentLanguage_Culture_Offset;
    static readonly int SetCurrentLanguage_SaveToConfig_Offset;
    static readonly int SetCurrentLanguage_ReturnValue_Offset;
    
    public static bool SetCurrentLanguage(string culture, bool saveToConfig = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCurrentLanguage_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr Culture_NativePtr = IntPtr.Add(ParamsBuffer,SetCurrentLanguage_Culture_Offset);
            StringMarshaller.ToNative(Culture_NativePtr,0,null,culture);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCurrentLanguage_SaveToConfig_Offset), 0, null, saveToConfig);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetCurrentLanguage_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCurrentLanguage_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(Culture_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInternationalizationLibrary:SetCurrentCulture
    static readonly IntPtr SetCurrentCulture_NativeFunction;
    static readonly int SetCurrentCulture_ParamsSize;
    static readonly int SetCurrentCulture_Culture_Offset;
    static readonly int SetCurrentCulture_SaveToConfig_Offset;
    static readonly int SetCurrentCulture_ReturnValue_Offset;
    
    public static bool SetCurrentCulture(string culture, bool saveToConfig = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCurrentCulture_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr Culture_NativePtr = IntPtr.Add(ParamsBuffer,SetCurrentCulture_Culture_Offset);
            StringMarshaller.ToNative(Culture_NativePtr,0,null,culture);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCurrentCulture_SaveToConfig_Offset), 0, null, saveToConfig);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetCurrentCulture_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCurrentCulture_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(Culture_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInternationalizationLibrary:SetCurrentAssetGroupCulture
    static readonly IntPtr SetCurrentAssetGroupCulture_NativeFunction;
    static readonly int SetCurrentAssetGroupCulture_ParamsSize;
    static readonly int SetCurrentAssetGroupCulture_AssetGroup_Offset;
    static readonly int SetCurrentAssetGroupCulture_Culture_Offset;
    static readonly int SetCurrentAssetGroupCulture_SaveToConfig_Offset;
    static readonly int SetCurrentAssetGroupCulture_ReturnValue_Offset;
    
    public static bool SetCurrentAssetGroupCulture(Name assetGroup, string culture, bool saveToConfig = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCurrentAssetGroupCulture_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetCurrentAssetGroupCulture_AssetGroup_Offset), 0, null, assetGroup);
            IntPtr Culture_NativePtr = IntPtr.Add(ParamsBuffer,SetCurrentAssetGroupCulture_Culture_Offset);
            StringMarshaller.ToNative(Culture_NativePtr,0,null,culture);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCurrentAssetGroupCulture_SaveToConfig_Offset), 0, null, saveToConfig);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetCurrentAssetGroupCulture_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCurrentAssetGroupCulture_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(Culture_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInternationalizationLibrary:GetNativeCulture
    static readonly IntPtr GetNativeCulture_NativeFunction;
    static readonly int GetNativeCulture_ParamsSize;
    static readonly int GetNativeCulture_TextCategory_Offset;
    static readonly int GetNativeCulture_ReturnValue_Offset;
    
    public static string GetNativeCulture(UnrealSharp.CoreUObject.ELocalizedTextSourceCategory textCategory)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetNativeCulture_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.CoreUObject.ELocalizedTextSourceCategory>.ToNative(IntPtr.Add(ParamsBuffer, GetNativeCulture_TextCategory_Offset), 0, null, textCategory);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetNativeCulture_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetNativeCulture_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInternationalizationLibrary:GetCurrentLocale
    static readonly IntPtr GetCurrentLocale_NativeFunction;
    static readonly int GetCurrentLocale_ParamsSize;
    static readonly int GetCurrentLocale_ReturnValue_Offset;
    
    public static string GetCurrentLocale()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCurrentLocale_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetCurrentLocale_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetCurrentLocale_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInternationalizationLibrary:GetCurrentLanguage
    static readonly IntPtr GetCurrentLanguage_NativeFunction;
    static readonly int GetCurrentLanguage_ParamsSize;
    static readonly int GetCurrentLanguage_ReturnValue_Offset;
    
    public static string GetCurrentLanguage()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCurrentLanguage_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetCurrentLanguage_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetCurrentLanguage_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInternationalizationLibrary:GetCurrentCulture
    static readonly IntPtr GetCurrentCulture_NativeFunction;
    static readonly int GetCurrentCulture_ParamsSize;
    static readonly int GetCurrentCulture_ReturnValue_Offset;
    
    public static string GetCurrentCulture()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCurrentCulture_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetCurrentCulture_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetCurrentCulture_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInternationalizationLibrary:GetCurrentAssetGroupCulture
    static readonly IntPtr GetCurrentAssetGroupCulture_NativeFunction;
    static readonly int GetCurrentAssetGroupCulture_ParamsSize;
    static readonly int GetCurrentAssetGroupCulture_AssetGroup_Offset;
    static readonly int GetCurrentAssetGroupCulture_ReturnValue_Offset;
    
    public static string GetCurrentAssetGroupCulture(Name assetGroup)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCurrentAssetGroupCulture_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetCurrentAssetGroupCulture_AssetGroup_Offset), 0, null, assetGroup);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetCurrentAssetGroupCulture_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetCurrentAssetGroupCulture_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInternationalizationLibrary:GetCultureDisplayName
    static readonly IntPtr GetCultureDisplayName_NativeFunction;
    static readonly int GetCultureDisplayName_ParamsSize;
    static readonly int GetCultureDisplayName_Culture_Offset;
    static readonly int GetCultureDisplayName_Localized_Offset;
    static readonly int GetCultureDisplayName_ReturnValue_Offset;
    
    public static string GetCultureDisplayName(string culture, bool localized = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCultureDisplayName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr Culture_NativePtr = IntPtr.Add(ParamsBuffer,GetCultureDisplayName_Culture_Offset);
            StringMarshaller.ToNative(Culture_NativePtr,0,null,culture);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, GetCultureDisplayName_Localized_Offset), 0, null, localized);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetCultureDisplayName_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetCultureDisplayName_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            StringMarshaller.DestructInstance(Culture_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Engine.KismetInternationalizationLibrary:ClearCurrentAssetGroupCulture
    static readonly IntPtr ClearCurrentAssetGroupCulture_NativeFunction;
    static readonly int ClearCurrentAssetGroupCulture_ParamsSize;
    static readonly int ClearCurrentAssetGroupCulture_AssetGroup_Offset;
    static readonly int ClearCurrentAssetGroupCulture_SaveToConfig_Offset;
    
    public static void ClearCurrentAssetGroupCulture(Name assetGroup, bool saveToConfig = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ClearCurrentAssetGroupCulture_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, ClearCurrentAssetGroupCulture_AssetGroup_Offset), 0, null, assetGroup);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ClearCurrentAssetGroupCulture_SaveToConfig_Offset), 0, null, saveToConfig);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ClearCurrentAssetGroupCulture_NativeFunction, ParamsBuffer);
            
        }
    }
    
    
}
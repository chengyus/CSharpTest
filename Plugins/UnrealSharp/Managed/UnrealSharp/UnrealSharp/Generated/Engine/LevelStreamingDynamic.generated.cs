// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class LevelStreamingDynamic : UnrealSharp.Engine.LevelStreaming
{
    
    static readonly IntPtr NativeClassPtr;
    static LevelStreamingDynamic()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("LevelStreamingDynamic");
        
        
        LoadLevelInstanceBySoftObjectPtr_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "LoadLevelInstanceBySoftObjectPtr");
        LoadLevelInstanceBySoftObjectPtr_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(LoadLevelInstanceBySoftObjectPtr_NativeFunction);
        LoadLevelInstanceBySoftObjectPtr_WorldContextObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LoadLevelInstanceBySoftObjectPtr_NativeFunction, "WorldContextObject");
        LoadLevelInstanceBySoftObjectPtr_Level_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LoadLevelInstanceBySoftObjectPtr_NativeFunction, "Level");
        LoadLevelInstanceBySoftObjectPtr_Location_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LoadLevelInstanceBySoftObjectPtr_NativeFunction, "Location");
        LoadLevelInstanceBySoftObjectPtr_Rotation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LoadLevelInstanceBySoftObjectPtr_NativeFunction, "Rotation");
        LoadLevelInstanceBySoftObjectPtr_bOutSuccess_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LoadLevelInstanceBySoftObjectPtr_NativeFunction, "bOutSuccess");
        LoadLevelInstanceBySoftObjectPtr_OptionalLevelNameOverride_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LoadLevelInstanceBySoftObjectPtr_NativeFunction, "OptionalLevelNameOverride");
        LoadLevelInstanceBySoftObjectPtr_OptionalLevelStreamingClass_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LoadLevelInstanceBySoftObjectPtr_NativeFunction, "OptionalLevelStreamingClass");
        LoadLevelInstanceBySoftObjectPtr_bLoadAsTempPackage_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LoadLevelInstanceBySoftObjectPtr_NativeFunction, "bLoadAsTempPackage");
        LoadLevelInstanceBySoftObjectPtr_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LoadLevelInstanceBySoftObjectPtr_NativeFunction, "ReturnValue");
        LoadLevelInstance_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "LoadLevelInstance");
        LoadLevelInstance_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(LoadLevelInstance_NativeFunction);
        LoadLevelInstance_WorldContextObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LoadLevelInstance_NativeFunction, "WorldContextObject");
        LoadLevelInstance_LevelName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LoadLevelInstance_NativeFunction, "LevelName");
        LoadLevelInstance_Location_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LoadLevelInstance_NativeFunction, "Location");
        LoadLevelInstance_Rotation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LoadLevelInstance_NativeFunction, "Rotation");
        LoadLevelInstance_bOutSuccess_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LoadLevelInstance_NativeFunction, "bOutSuccess");
        LoadLevelInstance_OptionalLevelNameOverride_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LoadLevelInstance_NativeFunction, "OptionalLevelNameOverride");
        LoadLevelInstance_OptionalLevelStreamingClass_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LoadLevelInstance_NativeFunction, "OptionalLevelStreamingClass");
        LoadLevelInstance_bLoadAsTempPackage_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LoadLevelInstance_NativeFunction, "bLoadAsTempPackage");
        LoadLevelInstance_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LoadLevelInstance_NativeFunction, "ReturnValue");
        
        
    }
    
    protected LevelStreamingDynamic(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Engine.LevelStreamingDynamic:LoadLevelInstanceBySoftObjectPtr
    static readonly IntPtr LoadLevelInstanceBySoftObjectPtr_NativeFunction;
    static readonly int LoadLevelInstanceBySoftObjectPtr_ParamsSize;
    static readonly int LoadLevelInstanceBySoftObjectPtr_WorldContextObject_Offset;
    static readonly int LoadLevelInstanceBySoftObjectPtr_Level_Offset;
    static readonly int LoadLevelInstanceBySoftObjectPtr_Location_Offset;
    static readonly int LoadLevelInstanceBySoftObjectPtr_Rotation_Offset;
    static readonly int LoadLevelInstanceBySoftObjectPtr_bOutSuccess_Offset;
    static readonly int LoadLevelInstanceBySoftObjectPtr_OptionalLevelNameOverride_Offset;
    static readonly int LoadLevelInstanceBySoftObjectPtr_OptionalLevelStreamingClass_Offset;
    static readonly int LoadLevelInstanceBySoftObjectPtr_bLoadAsTempPackage_Offset;
    static readonly int LoadLevelInstanceBySoftObjectPtr_ReturnValue_Offset;
    
    public static UnrealSharp.Engine.LevelStreamingDynamic LoadLevelInstanceBySoftObjectPtr(UnrealSharp.CoreUObject.Object worldContextObject, SoftObject<UnrealSharp.Engine.World> level, System.DoubleNumerics.Vector3 location, UnrealSharp.Rotator rotation, out bool bOutSuccess, string optionalLevelNameOverride, SubclassOf<UnrealSharp.Engine.LevelStreamingDynamic> optionalLevelStreamingClass = default(SubclassOf<UnrealSharp.Engine.LevelStreamingDynamic>), bool bLoadAsTempPackage = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[LoadLevelInstanceBySoftObjectPtr_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, LoadLevelInstanceBySoftObjectPtr_WorldContextObject_Offset), 0, null, worldContextObject);
            BlittableMarshaller<SoftObject<UnrealSharp.Engine.World>>.ToNative(IntPtr.Add(ParamsBuffer, LoadLevelInstanceBySoftObjectPtr_Level_Offset), 0, null, level);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, LoadLevelInstanceBySoftObjectPtr_Location_Offset), 0, null, location);
            BlittableMarshaller<UnrealSharp.Rotator>.ToNative(IntPtr.Add(ParamsBuffer, LoadLevelInstanceBySoftObjectPtr_Rotation_Offset), 0, null, rotation);
            IntPtr OptionalLevelNameOverride_NativePtr = IntPtr.Add(ParamsBuffer,LoadLevelInstanceBySoftObjectPtr_OptionalLevelNameOverride_Offset);
            StringMarshaller.ToNative(OptionalLevelNameOverride_NativePtr,0,null,optionalLevelNameOverride);
            SubclassOfMarshaller<UnrealSharp.Engine.LevelStreamingDynamic>.ToNative(IntPtr.Add(ParamsBuffer, LoadLevelInstanceBySoftObjectPtr_OptionalLevelStreamingClass_Offset), 0, null, optionalLevelStreamingClass);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, LoadLevelInstanceBySoftObjectPtr_bLoadAsTempPackage_Offset), 0, null, bLoadAsTempPackage);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, LoadLevelInstanceBySoftObjectPtr_NativeFunction, ParamsBuffer);
            
            bOutSuccess = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, LoadLevelInstanceBySoftObjectPtr_bOutSuccess_Offset), 0, null);
            UnrealSharp.Engine.LevelStreamingDynamic returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.LevelStreamingDynamic>.FromNative(IntPtr.Add(ParamsBuffer, LoadLevelInstanceBySoftObjectPtr_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(OptionalLevelNameOverride_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Engine.LevelStreamingDynamic:LoadLevelInstance
    static readonly IntPtr LoadLevelInstance_NativeFunction;
    static readonly int LoadLevelInstance_ParamsSize;
    static readonly int LoadLevelInstance_WorldContextObject_Offset;
    static readonly int LoadLevelInstance_LevelName_Offset;
    static readonly int LoadLevelInstance_Location_Offset;
    static readonly int LoadLevelInstance_Rotation_Offset;
    static readonly int LoadLevelInstance_bOutSuccess_Offset;
    static readonly int LoadLevelInstance_OptionalLevelNameOverride_Offset;
    static readonly int LoadLevelInstance_OptionalLevelStreamingClass_Offset;
    static readonly int LoadLevelInstance_bLoadAsTempPackage_Offset;
    static readonly int LoadLevelInstance_ReturnValue_Offset;
    
    public static UnrealSharp.Engine.LevelStreamingDynamic LoadLevelInstance(UnrealSharp.CoreUObject.Object worldContextObject, string levelName, System.DoubleNumerics.Vector3 location, UnrealSharp.Rotator rotation, out bool bOutSuccess, string optionalLevelNameOverride, SubclassOf<UnrealSharp.Engine.LevelStreamingDynamic> optionalLevelStreamingClass = default(SubclassOf<UnrealSharp.Engine.LevelStreamingDynamic>), bool bLoadAsTempPackage = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[LoadLevelInstance_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, LoadLevelInstance_WorldContextObject_Offset), 0, null, worldContextObject);
            IntPtr LevelName_NativePtr = IntPtr.Add(ParamsBuffer,LoadLevelInstance_LevelName_Offset);
            StringMarshaller.ToNative(LevelName_NativePtr,0,null,levelName);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, LoadLevelInstance_Location_Offset), 0, null, location);
            BlittableMarshaller<UnrealSharp.Rotator>.ToNative(IntPtr.Add(ParamsBuffer, LoadLevelInstance_Rotation_Offset), 0, null, rotation);
            IntPtr OptionalLevelNameOverride_NativePtr = IntPtr.Add(ParamsBuffer,LoadLevelInstance_OptionalLevelNameOverride_Offset);
            StringMarshaller.ToNative(OptionalLevelNameOverride_NativePtr,0,null,optionalLevelNameOverride);
            SubclassOfMarshaller<UnrealSharp.Engine.LevelStreamingDynamic>.ToNative(IntPtr.Add(ParamsBuffer, LoadLevelInstance_OptionalLevelStreamingClass_Offset), 0, null, optionalLevelStreamingClass);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, LoadLevelInstance_bLoadAsTempPackage_Offset), 0, null, bLoadAsTempPackage);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, LoadLevelInstance_NativeFunction, ParamsBuffer);
            
            bOutSuccess = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, LoadLevelInstance_bOutSuccess_Offset), 0, null);
            UnrealSharp.Engine.LevelStreamingDynamic returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.LevelStreamingDynamic>.FromNative(IntPtr.Add(ParamsBuffer, LoadLevelInstance_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(LevelName_NativePtr, 0);
            StringMarshaller.DestructInstance(OptionalLevelNameOverride_NativePtr, 0);
            return returnValue;
        }
    }
    
    
}
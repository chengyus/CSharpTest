// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
abstract public partial class Light : UnrealSharp.Engine.Actor
{
    
    static Light()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("Light");
        
        LightComponent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "LightComponent");
        
        ToggleEnabled_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ToggleEnabled");
        SetLightFunctionScale_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetLightFunctionScale");
        SetLightFunctionScale_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetLightFunctionScale_NativeFunction);
        SetLightFunctionScale_NewLightFunctionScale_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLightFunctionScale_NativeFunction, "NewLightFunctionScale");
        SetLightFunctionMaterial_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetLightFunctionMaterial");
        SetLightFunctionMaterial_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetLightFunctionMaterial_NativeFunction);
        SetLightFunctionMaterial_NewLightFunctionMaterial_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLightFunctionMaterial_NativeFunction, "NewLightFunctionMaterial");
        SetLightFunctionFadeDistance_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetLightFunctionFadeDistance");
        SetLightFunctionFadeDistance_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetLightFunctionFadeDistance_NativeFunction);
        SetLightFunctionFadeDistance_NewLightFunctionFadeDistance_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLightFunctionFadeDistance_NativeFunction, "NewLightFunctionFadeDistance");
        SetLightColor_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetLightColor");
        SetLightColor_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetLightColor_NativeFunction);
        SetLightColor_NewLightColor_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLightColor_NativeFunction, "NewLightColor");
        SetEnabled_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetEnabled");
        SetEnabled_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetEnabled_NativeFunction);
        SetEnabled_bSetEnabled_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEnabled_NativeFunction, "bSetEnabled");
        SetCastShadows_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCastShadows");
        SetCastShadows_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCastShadows_NativeFunction);
        SetCastShadows_bNewValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCastShadows_NativeFunction, "bNewValue");
        SetBrightness_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetBrightness");
        SetBrightness_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetBrightness_NativeFunction);
        SetBrightness_NewBrightness_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBrightness_NativeFunction, "NewBrightness");
        SetAffectTranslucentLighting_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAffectTranslucentLighting");
        SetAffectTranslucentLighting_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAffectTranslucentLighting_NativeFunction);
        SetAffectTranslucentLighting_bNewValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAffectTranslucentLighting_NativeFunction, "bNewValue");
        IsEnabled_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsEnabled");
        IsEnabled_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsEnabled_NativeFunction);
        IsEnabled_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsEnabled_NativeFunction, "ReturnValue");
        GetLightColor_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetLightColor");
        GetLightColor_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetLightColor_NativeFunction);
        GetLightColor_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLightColor_NativeFunction, "ReturnValue");
        GetBrightness_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBrightness");
        GetBrightness_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBrightness_NativeFunction);
        GetBrightness_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBrightness_NativeFunction, "ReturnValue");
        
        
    }
    
    protected Light(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ObjectProperty /Script/Engine.Light:LightComponent
    static readonly int LightComponent_Offset;
    
    public UnrealSharp.Engine.LightComponent LightComponent
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.Engine.LightComponent>.FromNative(IntPtr.Add(NativeObject, LightComponent_Offset), 0, this);
        }
    }
    
    // Function /Script/Engine.Light:ToggleEnabled
    static readonly IntPtr ToggleEnabled_NativeFunction;
    
    [Obsolete("This function is obsolete")]
    public void ToggleEnabled()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ToggleEnabled_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/Engine.Light:SetLightFunctionScale
    static readonly IntPtr SetLightFunctionScale_NativeFunction;
    static readonly int SetLightFunctionScale_ParamsSize;
    static readonly int SetLightFunctionScale_NewLightFunctionScale_Offset;
    
    [Obsolete("This function is obsolete")]
    public void SetLightFunctionScale(System.DoubleNumerics.Vector3 newLightFunctionScale)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetLightFunctionScale_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, SetLightFunctionScale_NewLightFunctionScale_Offset), 0, null, newLightFunctionScale);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetLightFunctionScale_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.Light:SetLightFunctionMaterial
    static readonly IntPtr SetLightFunctionMaterial_NativeFunction;
    static readonly int SetLightFunctionMaterial_ParamsSize;
    static readonly int SetLightFunctionMaterial_NewLightFunctionMaterial_Offset;
    
    [Obsolete("This function is obsolete")]
    public void SetLightFunctionMaterial(UnrealSharp.Engine.MaterialInterface newLightFunctionMaterial)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetLightFunctionMaterial_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.MaterialInterface>.ToNative(IntPtr.Add(ParamsBuffer, SetLightFunctionMaterial_NewLightFunctionMaterial_Offset), 0, null, newLightFunctionMaterial);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetLightFunctionMaterial_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.Light:SetLightFunctionFadeDistance
    static readonly IntPtr SetLightFunctionFadeDistance_NativeFunction;
    static readonly int SetLightFunctionFadeDistance_ParamsSize;
    static readonly int SetLightFunctionFadeDistance_NewLightFunctionFadeDistance_Offset;
    
    [Obsolete("This function is obsolete")]
    public void SetLightFunctionFadeDistance(float newLightFunctionFadeDistance)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetLightFunctionFadeDistance_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetLightFunctionFadeDistance_NewLightFunctionFadeDistance_Offset), 0, null, newLightFunctionFadeDistance);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetLightFunctionFadeDistance_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.Light:SetLightColor
    static readonly IntPtr SetLightColor_NativeFunction;
    static readonly int SetLightColor_ParamsSize;
    static readonly int SetLightColor_NewLightColor_Offset;
    
    [Obsolete("This function is obsolete")]
    public void SetLightColor(UnrealSharp.CoreUObject.LinearColor newLightColor)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetLightColor_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.ToNative(IntPtr.Add(ParamsBuffer, SetLightColor_NewLightColor_Offset), 0, null, newLightColor);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetLightColor_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.Light:SetEnabled
    static readonly IntPtr SetEnabled_NativeFunction;
    static readonly int SetEnabled_ParamsSize;
    static readonly int SetEnabled_bSetEnabled_Offset;
    
    [Obsolete("This function is obsolete")]
    public void SetEnabled(bool bSetEnabled)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetEnabled_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetEnabled_bSetEnabled_Offset), 0, null, bSetEnabled);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetEnabled_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.Light:SetCastShadows
    static readonly IntPtr SetCastShadows_NativeFunction;
    static readonly int SetCastShadows_ParamsSize;
    static readonly int SetCastShadows_bNewValue_Offset;
    
    [Obsolete("This function is obsolete")]
    public void SetCastShadows(bool bNewValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCastShadows_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCastShadows_bNewValue_Offset), 0, null, bNewValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCastShadows_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.Light:SetBrightness
    static readonly IntPtr SetBrightness_NativeFunction;
    static readonly int SetBrightness_ParamsSize;
    static readonly int SetBrightness_NewBrightness_Offset;
    
    [Obsolete("This function is obsolete")]
    public void SetBrightness(float newBrightness)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetBrightness_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetBrightness_NewBrightness_Offset), 0, null, newBrightness);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetBrightness_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.Light:SetAffectTranslucentLighting
    static readonly IntPtr SetAffectTranslucentLighting_NativeFunction;
    static readonly int SetAffectTranslucentLighting_ParamsSize;
    static readonly int SetAffectTranslucentLighting_bNewValue_Offset;
    
    [Obsolete("This function is obsolete")]
    public void SetAffectTranslucentLighting(bool bNewValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAffectTranslucentLighting_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetAffectTranslucentLighting_bNewValue_Offset), 0, null, bNewValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAffectTranslucentLighting_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.Light:IsEnabled
    static readonly IntPtr IsEnabled_NativeFunction;
    static readonly int IsEnabled_ParamsSize;
    static readonly int IsEnabled_ReturnValue_Offset;
    
    [Obsolete("This function is obsolete")]
    public bool IsEnabled()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsEnabled_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsEnabled_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsEnabled_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.Light:GetLightColor
    static readonly IntPtr GetLightColor_NativeFunction;
    static readonly int GetLightColor_ParamsSize;
    static readonly int GetLightColor_ReturnValue_Offset;
    
    [Obsolete("This function is obsolete")]
    public UnrealSharp.CoreUObject.LinearColor GetLightColor()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetLightColor_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetLightColor_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.LinearColor returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.FromNative(IntPtr.Add(ParamsBuffer, GetLightColor_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.Light:GetBrightness
    static readonly IntPtr GetBrightness_NativeFunction;
    static readonly int GetBrightness_ParamsSize;
    static readonly int GetBrightness_ReturnValue_Offset;
    
    [Obsolete("This function is obsolete")]
    public float GetBrightness()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBrightness_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetBrightness_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetBrightness_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
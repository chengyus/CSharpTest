// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class LightWeightInstanceStaticMeshManager : UnrealSharp.Engine.LightWeightInstanceManager, ISMInstanceManager
{
    
    static LightWeightInstanceStaticMeshManager()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("LightWeightInstanceStaticMeshManager");
        
        StaticMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "StaticMesh");
        InstancedStaticMeshComponent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "InstancedStaticMeshComponent");
        
        
        
    }
    
    protected LightWeightInstanceStaticMeshManager(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // SoftObjectProperty /Script/Engine.LightWeightInstanceStaticMeshManager:StaticMesh
    static readonly int StaticMesh_Offset;
    
    public SoftObject<UnrealSharp.Engine.StaticMesh> StaticMesh
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<SoftObject<UnrealSharp.Engine.StaticMesh>>.FromNative(IntPtr.Add(NativeObject, StaticMesh_Offset), 0, this);
        }
    }
    
    // ObjectProperty /Script/Engine.LightWeightInstanceStaticMeshManager:InstancedStaticMeshComponent
    static readonly int InstancedStaticMeshComponent_Offset;
    
    public UnrealSharp.Engine.HierarchicalInstancedStaticMeshComponent InstancedStaticMeshComponent
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.Engine.HierarchicalInstancedStaticMeshComponent>.FromNative(IntPtr.Add(NativeObject, InstancedStaticMeshComponent_Offset), 0, this);
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class LocationVolume : UnrealSharp.Engine.Volume, IWorldPartitionActorLoaderInterface
{
    
    static LocationVolume()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("LocationVolume");
        
        
        Unload_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Unload");
        Load_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Load");
        IsLoaded_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsLoaded");
        IsLoaded_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsLoaded_NativeFunction);
        IsLoaded_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsLoaded_NativeFunction, "ReturnValue");
        
        
    }
    
    protected LocationVolume(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Engine.LocationVolume:Unload
    static readonly IntPtr Unload_NativeFunction;
    
    public void Unload()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, Unload_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/Engine.LocationVolume:Load
    static readonly IntPtr Load_NativeFunction;
    
    public void Load()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, Load_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/Engine.LocationVolume:IsLoaded
    static readonly IntPtr IsLoaded_NativeFunction;
    static readonly int IsLoaded_ParamsSize;
    static readonly int IsLoaded_ReturnValue_Offset;
    
    public bool IsLoaded()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsLoaded_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsLoaded_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsLoaded_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
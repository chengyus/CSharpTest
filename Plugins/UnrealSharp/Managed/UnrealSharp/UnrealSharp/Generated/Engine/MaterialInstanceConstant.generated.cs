// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class MaterialInstanceConstant : UnrealSharp.Engine.MaterialInstance
{
    
    static MaterialInstanceConstant()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("MaterialInstanceConstant");
        
        
        SetNaniteOverrideMaterial_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetNaniteOverrideMaterial");
        SetNaniteOverrideMaterial_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetNaniteOverrideMaterial_NativeFunction);
        SetNaniteOverrideMaterial_bInEnableOverride_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNaniteOverrideMaterial_NativeFunction, "bInEnableOverride");
        SetNaniteOverrideMaterial_InOverrideMaterial_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNaniteOverrideMaterial_NativeFunction, "InOverrideMaterial");
        K2_GetVectorParameterValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "K2_GetVectorParameterValue");
        K2_GetVectorParameterValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(K2_GetVectorParameterValue_NativeFunction);
        K2_GetVectorParameterValue_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_GetVectorParameterValue_NativeFunction, "ParameterName");
        K2_GetVectorParameterValue_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_GetVectorParameterValue_NativeFunction, "ReturnValue");
        K2_GetTextureParameterValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "K2_GetTextureParameterValue");
        K2_GetTextureParameterValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(K2_GetTextureParameterValue_NativeFunction);
        K2_GetTextureParameterValue_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_GetTextureParameterValue_NativeFunction, "ParameterName");
        K2_GetTextureParameterValue_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_GetTextureParameterValue_NativeFunction, "ReturnValue");
        K2_GetScalarParameterValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "K2_GetScalarParameterValue");
        K2_GetScalarParameterValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(K2_GetScalarParameterValue_NativeFunction);
        K2_GetScalarParameterValue_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_GetScalarParameterValue_NativeFunction, "ParameterName");
        K2_GetScalarParameterValue_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_GetScalarParameterValue_NativeFunction, "ReturnValue");
        
        
    }
    
    protected MaterialInstanceConstant(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Engine.MaterialInstanceConstant:SetNaniteOverrideMaterial
    static readonly IntPtr SetNaniteOverrideMaterial_NativeFunction;
    static readonly int SetNaniteOverrideMaterial_ParamsSize;
    static readonly int SetNaniteOverrideMaterial_bInEnableOverride_Offset;
    static readonly int SetNaniteOverrideMaterial_InOverrideMaterial_Offset;
    
    public void SetNaniteOverrideMaterial(bool bInEnableOverride, UnrealSharp.Engine.MaterialInterface inOverrideMaterial)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetNaniteOverrideMaterial_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNaniteOverrideMaterial_bInEnableOverride_Offset), 0, null, bInEnableOverride);
            ObjectMarshaller<UnrealSharp.Engine.MaterialInterface>.ToNative(IntPtr.Add(ParamsBuffer, SetNaniteOverrideMaterial_InOverrideMaterial_Offset), 0, null, inOverrideMaterial);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetNaniteOverrideMaterial_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.MaterialInstanceConstant:K2_GetVectorParameterValue
    static readonly IntPtr K2_GetVectorParameterValue_NativeFunction;
    static readonly int K2_GetVectorParameterValue_ParamsSize;
    static readonly int K2_GetVectorParameterValue_ParameterName_Offset;
    static readonly int K2_GetVectorParameterValue_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.LinearColor GetVectorParameterValue(Name parameterName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[K2_GetVectorParameterValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, K2_GetVectorParameterValue_ParameterName_Offset), 0, null, parameterName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, K2_GetVectorParameterValue_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.LinearColor returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.FromNative(IntPtr.Add(ParamsBuffer, K2_GetVectorParameterValue_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.MaterialInstanceConstant:K2_GetTextureParameterValue
    static readonly IntPtr K2_GetTextureParameterValue_NativeFunction;
    static readonly int K2_GetTextureParameterValue_ParamsSize;
    static readonly int K2_GetTextureParameterValue_ParameterName_Offset;
    static readonly int K2_GetTextureParameterValue_ReturnValue_Offset;
    
    public UnrealSharp.Engine.Texture GetTextureParameterValue(Name parameterName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[K2_GetTextureParameterValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, K2_GetTextureParameterValue_ParameterName_Offset), 0, null, parameterName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, K2_GetTextureParameterValue_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.Texture returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.Texture>.FromNative(IntPtr.Add(ParamsBuffer, K2_GetTextureParameterValue_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.MaterialInstanceConstant:K2_GetScalarParameterValue
    static readonly IntPtr K2_GetScalarParameterValue_NativeFunction;
    static readonly int K2_GetScalarParameterValue_ParamsSize;
    static readonly int K2_GetScalarParameterValue_ParameterName_Offset;
    static readonly int K2_GetScalarParameterValue_ReturnValue_Offset;
    
    public float GetScalarParameterValue(Name parameterName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[K2_GetScalarParameterValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, K2_GetScalarParameterValue_ParameterName_Offset), 0, null, parameterName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, K2_GetScalarParameterValue_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, K2_GetScalarParameterValue_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class MaterialInstanceDynamic : UnrealSharp.Engine.MaterialInstance
{
    
    static MaterialInstanceDynamic()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("MaterialInstanceDynamic");
        
        
        SetVectorParameterValueByInfo_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetVectorParameterValueByInfo");
        SetVectorParameterValueByInfo_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetVectorParameterValueByInfo_NativeFunction);
        SetVectorParameterValueByInfo_ParameterInfo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetVectorParameterValueByInfo_NativeFunction, "ParameterInfo");
        SetVectorParameterValueByInfo_Value_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetVectorParameterValueByInfo_NativeFunction, "Value");
        SetVectorParameterValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetVectorParameterValue");
        SetVectorParameterValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetVectorParameterValue_NativeFunction);
        SetVectorParameterValue_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetVectorParameterValue_NativeFunction, "ParameterName");
        SetVectorParameterValue_Value_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetVectorParameterValue_NativeFunction, "Value");
        SetTextureParameterValueByInfo_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetTextureParameterValueByInfo");
        SetTextureParameterValueByInfo_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetTextureParameterValueByInfo_NativeFunction);
        SetTextureParameterValueByInfo_ParameterInfo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetTextureParameterValueByInfo_NativeFunction, "ParameterInfo");
        SetTextureParameterValueByInfo_Value_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetTextureParameterValueByInfo_NativeFunction, "Value");
        SetTextureParameterValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetTextureParameterValue");
        SetTextureParameterValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetTextureParameterValue_NativeFunction);
        SetTextureParameterValue_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetTextureParameterValue_NativeFunction, "ParameterName");
        SetTextureParameterValue_Value_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetTextureParameterValue_NativeFunction, "Value");
        SetSparseVolumeTextureParameterValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSparseVolumeTextureParameterValue");
        SetSparseVolumeTextureParameterValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSparseVolumeTextureParameterValue_NativeFunction);
        SetSparseVolumeTextureParameterValue_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSparseVolumeTextureParameterValue_NativeFunction, "ParameterName");
        SetSparseVolumeTextureParameterValue_Value_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSparseVolumeTextureParameterValue_NativeFunction, "Value");
        SetScalarParameterValueByInfo_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetScalarParameterValueByInfo");
        SetScalarParameterValueByInfo_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetScalarParameterValueByInfo_NativeFunction);
        SetScalarParameterValueByInfo_ParameterInfo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetScalarParameterValueByInfo_NativeFunction, "ParameterInfo");
        SetScalarParameterValueByInfo_Value_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetScalarParameterValueByInfo_NativeFunction, "Value");
        SetScalarParameterValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetScalarParameterValue");
        SetScalarParameterValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetScalarParameterValue_NativeFunction);
        SetScalarParameterValue_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetScalarParameterValue_NativeFunction, "ParameterName");
        SetScalarParameterValue_Value_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetScalarParameterValue_NativeFunction, "Value");
        SetScalarParameterByIndex_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetScalarParameterByIndex");
        SetScalarParameterByIndex_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetScalarParameterByIndex_NativeFunction);
        SetScalarParameterByIndex_ParameterIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetScalarParameterByIndex_NativeFunction, "ParameterIndex");
        SetScalarParameterByIndex_Value_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetScalarParameterByIndex_NativeFunction, "Value");
        SetScalarParameterByIndex_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetScalarParameterByIndex_NativeFunction, "ReturnValue");
        SetRuntimeVirtualTextureParameterValueByInfo_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetRuntimeVirtualTextureParameterValueByInfo");
        SetRuntimeVirtualTextureParameterValueByInfo_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetRuntimeVirtualTextureParameterValueByInfo_NativeFunction);
        SetRuntimeVirtualTextureParameterValueByInfo_ParameterInfo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetRuntimeVirtualTextureParameterValueByInfo_NativeFunction, "ParameterInfo");
        SetRuntimeVirtualTextureParameterValueByInfo_Value_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetRuntimeVirtualTextureParameterValueByInfo_NativeFunction, "Value");
        SetRuntimeVirtualTextureParameterValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetRuntimeVirtualTextureParameterValue");
        SetRuntimeVirtualTextureParameterValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetRuntimeVirtualTextureParameterValue_NativeFunction);
        SetRuntimeVirtualTextureParameterValue_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetRuntimeVirtualTextureParameterValue_NativeFunction, "ParameterName");
        SetRuntimeVirtualTextureParameterValue_Value_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetRuntimeVirtualTextureParameterValue_NativeFunction, "Value");
        SetDoubleVectorParameterValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetDoubleVectorParameterValue");
        SetDoubleVectorParameterValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetDoubleVectorParameterValue_NativeFunction);
        SetDoubleVectorParameterValue_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetDoubleVectorParameterValue_NativeFunction, "ParameterName");
        SetDoubleVectorParameterValue_Value_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetDoubleVectorParameterValue_NativeFunction, "Value");
        K2_InterpolateMaterialInstanceParams_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "K2_InterpolateMaterialInstanceParams");
        K2_InterpolateMaterialInstanceParams_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(K2_InterpolateMaterialInstanceParams_NativeFunction);
        K2_InterpolateMaterialInstanceParams_SourceA_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_InterpolateMaterialInstanceParams_NativeFunction, "SourceA");
        K2_InterpolateMaterialInstanceParams_SourceB_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_InterpolateMaterialInstanceParams_NativeFunction, "SourceB");
        K2_InterpolateMaterialInstanceParams_Alpha_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_InterpolateMaterialInstanceParams_NativeFunction, "Alpha");
        K2_GetVectorParameterValueByInfo_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "K2_GetVectorParameterValueByInfo");
        K2_GetVectorParameterValueByInfo_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(K2_GetVectorParameterValueByInfo_NativeFunction);
        K2_GetVectorParameterValueByInfo_ParameterInfo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_GetVectorParameterValueByInfo_NativeFunction, "ParameterInfo");
        K2_GetVectorParameterValueByInfo_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_GetVectorParameterValueByInfo_NativeFunction, "ReturnValue");
        K2_GetVectorParameterValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "K2_GetVectorParameterValue");
        K2_GetVectorParameterValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(K2_GetVectorParameterValue_NativeFunction);
        K2_GetVectorParameterValue_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_GetVectorParameterValue_NativeFunction, "ParameterName");
        K2_GetVectorParameterValue_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_GetVectorParameterValue_NativeFunction, "ReturnValue");
        K2_GetTextureParameterValueByInfo_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "K2_GetTextureParameterValueByInfo");
        K2_GetTextureParameterValueByInfo_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(K2_GetTextureParameterValueByInfo_NativeFunction);
        K2_GetTextureParameterValueByInfo_ParameterInfo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_GetTextureParameterValueByInfo_NativeFunction, "ParameterInfo");
        K2_GetTextureParameterValueByInfo_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_GetTextureParameterValueByInfo_NativeFunction, "ReturnValue");
        K2_GetTextureParameterValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "K2_GetTextureParameterValue");
        K2_GetTextureParameterValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(K2_GetTextureParameterValue_NativeFunction);
        K2_GetTextureParameterValue_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_GetTextureParameterValue_NativeFunction, "ParameterName");
        K2_GetTextureParameterValue_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_GetTextureParameterValue_NativeFunction, "ReturnValue");
        K2_GetScalarParameterValueByInfo_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "K2_GetScalarParameterValueByInfo");
        K2_GetScalarParameterValueByInfo_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(K2_GetScalarParameterValueByInfo_NativeFunction);
        K2_GetScalarParameterValueByInfo_ParameterInfo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_GetScalarParameterValueByInfo_NativeFunction, "ParameterInfo");
        K2_GetScalarParameterValueByInfo_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_GetScalarParameterValueByInfo_NativeFunction, "ReturnValue");
        K2_GetScalarParameterValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "K2_GetScalarParameterValue");
        K2_GetScalarParameterValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(K2_GetScalarParameterValue_NativeFunction);
        K2_GetScalarParameterValue_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_GetScalarParameterValue_NativeFunction, "ParameterName");
        K2_GetScalarParameterValue_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_GetScalarParameterValue_NativeFunction, "ReturnValue");
        K2_CopyMaterialInstanceParameters_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "K2_CopyMaterialInstanceParameters");
        K2_CopyMaterialInstanceParameters_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(K2_CopyMaterialInstanceParameters_NativeFunction);
        K2_CopyMaterialInstanceParameters_Source_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_CopyMaterialInstanceParameters_NativeFunction, "Source");
        K2_CopyMaterialInstanceParameters_bQuickParametersOnly_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_CopyMaterialInstanceParameters_NativeFunction, "bQuickParametersOnly");
        InitializeScalarParameterAndGetIndex_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "InitializeScalarParameterAndGetIndex");
        InitializeScalarParameterAndGetIndex_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(InitializeScalarParameterAndGetIndex_NativeFunction);
        InitializeScalarParameterAndGetIndex_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InitializeScalarParameterAndGetIndex_NativeFunction, "ParameterName");
        InitializeScalarParameterAndGetIndex_Value_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InitializeScalarParameterAndGetIndex_NativeFunction, "Value");
        InitializeScalarParameterAndGetIndex_OutParameterIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InitializeScalarParameterAndGetIndex_NativeFunction, "OutParameterIndex");
        InitializeScalarParameterAndGetIndex_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InitializeScalarParameterAndGetIndex_NativeFunction, "ReturnValue");
        CopyParameterOverrides_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CopyParameterOverrides");
        CopyParameterOverrides_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(CopyParameterOverrides_NativeFunction);
        CopyParameterOverrides_MaterialInstance_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CopyParameterOverrides_NativeFunction, "MaterialInstance");
        
        
    }
    
    protected MaterialInstanceDynamic(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Engine.MaterialInstanceDynamic:SetVectorParameterValueByInfo
    static readonly IntPtr SetVectorParameterValueByInfo_NativeFunction;
    static readonly int SetVectorParameterValueByInfo_ParamsSize;
    static readonly int SetVectorParameterValueByInfo_ParameterInfo_Offset;
    static readonly int SetVectorParameterValueByInfo_Value_Offset;
    
    public void SetVectorParameterValueByInfo(UnrealSharp.Engine.MaterialParameterInfo parameterInfo, UnrealSharp.CoreUObject.LinearColor value)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetVectorParameterValueByInfo_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.Engine.MaterialParameterInfoMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetVectorParameterValueByInfo_ParameterInfo_Offset), 0, null, parameterInfo);
            BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.ToNative(IntPtr.Add(ParamsBuffer, SetVectorParameterValueByInfo_Value_Offset), 0, null, value);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetVectorParameterValueByInfo_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/Engine.MaterialInstanceDynamic:SetVectorParameterValue
    static readonly IntPtr SetVectorParameterValue_NativeFunction;
    static readonly int SetVectorParameterValue_ParamsSize;
    static readonly int SetVectorParameterValue_ParameterName_Offset;
    static readonly int SetVectorParameterValue_Value_Offset;
    
    public void SetVectorParameterValue(Name parameterName, UnrealSharp.CoreUObject.LinearColor value)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetVectorParameterValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetVectorParameterValue_ParameterName_Offset), 0, null, parameterName);
            BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.ToNative(IntPtr.Add(ParamsBuffer, SetVectorParameterValue_Value_Offset), 0, null, value);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetVectorParameterValue_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.MaterialInstanceDynamic:SetTextureParameterValueByInfo
    static readonly IntPtr SetTextureParameterValueByInfo_NativeFunction;
    static readonly int SetTextureParameterValueByInfo_ParamsSize;
    static readonly int SetTextureParameterValueByInfo_ParameterInfo_Offset;
    static readonly int SetTextureParameterValueByInfo_Value_Offset;
    
    public void SetTextureParameterValueByInfo(UnrealSharp.Engine.MaterialParameterInfo parameterInfo, UnrealSharp.Engine.Texture value)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetTextureParameterValueByInfo_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.Engine.MaterialParameterInfoMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetTextureParameterValueByInfo_ParameterInfo_Offset), 0, null, parameterInfo);
            ObjectMarshaller<UnrealSharp.Engine.Texture>.ToNative(IntPtr.Add(ParamsBuffer, SetTextureParameterValueByInfo_Value_Offset), 0, null, value);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetTextureParameterValueByInfo_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/Engine.MaterialInstanceDynamic:SetTextureParameterValue
    static readonly IntPtr SetTextureParameterValue_NativeFunction;
    static readonly int SetTextureParameterValue_ParamsSize;
    static readonly int SetTextureParameterValue_ParameterName_Offset;
    static readonly int SetTextureParameterValue_Value_Offset;
    
    public void SetTextureParameterValue(Name parameterName, UnrealSharp.Engine.Texture value)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetTextureParameterValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetTextureParameterValue_ParameterName_Offset), 0, null, parameterName);
            ObjectMarshaller<UnrealSharp.Engine.Texture>.ToNative(IntPtr.Add(ParamsBuffer, SetTextureParameterValue_Value_Offset), 0, null, value);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetTextureParameterValue_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.MaterialInstanceDynamic:SetSparseVolumeTextureParameterValue
    static readonly IntPtr SetSparseVolumeTextureParameterValue_NativeFunction;
    static readonly int SetSparseVolumeTextureParameterValue_ParamsSize;
    static readonly int SetSparseVolumeTextureParameterValue_ParameterName_Offset;
    static readonly int SetSparseVolumeTextureParameterValue_Value_Offset;
    
    public void SetSparseVolumeTextureParameterValue(Name parameterName, UnrealSharp.Engine.SparseVolumeTexture value)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSparseVolumeTextureParameterValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetSparseVolumeTextureParameterValue_ParameterName_Offset), 0, null, parameterName);
            ObjectMarshaller<UnrealSharp.Engine.SparseVolumeTexture>.ToNative(IntPtr.Add(ParamsBuffer, SetSparseVolumeTextureParameterValue_Value_Offset), 0, null, value);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSparseVolumeTextureParameterValue_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.MaterialInstanceDynamic:SetScalarParameterValueByInfo
    static readonly IntPtr SetScalarParameterValueByInfo_NativeFunction;
    static readonly int SetScalarParameterValueByInfo_ParamsSize;
    static readonly int SetScalarParameterValueByInfo_ParameterInfo_Offset;
    static readonly int SetScalarParameterValueByInfo_Value_Offset;
    
    public void SetScalarParameterValueByInfo(UnrealSharp.Engine.MaterialParameterInfo parameterInfo, float value)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetScalarParameterValueByInfo_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.Engine.MaterialParameterInfoMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetScalarParameterValueByInfo_ParameterInfo_Offset), 0, null, parameterInfo);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetScalarParameterValueByInfo_Value_Offset), 0, null, value);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetScalarParameterValueByInfo_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/Engine.MaterialInstanceDynamic:SetScalarParameterValue
    static readonly IntPtr SetScalarParameterValue_NativeFunction;
    static readonly int SetScalarParameterValue_ParamsSize;
    static readonly int SetScalarParameterValue_ParameterName_Offset;
    static readonly int SetScalarParameterValue_Value_Offset;
    
    public void SetScalarParameterValue(Name parameterName, float value)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetScalarParameterValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetScalarParameterValue_ParameterName_Offset), 0, null, parameterName);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetScalarParameterValue_Value_Offset), 0, null, value);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetScalarParameterValue_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.MaterialInstanceDynamic:SetScalarParameterByIndex
    static readonly IntPtr SetScalarParameterByIndex_NativeFunction;
    static readonly int SetScalarParameterByIndex_ParamsSize;
    static readonly int SetScalarParameterByIndex_ParameterIndex_Offset;
    static readonly int SetScalarParameterByIndex_Value_Offset;
    static readonly int SetScalarParameterByIndex_ReturnValue_Offset;
    
    public bool SetScalarParameterByIndex(int parameterIndex, float value)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetScalarParameterByIndex_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetScalarParameterByIndex_ParameterIndex_Offset), 0, null, parameterIndex);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetScalarParameterByIndex_Value_Offset), 0, null, value);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetScalarParameterByIndex_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetScalarParameterByIndex_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.MaterialInstanceDynamic:SetRuntimeVirtualTextureParameterValueByInfo
    static readonly IntPtr SetRuntimeVirtualTextureParameterValueByInfo_NativeFunction;
    static readonly int SetRuntimeVirtualTextureParameterValueByInfo_ParamsSize;
    static readonly int SetRuntimeVirtualTextureParameterValueByInfo_ParameterInfo_Offset;
    static readonly int SetRuntimeVirtualTextureParameterValueByInfo_Value_Offset;
    
    public void SetRuntimeVirtualTextureParameterValueByInfo(UnrealSharp.Engine.MaterialParameterInfo parameterInfo, UnrealSharp.Engine.RuntimeVirtualTexture value)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetRuntimeVirtualTextureParameterValueByInfo_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.Engine.MaterialParameterInfoMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetRuntimeVirtualTextureParameterValueByInfo_ParameterInfo_Offset), 0, null, parameterInfo);
            ObjectMarshaller<UnrealSharp.Engine.RuntimeVirtualTexture>.ToNative(IntPtr.Add(ParamsBuffer, SetRuntimeVirtualTextureParameterValueByInfo_Value_Offset), 0, null, value);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetRuntimeVirtualTextureParameterValueByInfo_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/Engine.MaterialInstanceDynamic:SetRuntimeVirtualTextureParameterValue
    static readonly IntPtr SetRuntimeVirtualTextureParameterValue_NativeFunction;
    static readonly int SetRuntimeVirtualTextureParameterValue_ParamsSize;
    static readonly int SetRuntimeVirtualTextureParameterValue_ParameterName_Offset;
    static readonly int SetRuntimeVirtualTextureParameterValue_Value_Offset;
    
    public void SetRuntimeVirtualTextureParameterValue(Name parameterName, UnrealSharp.Engine.RuntimeVirtualTexture value)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetRuntimeVirtualTextureParameterValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetRuntimeVirtualTextureParameterValue_ParameterName_Offset), 0, null, parameterName);
            ObjectMarshaller<UnrealSharp.Engine.RuntimeVirtualTexture>.ToNative(IntPtr.Add(ParamsBuffer, SetRuntimeVirtualTextureParameterValue_Value_Offset), 0, null, value);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetRuntimeVirtualTextureParameterValue_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.MaterialInstanceDynamic:SetDoubleVectorParameterValue
    static readonly IntPtr SetDoubleVectorParameterValue_NativeFunction;
    static readonly int SetDoubleVectorParameterValue_ParamsSize;
    static readonly int SetDoubleVectorParameterValue_ParameterName_Offset;
    static readonly int SetDoubleVectorParameterValue_Value_Offset;
    
    public void SetDoubleVectorParameterValue(Name parameterName, System.DoubleNumerics.Vector4 value)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetDoubleVectorParameterValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetDoubleVectorParameterValue_ParameterName_Offset), 0, null, parameterName);
            BlittableMarshaller<System.DoubleNumerics.Vector4>.ToNative(IntPtr.Add(ParamsBuffer, SetDoubleVectorParameterValue_Value_Offset), 0, null, value);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetDoubleVectorParameterValue_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.MaterialInstanceDynamic:K2_InterpolateMaterialInstanceParams
    static readonly IntPtr K2_InterpolateMaterialInstanceParams_NativeFunction;
    static readonly int K2_InterpolateMaterialInstanceParams_ParamsSize;
    static readonly int K2_InterpolateMaterialInstanceParams_SourceA_Offset;
    static readonly int K2_InterpolateMaterialInstanceParams_SourceB_Offset;
    static readonly int K2_InterpolateMaterialInstanceParams_Alpha_Offset;
    
    public void InterpolateMaterialInstanceParameters(UnrealSharp.Engine.MaterialInstance sourceA, UnrealSharp.Engine.MaterialInstance sourceB, float alpha)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[K2_InterpolateMaterialInstanceParams_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.MaterialInstance>.ToNative(IntPtr.Add(ParamsBuffer, K2_InterpolateMaterialInstanceParams_SourceA_Offset), 0, null, sourceA);
            ObjectMarshaller<UnrealSharp.Engine.MaterialInstance>.ToNative(IntPtr.Add(ParamsBuffer, K2_InterpolateMaterialInstanceParams_SourceB_Offset), 0, null, sourceB);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, K2_InterpolateMaterialInstanceParams_Alpha_Offset), 0, null, alpha);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, K2_InterpolateMaterialInstanceParams_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.MaterialInstanceDynamic:K2_GetVectorParameterValueByInfo
    static readonly IntPtr K2_GetVectorParameterValueByInfo_NativeFunction;
    static readonly int K2_GetVectorParameterValueByInfo_ParamsSize;
    static readonly int K2_GetVectorParameterValueByInfo_ParameterInfo_Offset;
    static readonly int K2_GetVectorParameterValueByInfo_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.LinearColor GetVectorParameterValueByInfo(UnrealSharp.Engine.MaterialParameterInfo parameterInfo)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[K2_GetVectorParameterValueByInfo_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.Engine.MaterialParameterInfoMarshaler.ToNative(IntPtr.Add(ParamsBuffer, K2_GetVectorParameterValueByInfo_ParameterInfo_Offset), 0, null, parameterInfo);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, K2_GetVectorParameterValueByInfo_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.LinearColor returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.FromNative(IntPtr.Add(ParamsBuffer, K2_GetVectorParameterValueByInfo_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.MaterialInstanceDynamic:K2_GetVectorParameterValue
    static readonly IntPtr K2_GetVectorParameterValue_NativeFunction;
    static readonly int K2_GetVectorParameterValue_ParamsSize;
    static readonly int K2_GetVectorParameterValue_ParameterName_Offset;
    static readonly int K2_GetVectorParameterValue_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.LinearColor GetVectorParameterValue(Name parameterName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[K2_GetVectorParameterValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, K2_GetVectorParameterValue_ParameterName_Offset), 0, null, parameterName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, K2_GetVectorParameterValue_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.LinearColor returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.FromNative(IntPtr.Add(ParamsBuffer, K2_GetVectorParameterValue_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.MaterialInstanceDynamic:K2_GetTextureParameterValueByInfo
    static readonly IntPtr K2_GetTextureParameterValueByInfo_NativeFunction;
    static readonly int K2_GetTextureParameterValueByInfo_ParamsSize;
    static readonly int K2_GetTextureParameterValueByInfo_ParameterInfo_Offset;
    static readonly int K2_GetTextureParameterValueByInfo_ReturnValue_Offset;
    
    public UnrealSharp.Engine.Texture GetTextureParameterValueByInfo(UnrealSharp.Engine.MaterialParameterInfo parameterInfo)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[K2_GetTextureParameterValueByInfo_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.Engine.MaterialParameterInfoMarshaler.ToNative(IntPtr.Add(ParamsBuffer, K2_GetTextureParameterValueByInfo_ParameterInfo_Offset), 0, null, parameterInfo);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, K2_GetTextureParameterValueByInfo_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.Texture returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.Texture>.FromNative(IntPtr.Add(ParamsBuffer, K2_GetTextureParameterValueByInfo_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.MaterialInstanceDynamic:K2_GetTextureParameterValue
    static readonly IntPtr K2_GetTextureParameterValue_NativeFunction;
    static readonly int K2_GetTextureParameterValue_ParamsSize;
    static readonly int K2_GetTextureParameterValue_ParameterName_Offset;
    static readonly int K2_GetTextureParameterValue_ReturnValue_Offset;
    
    public UnrealSharp.Engine.Texture GetTextureParameterValue(Name parameterName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[K2_GetTextureParameterValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, K2_GetTextureParameterValue_ParameterName_Offset), 0, null, parameterName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, K2_GetTextureParameterValue_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.Texture returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.Texture>.FromNative(IntPtr.Add(ParamsBuffer, K2_GetTextureParameterValue_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.MaterialInstanceDynamic:K2_GetScalarParameterValueByInfo
    static readonly IntPtr K2_GetScalarParameterValueByInfo_NativeFunction;
    static readonly int K2_GetScalarParameterValueByInfo_ParamsSize;
    static readonly int K2_GetScalarParameterValueByInfo_ParameterInfo_Offset;
    static readonly int K2_GetScalarParameterValueByInfo_ReturnValue_Offset;
    
    public float GetScalarParameterValueByInfo(UnrealSharp.Engine.MaterialParameterInfo parameterInfo)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[K2_GetScalarParameterValueByInfo_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.Engine.MaterialParameterInfoMarshaler.ToNative(IntPtr.Add(ParamsBuffer, K2_GetScalarParameterValueByInfo_ParameterInfo_Offset), 0, null, parameterInfo);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, K2_GetScalarParameterValueByInfo_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, K2_GetScalarParameterValueByInfo_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.MaterialInstanceDynamic:K2_GetScalarParameterValue
    static readonly IntPtr K2_GetScalarParameterValue_NativeFunction;
    static readonly int K2_GetScalarParameterValue_ParamsSize;
    static readonly int K2_GetScalarParameterValue_ParameterName_Offset;
    static readonly int K2_GetScalarParameterValue_ReturnValue_Offset;
    
    public float GetScalarParameterValue(Name parameterName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[K2_GetScalarParameterValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, K2_GetScalarParameterValue_ParameterName_Offset), 0, null, parameterName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, K2_GetScalarParameterValue_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, K2_GetScalarParameterValue_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.MaterialInstanceDynamic:K2_CopyMaterialInstanceParameters
    static readonly IntPtr K2_CopyMaterialInstanceParameters_NativeFunction;
    static readonly int K2_CopyMaterialInstanceParameters_ParamsSize;
    static readonly int K2_CopyMaterialInstanceParameters_Source_Offset;
    static readonly int K2_CopyMaterialInstanceParameters_bQuickParametersOnly_Offset;
    
    public void CopyMaterialInstanceParameters(UnrealSharp.Engine.MaterialInterface source, bool bQuickParametersOnly = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[K2_CopyMaterialInstanceParameters_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.MaterialInterface>.ToNative(IntPtr.Add(ParamsBuffer, K2_CopyMaterialInstanceParameters_Source_Offset), 0, null, source);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, K2_CopyMaterialInstanceParameters_bQuickParametersOnly_Offset), 0, null, bQuickParametersOnly);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, K2_CopyMaterialInstanceParameters_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.MaterialInstanceDynamic:InitializeScalarParameterAndGetIndex
    static readonly IntPtr InitializeScalarParameterAndGetIndex_NativeFunction;
    static readonly int InitializeScalarParameterAndGetIndex_ParamsSize;
    static readonly int InitializeScalarParameterAndGetIndex_ParameterName_Offset;
    static readonly int InitializeScalarParameterAndGetIndex_Value_Offset;
    static readonly int InitializeScalarParameterAndGetIndex_OutParameterIndex_Offset;
    static readonly int InitializeScalarParameterAndGetIndex_ReturnValue_Offset;
    
    public bool InitializeScalarParameterAndGetIndex(Name parameterName, float value, out int outParameterIndex)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[InitializeScalarParameterAndGetIndex_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, InitializeScalarParameterAndGetIndex_ParameterName_Offset), 0, null, parameterName);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, InitializeScalarParameterAndGetIndex_Value_Offset), 0, null, value);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, InitializeScalarParameterAndGetIndex_NativeFunction, ParamsBuffer);
            
            outParameterIndex = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, InitializeScalarParameterAndGetIndex_OutParameterIndex_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, InitializeScalarParameterAndGetIndex_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.MaterialInstanceDynamic:CopyParameterOverrides
    static readonly IntPtr CopyParameterOverrides_NativeFunction;
    static readonly int CopyParameterOverrides_ParamsSize;
    static readonly int CopyParameterOverrides_MaterialInstance_Offset;
    
    public void CopyParameterOverrides(UnrealSharp.Engine.MaterialInstance materialInstance)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[CopyParameterOverrides_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.MaterialInstance>.ToNative(IntPtr.Add(ParamsBuffer, CopyParameterOverrides_MaterialInstance_Offset), 0, null, materialInstance);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, CopyParameterOverrides_NativeFunction, ParamsBuffer);
            
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class MaterialParameterCollection : UnrealSharp.CoreUObject.Object
{
    
    static MaterialParameterCollection()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("MaterialParameterCollection");
        
        
        GetVectorParameterNames_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetVectorParameterNames");
        GetVectorParameterNames_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetVectorParameterNames_NativeFunction);
        GetVectorParameterNames_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetVectorParameterNames_NativeFunction, "ReturnValue");
        GetVectorParameterNames_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetVectorParameterNames_NativeFunction, "ReturnValue");
        GetVectorParameterDefaultValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetVectorParameterDefaultValue");
        GetVectorParameterDefaultValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetVectorParameterDefaultValue_NativeFunction);
        GetVectorParameterDefaultValue_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetVectorParameterDefaultValue_NativeFunction, "ParameterName");
        GetVectorParameterDefaultValue_bParameterFound_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetVectorParameterDefaultValue_NativeFunction, "bParameterFound");
        GetVectorParameterDefaultValue_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetVectorParameterDefaultValue_NativeFunction, "ReturnValue");
        GetScalarParameterNames_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetScalarParameterNames");
        GetScalarParameterNames_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetScalarParameterNames_NativeFunction);
        GetScalarParameterNames_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetScalarParameterNames_NativeFunction, "ReturnValue");
        GetScalarParameterNames_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetScalarParameterNames_NativeFunction, "ReturnValue");
        GetScalarParameterDefaultValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetScalarParameterDefaultValue");
        GetScalarParameterDefaultValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetScalarParameterDefaultValue_NativeFunction);
        GetScalarParameterDefaultValue_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetScalarParameterDefaultValue_NativeFunction, "ParameterName");
        GetScalarParameterDefaultValue_bParameterFound_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetScalarParameterDefaultValue_NativeFunction, "bParameterFound");
        GetScalarParameterDefaultValue_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetScalarParameterDefaultValue_NativeFunction, "ReturnValue");
        
        
    }
    
    protected MaterialParameterCollection(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Engine.MaterialParameterCollection:GetVectorParameterNames
    static readonly IntPtr GetVectorParameterNames_NativeFunction;
    static readonly int GetVectorParameterNames_ParamsSize;
    static readonly int GetVectorParameterNames_ReturnValue_Offset;
    static readonly int GetVectorParameterNames_ReturnValue_ElementSize;
    
    public System.Collections.Generic.IList<Name> GetVectorParameterNames()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetVectorParameterNames_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetVectorParameterNames_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<Name> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, GetVectorParameterNames_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<Name> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<Name> (1, BlittableMarshaller<Name>.ToNative, BlittableMarshaller<Name>.FromNative, GetVectorParameterNames_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<Name>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.MaterialParameterCollection:GetVectorParameterDefaultValue
    static readonly IntPtr GetVectorParameterDefaultValue_NativeFunction;
    static readonly int GetVectorParameterDefaultValue_ParamsSize;
    static readonly int GetVectorParameterDefaultValue_ParameterName_Offset;
    static readonly int GetVectorParameterDefaultValue_bParameterFound_Offset;
    static readonly int GetVectorParameterDefaultValue_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.LinearColor GetVectorParameterDefaultValue(Name parameterName, out bool bParameterFound)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetVectorParameterDefaultValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetVectorParameterDefaultValue_ParameterName_Offset), 0, null, parameterName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetVectorParameterDefaultValue_NativeFunction, ParamsBuffer);
            
            bParameterFound = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetVectorParameterDefaultValue_bParameterFound_Offset), 0, null);
            UnrealSharp.CoreUObject.LinearColor returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.FromNative(IntPtr.Add(ParamsBuffer, GetVectorParameterDefaultValue_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.MaterialParameterCollection:GetScalarParameterNames
    static readonly IntPtr GetScalarParameterNames_NativeFunction;
    static readonly int GetScalarParameterNames_ParamsSize;
    static readonly int GetScalarParameterNames_ReturnValue_Offset;
    static readonly int GetScalarParameterNames_ReturnValue_ElementSize;
    
    public System.Collections.Generic.IList<Name> GetScalarParameterNames()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetScalarParameterNames_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetScalarParameterNames_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<Name> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, GetScalarParameterNames_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<Name> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<Name> (1, BlittableMarshaller<Name>.ToNative, BlittableMarshaller<Name>.FromNative, GetScalarParameterNames_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<Name>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.MaterialParameterCollection:GetScalarParameterDefaultValue
    static readonly IntPtr GetScalarParameterDefaultValue_NativeFunction;
    static readonly int GetScalarParameterDefaultValue_ParamsSize;
    static readonly int GetScalarParameterDefaultValue_ParameterName_Offset;
    static readonly int GetScalarParameterDefaultValue_bParameterFound_Offset;
    static readonly int GetScalarParameterDefaultValue_ReturnValue_Offset;
    
    public float GetScalarParameterDefaultValue(Name parameterName, out bool bParameterFound)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetScalarParameterDefaultValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetScalarParameterDefaultValue_ParameterName_Offset), 0, null, parameterName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetScalarParameterDefaultValue_NativeFunction, ParamsBuffer);
            
            bParameterFound = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetScalarParameterDefaultValue_bParameterFound_Offset), 0, null);
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetScalarParameterDefaultValue_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
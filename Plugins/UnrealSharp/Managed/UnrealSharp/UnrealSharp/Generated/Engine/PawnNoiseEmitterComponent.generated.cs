// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class PawnNoiseEmitterComponent : UnrealSharp.Engine.ActorComponent
{
    
    static PawnNoiseEmitterComponent()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("PawnNoiseEmitterComponent");
        
        NoiseLifetime_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "NoiseLifetime");
        
        MakeNoise_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "MakeNoise");
        MakeNoise_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(MakeNoise_NativeFunction);
        MakeNoise_NoiseMaker_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeNoise_NativeFunction, "NoiseMaker");
        MakeNoise_Loudness_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeNoise_NativeFunction, "Loudness");
        MakeNoise_NoiseLocation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeNoise_NativeFunction, "NoiseLocation");
        
        
    }
    
    protected PawnNoiseEmitterComponent(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // FloatProperty /Script/Engine.PawnNoiseEmitterComponent:NoiseLifetime
    static readonly int NoiseLifetime_Offset;
    
    public float NoiseLifetime
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, NoiseLifetime_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, NoiseLifetime_Offset), 0, this, value);
        }
    }
    
    // Function /Script/Engine.PawnNoiseEmitterComponent:MakeNoise
    static readonly IntPtr MakeNoise_NativeFunction;
    static readonly int MakeNoise_ParamsSize;
    static readonly int MakeNoise_NoiseMaker_Offset;
    static readonly int MakeNoise_Loudness_Offset;
    static readonly int MakeNoise_NoiseLocation_Offset;
    
    public void MakeNoise(UnrealSharp.Engine.Actor noiseMaker, float loudness, System.DoubleNumerics.Vector3 noiseLocation)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[MakeNoise_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.Actor>.ToNative(IntPtr.Add(ParamsBuffer, MakeNoise_NoiseMaker_Offset), 0, null, noiseMaker);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, MakeNoise_Loudness_Offset), 0, null, loudness);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, MakeNoise_NoiseLocation_Offset), 0, null, noiseLocation);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, MakeNoise_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    
}
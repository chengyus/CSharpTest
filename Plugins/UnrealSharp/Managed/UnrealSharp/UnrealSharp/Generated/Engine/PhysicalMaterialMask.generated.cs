// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class PhysicalMaterialMask : UnrealSharp.CoreUObject.Object
{
    
    static PhysicalMaterialMask()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("PhysicalMaterialMask");
        
        MaskTexture_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "MaskTexture");
        UVChannelIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "UVChannelIndex");
        AddressX_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "AddressX");
        AddressY_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "AddressY");
        
        
        
    }
    
    protected PhysicalMaterialMask(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ObjectProperty /Script/Engine.PhysicalMaterialMask:MaskTexture
    static readonly int MaskTexture_Offset;
    
    public UnrealSharp.Engine.Texture MaskTexture
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.Engine.Texture>.FromNative(IntPtr.Add(NativeObject, MaskTexture_Offset), 0, this);
        }
    }
    
    // IntProperty /Script/Engine.PhysicalMaterialMask:UVChannelIndex
    static readonly int UVChannelIndex_Offset;
    
    public int UVChannelIndex
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<int>.FromNative(IntPtr.Add(NativeObject, UVChannelIndex_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<int>.ToNative(IntPtr.Add(NativeObject, UVChannelIndex_Offset), 0, this, value);
        }
    }
    
    // ByteProperty /Script/Engine.PhysicalMaterialMask:AddressX
    static readonly int AddressX_Offset;
    
    public UnrealSharp.Engine.TextureAddress AddressX
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Engine.TextureAddress>.FromNative(IntPtr.Add(NativeObject, AddressX_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.Engine.TextureAddress>.ToNative(IntPtr.Add(NativeObject, AddressX_Offset), 0, this, value);
        }
    }
    
    // ByteProperty /Script/Engine.PhysicalMaterialMask:AddressY
    static readonly int AddressY_Offset;
    
    public UnrealSharp.Engine.TextureAddress AddressY
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Engine.TextureAddress>.FromNative(IntPtr.Add(NativeObject, AddressY_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.Engine.TextureAddress>.ToNative(IntPtr.Add(NativeObject, AddressY_Offset), 0, this, value);
        }
    }
    
    
}
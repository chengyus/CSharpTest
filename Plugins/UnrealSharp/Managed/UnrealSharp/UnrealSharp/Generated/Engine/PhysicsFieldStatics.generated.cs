// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class PhysicsFieldStatics : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static PhysicsFieldStatics()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("PhysicsFieldStatics");
        
        
        EvalPhysicsVectorField_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "EvalPhysicsVectorField");
        EvalPhysicsVectorField_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(EvalPhysicsVectorField_NativeFunction);
        EvalPhysicsVectorField_WorldContextObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EvalPhysicsVectorField_NativeFunction, "WorldContextObject");
        EvalPhysicsVectorField_WorldPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EvalPhysicsVectorField_NativeFunction, "WorldPosition");
        EvalPhysicsVectorField_VectorType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EvalPhysicsVectorField_NativeFunction, "VectorType");
        EvalPhysicsVectorField_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EvalPhysicsVectorField_NativeFunction, "ReturnValue");
        EvalPhysicsScalarField_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "EvalPhysicsScalarField");
        EvalPhysicsScalarField_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(EvalPhysicsScalarField_NativeFunction);
        EvalPhysicsScalarField_WorldContextObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EvalPhysicsScalarField_NativeFunction, "WorldContextObject");
        EvalPhysicsScalarField_WorldPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EvalPhysicsScalarField_NativeFunction, "WorldPosition");
        EvalPhysicsScalarField_ScalarType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EvalPhysicsScalarField_NativeFunction, "ScalarType");
        EvalPhysicsScalarField_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EvalPhysicsScalarField_NativeFunction, "ReturnValue");
        EvalPhysicsIntegerField_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "EvalPhysicsIntegerField");
        EvalPhysicsIntegerField_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(EvalPhysicsIntegerField_NativeFunction);
        EvalPhysicsIntegerField_WorldContextObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EvalPhysicsIntegerField_NativeFunction, "WorldContextObject");
        EvalPhysicsIntegerField_WorldPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EvalPhysicsIntegerField_NativeFunction, "WorldPosition");
        EvalPhysicsIntegerField_IntegerType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EvalPhysicsIntegerField_NativeFunction, "IntegerType");
        EvalPhysicsIntegerField_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EvalPhysicsIntegerField_NativeFunction, "ReturnValue");
        
        
    }
    
    protected PhysicsFieldStatics(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Engine.PhysicsFieldStatics:EvalPhysicsVectorField
    static readonly IntPtr EvalPhysicsVectorField_NativeFunction;
    static readonly int EvalPhysicsVectorField_ParamsSize;
    static readonly int EvalPhysicsVectorField_WorldContextObject_Offset;
    static readonly int EvalPhysicsVectorField_WorldPosition_Offset;
    static readonly int EvalPhysicsVectorField_VectorType_Offset;
    static readonly int EvalPhysicsVectorField_ReturnValue_Offset;
    
    public static System.DoubleNumerics.Vector3 EvalPhysicsVectorField(UnrealSharp.CoreUObject.Object worldContextObject, System.DoubleNumerics.Vector3 worldPosition, UnrealSharp.Chaos.EFieldVectorType vectorType)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[EvalPhysicsVectorField_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, EvalPhysicsVectorField_WorldContextObject_Offset), 0, null, worldContextObject);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, EvalPhysicsVectorField_WorldPosition_Offset), 0, null, worldPosition);
            BlittableMarshaller<UnrealSharp.Chaos.EFieldVectorType>.ToNative(IntPtr.Add(ParamsBuffer, EvalPhysicsVectorField_VectorType_Offset), 0, null, vectorType);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, EvalPhysicsVectorField_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector3 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, EvalPhysicsVectorField_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.PhysicsFieldStatics:EvalPhysicsScalarField
    static readonly IntPtr EvalPhysicsScalarField_NativeFunction;
    static readonly int EvalPhysicsScalarField_ParamsSize;
    static readonly int EvalPhysicsScalarField_WorldContextObject_Offset;
    static readonly int EvalPhysicsScalarField_WorldPosition_Offset;
    static readonly int EvalPhysicsScalarField_ScalarType_Offset;
    static readonly int EvalPhysicsScalarField_ReturnValue_Offset;
    
    public static float EvalPhysicsScalarField(UnrealSharp.CoreUObject.Object worldContextObject, System.DoubleNumerics.Vector3 worldPosition, UnrealSharp.Chaos.EFieldScalarType scalarType)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[EvalPhysicsScalarField_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, EvalPhysicsScalarField_WorldContextObject_Offset), 0, null, worldContextObject);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, EvalPhysicsScalarField_WorldPosition_Offset), 0, null, worldPosition);
            BlittableMarshaller<UnrealSharp.Chaos.EFieldScalarType>.ToNative(IntPtr.Add(ParamsBuffer, EvalPhysicsScalarField_ScalarType_Offset), 0, null, scalarType);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, EvalPhysicsScalarField_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, EvalPhysicsScalarField_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.PhysicsFieldStatics:EvalPhysicsIntegerField
    static readonly IntPtr EvalPhysicsIntegerField_NativeFunction;
    static readonly int EvalPhysicsIntegerField_ParamsSize;
    static readonly int EvalPhysicsIntegerField_WorldContextObject_Offset;
    static readonly int EvalPhysicsIntegerField_WorldPosition_Offset;
    static readonly int EvalPhysicsIntegerField_IntegerType_Offset;
    static readonly int EvalPhysicsIntegerField_ReturnValue_Offset;
    
    public static int EvalPhysicsIntegerField(UnrealSharp.CoreUObject.Object worldContextObject, System.DoubleNumerics.Vector3 worldPosition, UnrealSharp.Chaos.EFieldIntegerType integerType)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[EvalPhysicsIntegerField_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, EvalPhysicsIntegerField_WorldContextObject_Offset), 0, null, worldContextObject);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, EvalPhysicsIntegerField_WorldPosition_Offset), 0, null, worldPosition);
            BlittableMarshaller<UnrealSharp.Chaos.EFieldIntegerType>.ToNative(IntPtr.Add(ParamsBuffer, EvalPhysicsIntegerField_IntegerType_Offset), 0, null, integerType);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, EvalPhysicsIntegerField_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, EvalPhysicsIntegerField_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
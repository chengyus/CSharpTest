// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class PhysicsSpringComponent : UnrealSharp.Engine.SceneComponent
{
    
    static PhysicsSpringComponent()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("PhysicsSpringComponent");
        
        SpringStiffness_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "SpringStiffness");
        SpringDamping_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "SpringDamping");
        SpringLengthAtRest_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "SpringLengthAtRest");
        SpringRadius_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "SpringRadius");
        SpringChannel_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "SpringChannel");
        bIgnoreSelf_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bIgnoreSelf");
        SpringCompression_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "SpringCompression");
        
        GetSpringRestingPoint_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSpringRestingPoint");
        GetSpringRestingPoint_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSpringRestingPoint_NativeFunction);
        GetSpringRestingPoint_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSpringRestingPoint_NativeFunction, "ReturnValue");
        GetSpringDirection_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSpringDirection");
        GetSpringDirection_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSpringDirection_NativeFunction);
        GetSpringDirection_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSpringDirection_NativeFunction, "ReturnValue");
        GetSpringCurrentEndPoint_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSpringCurrentEndPoint");
        GetSpringCurrentEndPoint_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSpringCurrentEndPoint_NativeFunction);
        GetSpringCurrentEndPoint_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSpringCurrentEndPoint_NativeFunction, "ReturnValue");
        GetNormalizedCompressionScalar_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetNormalizedCompressionScalar");
        GetNormalizedCompressionScalar_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetNormalizedCompressionScalar_NativeFunction);
        GetNormalizedCompressionScalar_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetNormalizedCompressionScalar_NativeFunction, "ReturnValue");
        
        
    }
    
    protected PhysicsSpringComponent(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // FloatProperty /Script/Engine.PhysicsSpringComponent:SpringStiffness
    static readonly int SpringStiffness_Offset;
    
    public float SpringStiffness
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, SpringStiffness_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, SpringStiffness_Offset), 0, this, value);
        }
    }
    
    // FloatProperty /Script/Engine.PhysicsSpringComponent:SpringDamping
    static readonly int SpringDamping_Offset;
    
    public float SpringDamping
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, SpringDamping_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, SpringDamping_Offset), 0, this, value);
        }
    }
    
    // FloatProperty /Script/Engine.PhysicsSpringComponent:SpringLengthAtRest
    static readonly int SpringLengthAtRest_Offset;
    
    public float SpringLengthAtRest
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, SpringLengthAtRest_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, SpringLengthAtRest_Offset), 0, this, value);
        }
    }
    
    // FloatProperty /Script/Engine.PhysicsSpringComponent:SpringRadius
    static readonly int SpringRadius_Offset;
    
    public float SpringRadius
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, SpringRadius_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, SpringRadius_Offset), 0, this, value);
        }
    }
    
    // ByteProperty /Script/Engine.PhysicsSpringComponent:SpringChannel
    static readonly int SpringChannel_Offset;
    
    public UnrealSharp.Engine.ECollisionChannel SpringChannel
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Engine.ECollisionChannel>.FromNative(IntPtr.Add(NativeObject, SpringChannel_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.Engine.ECollisionChannel>.ToNative(IntPtr.Add(NativeObject, SpringChannel_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/Engine.PhysicsSpringComponent:bIgnoreSelf
    static readonly int bIgnoreSelf_Offset;
    
    public bool bIgnoreSelf
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bIgnoreSelf_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, bIgnoreSelf_Offset), 0, this, value);
        }
    }
    
    // FloatProperty /Script/Engine.PhysicsSpringComponent:SpringCompression
    static readonly int SpringCompression_Offset;
    
    public float SpringCompression
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, SpringCompression_Offset), 0, this);
        }
    }
    
    // Function /Script/Engine.PhysicsSpringComponent:GetSpringRestingPoint
    static readonly IntPtr GetSpringRestingPoint_NativeFunction;
    static readonly int GetSpringRestingPoint_ParamsSize;
    static readonly int GetSpringRestingPoint_ReturnValue_Offset;
    
    public System.DoubleNumerics.Vector3 GetSpringRestingPoint()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSpringRestingPoint_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSpringRestingPoint_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector3 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, GetSpringRestingPoint_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.PhysicsSpringComponent:GetSpringDirection
    static readonly IntPtr GetSpringDirection_NativeFunction;
    static readonly int GetSpringDirection_ParamsSize;
    static readonly int GetSpringDirection_ReturnValue_Offset;
    
    public System.DoubleNumerics.Vector3 GetSpringDirection()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSpringDirection_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSpringDirection_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector3 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, GetSpringDirection_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.PhysicsSpringComponent:GetSpringCurrentEndPoint
    static readonly IntPtr GetSpringCurrentEndPoint_NativeFunction;
    static readonly int GetSpringCurrentEndPoint_ParamsSize;
    static readonly int GetSpringCurrentEndPoint_ReturnValue_Offset;
    
    public System.DoubleNumerics.Vector3 GetSpringCurrentEndPoint()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSpringCurrentEndPoint_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSpringCurrentEndPoint_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector3 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, GetSpringCurrentEndPoint_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.PhysicsSpringComponent:GetNormalizedCompressionScalar
    static readonly IntPtr GetNormalizedCompressionScalar_NativeFunction;
    static readonly int GetNormalizedCompressionScalar_ParamsSize;
    static readonly int GetNormalizedCompressionScalar_ReturnValue_Offset;
    
    public float GetNormalizedCompressionScalar()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetNormalizedCompressionScalar_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetNormalizedCompressionScalar_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetNormalizedCompressionScalar_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
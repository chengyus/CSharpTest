// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class PrecomputedVisibilityOverrideVolume : UnrealSharp.Engine.Volume
{
    
    static PrecomputedVisibilityOverrideVolume()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("PrecomputedVisibilityOverrideVolume");
        
        OverrideVisibleActors_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "OverrideVisibleActors");
        OverrideVisibleActors_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "OverrideVisibleActors");
        OverrideInvisibleActors_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "OverrideInvisibleActors");
        OverrideInvisibleActors_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "OverrideInvisibleActors");
        OverrideInvisibleLevels_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "OverrideInvisibleLevels");
        OverrideInvisibleLevels_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "OverrideInvisibleLevels");
        
        
        
    }
    
    protected PrecomputedVisibilityOverrideVolume(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ArrayProperty /Script/Engine.PrecomputedVisibilityOverrideVolume:OverrideVisibleActors
    static readonly int OverrideVisibleActors_Offset;
    static readonly IntPtr OverrideVisibleActors_NativeProperty;
    UnrealArrayReadWriteMarshaler<UnrealSharp.Engine.Actor> OverrideVisibleActors_Wrapper = null;
    
    public System.Collections.Generic.IList<UnrealSharp.Engine.Actor> OverrideVisibleActors
    {
        get
        {
            if(OverrideVisibleActors_Wrapper == null)
            {
                OverrideVisibleActors_Wrapper = new UnrealArrayReadWriteMarshaler<UnrealSharp.Engine.Actor>(1, OverrideVisibleActors_NativeProperty, ObjectMarshaller<UnrealSharp.Engine.Actor>.ToNative, ObjectMarshaller<UnrealSharp.Engine.Actor>.FromNative);
            }
            
            return OverrideVisibleActors_Wrapper.FromNative(IntPtr.Add(NativeObject,OverrideVisibleActors_Offset),0,this);
        }
    }
    
    // ArrayProperty /Script/Engine.PrecomputedVisibilityOverrideVolume:OverrideInvisibleActors
    static readonly int OverrideInvisibleActors_Offset;
    static readonly IntPtr OverrideInvisibleActors_NativeProperty;
    UnrealArrayReadWriteMarshaler<UnrealSharp.Engine.Actor> OverrideInvisibleActors_Wrapper = null;
    
    public System.Collections.Generic.IList<UnrealSharp.Engine.Actor> OverrideInvisibleActors
    {
        get
        {
            if(OverrideInvisibleActors_Wrapper == null)
            {
                OverrideInvisibleActors_Wrapper = new UnrealArrayReadWriteMarshaler<UnrealSharp.Engine.Actor>(1, OverrideInvisibleActors_NativeProperty, ObjectMarshaller<UnrealSharp.Engine.Actor>.ToNative, ObjectMarshaller<UnrealSharp.Engine.Actor>.FromNative);
            }
            
            return OverrideInvisibleActors_Wrapper.FromNative(IntPtr.Add(NativeObject,OverrideInvisibleActors_Offset),0,this);
        }
    }
    
    // ArrayProperty /Script/Engine.PrecomputedVisibilityOverrideVolume:OverrideInvisibleLevels
    static readonly int OverrideInvisibleLevels_Offset;
    static readonly IntPtr OverrideInvisibleLevels_NativeProperty;
    UnrealArrayReadWriteMarshaler<Name> OverrideInvisibleLevels_Wrapper = null;
    
    public System.Collections.Generic.IList<Name> OverrideInvisibleLevels
    {
        get
        {
            if(OverrideInvisibleLevels_Wrapper == null)
            {
                OverrideInvisibleLevels_Wrapper = new UnrealArrayReadWriteMarshaler<Name>(1, OverrideInvisibleLevels_NativeProperty, BlittableMarshaller<Name>.ToNative, BlittableMarshaller<Name>.FromNative);
            }
            
            return OverrideInvisibleLevels_Wrapper.FromNative(IntPtr.Add(NativeObject,OverrideInvisibleLevels_Offset),0,this);
        }
    }
    
    
}
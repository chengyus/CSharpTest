// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
abstract public partial class ReflectionCaptureComponent : UnrealSharp.Engine.SceneComponent
{
    
    static ReflectionCaptureComponent()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("ReflectionCaptureComponent");
        
        ReflectionSourceType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ReflectionSourceType");
        Cubemap_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Cubemap");
        SourceCubemapAngle_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "SourceCubemapAngle");
        Brightness_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Brightness");
        CaptureOffset_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "CaptureOffset");
        
        
        
    }
    
    protected ReflectionCaptureComponent(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // EnumProperty /Script/Engine.ReflectionCaptureComponent:ReflectionSourceType
    static readonly int ReflectionSourceType_Offset;
    
    public UnrealSharp.Engine.EReflectionSourceType ReflectionSourceType
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Engine.EReflectionSourceType>.FromNative(IntPtr.Add(NativeObject, ReflectionSourceType_Offset), 0, this);
        }
    }
    
    // ObjectProperty /Script/Engine.ReflectionCaptureComponent:Cubemap
    static readonly int Cubemap_Offset;
    
    public UnrealSharp.Engine.TextureCube Cubemap
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.Engine.TextureCube>.FromNative(IntPtr.Add(NativeObject, Cubemap_Offset), 0, this);
        }
    }
    
    // FloatProperty /Script/Engine.ReflectionCaptureComponent:SourceCubemapAngle
    static readonly int SourceCubemapAngle_Offset;
    
    public float SourceCubemapAngle
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, SourceCubemapAngle_Offset), 0, this);
        }
    }
    
    // FloatProperty /Script/Engine.ReflectionCaptureComponent:Brightness
    static readonly int Brightness_Offset;
    
    public float Brightness
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, Brightness_Offset), 0, this);
        }
    }
    
    // StructProperty /Script/Engine.ReflectionCaptureComponent:CaptureOffset
    static readonly int CaptureOffset_Offset;
    
    public System.DoubleNumerics.Vector3 CaptureOffset
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(NativeObject, CaptureOffset_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(NativeObject, CaptureOffset_Offset), 0, this, value);
        }
    }
    
    
}
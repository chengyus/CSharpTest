// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class RotatingMovementComponent : UnrealSharp.Engine.MovementComponent
{
    
    static RotatingMovementComponent()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("RotatingMovementComponent");
        
        RotationRate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "RotationRate");
        PivotTranslation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "PivotTranslation");
        bRotationInLocalSpace_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bRotationInLocalSpace");
        bRotationInLocalSpace_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bRotationInLocalSpace");
        
        
        
    }
    
    protected RotatingMovementComponent(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // StructProperty /Script/Engine.RotatingMovementComponent:RotationRate
    static readonly int RotationRate_Offset;
    
    public UnrealSharp.Rotator RotationRate
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Rotator>.FromNative(IntPtr.Add(NativeObject, RotationRate_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.Rotator>.ToNative(IntPtr.Add(NativeObject, RotationRate_Offset), 0, this, value);
        }
    }
    
    // StructProperty /Script/Engine.RotatingMovementComponent:PivotTranslation
    static readonly int PivotTranslation_Offset;
    
    public System.DoubleNumerics.Vector3 PivotTranslation
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(NativeObject, PivotTranslation_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(NativeObject, PivotTranslation_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/Engine.RotatingMovementComponent:bRotationInLocalSpace
    static readonly int bRotationInLocalSpace_Offset;
    static readonly IntPtr bRotationInLocalSpace_NativeProperty;
    
    public bool bRotationInLocalSpace
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bRotationInLocalSpace_NativeProperty, bRotationInLocalSpace_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bRotationInLocalSpace_NativeProperty, bRotationInLocalSpace_Offset, value);
        }
    }
    
    
}
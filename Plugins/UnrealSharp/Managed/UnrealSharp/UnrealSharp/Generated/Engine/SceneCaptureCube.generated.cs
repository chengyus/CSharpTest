// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class SceneCaptureCube : UnrealSharp.Engine.SceneCapture
{
    
    static SceneCaptureCube()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("SceneCaptureCube");
        
        CaptureComponentCube_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "CaptureComponentCube");
        
        OnInterpToggle_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "OnInterpToggle");
        OnInterpToggle_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(OnInterpToggle_NativeFunction);
        OnInterpToggle_bEnable_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(OnInterpToggle_NativeFunction, "bEnable");
        
        
    }
    
    protected SceneCaptureCube(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ObjectProperty /Script/Engine.SceneCaptureCube:CaptureComponentCube
    static readonly int CaptureComponentCube_Offset;
    
    public UnrealSharp.Engine.SceneCaptureComponentCube CaptureComponentCube
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.Engine.SceneCaptureComponentCube>.FromNative(IntPtr.Add(NativeObject, CaptureComponentCube_Offset), 0, this);
        }
    }
    
    // Function /Script/Engine.SceneCaptureCube:OnInterpToggle
    static readonly IntPtr OnInterpToggle_NativeFunction;
    static readonly int OnInterpToggle_ParamsSize;
    static readonly int OnInterpToggle_bEnable_Offset;
    
    public void OnInterpToggle(bool bEnable)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[OnInterpToggle_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, OnInterpToggle_bEnable_Offset), 0, null, bEnable);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, OnInterpToggle_NativeFunction, ParamsBuffer);
            
        }
    }
    
    
}
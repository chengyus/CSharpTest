// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class SkeletalMeshComponent : UnrealSharp.Engine.SkinnedMeshComponent
{
    
    static SkeletalMeshComponent()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("SkeletalMeshComponent");
        
        SkeletalMeshAsset_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "SkeletalMeshAsset");
        AnimClass_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "AnimClass");
        AnimationData_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "AnimationData");
        GlobalAnimRateScale_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "GlobalAnimRateScale");
        KinematicBonesUpdateType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "KinematicBonesUpdateType");
        PhysicsTransformUpdateMode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "PhysicsTransformUpdateMode");
        AnimationMode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "AnimationMode");
        bDisablePostProcessBlueprint_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bDisablePostProcessBlueprint");
        bDisablePostProcessBlueprint_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bDisablePostProcessBlueprint");
        bEnablePhysicsOnDedicatedServer_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bEnablePhysicsOnDedicatedServer");
        bEnablePhysicsOnDedicatedServer_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bEnablePhysicsOnDedicatedServer");
        bUpdateMeshWhenKinematic_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bUpdateMeshWhenKinematic");
        bUpdateMeshWhenKinematic_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bUpdateMeshWhenKinematic");
        bUpdateJointsFromAnimation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bUpdateJointsFromAnimation");
        bUpdateJointsFromAnimation_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bUpdateJointsFromAnimation");
        bAllowClothActors_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bAllowClothActors");
        bAllowClothActors_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bAllowClothActors");
        bDisableClothSimulation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bDisableClothSimulation");
        bDisableClothSimulation_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bDisableClothSimulation");
        bCollideWithEnvironment_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bCollideWithEnvironment");
        bCollideWithEnvironment_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bCollideWithEnvironment");
        bCollideWithAttachedChildren_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bCollideWithAttachedChildren");
        bCollideWithAttachedChildren_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bCollideWithAttachedChildren");
        bForceCollisionUpdate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bForceCollisionUpdate");
        bForceCollisionUpdate_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bForceCollisionUpdate");
        bLocalSpaceSimulation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bLocalSpaceSimulation");
        bLocalSpaceSimulation_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bLocalSpaceSimulation");
        bResetAfterTeleport_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bResetAfterTeleport");
        bResetAfterTeleport_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bResetAfterTeleport");
        bDeferKinematicBoneUpdate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bDeferKinematicBoneUpdate");
        bDeferKinematicBoneUpdate_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bDeferKinematicBoneUpdate");
        bNoSkeletonUpdate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bNoSkeletonUpdate");
        bNoSkeletonUpdate_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bNoSkeletonUpdate");
        bPauseAnims_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bPauseAnims");
        bPauseAnims_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bPauseAnims");
        bEnablePerPolyCollision_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bEnablePerPolyCollision");
        bEnablePerPolyCollision_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bEnablePerPolyCollision");
        bIncludeComponentLocationIntoBounds_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bIncludeComponentLocationIntoBounds");
        bIncludeComponentLocationIntoBounds_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bIncludeComponentLocationIntoBounds");
        bPropagateCurvesToFollowers_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bPropagateCurvesToFollowers");
        bPropagateCurvesToFollowers_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bPropagateCurvesToFollowers");
        bSkipKinematicUpdateWhenInterpolating_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bSkipKinematicUpdateWhenInterpolating");
        bSkipKinematicUpdateWhenInterpolating_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bSkipKinematicUpdateWhenInterpolating");
        bSkipBoundsUpdateWhenInterpolating_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bSkipBoundsUpdateWhenInterpolating");
        bSkipBoundsUpdateWhenInterpolating_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bSkipBoundsUpdateWhenInterpolating");
        ClothBlendWeight_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ClothBlendWeight");
        bWaitForParallelClothTask_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bWaitForParallelClothTask");
        ClothMaxDistanceScale_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ClothMaxDistanceScale");
        TeleportDistanceThreshold_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "TeleportDistanceThreshold");
        TeleportRotationThreshold_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "TeleportRotationThreshold");
        DefaultAnimatingRigOverride_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "DefaultAnimatingRigOverride");
        
        UnlinkAnimClassLayers_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "UnlinkAnimClassLayers");
        UnlinkAnimClassLayers_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(UnlinkAnimClassLayers_NativeFunction);
        UnlinkAnimClassLayers_InClass_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(UnlinkAnimClassLayers_NativeFunction, "InClass");
        UnbindClothFromLeaderPoseComponent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "UnbindClothFromLeaderPoseComponent");
        UnbindClothFromLeaderPoseComponent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(UnbindClothFromLeaderPoseComponent_NativeFunction);
        UnbindClothFromLeaderPoseComponent_bRestoreSimulationSpace_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(UnbindClothFromLeaderPoseComponent_NativeFunction, "bRestoreSimulationSpace");
        ToggleDisablePostProcessBlueprint_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ToggleDisablePostProcessBlueprint");
        TermBodiesBelow_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "TermBodiesBelow");
        TermBodiesBelow_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(TermBodiesBelow_NativeFunction);
        TermBodiesBelow_ParentBoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TermBodiesBelow_NativeFunction, "ParentBoneName");
        SuspendClothingSimulation_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SuspendClothingSimulation");
        Stop_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Stop");
        SnapshotPose_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SnapshotPose");
        SnapshotPose_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SnapshotPose_NativeFunction);
        SnapshotPose_Snapshot_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SnapshotPose_NativeFunction, "Snapshot");
        SetUpdateClothInEditor_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetUpdateClothInEditor");
        SetUpdateClothInEditor_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetUpdateClothInEditor_NativeFunction);
        SetUpdateClothInEditor_NewUpdateState_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetUpdateClothInEditor_NativeFunction, "NewUpdateState");
        SetUpdateAnimationInEditor_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetUpdateAnimationInEditor");
        SetUpdateAnimationInEditor_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetUpdateAnimationInEditor_NativeFunction);
        SetUpdateAnimationInEditor_NewUpdateState_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetUpdateAnimationInEditor_NativeFunction, "NewUpdateState");
        SetSkeletalMeshAsset_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSkeletalMeshAsset");
        SetSkeletalMeshAsset_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSkeletalMeshAsset_NativeFunction);
        SetSkeletalMeshAsset_NewMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSkeletalMeshAsset_NativeFunction, "NewMesh");
        SetPosition_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPosition");
        SetPosition_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPosition_NativeFunction);
        SetPosition_InPos_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPosition_NativeFunction, "InPos");
        SetPosition_bFireNotifies_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPosition_NativeFunction, "bFireNotifies");
        SetPlayRate_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPlayRate");
        SetPlayRate_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPlayRate_NativeFunction);
        SetPlayRate_Rate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPlayRate_NativeFunction, "Rate");
        SetPhysicsBlendWeight_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPhysicsBlendWeight");
        SetPhysicsBlendWeight_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPhysicsBlendWeight_NativeFunction);
        SetPhysicsBlendWeight_PhysicsBlendWeight_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPhysicsBlendWeight_NativeFunction, "PhysicsBlendWeight");
        SetNotifyRigidBodyCollisionBelow_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetNotifyRigidBodyCollisionBelow");
        SetNotifyRigidBodyCollisionBelow_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetNotifyRigidBodyCollisionBelow_NativeFunction);
        SetNotifyRigidBodyCollisionBelow_bNewNotifyRigidBodyCollision_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNotifyRigidBodyCollisionBelow_NativeFunction, "bNewNotifyRigidBodyCollision");
        SetNotifyRigidBodyCollisionBelow_BoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNotifyRigidBodyCollisionBelow_NativeFunction, "BoneName");
        SetNotifyRigidBodyCollisionBelow_bIncludeSelf_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNotifyRigidBodyCollisionBelow_NativeFunction, "bIncludeSelf");
        SetMorphTarget_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetMorphTarget");
        SetMorphTarget_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetMorphTarget_NativeFunction);
        SetMorphTarget_MorphTargetName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetMorphTarget_NativeFunction, "MorphTargetName");
        SetMorphTarget_Value_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetMorphTarget_NativeFunction, "Value");
        SetMorphTarget_bRemoveZeroWeight_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetMorphTarget_NativeFunction, "bRemoveZeroWeight");
        SetEnablePhysicsBlending_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetEnablePhysicsBlending");
        SetEnablePhysicsBlending_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetEnablePhysicsBlending_NativeFunction);
        SetEnablePhysicsBlending_bNewBlendPhysics_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEnablePhysicsBlending_NativeFunction, "bNewBlendPhysics");
        SetEnableGravityOnAllBodiesBelow_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetEnableGravityOnAllBodiesBelow");
        SetEnableGravityOnAllBodiesBelow_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetEnableGravityOnAllBodiesBelow_NativeFunction);
        SetEnableGravityOnAllBodiesBelow_bEnableGravity_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEnableGravityOnAllBodiesBelow_NativeFunction, "bEnableGravity");
        SetEnableGravityOnAllBodiesBelow_BoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEnableGravityOnAllBodiesBelow_NativeFunction, "BoneName");
        SetEnableGravityOnAllBodiesBelow_bIncludeSelf_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEnableGravityOnAllBodiesBelow_NativeFunction, "bIncludeSelf");
        SetEnableBodyGravity_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetEnableBodyGravity");
        SetEnableBodyGravity_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetEnableBodyGravity_NativeFunction);
        SetEnableBodyGravity_bEnableGravity_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEnableBodyGravity_NativeFunction, "bEnableGravity");
        SetEnableBodyGravity_BoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEnableBodyGravity_NativeFunction, "BoneName");
        SetDisableAnimCurves_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetDisableAnimCurves");
        SetDisableAnimCurves_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetDisableAnimCurves_NativeFunction);
        SetDisableAnimCurves_bInDisableAnimCurves_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetDisableAnimCurves_NativeFunction, "bInDisableAnimCurves");
        SetConstraintProfileForAll_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetConstraintProfileForAll");
        SetConstraintProfileForAll_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetConstraintProfileForAll_NativeFunction);
        SetConstraintProfileForAll_ProfileName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetConstraintProfileForAll_NativeFunction, "ProfileName");
        SetConstraintProfileForAll_bDefaultIfNotFound_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetConstraintProfileForAll_NativeFunction, "bDefaultIfNotFound");
        SetConstraintProfile_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetConstraintProfile");
        SetConstraintProfile_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetConstraintProfile_NativeFunction);
        SetConstraintProfile_JointName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetConstraintProfile_NativeFunction, "JointName");
        SetConstraintProfile_ProfileName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetConstraintProfile_NativeFunction, "ProfileName");
        SetConstraintProfile_bDefaultIfNotFound_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetConstraintProfile_NativeFunction, "bDefaultIfNotFound");
        SetClothMaxDistanceScale_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetClothMaxDistanceScale");
        SetClothMaxDistanceScale_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetClothMaxDistanceScale_NativeFunction);
        SetClothMaxDistanceScale_Scale_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetClothMaxDistanceScale_NativeFunction, "Scale");
        SetBodyNotifyRigidBodyCollision_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetBodyNotifyRigidBodyCollision");
        SetBodyNotifyRigidBodyCollision_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetBodyNotifyRigidBodyCollision_NativeFunction);
        SetBodyNotifyRigidBodyCollision_bNewNotifyRigidBodyCollision_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBodyNotifyRigidBodyCollision_NativeFunction, "bNewNotifyRigidBodyCollision");
        SetBodyNotifyRigidBodyCollision_BoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBodyNotifyRigidBodyCollision_NativeFunction, "BoneName");
        SetAnimClass_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAnimClass");
        SetAnimClass_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAnimClass_NativeFunction);
        SetAnimClass_NewClass_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAnimClass_NativeFunction, "NewClass");
        SetAnimationMode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAnimationMode");
        SetAnimationMode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAnimationMode_NativeFunction);
        SetAnimationMode_InAnimationMode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAnimationMode_NativeFunction, "InAnimationMode");
        SetAnimationMode_bForceInitAnimScriptInstance_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAnimationMode_NativeFunction, "bForceInitAnimScriptInstance");
        SetAnimation_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAnimation");
        SetAnimation_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAnimation_NativeFunction);
        SetAnimation_NewAnimToPlay_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAnimation_NativeFunction, "NewAnimToPlay");
        SetAngularLimits_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAngularLimits");
        SetAngularLimits_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAngularLimits_NativeFunction);
        SetAngularLimits_InBoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAngularLimits_NativeFunction, "InBoneName");
        SetAngularLimits_Swing1LimitAngle_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAngularLimits_NativeFunction, "Swing1LimitAngle");
        SetAngularLimits_TwistLimitAngle_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAngularLimits_NativeFunction, "TwistLimitAngle");
        SetAngularLimits_Swing2LimitAngle_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAngularLimits_NativeFunction, "Swing2LimitAngle");
        SetAllowRigidBodyAnimNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAllowRigidBodyAnimNode");
        SetAllowRigidBodyAnimNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAllowRigidBodyAnimNode_NativeFunction);
        SetAllowRigidBodyAnimNode_bInAllow_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllowRigidBodyAnimNode_NativeFunction, "bInAllow");
        SetAllowRigidBodyAnimNode_bReinitAnim_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllowRigidBodyAnimNode_NativeFunction, "bReinitAnim");
        SetAllowedAnimCurvesEvaluation_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAllowedAnimCurvesEvaluation");
        SetAllowedAnimCurvesEvaluation_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAllowedAnimCurvesEvaluation_NativeFunction);
        SetAllowedAnimCurvesEvaluation_List_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllowedAnimCurvesEvaluation_NativeFunction, "List");
        SetAllowedAnimCurvesEvaluation_List_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(SetAllowedAnimCurvesEvaluation_NativeFunction, "List");
        SetAllowedAnimCurvesEvaluation_bAllow_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllowedAnimCurvesEvaluation_NativeFunction, "bAllow");
        SetAllowClothActors_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAllowClothActors");
        SetAllowClothActors_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAllowClothActors_NativeFunction);
        SetAllowClothActors_bInAllow_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllowClothActors_NativeFunction, "bInAllow");
        SetAllowAnimCurveEvaluation_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAllowAnimCurveEvaluation");
        SetAllowAnimCurveEvaluation_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAllowAnimCurveEvaluation_NativeFunction);
        SetAllowAnimCurveEvaluation_bInAllow_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllowAnimCurveEvaluation_NativeFunction, "bInAllow");
        SetAllMotorsAngularVelocityDrive_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAllMotorsAngularVelocityDrive");
        SetAllMotorsAngularVelocityDrive_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAllMotorsAngularVelocityDrive_NativeFunction);
        SetAllMotorsAngularVelocityDrive_bEnableSwingDrive_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllMotorsAngularVelocityDrive_NativeFunction, "bEnableSwingDrive");
        SetAllMotorsAngularVelocityDrive_bEnableTwistDrive_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllMotorsAngularVelocityDrive_NativeFunction, "bEnableTwistDrive");
        SetAllMotorsAngularVelocityDrive_bSkipCustomPhysicsType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllMotorsAngularVelocityDrive_NativeFunction, "bSkipCustomPhysicsType");
        SetAllMotorsAngularPositionDrive_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAllMotorsAngularPositionDrive");
        SetAllMotorsAngularPositionDrive_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAllMotorsAngularPositionDrive_NativeFunction);
        SetAllMotorsAngularPositionDrive_bEnableSwingDrive_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllMotorsAngularPositionDrive_NativeFunction, "bEnableSwingDrive");
        SetAllMotorsAngularPositionDrive_bEnableTwistDrive_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllMotorsAngularPositionDrive_NativeFunction, "bEnableTwistDrive");
        SetAllMotorsAngularPositionDrive_bSkipCustomPhysicsType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllMotorsAngularPositionDrive_NativeFunction, "bSkipCustomPhysicsType");
        SetAllMotorsAngularDriveParams_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAllMotorsAngularDriveParams");
        SetAllMotorsAngularDriveParams_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAllMotorsAngularDriveParams_NativeFunction);
        SetAllMotorsAngularDriveParams_InSpring_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllMotorsAngularDriveParams_NativeFunction, "InSpring");
        SetAllMotorsAngularDriveParams_InDamping_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllMotorsAngularDriveParams_NativeFunction, "InDamping");
        SetAllMotorsAngularDriveParams_InForceLimit_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllMotorsAngularDriveParams_NativeFunction, "InForceLimit");
        SetAllMotorsAngularDriveParams_bSkipCustomPhysicsType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllMotorsAngularDriveParams_NativeFunction, "bSkipCustomPhysicsType");
        SetAllBodiesSimulatePhysics_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAllBodiesSimulatePhysics");
        SetAllBodiesSimulatePhysics_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAllBodiesSimulatePhysics_NativeFunction);
        SetAllBodiesSimulatePhysics_bNewSimulate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllBodiesSimulatePhysics_NativeFunction, "bNewSimulate");
        SetAllBodiesPhysicsBlendWeight_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAllBodiesPhysicsBlendWeight");
        SetAllBodiesPhysicsBlendWeight_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAllBodiesPhysicsBlendWeight_NativeFunction);
        SetAllBodiesPhysicsBlendWeight_PhysicsBlendWeight_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllBodiesPhysicsBlendWeight_NativeFunction, "PhysicsBlendWeight");
        SetAllBodiesPhysicsBlendWeight_bSkipCustomPhysicsType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllBodiesPhysicsBlendWeight_NativeFunction, "bSkipCustomPhysicsType");
        SetAllBodiesBelowSimulatePhysics_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAllBodiesBelowSimulatePhysics");
        SetAllBodiesBelowSimulatePhysics_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAllBodiesBelowSimulatePhysics_NativeFunction);
        SetAllBodiesBelowSimulatePhysics_InBoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllBodiesBelowSimulatePhysics_NativeFunction, "InBoneName");
        SetAllBodiesBelowSimulatePhysics_bNewSimulate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllBodiesBelowSimulatePhysics_NativeFunction, "bNewSimulate");
        SetAllBodiesBelowSimulatePhysics_bIncludeSelf_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllBodiesBelowSimulatePhysics_NativeFunction, "bIncludeSelf");
        SetAllBodiesBelowPhysicsDisabled_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAllBodiesBelowPhysicsDisabled");
        SetAllBodiesBelowPhysicsDisabled_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAllBodiesBelowPhysicsDisabled_NativeFunction);
        SetAllBodiesBelowPhysicsDisabled_InBoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllBodiesBelowPhysicsDisabled_NativeFunction, "InBoneName");
        SetAllBodiesBelowPhysicsDisabled_bDisabled_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllBodiesBelowPhysicsDisabled_NativeFunction, "bDisabled");
        SetAllBodiesBelowPhysicsDisabled_bIncludeSelf_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllBodiesBelowPhysicsDisabled_NativeFunction, "bIncludeSelf");
        SetAllBodiesBelowPhysicsBlendWeight_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAllBodiesBelowPhysicsBlendWeight");
        SetAllBodiesBelowPhysicsBlendWeight_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAllBodiesBelowPhysicsBlendWeight_NativeFunction);
        SetAllBodiesBelowPhysicsBlendWeight_InBoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllBodiesBelowPhysicsBlendWeight_NativeFunction, "InBoneName");
        SetAllBodiesBelowPhysicsBlendWeight_PhysicsBlendWeight_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllBodiesBelowPhysicsBlendWeight_NativeFunction, "PhysicsBlendWeight");
        SetAllBodiesBelowPhysicsBlendWeight_bSkipCustomPhysicsType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllBodiesBelowPhysicsBlendWeight_NativeFunction, "bSkipCustomPhysicsType");
        SetAllBodiesBelowPhysicsBlendWeight_bIncludeSelf_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllBodiesBelowPhysicsBlendWeight_NativeFunction, "bIncludeSelf");
        SetAllBodiesBelowLinearVelocity_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAllBodiesBelowLinearVelocity");
        SetAllBodiesBelowLinearVelocity_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAllBodiesBelowLinearVelocity_NativeFunction);
        SetAllBodiesBelowLinearVelocity_InBoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllBodiesBelowLinearVelocity_NativeFunction, "InBoneName");
        SetAllBodiesBelowLinearVelocity_LinearVelocity_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllBodiesBelowLinearVelocity_NativeFunction, "LinearVelocity");
        SetAllBodiesBelowLinearVelocity_bIncludeSelf_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllBodiesBelowLinearVelocity_NativeFunction, "bIncludeSelf");
        ResumeClothingSimulation_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ResumeClothingSimulation");
        ResetClothTeleportMode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ResetClothTeleportMode");
        ResetAnimInstanceDynamics_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ResetAnimInstanceDynamics");
        ResetAnimInstanceDynamics_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ResetAnimInstanceDynamics_NativeFunction);
        ResetAnimInstanceDynamics_InTeleportType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ResetAnimInstanceDynamics_NativeFunction, "InTeleportType");
        ResetAllowedAnimCurveEvaluation_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ResetAllowedAnimCurveEvaluation");
        ResetAllBodiesSimulatePhysics_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ResetAllBodiesSimulatePhysics");
        PlayAnimation_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "PlayAnimation");
        PlayAnimation_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(PlayAnimation_NativeFunction);
        PlayAnimation_NewAnimToPlay_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PlayAnimation_NativeFunction, "NewAnimToPlay");
        PlayAnimation_bLooping_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PlayAnimation_NativeFunction, "bLooping");
        Play_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Play");
        Play_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Play_NativeFunction);
        Play_bLooping_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Play_NativeFunction, "bLooping");
        OverrideAnimationData_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "OverrideAnimationData");
        OverrideAnimationData_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(OverrideAnimationData_NativeFunction);
        OverrideAnimationData_InAnimToPlay_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(OverrideAnimationData_NativeFunction, "InAnimToPlay");
        OverrideAnimationData_bIsLooping_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(OverrideAnimationData_NativeFunction, "bIsLooping");
        OverrideAnimationData_bIsPlaying_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(OverrideAnimationData_NativeFunction, "bIsPlaying");
        OverrideAnimationData_Position_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(OverrideAnimationData_NativeFunction, "Position");
        OverrideAnimationData_PlayRate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(OverrideAnimationData_NativeFunction, "PlayRate");
        LinkAnimGraphByTag_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "LinkAnimGraphByTag");
        LinkAnimGraphByTag_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(LinkAnimGraphByTag_NativeFunction);
        LinkAnimGraphByTag_InTag_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LinkAnimGraphByTag_NativeFunction, "InTag");
        LinkAnimGraphByTag_InClass_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LinkAnimGraphByTag_NativeFunction, "InClass");
        LinkAnimClassLayers_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "LinkAnimClassLayers");
        LinkAnimClassLayers_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(LinkAnimClassLayers_NativeFunction);
        LinkAnimClassLayers_InClass_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LinkAnimClassLayers_NativeFunction, "InClass");
        K2_GetClosestPointOnPhysicsAsset_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "K2_GetClosestPointOnPhysicsAsset");
        K2_GetClosestPointOnPhysicsAsset_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(K2_GetClosestPointOnPhysicsAsset_NativeFunction);
        K2_GetClosestPointOnPhysicsAsset_WorldPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_GetClosestPointOnPhysicsAsset_NativeFunction, "WorldPosition");
        K2_GetClosestPointOnPhysicsAsset_ClosestWorldPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_GetClosestPointOnPhysicsAsset_NativeFunction, "ClosestWorldPosition");
        K2_GetClosestPointOnPhysicsAsset_Normal_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_GetClosestPointOnPhysicsAsset_NativeFunction, "Normal");
        K2_GetClosestPointOnPhysicsAsset_BoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_GetClosestPointOnPhysicsAsset_NativeFunction, "BoneName");
        K2_GetClosestPointOnPhysicsAsset_Distance_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_GetClosestPointOnPhysicsAsset_NativeFunction, "Distance");
        K2_GetClosestPointOnPhysicsAsset_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(K2_GetClosestPointOnPhysicsAsset_NativeFunction, "ReturnValue");
        IsPlaying_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsPlaying");
        IsPlaying_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsPlaying_NativeFunction);
        IsPlaying_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsPlaying_NativeFunction, "ReturnValue");
        IsClothingSimulationSuspended_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsClothingSimulationSuspended");
        IsClothingSimulationSuspended_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsClothingSimulationSuspended_NativeFunction);
        IsClothingSimulationSuspended_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsClothingSimulationSuspended_NativeFunction, "ReturnValue");
        IsBodyGravityEnabled_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsBodyGravityEnabled");
        IsBodyGravityEnabled_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsBodyGravityEnabled_NativeFunction);
        IsBodyGravityEnabled_BoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsBodyGravityEnabled_NativeFunction, "BoneName");
        IsBodyGravityEnabled_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsBodyGravityEnabled_NativeFunction, "ReturnValue");
        HasValidAnimationInstance_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "HasValidAnimationInstance");
        HasValidAnimationInstance_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(HasValidAnimationInstance_NativeFunction);
        HasValidAnimationInstance_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasValidAnimationInstance_NativeFunction, "ReturnValue");
        GetTransformAttribute_Ref_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetTransformAttribute_Ref");
        GetTransformAttribute_Ref_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetTransformAttribute_Ref_NativeFunction);
        GetTransformAttribute_Ref_BoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTransformAttribute_Ref_NativeFunction, "BoneName");
        GetTransformAttribute_Ref_AttributeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTransformAttribute_Ref_NativeFunction, "AttributeName");
        GetTransformAttribute_Ref_OutValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTransformAttribute_Ref_NativeFunction, "OutValue");
        GetTransformAttribute_Ref_LookupType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTransformAttribute_Ref_NativeFunction, "LookupType");
        GetTransformAttribute_Ref_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTransformAttribute_Ref_NativeFunction, "ReturnValue");
        GetTransformAttribute_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetTransformAttribute");
        GetTransformAttribute_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetTransformAttribute_NativeFunction);
        GetTransformAttribute_BoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTransformAttribute_NativeFunction, "BoneName");
        GetTransformAttribute_AttributeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTransformAttribute_NativeFunction, "AttributeName");
        GetTransformAttribute_DefaultValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTransformAttribute_NativeFunction, "DefaultValue");
        GetTransformAttribute_OutValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTransformAttribute_NativeFunction, "OutValue");
        GetTransformAttribute_LookupType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTransformAttribute_NativeFunction, "LookupType");
        GetTransformAttribute_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTransformAttribute_NativeFunction, "ReturnValue");
        GetStringAttribute_Ref_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetStringAttribute_Ref");
        GetStringAttribute_Ref_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetStringAttribute_Ref_NativeFunction);
        GetStringAttribute_Ref_BoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetStringAttribute_Ref_NativeFunction, "BoneName");
        GetStringAttribute_Ref_AttributeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetStringAttribute_Ref_NativeFunction, "AttributeName");
        GetStringAttribute_Ref_OutValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetStringAttribute_Ref_NativeFunction, "OutValue");
        GetStringAttribute_Ref_LookupType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetStringAttribute_Ref_NativeFunction, "LookupType");
        GetStringAttribute_Ref_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetStringAttribute_Ref_NativeFunction, "ReturnValue");
        GetStringAttribute_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetStringAttribute");
        GetStringAttribute_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetStringAttribute_NativeFunction);
        GetStringAttribute_BoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetStringAttribute_NativeFunction, "BoneName");
        GetStringAttribute_AttributeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetStringAttribute_NativeFunction, "AttributeName");
        GetStringAttribute_DefaultValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetStringAttribute_NativeFunction, "DefaultValue");
        GetStringAttribute_OutValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetStringAttribute_NativeFunction, "OutValue");
        GetStringAttribute_LookupType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetStringAttribute_NativeFunction, "LookupType");
        GetStringAttribute_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetStringAttribute_NativeFunction, "ReturnValue");
        GetSkeletalMeshAsset_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSkeletalMeshAsset");
        GetSkeletalMeshAsset_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSkeletalMeshAsset_NativeFunction);
        GetSkeletalMeshAsset_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSkeletalMeshAsset_NativeFunction, "ReturnValue");
        GetSkeletalCenterOfMass_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSkeletalCenterOfMass");
        GetSkeletalCenterOfMass_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSkeletalCenterOfMass_NativeFunction);
        GetSkeletalCenterOfMass_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSkeletalCenterOfMass_NativeFunction, "ReturnValue");
        GetPostProcessInstance_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetPostProcessInstance");
        GetPostProcessInstance_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetPostProcessInstance_NativeFunction);
        GetPostProcessInstance_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetPostProcessInstance_NativeFunction, "ReturnValue");
        GetPosition_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetPosition");
        GetPosition_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetPosition_NativeFunction);
        GetPosition_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetPosition_NativeFunction, "ReturnValue");
        GetPlayRate_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetPlayRate");
        GetPlayRate_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetPlayRate_NativeFunction);
        GetPlayRate_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetPlayRate_NativeFunction, "ReturnValue");
        GetMorphTarget_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetMorphTarget");
        GetMorphTarget_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetMorphTarget_NativeFunction);
        GetMorphTarget_MorphTargetName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMorphTarget_NativeFunction, "MorphTargetName");
        GetMorphTarget_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMorphTarget_NativeFunction, "ReturnValue");
        GetLinkedAnimLayerInstanceByGroup_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetLinkedAnimLayerInstanceByGroup");
        GetLinkedAnimLayerInstanceByGroup_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetLinkedAnimLayerInstanceByGroup_NativeFunction);
        GetLinkedAnimLayerInstanceByGroup_InGroup_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLinkedAnimLayerInstanceByGroup_NativeFunction, "InGroup");
        GetLinkedAnimLayerInstanceByGroup_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLinkedAnimLayerInstanceByGroup_NativeFunction, "ReturnValue");
        GetLinkedAnimLayerInstanceByClass_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetLinkedAnimLayerInstanceByClass");
        GetLinkedAnimLayerInstanceByClass_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetLinkedAnimLayerInstanceByClass_NativeFunction);
        GetLinkedAnimLayerInstanceByClass_InClass_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLinkedAnimLayerInstanceByClass_NativeFunction, "InClass");
        GetLinkedAnimLayerInstanceByClass_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLinkedAnimLayerInstanceByClass_NativeFunction, "ReturnValue");
        GetLinkedAnimGraphInstancesByTag_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetLinkedAnimGraphInstancesByTag");
        GetLinkedAnimGraphInstancesByTag_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetLinkedAnimGraphInstancesByTag_NativeFunction);
        GetLinkedAnimGraphInstancesByTag_InTag_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLinkedAnimGraphInstancesByTag_NativeFunction, "InTag");
        GetLinkedAnimGraphInstancesByTag_OutLinkedInstances_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLinkedAnimGraphInstancesByTag_NativeFunction, "OutLinkedInstances");
        GetLinkedAnimGraphInstancesByTag_OutLinkedInstances_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetLinkedAnimGraphInstancesByTag_NativeFunction, "OutLinkedInstances");
        GetLinkedAnimGraphInstanceByTag_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetLinkedAnimGraphInstanceByTag");
        GetLinkedAnimGraphInstanceByTag_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetLinkedAnimGraphInstanceByTag_NativeFunction);
        GetLinkedAnimGraphInstanceByTag_InTag_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLinkedAnimGraphInstanceByTag_NativeFunction, "InTag");
        GetLinkedAnimGraphInstanceByTag_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLinkedAnimGraphInstanceByTag_NativeFunction, "ReturnValue");
        GetIntegerAttribute_Ref_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetIntegerAttribute_Ref");
        GetIntegerAttribute_Ref_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetIntegerAttribute_Ref_NativeFunction);
        GetIntegerAttribute_Ref_BoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetIntegerAttribute_Ref_NativeFunction, "BoneName");
        GetIntegerAttribute_Ref_AttributeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetIntegerAttribute_Ref_NativeFunction, "AttributeName");
        GetIntegerAttribute_Ref_OutValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetIntegerAttribute_Ref_NativeFunction, "OutValue");
        GetIntegerAttribute_Ref_LookupType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetIntegerAttribute_Ref_NativeFunction, "LookupType");
        GetIntegerAttribute_Ref_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetIntegerAttribute_Ref_NativeFunction, "ReturnValue");
        GetIntegerAttribute_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetIntegerAttribute");
        GetIntegerAttribute_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetIntegerAttribute_NativeFunction);
        GetIntegerAttribute_BoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetIntegerAttribute_NativeFunction, "BoneName");
        GetIntegerAttribute_AttributeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetIntegerAttribute_NativeFunction, "AttributeName");
        GetIntegerAttribute_DefaultValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetIntegerAttribute_NativeFunction, "DefaultValue");
        GetIntegerAttribute_OutValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetIntegerAttribute_NativeFunction, "OutValue");
        GetIntegerAttribute_LookupType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetIntegerAttribute_NativeFunction, "LookupType");
        GetIntegerAttribute_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetIntegerAttribute_NativeFunction, "ReturnValue");
        GetFloatAttribute_Ref_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetFloatAttribute_Ref");
        GetFloatAttribute_Ref_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetFloatAttribute_Ref_NativeFunction);
        GetFloatAttribute_Ref_BoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetFloatAttribute_Ref_NativeFunction, "BoneName");
        GetFloatAttribute_Ref_AttributeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetFloatAttribute_Ref_NativeFunction, "AttributeName");
        GetFloatAttribute_Ref_OutValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetFloatAttribute_Ref_NativeFunction, "OutValue");
        GetFloatAttribute_Ref_LookupType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetFloatAttribute_Ref_NativeFunction, "LookupType");
        GetFloatAttribute_Ref_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetFloatAttribute_Ref_NativeFunction, "ReturnValue");
        GetFloatAttribute_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetFloatAttribute");
        GetFloatAttribute_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetFloatAttribute_NativeFunction);
        GetFloatAttribute_BoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetFloatAttribute_NativeFunction, "BoneName");
        GetFloatAttribute_AttributeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetFloatAttribute_NativeFunction, "AttributeName");
        GetFloatAttribute_DefaultValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetFloatAttribute_NativeFunction, "DefaultValue");
        GetFloatAttribute_OutValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetFloatAttribute_NativeFunction, "OutValue");
        GetFloatAttribute_LookupType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetFloatAttribute_NativeFunction, "LookupType");
        GetFloatAttribute_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetFloatAttribute_NativeFunction, "ReturnValue");
        GetDisableAnimCurves_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetDisableAnimCurves");
        GetDisableAnimCurves_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetDisableAnimCurves_NativeFunction);
        GetDisableAnimCurves_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDisableAnimCurves_NativeFunction, "ReturnValue");
        GetDefaultAnimatingRig_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetDefaultAnimatingRig");
        GetDefaultAnimatingRig_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetDefaultAnimatingRig_NativeFunction);
        GetDefaultAnimatingRig_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDefaultAnimatingRig_NativeFunction, "ReturnValue");
        GetCurrentJointAngles_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCurrentJointAngles");
        GetCurrentJointAngles_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCurrentJointAngles_NativeFunction);
        GetCurrentJointAngles_InBoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCurrentJointAngles_NativeFunction, "InBoneName");
        GetCurrentJointAngles_Swing1Angle_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCurrentJointAngles_NativeFunction, "Swing1Angle");
        GetCurrentJointAngles_TwistAngle_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCurrentJointAngles_NativeFunction, "TwistAngle");
        GetCurrentJointAngles_Swing2Angle_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCurrentJointAngles_NativeFunction, "Swing2Angle");
        GetConstraintsFromBody_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetConstraintsFromBody");
        GetConstraintsFromBody_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetConstraintsFromBody_NativeFunction);
        GetConstraintsFromBody_BodyName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetConstraintsFromBody_NativeFunction, "BodyName");
        GetConstraintsFromBody_bParentConstraints_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetConstraintsFromBody_NativeFunction, "bParentConstraints");
        GetConstraintsFromBody_bChildConstraints_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetConstraintsFromBody_NativeFunction, "bChildConstraints");
        GetConstraintsFromBody_bIncludesTerminated_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetConstraintsFromBody_NativeFunction, "bIncludesTerminated");
        GetConstraintsFromBody_OutConstraints_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetConstraintsFromBody_NativeFunction, "OutConstraints");
        GetConstraintsFromBody_OutConstraints_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetConstraintsFromBody_NativeFunction, "OutConstraints");
        GetConstraints_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetConstraints");
        GetConstraints_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetConstraints_NativeFunction);
        GetConstraints_bIncludesTerminated_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetConstraints_NativeFunction, "bIncludesTerminated");
        GetConstraints_OutConstraints_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetConstraints_NativeFunction, "OutConstraints");
        GetConstraints_OutConstraints_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetConstraints_NativeFunction, "OutConstraints");
        GetConstraintByName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetConstraintByName");
        GetConstraintByName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetConstraintByName_NativeFunction);
        GetConstraintByName_ConstraintName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetConstraintByName_NativeFunction, "ConstraintName");
        GetConstraintByName_bIncludesTerminated_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetConstraintByName_NativeFunction, "bIncludesTerminated");
        GetConstraintByName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetConstraintByName_NativeFunction, "ReturnValue");
        GetClothMaxDistanceScale_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetClothMaxDistanceScale");
        GetClothMaxDistanceScale_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetClothMaxDistanceScale_NativeFunction);
        GetClothMaxDistanceScale_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetClothMaxDistanceScale_NativeFunction, "ReturnValue");
        GetClothingSimulationInteractor_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetClothingSimulationInteractor");
        GetClothingSimulationInteractor_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetClothingSimulationInteractor_NativeFunction);
        GetClothingSimulationInteractor_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetClothingSimulationInteractor_NativeFunction, "ReturnValue");
        GetBoneMass_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBoneMass");
        GetBoneMass_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBoneMass_NativeFunction);
        GetBoneMass_BoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBoneMass_NativeFunction, "BoneName");
        GetBoneMass_bScaleMass_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBoneMass_NativeFunction, "bScaleMass");
        GetBoneMass_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBoneMass_NativeFunction, "ReturnValue");
        GetBoneLinearVelocity_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBoneLinearVelocity");
        GetBoneLinearVelocity_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBoneLinearVelocity_NativeFunction);
        GetBoneLinearVelocity_InBoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBoneLinearVelocity_NativeFunction, "InBoneName");
        GetBoneLinearVelocity_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBoneLinearVelocity_NativeFunction, "ReturnValue");
        GetAnimInstance_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetAnimInstance");
        GetAnimInstance_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetAnimInstance_NativeFunction);
        GetAnimInstance_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAnimInstance_NativeFunction, "ReturnValue");
        GetAnimationMode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetAnimationMode");
        GetAnimationMode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetAnimationMode_NativeFunction);
        GetAnimationMode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAnimationMode_NativeFunction, "ReturnValue");
        GetAllowRigidBodyAnimNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetAllowRigidBodyAnimNode");
        GetAllowRigidBodyAnimNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetAllowRigidBodyAnimNode_NativeFunction);
        GetAllowRigidBodyAnimNode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAllowRigidBodyAnimNode_NativeFunction, "ReturnValue");
        GetAllowedAnimCurveEvaluate_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetAllowedAnimCurveEvaluate");
        GetAllowedAnimCurveEvaluate_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetAllowedAnimCurveEvaluate_NativeFunction);
        GetAllowedAnimCurveEvaluate_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAllowedAnimCurveEvaluate_NativeFunction, "ReturnValue");
        GetAllowClothActors_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetAllowClothActors");
        GetAllowClothActors_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetAllowClothActors_NativeFunction);
        GetAllowClothActors_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAllowClothActors_NativeFunction, "ReturnValue");
        ForceClothNextUpdateTeleportAndReset_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ForceClothNextUpdateTeleportAndReset");
        ForceClothNextUpdateTeleport_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ForceClothNextUpdateTeleport");
        FindConstraintBoneName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "FindConstraintBoneName");
        FindConstraintBoneName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(FindConstraintBoneName_NativeFunction);
        FindConstraintBoneName_ConstraintIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(FindConstraintBoneName_NativeFunction, "ConstraintIndex");
        FindConstraintBoneName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(FindConstraintBoneName_NativeFunction, "ReturnValue");
        ClearMorphTargets_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ClearMorphTargets");
        BreakConstraint_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "BreakConstraint");
        BreakConstraint_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(BreakConstraint_NativeFunction);
        BreakConstraint_Impulse_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BreakConstraint_NativeFunction, "Impulse");
        BreakConstraint_HitLocation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BreakConstraint_NativeFunction, "HitLocation");
        BreakConstraint_InBoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BreakConstraint_NativeFunction, "InBoneName");
        BindClothToLeaderPoseComponent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "BindClothToLeaderPoseComponent");
        AllowAnimCurveEvaluation_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AllowAnimCurveEvaluation");
        AllowAnimCurveEvaluation_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AllowAnimCurveEvaluation_NativeFunction);
        AllowAnimCurveEvaluation_NameOfCurve_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AllowAnimCurveEvaluation_NativeFunction, "NameOfCurve");
        AllowAnimCurveEvaluation_bAllow_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AllowAnimCurveEvaluation_NativeFunction, "bAllow");
        AddImpulseToAllBodiesBelow_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddImpulseToAllBodiesBelow");
        AddImpulseToAllBodiesBelow_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddImpulseToAllBodiesBelow_NativeFunction);
        AddImpulseToAllBodiesBelow_Impulse_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddImpulseToAllBodiesBelow_NativeFunction, "Impulse");
        AddImpulseToAllBodiesBelow_BoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddImpulseToAllBodiesBelow_NativeFunction, "BoneName");
        AddImpulseToAllBodiesBelow_bVelChange_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddImpulseToAllBodiesBelow_NativeFunction, "bVelChange");
        AddImpulseToAllBodiesBelow_bIncludeSelf_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddImpulseToAllBodiesBelow_NativeFunction, "bIncludeSelf");
        AddForceToAllBodiesBelow_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddForceToAllBodiesBelow");
        AddForceToAllBodiesBelow_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddForceToAllBodiesBelow_NativeFunction);
        AddForceToAllBodiesBelow_Force_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddForceToAllBodiesBelow_NativeFunction, "Force");
        AddForceToAllBodiesBelow_BoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddForceToAllBodiesBelow_NativeFunction, "BoneName");
        AddForceToAllBodiesBelow_bAccelChange_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddForceToAllBodiesBelow_NativeFunction, "bAccelChange");
        AddForceToAllBodiesBelow_bIncludeSelf_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddForceToAllBodiesBelow_NativeFunction, "bIncludeSelf");
        AccumulateAllBodiesBelowPhysicsBlendWeight_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AccumulateAllBodiesBelowPhysicsBlendWeight");
        AccumulateAllBodiesBelowPhysicsBlendWeight_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AccumulateAllBodiesBelowPhysicsBlendWeight_NativeFunction);
        AccumulateAllBodiesBelowPhysicsBlendWeight_InBoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AccumulateAllBodiesBelowPhysicsBlendWeight_NativeFunction, "InBoneName");
        AccumulateAllBodiesBelowPhysicsBlendWeight_AddPhysicsBlendWeight_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AccumulateAllBodiesBelowPhysicsBlendWeight_NativeFunction, "AddPhysicsBlendWeight");
        AccumulateAllBodiesBelowPhysicsBlendWeight_bSkipCustomPhysicsType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AccumulateAllBodiesBelowPhysicsBlendWeight_NativeFunction, "bSkipCustomPhysicsType");
        
        
    }
    
    protected SkeletalMeshComponent(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ObjectProperty /Script/Engine.SkeletalMeshComponent:SkeletalMeshAsset
    static readonly int SkeletalMeshAsset_Offset;
    
    public UnrealSharp.Engine.SkeletalMesh SkeletalMeshAsset
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.Engine.SkeletalMesh>.FromNative(IntPtr.Add(NativeObject, SkeletalMeshAsset_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            ObjectMarshaller<UnrealSharp.Engine.SkeletalMesh>.ToNative(IntPtr.Add(NativeObject, SkeletalMeshAsset_Offset), 0, this, value);
        }
    }
    
    // ClassProperty /Script/Engine.SkeletalMeshComponent:AnimClass
    static readonly int AnimClass_Offset;
    
    public SubclassOf<UnrealSharp.Engine.AnimInstance> AnimClass
    {
        get
        {
            CheckObjectForValidity();
            return SubclassOfMarshaller<UnrealSharp.Engine.AnimInstance>.FromNative(IntPtr.Add(NativeObject, AnimClass_Offset), 0, this);
        }
    }
    
    // StructProperty /Script/Engine.SkeletalMeshComponent:AnimationData
    static readonly int AnimationData_Offset;
    
    public UnrealSharp.Engine.SingleAnimationPlayData AnimationData
    {
        get
        {
            CheckObjectForValidity();
            return UnrealSharp.Engine.SingleAnimationPlayDataMarshaler.FromNative(IntPtr.Add(NativeObject, AnimationData_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            UnrealSharp.Engine.SingleAnimationPlayDataMarshaler.ToNative(IntPtr.Add(NativeObject, AnimationData_Offset), 0, this, value);
        }
    }
    
    // FloatProperty /Script/Engine.SkeletalMeshComponent:GlobalAnimRateScale
    static readonly int GlobalAnimRateScale_Offset;
    
    public float GlobalAnimRateScale
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, GlobalAnimRateScale_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, GlobalAnimRateScale_Offset), 0, this, value);
        }
    }
    
    // ByteProperty /Script/Engine.SkeletalMeshComponent:KinematicBonesUpdateType
    static readonly int KinematicBonesUpdateType_Offset;
    
    public UnrealSharp.Engine.EKinematicBonesUpdateToPhysics KinematicBonesUpdateType
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Engine.EKinematicBonesUpdateToPhysics>.FromNative(IntPtr.Add(NativeObject, KinematicBonesUpdateType_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.Engine.EKinematicBonesUpdateToPhysics>.ToNative(IntPtr.Add(NativeObject, KinematicBonesUpdateType_Offset), 0, this, value);
        }
    }
    
    // ByteProperty /Script/Engine.SkeletalMeshComponent:PhysicsTransformUpdateMode
    static readonly int PhysicsTransformUpdateMode_Offset;
    
    public UnrealSharp.Engine.EPhysicsTransformUpdateMode PhysicsTransformUpdateMode
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Engine.EPhysicsTransformUpdateMode>.FromNative(IntPtr.Add(NativeObject, PhysicsTransformUpdateMode_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.Engine.EPhysicsTransformUpdateMode>.ToNative(IntPtr.Add(NativeObject, PhysicsTransformUpdateMode_Offset), 0, this, value);
        }
    }
    
    // ByteProperty /Script/Engine.SkeletalMeshComponent:AnimationMode
    static readonly int AnimationMode_Offset;
    
    public UnrealSharp.Engine.EAnimationMode AnimationMode
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Engine.EAnimationMode>.FromNative(IntPtr.Add(NativeObject, AnimationMode_Offset), 0, this);
        }
    }
    
    // BoolProperty /Script/Engine.SkeletalMeshComponent:bDisablePostProcessBlueprint
    static readonly int bDisablePostProcessBlueprint_Offset;
    static readonly IntPtr bDisablePostProcessBlueprint_NativeProperty;
    
    public bool bDisablePostProcessBlueprint
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bDisablePostProcessBlueprint_NativeProperty, bDisablePostProcessBlueprint_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bDisablePostProcessBlueprint_NativeProperty, bDisablePostProcessBlueprint_Offset, value);
        }
    }
    
    // BoolProperty /Script/Engine.SkeletalMeshComponent:bEnablePhysicsOnDedicatedServer
    static readonly int bEnablePhysicsOnDedicatedServer_Offset;
    static readonly IntPtr bEnablePhysicsOnDedicatedServer_NativeProperty;
    
    public bool bEnablePhysicsOnDedicatedServer
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bEnablePhysicsOnDedicatedServer_NativeProperty, bEnablePhysicsOnDedicatedServer_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bEnablePhysicsOnDedicatedServer_NativeProperty, bEnablePhysicsOnDedicatedServer_Offset, value);
        }
    }
    
    // BoolProperty /Script/Engine.SkeletalMeshComponent:bUpdateMeshWhenKinematic
    static readonly int bUpdateMeshWhenKinematic_Offset;
    static readonly IntPtr bUpdateMeshWhenKinematic_NativeProperty;
    
    public bool bUpdateMeshWhenKinematic
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bUpdateMeshWhenKinematic_NativeProperty, bUpdateMeshWhenKinematic_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bUpdateMeshWhenKinematic_NativeProperty, bUpdateMeshWhenKinematic_Offset, value);
        }
    }
    
    // BoolProperty /Script/Engine.SkeletalMeshComponent:bUpdateJointsFromAnimation
    static readonly int bUpdateJointsFromAnimation_Offset;
    static readonly IntPtr bUpdateJointsFromAnimation_NativeProperty;
    
    public bool bUpdateJointsFromAnimation
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bUpdateJointsFromAnimation_NativeProperty, bUpdateJointsFromAnimation_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bUpdateJointsFromAnimation_NativeProperty, bUpdateJointsFromAnimation_Offset, value);
        }
    }
    
    // BoolProperty /Script/Engine.SkeletalMeshComponent:bAllowClothActors
    static readonly int bAllowClothActors_Offset;
    static readonly IntPtr bAllowClothActors_NativeProperty;
    
    public bool bAllowClothActors
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bAllowClothActors_NativeProperty, bAllowClothActors_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bAllowClothActors_NativeProperty, bAllowClothActors_Offset, value);
        }
    }
    
    // BoolProperty /Script/Engine.SkeletalMeshComponent:bDisableClothSimulation
    static readonly int bDisableClothSimulation_Offset;
    static readonly IntPtr bDisableClothSimulation_NativeProperty;
    
    public bool bDisableClothSimulation
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bDisableClothSimulation_NativeProperty, bDisableClothSimulation_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bDisableClothSimulation_NativeProperty, bDisableClothSimulation_Offset, value);
        }
    }
    
    // BoolProperty /Script/Engine.SkeletalMeshComponent:bCollideWithEnvironment
    static readonly int bCollideWithEnvironment_Offset;
    static readonly IntPtr bCollideWithEnvironment_NativeProperty;
    
    public bool bCollideWithEnvironment
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bCollideWithEnvironment_NativeProperty, bCollideWithEnvironment_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bCollideWithEnvironment_NativeProperty, bCollideWithEnvironment_Offset, value);
        }
    }
    
    // BoolProperty /Script/Engine.SkeletalMeshComponent:bCollideWithAttachedChildren
    static readonly int bCollideWithAttachedChildren_Offset;
    static readonly IntPtr bCollideWithAttachedChildren_NativeProperty;
    
    public bool bCollideWithAttachedChildren
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bCollideWithAttachedChildren_NativeProperty, bCollideWithAttachedChildren_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bCollideWithAttachedChildren_NativeProperty, bCollideWithAttachedChildren_Offset, value);
        }
    }
    
    // BoolProperty /Script/Engine.SkeletalMeshComponent:bForceCollisionUpdate
    static readonly int bForceCollisionUpdate_Offset;
    static readonly IntPtr bForceCollisionUpdate_NativeProperty;
    
    public bool bForceCollisionUpdate
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bForceCollisionUpdate_NativeProperty, bForceCollisionUpdate_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bForceCollisionUpdate_NativeProperty, bForceCollisionUpdate_Offset, value);
        }
    }
    
    // BoolProperty /Script/Engine.SkeletalMeshComponent:bLocalSpaceSimulation
    static readonly int bLocalSpaceSimulation_Offset;
    static readonly IntPtr bLocalSpaceSimulation_NativeProperty;
    
    public bool bLocalSpaceSimulation
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bLocalSpaceSimulation_NativeProperty, bLocalSpaceSimulation_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bLocalSpaceSimulation_NativeProperty, bLocalSpaceSimulation_Offset, value);
        }
    }
    
    // BoolProperty /Script/Engine.SkeletalMeshComponent:bResetAfterTeleport
    static readonly int bResetAfterTeleport_Offset;
    static readonly IntPtr bResetAfterTeleport_NativeProperty;
    
    public bool bResetAfterTeleport
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bResetAfterTeleport_NativeProperty, bResetAfterTeleport_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bResetAfterTeleport_NativeProperty, bResetAfterTeleport_Offset, value);
        }
    }
    
    // BoolProperty /Script/Engine.SkeletalMeshComponent:bDeferKinematicBoneUpdate
    static readonly int bDeferKinematicBoneUpdate_Offset;
    static readonly IntPtr bDeferKinematicBoneUpdate_NativeProperty;
    
    public bool bDeferKinematicBoneUpdate
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bDeferKinematicBoneUpdate_NativeProperty, bDeferKinematicBoneUpdate_Offset);
        }
    }
    
    // BoolProperty /Script/Engine.SkeletalMeshComponent:bNoSkeletonUpdate
    static readonly int bNoSkeletonUpdate_Offset;
    static readonly IntPtr bNoSkeletonUpdate_NativeProperty;
    
    public bool bNoSkeletonUpdate
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bNoSkeletonUpdate_NativeProperty, bNoSkeletonUpdate_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bNoSkeletonUpdate_NativeProperty, bNoSkeletonUpdate_Offset, value);
        }
    }
    
    // BoolProperty /Script/Engine.SkeletalMeshComponent:bPauseAnims
    static readonly int bPauseAnims_Offset;
    static readonly IntPtr bPauseAnims_NativeProperty;
    
    public bool bPauseAnims
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bPauseAnims_NativeProperty, bPauseAnims_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bPauseAnims_NativeProperty, bPauseAnims_Offset, value);
        }
    }
    
    // BoolProperty /Script/Engine.SkeletalMeshComponent:bEnablePerPolyCollision
    static readonly int bEnablePerPolyCollision_Offset;
    static readonly IntPtr bEnablePerPolyCollision_NativeProperty;
    
    public bool bEnablePerPolyCollision
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bEnablePerPolyCollision_NativeProperty, bEnablePerPolyCollision_Offset);
        }
    }
    
    // BoolProperty /Script/Engine.SkeletalMeshComponent:bIncludeComponentLocationIntoBounds
    static readonly int bIncludeComponentLocationIntoBounds_Offset;
    static readonly IntPtr bIncludeComponentLocationIntoBounds_NativeProperty;
    
    public bool bIncludeComponentLocationIntoBounds
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bIncludeComponentLocationIntoBounds_NativeProperty, bIncludeComponentLocationIntoBounds_Offset);
        }
    }
    
    // BoolProperty /Script/Engine.SkeletalMeshComponent:bPropagateCurvesToFollowers
    static readonly int bPropagateCurvesToFollowers_Offset;
    static readonly IntPtr bPropagateCurvesToFollowers_NativeProperty;
    
    public bool bPropagateCurvesToFollowers
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bPropagateCurvesToFollowers_NativeProperty, bPropagateCurvesToFollowers_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bPropagateCurvesToFollowers_NativeProperty, bPropagateCurvesToFollowers_Offset, value);
        }
    }
    
    // BoolProperty /Script/Engine.SkeletalMeshComponent:bSkipKinematicUpdateWhenInterpolating
    static readonly int bSkipKinematicUpdateWhenInterpolating_Offset;
    static readonly IntPtr bSkipKinematicUpdateWhenInterpolating_NativeProperty;
    
    public bool bSkipKinematicUpdateWhenInterpolating
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bSkipKinematicUpdateWhenInterpolating_NativeProperty, bSkipKinematicUpdateWhenInterpolating_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bSkipKinematicUpdateWhenInterpolating_NativeProperty, bSkipKinematicUpdateWhenInterpolating_Offset, value);
        }
    }
    
    // BoolProperty /Script/Engine.SkeletalMeshComponent:bSkipBoundsUpdateWhenInterpolating
    static readonly int bSkipBoundsUpdateWhenInterpolating_Offset;
    static readonly IntPtr bSkipBoundsUpdateWhenInterpolating_NativeProperty;
    
    public bool bSkipBoundsUpdateWhenInterpolating
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bSkipBoundsUpdateWhenInterpolating_NativeProperty, bSkipBoundsUpdateWhenInterpolating_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bSkipBoundsUpdateWhenInterpolating_NativeProperty, bSkipBoundsUpdateWhenInterpolating_Offset, value);
        }
    }
    
    // FloatProperty /Script/Engine.SkeletalMeshComponent:ClothBlendWeight
    static readonly int ClothBlendWeight_Offset;
    
    public float ClothBlendWeight
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, ClothBlendWeight_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, ClothBlendWeight_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/Engine.SkeletalMeshComponent:bWaitForParallelClothTask
    static readonly int bWaitForParallelClothTask_Offset;
    
    public bool bWaitForParallelClothTask
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bWaitForParallelClothTask_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, bWaitForParallelClothTask_Offset), 0, this, value);
        }
    }
    
    // FloatProperty /Script/Engine.SkeletalMeshComponent:ClothMaxDistanceScale
    static readonly int ClothMaxDistanceScale_Offset;
    
    public float ClothMaxDistanceScale
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, ClothMaxDistanceScale_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, ClothMaxDistanceScale_Offset), 0, this, value);
        }
    }
    
    // FloatProperty /Script/Engine.SkeletalMeshComponent:TeleportDistanceThreshold
    static readonly int TeleportDistanceThreshold_Offset;
    
    public float TeleportDistanceThreshold
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, TeleportDistanceThreshold_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, TeleportDistanceThreshold_Offset), 0, this, value);
        }
    }
    
    // FloatProperty /Script/Engine.SkeletalMeshComponent:TeleportRotationThreshold
    static readonly int TeleportRotationThreshold_Offset;
    
    public float TeleportRotationThreshold
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, TeleportRotationThreshold_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, TeleportRotationThreshold_Offset), 0, this, value);
        }
    }
    
    // SoftObjectProperty /Script/Engine.SkeletalMeshComponent:DefaultAnimatingRigOverride
    static readonly int DefaultAnimatingRigOverride_Offset;
    
    public SoftObject<UnrealSharp.CoreUObject.Object> DefaultAnimatingRigOverride
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<SoftObject<UnrealSharp.CoreUObject.Object>>.FromNative(IntPtr.Add(NativeObject, DefaultAnimatingRigOverride_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<SoftObject<UnrealSharp.CoreUObject.Object>>.ToNative(IntPtr.Add(NativeObject, DefaultAnimatingRigOverride_Offset), 0, this, value);
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:UnlinkAnimClassLayers
    static readonly IntPtr UnlinkAnimClassLayers_NativeFunction;
    static readonly int UnlinkAnimClassLayers_ParamsSize;
    static readonly int UnlinkAnimClassLayers_InClass_Offset;
    
    public void UnlinkAnimClassLayers(SubclassOf<UnrealSharp.Engine.AnimInstance> inClass)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[UnlinkAnimClassLayers_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            SubclassOfMarshaller<UnrealSharp.Engine.AnimInstance>.ToNative(IntPtr.Add(ParamsBuffer, UnlinkAnimClassLayers_InClass_Offset), 0, null, inClass);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, UnlinkAnimClassLayers_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:UnbindClothFromLeaderPoseComponent
    static readonly IntPtr UnbindClothFromLeaderPoseComponent_NativeFunction;
    static readonly int UnbindClothFromLeaderPoseComponent_ParamsSize;
    static readonly int UnbindClothFromLeaderPoseComponent_bRestoreSimulationSpace_Offset;
    
    public void UnbindClothFromLeaderPoseComponent(bool bRestoreSimulationSpace = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[UnbindClothFromLeaderPoseComponent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, UnbindClothFromLeaderPoseComponent_bRestoreSimulationSpace_Offset), 0, null, bRestoreSimulationSpace);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, UnbindClothFromLeaderPoseComponent_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:ToggleDisablePostProcessBlueprint
    static readonly IntPtr ToggleDisablePostProcessBlueprint_NativeFunction;
    
    public void ToggleDisablePostProcessBlueprint()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ToggleDisablePostProcessBlueprint_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:TermBodiesBelow
    static readonly IntPtr TermBodiesBelow_NativeFunction;
    static readonly int TermBodiesBelow_ParamsSize;
    static readonly int TermBodiesBelow_ParentBoneName_Offset;
    
    public void TermBodiesBelow(Name parentBoneName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[TermBodiesBelow_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, TermBodiesBelow_ParentBoneName_Offset), 0, null, parentBoneName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, TermBodiesBelow_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SuspendClothingSimulation
    static readonly IntPtr SuspendClothingSimulation_NativeFunction;
    
    public void SuspendClothingSimulation()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SuspendClothingSimulation_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:Stop
    static readonly IntPtr Stop_NativeFunction;
    
    public void Stop()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, Stop_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SnapshotPose
    static readonly IntPtr SnapshotPose_NativeFunction;
    static readonly int SnapshotPose_ParamsSize;
    static readonly int SnapshotPose_Snapshot_Offset;
    
    public void SnapshotPose(ref UnrealSharp.Engine.PoseSnapshot snapshot)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SnapshotPose_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.Engine.PoseSnapshotMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SnapshotPose_Snapshot_Offset), 0, null, snapshot);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SnapshotPose_NativeFunction, ParamsBuffer);
            
            snapshot = UnrealSharp.Engine.PoseSnapshotMarshaler.FromNative(IntPtr.Add(ParamsBuffer, SnapshotPose_Snapshot_Offset), 0, null);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetUpdateClothInEditor
    static readonly IntPtr SetUpdateClothInEditor_NativeFunction;
    static readonly int SetUpdateClothInEditor_ParamsSize;
    static readonly int SetUpdateClothInEditor_NewUpdateState_Offset;
    
    public void SetUpdateClothInEditor(bool newUpdateState)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetUpdateClothInEditor_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetUpdateClothInEditor_NewUpdateState_Offset), 0, null, newUpdateState);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetUpdateClothInEditor_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetUpdateAnimationInEditor
    static readonly IntPtr SetUpdateAnimationInEditor_NativeFunction;
    static readonly int SetUpdateAnimationInEditor_ParamsSize;
    static readonly int SetUpdateAnimationInEditor_NewUpdateState_Offset;
    
    public void SetUpdateAnimationInEditor(bool newUpdateState)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetUpdateAnimationInEditor_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetUpdateAnimationInEditor_NewUpdateState_Offset), 0, null, newUpdateState);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetUpdateAnimationInEditor_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetSkeletalMeshAsset
    static readonly IntPtr SetSkeletalMeshAsset_NativeFunction;
    static readonly int SetSkeletalMeshAsset_ParamsSize;
    static readonly int SetSkeletalMeshAsset_NewMesh_Offset;
    
    public void SetSkeletalMeshAsset(UnrealSharp.Engine.SkeletalMesh newMesh)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSkeletalMeshAsset_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.SkeletalMesh>.ToNative(IntPtr.Add(ParamsBuffer, SetSkeletalMeshAsset_NewMesh_Offset), 0, null, newMesh);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSkeletalMeshAsset_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetPosition
    static readonly IntPtr SetPosition_NativeFunction;
    static readonly int SetPosition_ParamsSize;
    static readonly int SetPosition_InPos_Offset;
    static readonly int SetPosition_bFireNotifies_Offset;
    
    public void SetPosition(float inPos, bool bFireNotifies = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPosition_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetPosition_InPos_Offset), 0, null, inPos);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetPosition_bFireNotifies_Offset), 0, null, bFireNotifies);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPosition_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetPlayRate
    static readonly IntPtr SetPlayRate_NativeFunction;
    static readonly int SetPlayRate_ParamsSize;
    static readonly int SetPlayRate_Rate_Offset;
    
    public void SetPlayRate(float rate)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPlayRate_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetPlayRate_Rate_Offset), 0, null, rate);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPlayRate_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetPhysicsBlendWeight
    static readonly IntPtr SetPhysicsBlendWeight_NativeFunction;
    static readonly int SetPhysicsBlendWeight_ParamsSize;
    static readonly int SetPhysicsBlendWeight_PhysicsBlendWeight_Offset;
    
    public void SetPhysicsBlendWeight(float physicsBlendWeight)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPhysicsBlendWeight_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetPhysicsBlendWeight_PhysicsBlendWeight_Offset), 0, null, physicsBlendWeight);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPhysicsBlendWeight_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetNotifyRigidBodyCollisionBelow
    static readonly IntPtr SetNotifyRigidBodyCollisionBelow_NativeFunction;
    static readonly int SetNotifyRigidBodyCollisionBelow_ParamsSize;
    static readonly int SetNotifyRigidBodyCollisionBelow_bNewNotifyRigidBodyCollision_Offset;
    static readonly int SetNotifyRigidBodyCollisionBelow_BoneName_Offset;
    static readonly int SetNotifyRigidBodyCollisionBelow_bIncludeSelf_Offset;
    
    public void SetNotifyRigidBodyCollisionBelow(bool bNewNotifyRigidBodyCollision, Name boneName = default(Name), bool bIncludeSelf = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetNotifyRigidBodyCollisionBelow_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNotifyRigidBodyCollisionBelow_bNewNotifyRigidBodyCollision_Offset), 0, null, bNewNotifyRigidBodyCollision);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetNotifyRigidBodyCollisionBelow_BoneName_Offset), 0, null, boneName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNotifyRigidBodyCollisionBelow_bIncludeSelf_Offset), 0, null, bIncludeSelf);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetNotifyRigidBodyCollisionBelow_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetMorphTarget
    static readonly IntPtr SetMorphTarget_NativeFunction;
    static readonly int SetMorphTarget_ParamsSize;
    static readonly int SetMorphTarget_MorphTargetName_Offset;
    static readonly int SetMorphTarget_Value_Offset;
    static readonly int SetMorphTarget_bRemoveZeroWeight_Offset;
    
    public void SetMorphTarget(Name morphTargetName, float value, bool bRemoveZeroWeight = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetMorphTarget_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetMorphTarget_MorphTargetName_Offset), 0, null, morphTargetName);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetMorphTarget_Value_Offset), 0, null, value);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetMorphTarget_bRemoveZeroWeight_Offset), 0, null, bRemoveZeroWeight);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetMorphTarget_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetEnablePhysicsBlending
    static readonly IntPtr SetEnablePhysicsBlending_NativeFunction;
    static readonly int SetEnablePhysicsBlending_ParamsSize;
    static readonly int SetEnablePhysicsBlending_bNewBlendPhysics_Offset;
    
    public void SetEnablePhysicsBlending(bool bNewBlendPhysics)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetEnablePhysicsBlending_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetEnablePhysicsBlending_bNewBlendPhysics_Offset), 0, null, bNewBlendPhysics);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetEnablePhysicsBlending_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetEnableGravityOnAllBodiesBelow
    static readonly IntPtr SetEnableGravityOnAllBodiesBelow_NativeFunction;
    static readonly int SetEnableGravityOnAllBodiesBelow_ParamsSize;
    static readonly int SetEnableGravityOnAllBodiesBelow_bEnableGravity_Offset;
    static readonly int SetEnableGravityOnAllBodiesBelow_BoneName_Offset;
    static readonly int SetEnableGravityOnAllBodiesBelow_bIncludeSelf_Offset;
    
    public void SetEnableGravityOnAllBodiesBelow(bool bEnableGravity, Name boneName, bool bIncludeSelf = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetEnableGravityOnAllBodiesBelow_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetEnableGravityOnAllBodiesBelow_bEnableGravity_Offset), 0, null, bEnableGravity);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetEnableGravityOnAllBodiesBelow_BoneName_Offset), 0, null, boneName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetEnableGravityOnAllBodiesBelow_bIncludeSelf_Offset), 0, null, bIncludeSelf);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetEnableGravityOnAllBodiesBelow_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetEnableBodyGravity
    static readonly IntPtr SetEnableBodyGravity_NativeFunction;
    static readonly int SetEnableBodyGravity_ParamsSize;
    static readonly int SetEnableBodyGravity_bEnableGravity_Offset;
    static readonly int SetEnableBodyGravity_BoneName_Offset;
    
    public void SetEnableBodyGravity(bool bEnableGravity, Name boneName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetEnableBodyGravity_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetEnableBodyGravity_bEnableGravity_Offset), 0, null, bEnableGravity);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetEnableBodyGravity_BoneName_Offset), 0, null, boneName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetEnableBodyGravity_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetDisableAnimCurves
    static readonly IntPtr SetDisableAnimCurves_NativeFunction;
    static readonly int SetDisableAnimCurves_ParamsSize;
    static readonly int SetDisableAnimCurves_bInDisableAnimCurves_Offset;
    
    public void SetDisableAnimCurves(bool bInDisableAnimCurves)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetDisableAnimCurves_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetDisableAnimCurves_bInDisableAnimCurves_Offset), 0, null, bInDisableAnimCurves);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetDisableAnimCurves_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetConstraintProfileForAll
    static readonly IntPtr SetConstraintProfileForAll_NativeFunction;
    static readonly int SetConstraintProfileForAll_ParamsSize;
    static readonly int SetConstraintProfileForAll_ProfileName_Offset;
    static readonly int SetConstraintProfileForAll_bDefaultIfNotFound_Offset;
    
    public void SetConstraintProfileForAll(Name profileName, bool bDefaultIfNotFound = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetConstraintProfileForAll_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetConstraintProfileForAll_ProfileName_Offset), 0, null, profileName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetConstraintProfileForAll_bDefaultIfNotFound_Offset), 0, null, bDefaultIfNotFound);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetConstraintProfileForAll_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetConstraintProfile
    static readonly IntPtr SetConstraintProfile_NativeFunction;
    static readonly int SetConstraintProfile_ParamsSize;
    static readonly int SetConstraintProfile_JointName_Offset;
    static readonly int SetConstraintProfile_ProfileName_Offset;
    static readonly int SetConstraintProfile_bDefaultIfNotFound_Offset;
    
    public void SetConstraintProfile(Name jointName, Name profileName, bool bDefaultIfNotFound = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetConstraintProfile_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetConstraintProfile_JointName_Offset), 0, null, jointName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetConstraintProfile_ProfileName_Offset), 0, null, profileName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetConstraintProfile_bDefaultIfNotFound_Offset), 0, null, bDefaultIfNotFound);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetConstraintProfile_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetClothMaxDistanceScale
    static readonly IntPtr SetClothMaxDistanceScale_NativeFunction;
    static readonly int SetClothMaxDistanceScale_ParamsSize;
    static readonly int SetClothMaxDistanceScale_Scale_Offset;
    
    public void SetClothMaxDistanceScale(float scale)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetClothMaxDistanceScale_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetClothMaxDistanceScale_Scale_Offset), 0, null, scale);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetClothMaxDistanceScale_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetBodyNotifyRigidBodyCollision
    static readonly IntPtr SetBodyNotifyRigidBodyCollision_NativeFunction;
    static readonly int SetBodyNotifyRigidBodyCollision_ParamsSize;
    static readonly int SetBodyNotifyRigidBodyCollision_bNewNotifyRigidBodyCollision_Offset;
    static readonly int SetBodyNotifyRigidBodyCollision_BoneName_Offset;
    
    public void SetBodyNotifyRigidBodyCollision(bool bNewNotifyRigidBodyCollision, Name boneName = default(Name))
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetBodyNotifyRigidBodyCollision_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetBodyNotifyRigidBodyCollision_bNewNotifyRigidBodyCollision_Offset), 0, null, bNewNotifyRigidBodyCollision);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetBodyNotifyRigidBodyCollision_BoneName_Offset), 0, null, boneName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetBodyNotifyRigidBodyCollision_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetAnimClass
    static readonly IntPtr SetAnimClass_NativeFunction;
    static readonly int SetAnimClass_ParamsSize;
    static readonly int SetAnimClass_NewClass_Offset;
    
    public void SetAnimClass(SubclassOf<UnrealSharp.CoreUObject.Object> newClass)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAnimClass_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            SubclassOfMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, SetAnimClass_NewClass_Offset), 0, null, newClass);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAnimClass_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetAnimationMode
    static readonly IntPtr SetAnimationMode_NativeFunction;
    static readonly int SetAnimationMode_ParamsSize;
    static readonly int SetAnimationMode_InAnimationMode_Offset;
    static readonly int SetAnimationMode_bForceInitAnimScriptInstance_Offset;
    
    public void SetAnimationMode(UnrealSharp.Engine.EAnimationMode inAnimationMode, bool bForceInitAnimScriptInstance = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAnimationMode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.Engine.EAnimationMode>.ToNative(IntPtr.Add(ParamsBuffer, SetAnimationMode_InAnimationMode_Offset), 0, null, inAnimationMode);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetAnimationMode_bForceInitAnimScriptInstance_Offset), 0, null, bForceInitAnimScriptInstance);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAnimationMode_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetAnimation
    static readonly IntPtr SetAnimation_NativeFunction;
    static readonly int SetAnimation_ParamsSize;
    static readonly int SetAnimation_NewAnimToPlay_Offset;
    
    public void SetAnimation(UnrealSharp.Engine.AnimationAsset newAnimToPlay)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAnimation_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.AnimationAsset>.ToNative(IntPtr.Add(ParamsBuffer, SetAnimation_NewAnimToPlay_Offset), 0, null, newAnimToPlay);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAnimation_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetAngularLimits
    static readonly IntPtr SetAngularLimits_NativeFunction;
    static readonly int SetAngularLimits_ParamsSize;
    static readonly int SetAngularLimits_InBoneName_Offset;
    static readonly int SetAngularLimits_Swing1LimitAngle_Offset;
    static readonly int SetAngularLimits_TwistLimitAngle_Offset;
    static readonly int SetAngularLimits_Swing2LimitAngle_Offset;
    
    public void SetAngularLimits(Name inBoneName, float swing1LimitAngle, float twistLimitAngle, float swing2LimitAngle)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAngularLimits_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetAngularLimits_InBoneName_Offset), 0, null, inBoneName);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetAngularLimits_Swing1LimitAngle_Offset), 0, null, swing1LimitAngle);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetAngularLimits_TwistLimitAngle_Offset), 0, null, twistLimitAngle);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetAngularLimits_Swing2LimitAngle_Offset), 0, null, swing2LimitAngle);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAngularLimits_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetAllowRigidBodyAnimNode
    static readonly IntPtr SetAllowRigidBodyAnimNode_NativeFunction;
    static readonly int SetAllowRigidBodyAnimNode_ParamsSize;
    static readonly int SetAllowRigidBodyAnimNode_bInAllow_Offset;
    static readonly int SetAllowRigidBodyAnimNode_bReinitAnim_Offset;
    
    public void SetAllowRigidBodyAnimNode(bool bInAllow, bool bReinitAnim = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAllowRigidBodyAnimNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetAllowRigidBodyAnimNode_bInAllow_Offset), 0, null, bInAllow);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetAllowRigidBodyAnimNode_bReinitAnim_Offset), 0, null, bReinitAnim);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAllowRigidBodyAnimNode_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetAllowedAnimCurvesEvaluation
    static readonly IntPtr SetAllowedAnimCurvesEvaluation_NativeFunction;
    static readonly int SetAllowedAnimCurvesEvaluation_ParamsSize;
    static readonly int SetAllowedAnimCurvesEvaluation_List_Offset;
    static readonly int SetAllowedAnimCurvesEvaluation_List_ElementSize;
    static readonly int SetAllowedAnimCurvesEvaluation_bAllow_Offset;
    
    public void SetAllowedAnimCurvesEvaluation(System.Collections.Generic.IList<Name> list, bool bAllow)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAllowedAnimCurvesEvaluation_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr List_NativeBuffer = IntPtr.Add(ParamsBuffer, SetAllowedAnimCurvesEvaluation_List_Offset);
            UnrealArrayCopyMarshaler<Name> List_Marshaler = new UnrealArrayCopyMarshaler<Name>(1, BlittableMarshaller<Name>.ToNative, BlittableMarshaller<Name>.FromNative, SetAllowedAnimCurvesEvaluation_List_ElementSize);
            List_Marshaler.ToNative(List_NativeBuffer, 0, null, list);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetAllowedAnimCurvesEvaluation_bAllow_Offset), 0, null, bAllow);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAllowedAnimCurvesEvaluation_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetAllowClothActors
    static readonly IntPtr SetAllowClothActors_NativeFunction;
    static readonly int SetAllowClothActors_ParamsSize;
    static readonly int SetAllowClothActors_bInAllow_Offset;
    
    public void SetAllowClothActors(bool bInAllow)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAllowClothActors_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetAllowClothActors_bInAllow_Offset), 0, null, bInAllow);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAllowClothActors_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetAllowAnimCurveEvaluation
    static readonly IntPtr SetAllowAnimCurveEvaluation_NativeFunction;
    static readonly int SetAllowAnimCurveEvaluation_ParamsSize;
    static readonly int SetAllowAnimCurveEvaluation_bInAllow_Offset;
    
    public void SetAllowAnimCurveEvaluation(bool bInAllow)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAllowAnimCurveEvaluation_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetAllowAnimCurveEvaluation_bInAllow_Offset), 0, null, bInAllow);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAllowAnimCurveEvaluation_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetAllMotorsAngularVelocityDrive
    static readonly IntPtr SetAllMotorsAngularVelocityDrive_NativeFunction;
    static readonly int SetAllMotorsAngularVelocityDrive_ParamsSize;
    static readonly int SetAllMotorsAngularVelocityDrive_bEnableSwingDrive_Offset;
    static readonly int SetAllMotorsAngularVelocityDrive_bEnableTwistDrive_Offset;
    static readonly int SetAllMotorsAngularVelocityDrive_bSkipCustomPhysicsType_Offset;
    
    public void SetAllMotorsAngularVelocityDrive(bool bEnableSwingDrive, bool bEnableTwistDrive, bool bSkipCustomPhysicsType = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAllMotorsAngularVelocityDrive_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetAllMotorsAngularVelocityDrive_bEnableSwingDrive_Offset), 0, null, bEnableSwingDrive);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetAllMotorsAngularVelocityDrive_bEnableTwistDrive_Offset), 0, null, bEnableTwistDrive);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetAllMotorsAngularVelocityDrive_bSkipCustomPhysicsType_Offset), 0, null, bSkipCustomPhysicsType);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAllMotorsAngularVelocityDrive_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetAllMotorsAngularPositionDrive
    static readonly IntPtr SetAllMotorsAngularPositionDrive_NativeFunction;
    static readonly int SetAllMotorsAngularPositionDrive_ParamsSize;
    static readonly int SetAllMotorsAngularPositionDrive_bEnableSwingDrive_Offset;
    static readonly int SetAllMotorsAngularPositionDrive_bEnableTwistDrive_Offset;
    static readonly int SetAllMotorsAngularPositionDrive_bSkipCustomPhysicsType_Offset;
    
    public void SetAllMotorsAngularPositionDrive(bool bEnableSwingDrive, bool bEnableTwistDrive, bool bSkipCustomPhysicsType = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAllMotorsAngularPositionDrive_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetAllMotorsAngularPositionDrive_bEnableSwingDrive_Offset), 0, null, bEnableSwingDrive);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetAllMotorsAngularPositionDrive_bEnableTwistDrive_Offset), 0, null, bEnableTwistDrive);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetAllMotorsAngularPositionDrive_bSkipCustomPhysicsType_Offset), 0, null, bSkipCustomPhysicsType);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAllMotorsAngularPositionDrive_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetAllMotorsAngularDriveParams
    static readonly IntPtr SetAllMotorsAngularDriveParams_NativeFunction;
    static readonly int SetAllMotorsAngularDriveParams_ParamsSize;
    static readonly int SetAllMotorsAngularDriveParams_InSpring_Offset;
    static readonly int SetAllMotorsAngularDriveParams_InDamping_Offset;
    static readonly int SetAllMotorsAngularDriveParams_InForceLimit_Offset;
    static readonly int SetAllMotorsAngularDriveParams_bSkipCustomPhysicsType_Offset;
    
    public void SetAllMotorsAngularDriveParams(float inSpring, float inDamping, float inForceLimit, bool bSkipCustomPhysicsType = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAllMotorsAngularDriveParams_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetAllMotorsAngularDriveParams_InSpring_Offset), 0, null, inSpring);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetAllMotorsAngularDriveParams_InDamping_Offset), 0, null, inDamping);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetAllMotorsAngularDriveParams_InForceLimit_Offset), 0, null, inForceLimit);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetAllMotorsAngularDriveParams_bSkipCustomPhysicsType_Offset), 0, null, bSkipCustomPhysicsType);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAllMotorsAngularDriveParams_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetAllBodiesSimulatePhysics
    static readonly IntPtr SetAllBodiesSimulatePhysics_NativeFunction;
    static readonly int SetAllBodiesSimulatePhysics_ParamsSize;
    static readonly int SetAllBodiesSimulatePhysics_bNewSimulate_Offset;
    
    public void SetAllBodiesSimulatePhysics(bool bNewSimulate)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAllBodiesSimulatePhysics_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetAllBodiesSimulatePhysics_bNewSimulate_Offset), 0, null, bNewSimulate);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAllBodiesSimulatePhysics_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetAllBodiesPhysicsBlendWeight
    static readonly IntPtr SetAllBodiesPhysicsBlendWeight_NativeFunction;
    static readonly int SetAllBodiesPhysicsBlendWeight_ParamsSize;
    static readonly int SetAllBodiesPhysicsBlendWeight_PhysicsBlendWeight_Offset;
    static readonly int SetAllBodiesPhysicsBlendWeight_bSkipCustomPhysicsType_Offset;
    
    public void SetAllBodiesPhysicsBlendWeight(float physicsBlendWeight, bool bSkipCustomPhysicsType = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAllBodiesPhysicsBlendWeight_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetAllBodiesPhysicsBlendWeight_PhysicsBlendWeight_Offset), 0, null, physicsBlendWeight);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetAllBodiesPhysicsBlendWeight_bSkipCustomPhysicsType_Offset), 0, null, bSkipCustomPhysicsType);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAllBodiesPhysicsBlendWeight_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetAllBodiesBelowSimulatePhysics
    static readonly IntPtr SetAllBodiesBelowSimulatePhysics_NativeFunction;
    static readonly int SetAllBodiesBelowSimulatePhysics_ParamsSize;
    static readonly int SetAllBodiesBelowSimulatePhysics_InBoneName_Offset;
    static readonly int SetAllBodiesBelowSimulatePhysics_bNewSimulate_Offset;
    static readonly int SetAllBodiesBelowSimulatePhysics_bIncludeSelf_Offset;
    
    public void SetAllBodiesBelowSimulatePhysics(Name inBoneName, bool bNewSimulate, bool bIncludeSelf = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAllBodiesBelowSimulatePhysics_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetAllBodiesBelowSimulatePhysics_InBoneName_Offset), 0, null, inBoneName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetAllBodiesBelowSimulatePhysics_bNewSimulate_Offset), 0, null, bNewSimulate);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetAllBodiesBelowSimulatePhysics_bIncludeSelf_Offset), 0, null, bIncludeSelf);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAllBodiesBelowSimulatePhysics_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetAllBodiesBelowPhysicsDisabled
    static readonly IntPtr SetAllBodiesBelowPhysicsDisabled_NativeFunction;
    static readonly int SetAllBodiesBelowPhysicsDisabled_ParamsSize;
    static readonly int SetAllBodiesBelowPhysicsDisabled_InBoneName_Offset;
    static readonly int SetAllBodiesBelowPhysicsDisabled_bDisabled_Offset;
    static readonly int SetAllBodiesBelowPhysicsDisabled_bIncludeSelf_Offset;
    
    public void SetAllBodiesBelowPhysicsDisabled(Name inBoneName, bool bDisabled, bool bIncludeSelf = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAllBodiesBelowPhysicsDisabled_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetAllBodiesBelowPhysicsDisabled_InBoneName_Offset), 0, null, inBoneName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetAllBodiesBelowPhysicsDisabled_bDisabled_Offset), 0, null, bDisabled);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetAllBodiesBelowPhysicsDisabled_bIncludeSelf_Offset), 0, null, bIncludeSelf);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAllBodiesBelowPhysicsDisabled_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetAllBodiesBelowPhysicsBlendWeight
    static readonly IntPtr SetAllBodiesBelowPhysicsBlendWeight_NativeFunction;
    static readonly int SetAllBodiesBelowPhysicsBlendWeight_ParamsSize;
    static readonly int SetAllBodiesBelowPhysicsBlendWeight_InBoneName_Offset;
    static readonly int SetAllBodiesBelowPhysicsBlendWeight_PhysicsBlendWeight_Offset;
    static readonly int SetAllBodiesBelowPhysicsBlendWeight_bSkipCustomPhysicsType_Offset;
    static readonly int SetAllBodiesBelowPhysicsBlendWeight_bIncludeSelf_Offset;
    
    public void SetAllBodiesBelowPhysicsBlendWeight(Name inBoneName, float physicsBlendWeight, bool bSkipCustomPhysicsType = false, bool bIncludeSelf = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAllBodiesBelowPhysicsBlendWeight_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetAllBodiesBelowPhysicsBlendWeight_InBoneName_Offset), 0, null, inBoneName);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetAllBodiesBelowPhysicsBlendWeight_PhysicsBlendWeight_Offset), 0, null, physicsBlendWeight);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetAllBodiesBelowPhysicsBlendWeight_bSkipCustomPhysicsType_Offset), 0, null, bSkipCustomPhysicsType);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetAllBodiesBelowPhysicsBlendWeight_bIncludeSelf_Offset), 0, null, bIncludeSelf);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAllBodiesBelowPhysicsBlendWeight_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:SetAllBodiesBelowLinearVelocity
    static readonly IntPtr SetAllBodiesBelowLinearVelocity_NativeFunction;
    static readonly int SetAllBodiesBelowLinearVelocity_ParamsSize;
    static readonly int SetAllBodiesBelowLinearVelocity_InBoneName_Offset;
    static readonly int SetAllBodiesBelowLinearVelocity_LinearVelocity_Offset;
    static readonly int SetAllBodiesBelowLinearVelocity_bIncludeSelf_Offset;
    
    public void SetAllBodiesBelowLinearVelocity(Name inBoneName, System.DoubleNumerics.Vector3 linearVelocity, bool bIncludeSelf = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAllBodiesBelowLinearVelocity_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetAllBodiesBelowLinearVelocity_InBoneName_Offset), 0, null, inBoneName);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, SetAllBodiesBelowLinearVelocity_LinearVelocity_Offset), 0, null, linearVelocity);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetAllBodiesBelowLinearVelocity_bIncludeSelf_Offset), 0, null, bIncludeSelf);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAllBodiesBelowLinearVelocity_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:ResumeClothingSimulation
    static readonly IntPtr ResumeClothingSimulation_NativeFunction;
    
    public void ResumeClothingSimulation()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ResumeClothingSimulation_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:ResetClothTeleportMode
    static readonly IntPtr ResetClothTeleportMode_NativeFunction;
    
    public void ResetClothTeleportMode()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ResetClothTeleportMode_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:ResetAnimInstanceDynamics
    static readonly IntPtr ResetAnimInstanceDynamics_NativeFunction;
    static readonly int ResetAnimInstanceDynamics_ParamsSize;
    static readonly int ResetAnimInstanceDynamics_InTeleportType_Offset;
    
    public void ResetAnimInstanceDynamics(UnrealSharp.Engine.ETeleportType inTeleportType = UnrealSharp.Engine.ETeleportType.ResetPhysics)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ResetAnimInstanceDynamics_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.Engine.ETeleportType>.ToNative(IntPtr.Add(ParamsBuffer, ResetAnimInstanceDynamics_InTeleportType_Offset), 0, null, inTeleportType);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ResetAnimInstanceDynamics_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:ResetAllowedAnimCurveEvaluation
    static readonly IntPtr ResetAllowedAnimCurveEvaluation_NativeFunction;
    
    public void ResetAllowedAnimCurveEvaluation()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ResetAllowedAnimCurveEvaluation_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:ResetAllBodiesSimulatePhysics
    static readonly IntPtr ResetAllBodiesSimulatePhysics_NativeFunction;
    
    public void ResetAllBodiesSimulatePhysics()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ResetAllBodiesSimulatePhysics_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:PlayAnimation
    static readonly IntPtr PlayAnimation_NativeFunction;
    static readonly int PlayAnimation_ParamsSize;
    static readonly int PlayAnimation_NewAnimToPlay_Offset;
    static readonly int PlayAnimation_bLooping_Offset;
    
    public void PlayAnimation(UnrealSharp.Engine.AnimationAsset newAnimToPlay, bool bLooping)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[PlayAnimation_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.AnimationAsset>.ToNative(IntPtr.Add(ParamsBuffer, PlayAnimation_NewAnimToPlay_Offset), 0, null, newAnimToPlay);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, PlayAnimation_bLooping_Offset), 0, null, bLooping);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, PlayAnimation_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:Play
    static readonly IntPtr Play_NativeFunction;
    static readonly int Play_ParamsSize;
    static readonly int Play_bLooping_Offset;
    
    public void Play(bool bLooping)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Play_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, Play_bLooping_Offset), 0, null, bLooping);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, Play_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:OverrideAnimationData
    static readonly IntPtr OverrideAnimationData_NativeFunction;
    static readonly int OverrideAnimationData_ParamsSize;
    static readonly int OverrideAnimationData_InAnimToPlay_Offset;
    static readonly int OverrideAnimationData_bIsLooping_Offset;
    static readonly int OverrideAnimationData_bIsPlaying_Offset;
    static readonly int OverrideAnimationData_Position_Offset;
    static readonly int OverrideAnimationData_PlayRate_Offset;
    
    public void OverrideAnimationData(UnrealSharp.Engine.AnimationAsset inAnimToPlay, bool bIsLooping = true, bool bIsPlaying = true, float position = 0.000000f, float playRate = 1.000000f)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[OverrideAnimationData_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.AnimationAsset>.ToNative(IntPtr.Add(ParamsBuffer, OverrideAnimationData_InAnimToPlay_Offset), 0, null, inAnimToPlay);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, OverrideAnimationData_bIsLooping_Offset), 0, null, bIsLooping);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, OverrideAnimationData_bIsPlaying_Offset), 0, null, bIsPlaying);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, OverrideAnimationData_Position_Offset), 0, null, position);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, OverrideAnimationData_PlayRate_Offset), 0, null, playRate);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, OverrideAnimationData_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:LinkAnimGraphByTag
    static readonly IntPtr LinkAnimGraphByTag_NativeFunction;
    static readonly int LinkAnimGraphByTag_ParamsSize;
    static readonly int LinkAnimGraphByTag_InTag_Offset;
    static readonly int LinkAnimGraphByTag_InClass_Offset;
    
    public void LinkAnimGraphByTag(Name inTag, SubclassOf<UnrealSharp.Engine.AnimInstance> inClass)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[LinkAnimGraphByTag_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, LinkAnimGraphByTag_InTag_Offset), 0, null, inTag);
            SubclassOfMarshaller<UnrealSharp.Engine.AnimInstance>.ToNative(IntPtr.Add(ParamsBuffer, LinkAnimGraphByTag_InClass_Offset), 0, null, inClass);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, LinkAnimGraphByTag_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:LinkAnimClassLayers
    static readonly IntPtr LinkAnimClassLayers_NativeFunction;
    static readonly int LinkAnimClassLayers_ParamsSize;
    static readonly int LinkAnimClassLayers_InClass_Offset;
    
    public void LinkAnimClassLayers(SubclassOf<UnrealSharp.Engine.AnimInstance> inClass)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[LinkAnimClassLayers_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            SubclassOfMarshaller<UnrealSharp.Engine.AnimInstance>.ToNative(IntPtr.Add(ParamsBuffer, LinkAnimClassLayers_InClass_Offset), 0, null, inClass);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, LinkAnimClassLayers_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:K2_GetClosestPointOnPhysicsAsset
    static readonly IntPtr K2_GetClosestPointOnPhysicsAsset_NativeFunction;
    static readonly int K2_GetClosestPointOnPhysicsAsset_ParamsSize;
    static readonly int K2_GetClosestPointOnPhysicsAsset_WorldPosition_Offset;
    static readonly int K2_GetClosestPointOnPhysicsAsset_ClosestWorldPosition_Offset;
    static readonly int K2_GetClosestPointOnPhysicsAsset_Normal_Offset;
    static readonly int K2_GetClosestPointOnPhysicsAsset_BoneName_Offset;
    static readonly int K2_GetClosestPointOnPhysicsAsset_Distance_Offset;
    static readonly int K2_GetClosestPointOnPhysicsAsset_ReturnValue_Offset;
    
    public bool GetClosestPointOnPhysicsAsset(System.DoubleNumerics.Vector3 worldPosition, out System.DoubleNumerics.Vector3 closestWorldPosition, out System.DoubleNumerics.Vector3 normal, out Name boneName, out float distance)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[K2_GetClosestPointOnPhysicsAsset_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, K2_GetClosestPointOnPhysicsAsset_WorldPosition_Offset), 0, null, worldPosition);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, K2_GetClosestPointOnPhysicsAsset_NativeFunction, ParamsBuffer);
            
            closestWorldPosition = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, K2_GetClosestPointOnPhysicsAsset_ClosestWorldPosition_Offset), 0, null);
            normal = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, K2_GetClosestPointOnPhysicsAsset_Normal_Offset), 0, null);
            boneName = BlittableMarshaller<Name>.FromNative(IntPtr.Add(ParamsBuffer, K2_GetClosestPointOnPhysicsAsset_BoneName_Offset), 0, null);
            distance = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, K2_GetClosestPointOnPhysicsAsset_Distance_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, K2_GetClosestPointOnPhysicsAsset_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:IsPlaying
    static readonly IntPtr IsPlaying_NativeFunction;
    static readonly int IsPlaying_ParamsSize;
    static readonly int IsPlaying_ReturnValue_Offset;
    
    public bool IsPlaying()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsPlaying_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsPlaying_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsPlaying_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:IsClothingSimulationSuspended
    static readonly IntPtr IsClothingSimulationSuspended_NativeFunction;
    static readonly int IsClothingSimulationSuspended_ParamsSize;
    static readonly int IsClothingSimulationSuspended_ReturnValue_Offset;
    
    public bool IsClothingSimulationSuspended()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsClothingSimulationSuspended_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsClothingSimulationSuspended_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsClothingSimulationSuspended_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:IsBodyGravityEnabled
    static readonly IntPtr IsBodyGravityEnabled_NativeFunction;
    static readonly int IsBodyGravityEnabled_ParamsSize;
    static readonly int IsBodyGravityEnabled_BoneName_Offset;
    static readonly int IsBodyGravityEnabled_ReturnValue_Offset;
    
    public bool IsBodyGravityEnabled(Name boneName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsBodyGravityEnabled_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, IsBodyGravityEnabled_BoneName_Offset), 0, null, boneName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsBodyGravityEnabled_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsBodyGravityEnabled_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:HasValidAnimationInstance
    static readonly IntPtr HasValidAnimationInstance_NativeFunction;
    static readonly int HasValidAnimationInstance_ParamsSize;
    static readonly int HasValidAnimationInstance_ReturnValue_Offset;
    
    public bool HasValidAnimationInstance()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[HasValidAnimationInstance_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, HasValidAnimationInstance_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, HasValidAnimationInstance_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetTransformAttribute_Ref
    static readonly IntPtr GetTransformAttribute_Ref_NativeFunction;
    static readonly int GetTransformAttribute_Ref_ParamsSize;
    static readonly int GetTransformAttribute_Ref_BoneName_Offset;
    static readonly int GetTransformAttribute_Ref_AttributeName_Offset;
    static readonly int GetTransformAttribute_Ref_OutValue_Offset;
    static readonly int GetTransformAttribute_Ref_LookupType_Offset;
    static readonly int GetTransformAttribute_Ref_ReturnValue_Offset;
    
    public bool GetTransformAttribute_Ref(Name boneName, Name attributeName, ref UnrealSharp.Transform outValue, UnrealSharp.Engine.ECustomBoneAttributeLookup lookupType = UnrealSharp.Engine.ECustomBoneAttributeLookup.BoneOnly)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetTransformAttribute_Ref_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetTransformAttribute_Ref_BoneName_Offset), 0, null, boneName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetTransformAttribute_Ref_AttributeName_Offset), 0, null, attributeName);
            BlittableMarshaller<UnrealSharp.Transform>.ToNative(IntPtr.Add(ParamsBuffer, GetTransformAttribute_Ref_OutValue_Offset), 0, null, outValue);
            BlittableMarshaller<UnrealSharp.Engine.ECustomBoneAttributeLookup>.ToNative(IntPtr.Add(ParamsBuffer, GetTransformAttribute_Ref_LookupType_Offset), 0, null, lookupType);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetTransformAttribute_Ref_NativeFunction, ParamsBuffer);
            
            outValue = BlittableMarshaller<UnrealSharp.Transform>.FromNative(IntPtr.Add(ParamsBuffer, GetTransformAttribute_Ref_OutValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetTransformAttribute_Ref_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetTransformAttribute
    static readonly IntPtr GetTransformAttribute_NativeFunction;
    static readonly int GetTransformAttribute_ParamsSize;
    static readonly int GetTransformAttribute_BoneName_Offset;
    static readonly int GetTransformAttribute_AttributeName_Offset;
    static readonly int GetTransformAttribute_DefaultValue_Offset;
    static readonly int GetTransformAttribute_OutValue_Offset;
    static readonly int GetTransformAttribute_LookupType_Offset;
    static readonly int GetTransformAttribute_ReturnValue_Offset;
    
    public bool GetTransformAttribute(Name boneName, Name attributeName, UnrealSharp.Transform defaultValue, out UnrealSharp.Transform outValue, UnrealSharp.Engine.ECustomBoneAttributeLookup lookupType = UnrealSharp.Engine.ECustomBoneAttributeLookup.BoneOnly)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetTransformAttribute_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetTransformAttribute_BoneName_Offset), 0, null, boneName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetTransformAttribute_AttributeName_Offset), 0, null, attributeName);
            BlittableMarshaller<UnrealSharp.Transform>.ToNative(IntPtr.Add(ParamsBuffer, GetTransformAttribute_DefaultValue_Offset), 0, null, defaultValue);
            BlittableMarshaller<UnrealSharp.Engine.ECustomBoneAttributeLookup>.ToNative(IntPtr.Add(ParamsBuffer, GetTransformAttribute_LookupType_Offset), 0, null, lookupType);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetTransformAttribute_NativeFunction, ParamsBuffer);
            
            outValue = BlittableMarshaller<UnrealSharp.Transform>.FromNative(IntPtr.Add(ParamsBuffer, GetTransformAttribute_OutValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetTransformAttribute_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetStringAttribute_Ref
    static readonly IntPtr GetStringAttribute_Ref_NativeFunction;
    static readonly int GetStringAttribute_Ref_ParamsSize;
    static readonly int GetStringAttribute_Ref_BoneName_Offset;
    static readonly int GetStringAttribute_Ref_AttributeName_Offset;
    static readonly int GetStringAttribute_Ref_OutValue_Offset;
    static readonly int GetStringAttribute_Ref_LookupType_Offset;
    static readonly int GetStringAttribute_Ref_ReturnValue_Offset;
    
    public bool GetStringAttribute_Ref(Name boneName, Name attributeName, ref string outValue, UnrealSharp.Engine.ECustomBoneAttributeLookup lookupType = UnrealSharp.Engine.ECustomBoneAttributeLookup.BoneOnly)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetStringAttribute_Ref_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetStringAttribute_Ref_BoneName_Offset), 0, null, boneName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetStringAttribute_Ref_AttributeName_Offset), 0, null, attributeName);
            IntPtr OutValue_NativePtr = IntPtr.Add(ParamsBuffer,GetStringAttribute_Ref_OutValue_Offset);
            StringMarshaller.ToNative(OutValue_NativePtr,0,null,outValue);
            BlittableMarshaller<UnrealSharp.Engine.ECustomBoneAttributeLookup>.ToNative(IntPtr.Add(ParamsBuffer, GetStringAttribute_Ref_LookupType_Offset), 0, null, lookupType);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetStringAttribute_Ref_NativeFunction, ParamsBuffer);
            
            outValue = StringMarshaller.FromNative(OutValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(OutValue_NativePtr, 0);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetStringAttribute_Ref_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetStringAttribute
    static readonly IntPtr GetStringAttribute_NativeFunction;
    static readonly int GetStringAttribute_ParamsSize;
    static readonly int GetStringAttribute_BoneName_Offset;
    static readonly int GetStringAttribute_AttributeName_Offset;
    static readonly int GetStringAttribute_DefaultValue_Offset;
    static readonly int GetStringAttribute_OutValue_Offset;
    static readonly int GetStringAttribute_LookupType_Offset;
    static readonly int GetStringAttribute_ReturnValue_Offset;
    
    public bool GetStringAttribute(Name boneName, Name attributeName, string defaultValue, out string outValue, UnrealSharp.Engine.ECustomBoneAttributeLookup lookupType = UnrealSharp.Engine.ECustomBoneAttributeLookup.BoneOnly)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetStringAttribute_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetStringAttribute_BoneName_Offset), 0, null, boneName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetStringAttribute_AttributeName_Offset), 0, null, attributeName);
            IntPtr DefaultValue_NativePtr = IntPtr.Add(ParamsBuffer,GetStringAttribute_DefaultValue_Offset);
            StringMarshaller.ToNative(DefaultValue_NativePtr,0,null,defaultValue);
            BlittableMarshaller<UnrealSharp.Engine.ECustomBoneAttributeLookup>.ToNative(IntPtr.Add(ParamsBuffer, GetStringAttribute_LookupType_Offset), 0, null, lookupType);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetStringAttribute_NativeFunction, ParamsBuffer);
            
            IntPtr OutValue_NativePtr = IntPtr.Add(ParamsBuffer,GetStringAttribute_OutValue_Offset);
            outValue = StringMarshaller.FromNative(OutValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(OutValue_NativePtr, 0);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetStringAttribute_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(DefaultValue_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetSkeletalMeshAsset
    static readonly IntPtr GetSkeletalMeshAsset_NativeFunction;
    static readonly int GetSkeletalMeshAsset_ParamsSize;
    static readonly int GetSkeletalMeshAsset_ReturnValue_Offset;
    
    public UnrealSharp.Engine.SkeletalMesh GetSkeletalMeshAsset()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSkeletalMeshAsset_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSkeletalMeshAsset_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.SkeletalMesh returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.SkeletalMesh>.FromNative(IntPtr.Add(ParamsBuffer, GetSkeletalMeshAsset_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetSkeletalCenterOfMass
    static readonly IntPtr GetSkeletalCenterOfMass_NativeFunction;
    static readonly int GetSkeletalCenterOfMass_ParamsSize;
    static readonly int GetSkeletalCenterOfMass_ReturnValue_Offset;
    
    public System.DoubleNumerics.Vector3 GetSkeletalCenterOfMass()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSkeletalCenterOfMass_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSkeletalCenterOfMass_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector3 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, GetSkeletalCenterOfMass_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetPostProcessInstance
    static readonly IntPtr GetPostProcessInstance_NativeFunction;
    static readonly int GetPostProcessInstance_ParamsSize;
    static readonly int GetPostProcessInstance_ReturnValue_Offset;
    
    public UnrealSharp.Engine.AnimInstance GetPostProcessInstance()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetPostProcessInstance_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetPostProcessInstance_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.AnimInstance returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.AnimInstance>.FromNative(IntPtr.Add(ParamsBuffer, GetPostProcessInstance_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetPosition
    static readonly IntPtr GetPosition_NativeFunction;
    static readonly int GetPosition_ParamsSize;
    static readonly int GetPosition_ReturnValue_Offset;
    
    public float GetPosition()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetPosition_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetPosition_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetPosition_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetPlayRate
    static readonly IntPtr GetPlayRate_NativeFunction;
    static readonly int GetPlayRate_ParamsSize;
    static readonly int GetPlayRate_ReturnValue_Offset;
    
    public float GetPlayRate()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetPlayRate_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetPlayRate_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetPlayRate_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetMorphTarget
    static readonly IntPtr GetMorphTarget_NativeFunction;
    static readonly int GetMorphTarget_ParamsSize;
    static readonly int GetMorphTarget_MorphTargetName_Offset;
    static readonly int GetMorphTarget_ReturnValue_Offset;
    
    public float GetMorphTarget(Name morphTargetName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetMorphTarget_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetMorphTarget_MorphTargetName_Offset), 0, null, morphTargetName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetMorphTarget_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetMorphTarget_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetLinkedAnimLayerInstanceByGroup
    static readonly IntPtr GetLinkedAnimLayerInstanceByGroup_NativeFunction;
    static readonly int GetLinkedAnimLayerInstanceByGroup_ParamsSize;
    static readonly int GetLinkedAnimLayerInstanceByGroup_InGroup_Offset;
    static readonly int GetLinkedAnimLayerInstanceByGroup_ReturnValue_Offset;
    
    public UnrealSharp.Engine.AnimInstance GetLinkedAnimLayerInstanceByGroup(Name inGroup)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetLinkedAnimLayerInstanceByGroup_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetLinkedAnimLayerInstanceByGroup_InGroup_Offset), 0, null, inGroup);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetLinkedAnimLayerInstanceByGroup_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.AnimInstance returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.AnimInstance>.FromNative(IntPtr.Add(ParamsBuffer, GetLinkedAnimLayerInstanceByGroup_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetLinkedAnimLayerInstanceByClass
    static readonly IntPtr GetLinkedAnimLayerInstanceByClass_NativeFunction;
    static readonly int GetLinkedAnimLayerInstanceByClass_ParamsSize;
    static readonly int GetLinkedAnimLayerInstanceByClass_InClass_Offset;
    static readonly int GetLinkedAnimLayerInstanceByClass_ReturnValue_Offset;
    
    public UnrealSharp.Engine.AnimInstance GetLinkedAnimLayerInstanceByClass(SubclassOf<UnrealSharp.Engine.AnimInstance> inClass)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetLinkedAnimLayerInstanceByClass_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            SubclassOfMarshaller<UnrealSharp.Engine.AnimInstance>.ToNative(IntPtr.Add(ParamsBuffer, GetLinkedAnimLayerInstanceByClass_InClass_Offset), 0, null, inClass);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetLinkedAnimLayerInstanceByClass_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.AnimInstance returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.AnimInstance>.FromNative(IntPtr.Add(ParamsBuffer, GetLinkedAnimLayerInstanceByClass_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetLinkedAnimGraphInstancesByTag
    static readonly IntPtr GetLinkedAnimGraphInstancesByTag_NativeFunction;
    static readonly int GetLinkedAnimGraphInstancesByTag_ParamsSize;
    static readonly int GetLinkedAnimGraphInstancesByTag_InTag_Offset;
    static readonly int GetLinkedAnimGraphInstancesByTag_OutLinkedInstances_Offset;
    static readonly int GetLinkedAnimGraphInstancesByTag_OutLinkedInstances_ElementSize;
    
    [Obsolete("Tags are unique so this funciton is no longer supported. Please use GetLinkedAnimGraphInstanceByTag instead")]
    public void GetLinkedAnimGraphInstancesByTag(Name inTag, out System.Collections.Generic.IList<UnrealSharp.Engine.AnimInstance> outLinkedInstances)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetLinkedAnimGraphInstancesByTag_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetLinkedAnimGraphInstancesByTag_InTag_Offset), 0, null, inTag);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetLinkedAnimGraphInstancesByTag_NativeFunction, ParamsBuffer);
            
            IntPtr OutLinkedInstances_NativeBuffer = IntPtr.Add(ParamsBuffer, GetLinkedAnimGraphInstancesByTag_OutLinkedInstances_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.AnimInstance> OutLinkedInstances_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Engine.AnimInstance> (1, ObjectMarshaller<UnrealSharp.Engine.AnimInstance>.ToNative, ObjectMarshaller<UnrealSharp.Engine.AnimInstance>.FromNative, GetLinkedAnimGraphInstancesByTag_OutLinkedInstances_ElementSize);
            outLinkedInstances = OutLinkedInstances_Marshaler.FromNative(OutLinkedInstances_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.AnimInstance>.DestructInstance(OutLinkedInstances_NativeBuffer, 0);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetLinkedAnimGraphInstanceByTag
    static readonly IntPtr GetLinkedAnimGraphInstanceByTag_NativeFunction;
    static readonly int GetLinkedAnimGraphInstanceByTag_ParamsSize;
    static readonly int GetLinkedAnimGraphInstanceByTag_InTag_Offset;
    static readonly int GetLinkedAnimGraphInstanceByTag_ReturnValue_Offset;
    
    public UnrealSharp.Engine.AnimInstance GetLinkedAnimGraphInstanceByTag(Name inTag)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetLinkedAnimGraphInstanceByTag_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetLinkedAnimGraphInstanceByTag_InTag_Offset), 0, null, inTag);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetLinkedAnimGraphInstanceByTag_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.AnimInstance returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.AnimInstance>.FromNative(IntPtr.Add(ParamsBuffer, GetLinkedAnimGraphInstanceByTag_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetIntegerAttribute_Ref
    static readonly IntPtr GetIntegerAttribute_Ref_NativeFunction;
    static readonly int GetIntegerAttribute_Ref_ParamsSize;
    static readonly int GetIntegerAttribute_Ref_BoneName_Offset;
    static readonly int GetIntegerAttribute_Ref_AttributeName_Offset;
    static readonly int GetIntegerAttribute_Ref_OutValue_Offset;
    static readonly int GetIntegerAttribute_Ref_LookupType_Offset;
    static readonly int GetIntegerAttribute_Ref_ReturnValue_Offset;
    
    public bool GetIntegerAttribute_Ref(Name boneName, Name attributeName, ref int outValue, UnrealSharp.Engine.ECustomBoneAttributeLookup lookupType = UnrealSharp.Engine.ECustomBoneAttributeLookup.BoneOnly)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetIntegerAttribute_Ref_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetIntegerAttribute_Ref_BoneName_Offset), 0, null, boneName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetIntegerAttribute_Ref_AttributeName_Offset), 0, null, attributeName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetIntegerAttribute_Ref_OutValue_Offset), 0, null, outValue);
            BlittableMarshaller<UnrealSharp.Engine.ECustomBoneAttributeLookup>.ToNative(IntPtr.Add(ParamsBuffer, GetIntegerAttribute_Ref_LookupType_Offset), 0, null, lookupType);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetIntegerAttribute_Ref_NativeFunction, ParamsBuffer);
            
            outValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetIntegerAttribute_Ref_OutValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetIntegerAttribute_Ref_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetIntegerAttribute
    static readonly IntPtr GetIntegerAttribute_NativeFunction;
    static readonly int GetIntegerAttribute_ParamsSize;
    static readonly int GetIntegerAttribute_BoneName_Offset;
    static readonly int GetIntegerAttribute_AttributeName_Offset;
    static readonly int GetIntegerAttribute_DefaultValue_Offset;
    static readonly int GetIntegerAttribute_OutValue_Offset;
    static readonly int GetIntegerAttribute_LookupType_Offset;
    static readonly int GetIntegerAttribute_ReturnValue_Offset;
    
    public bool GetIntegerAttribute(Name boneName, Name attributeName, int defaultValue, out int outValue, UnrealSharp.Engine.ECustomBoneAttributeLookup lookupType = UnrealSharp.Engine.ECustomBoneAttributeLookup.BoneOnly)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetIntegerAttribute_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetIntegerAttribute_BoneName_Offset), 0, null, boneName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetIntegerAttribute_AttributeName_Offset), 0, null, attributeName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetIntegerAttribute_DefaultValue_Offset), 0, null, defaultValue);
            BlittableMarshaller<UnrealSharp.Engine.ECustomBoneAttributeLookup>.ToNative(IntPtr.Add(ParamsBuffer, GetIntegerAttribute_LookupType_Offset), 0, null, lookupType);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetIntegerAttribute_NativeFunction, ParamsBuffer);
            
            outValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetIntegerAttribute_OutValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetIntegerAttribute_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetFloatAttribute_Ref
    static readonly IntPtr GetFloatAttribute_Ref_NativeFunction;
    static readonly int GetFloatAttribute_Ref_ParamsSize;
    static readonly int GetFloatAttribute_Ref_BoneName_Offset;
    static readonly int GetFloatAttribute_Ref_AttributeName_Offset;
    static readonly int GetFloatAttribute_Ref_OutValue_Offset;
    static readonly int GetFloatAttribute_Ref_LookupType_Offset;
    static readonly int GetFloatAttribute_Ref_ReturnValue_Offset;
    
    public bool GetFloatAttribute_Ref(Name boneName, Name attributeName, ref float outValue, UnrealSharp.Engine.ECustomBoneAttributeLookup lookupType = UnrealSharp.Engine.ECustomBoneAttributeLookup.BoneOnly)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetFloatAttribute_Ref_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetFloatAttribute_Ref_BoneName_Offset), 0, null, boneName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetFloatAttribute_Ref_AttributeName_Offset), 0, null, attributeName);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, GetFloatAttribute_Ref_OutValue_Offset), 0, null, outValue);
            BlittableMarshaller<UnrealSharp.Engine.ECustomBoneAttributeLookup>.ToNative(IntPtr.Add(ParamsBuffer, GetFloatAttribute_Ref_LookupType_Offset), 0, null, lookupType);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetFloatAttribute_Ref_NativeFunction, ParamsBuffer);
            
            outValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetFloatAttribute_Ref_OutValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetFloatAttribute_Ref_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetFloatAttribute
    static readonly IntPtr GetFloatAttribute_NativeFunction;
    static readonly int GetFloatAttribute_ParamsSize;
    static readonly int GetFloatAttribute_BoneName_Offset;
    static readonly int GetFloatAttribute_AttributeName_Offset;
    static readonly int GetFloatAttribute_DefaultValue_Offset;
    static readonly int GetFloatAttribute_OutValue_Offset;
    static readonly int GetFloatAttribute_LookupType_Offset;
    static readonly int GetFloatAttribute_ReturnValue_Offset;
    
    public bool GetFloatAttribute(Name boneName, Name attributeName, float defaultValue, out float outValue, UnrealSharp.Engine.ECustomBoneAttributeLookup lookupType = UnrealSharp.Engine.ECustomBoneAttributeLookup.BoneOnly)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetFloatAttribute_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetFloatAttribute_BoneName_Offset), 0, null, boneName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetFloatAttribute_AttributeName_Offset), 0, null, attributeName);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, GetFloatAttribute_DefaultValue_Offset), 0, null, defaultValue);
            BlittableMarshaller<UnrealSharp.Engine.ECustomBoneAttributeLookup>.ToNative(IntPtr.Add(ParamsBuffer, GetFloatAttribute_LookupType_Offset), 0, null, lookupType);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetFloatAttribute_NativeFunction, ParamsBuffer);
            
            outValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetFloatAttribute_OutValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetFloatAttribute_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetDisableAnimCurves
    static readonly IntPtr GetDisableAnimCurves_NativeFunction;
    static readonly int GetDisableAnimCurves_ParamsSize;
    static readonly int GetDisableAnimCurves_ReturnValue_Offset;
    
    public bool GetDisableAnimCurves()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetDisableAnimCurves_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetDisableAnimCurves_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetDisableAnimCurves_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetDefaultAnimatingRig
    static readonly IntPtr GetDefaultAnimatingRig_NativeFunction;
    static readonly int GetDefaultAnimatingRig_ParamsSize;
    static readonly int GetDefaultAnimatingRig_ReturnValue_Offset;
    
    public SoftObject<UnrealSharp.CoreUObject.Object> GetDefaultAnimatingRig()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetDefaultAnimatingRig_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetDefaultAnimatingRig_NativeFunction, ParamsBuffer);
            
            SoftObject<UnrealSharp.CoreUObject.Object> returnValue;
            returnValue = BlittableMarshaller<SoftObject<UnrealSharp.CoreUObject.Object>>.FromNative(IntPtr.Add(ParamsBuffer, GetDefaultAnimatingRig_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetCurrentJointAngles
    static readonly IntPtr GetCurrentJointAngles_NativeFunction;
    static readonly int GetCurrentJointAngles_ParamsSize;
    static readonly int GetCurrentJointAngles_InBoneName_Offset;
    static readonly int GetCurrentJointAngles_Swing1Angle_Offset;
    static readonly int GetCurrentJointAngles_TwistAngle_Offset;
    static readonly int GetCurrentJointAngles_Swing2Angle_Offset;
    
    public void GetCurrentJointAngles(Name inBoneName, out float swing1Angle, out float twistAngle, out float swing2Angle)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCurrentJointAngles_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetCurrentJointAngles_InBoneName_Offset), 0, null, inBoneName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCurrentJointAngles_NativeFunction, ParamsBuffer);
            
            swing1Angle = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetCurrentJointAngles_Swing1Angle_Offset), 0, null);
            twistAngle = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetCurrentJointAngles_TwistAngle_Offset), 0, null);
            swing2Angle = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetCurrentJointAngles_Swing2Angle_Offset), 0, null);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetConstraintsFromBody
    static readonly IntPtr GetConstraintsFromBody_NativeFunction;
    static readonly int GetConstraintsFromBody_ParamsSize;
    static readonly int GetConstraintsFromBody_BodyName_Offset;
    static readonly int GetConstraintsFromBody_bParentConstraints_Offset;
    static readonly int GetConstraintsFromBody_bChildConstraints_Offset;
    static readonly int GetConstraintsFromBody_bIncludesTerminated_Offset;
    static readonly int GetConstraintsFromBody_OutConstraints_Offset;
    static readonly int GetConstraintsFromBody_OutConstraints_ElementSize;
    
    public void GetConstraintsFromBody(Name bodyName, bool bParentConstraints, bool bChildConstraints, bool bIncludesTerminated, out System.Collections.Generic.IList<UnrealSharp.Engine.ConstraintInstanceAccessor> outConstraints)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetConstraintsFromBody_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetConstraintsFromBody_BodyName_Offset), 0, null, bodyName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, GetConstraintsFromBody_bParentConstraints_Offset), 0, null, bParentConstraints);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, GetConstraintsFromBody_bChildConstraints_Offset), 0, null, bChildConstraints);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, GetConstraintsFromBody_bIncludesTerminated_Offset), 0, null, bIncludesTerminated);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetConstraintsFromBody_NativeFunction, ParamsBuffer);
            
            IntPtr OutConstraints_NativeBuffer = IntPtr.Add(ParamsBuffer, GetConstraintsFromBody_OutConstraints_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.ConstraintInstanceAccessor> OutConstraints_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Engine.ConstraintInstanceAccessor> (1, UnrealSharp.Engine.ConstraintInstanceAccessorMarshaler.ToNative, UnrealSharp.Engine.ConstraintInstanceAccessorMarshaler.FromNative, GetConstraintsFromBody_OutConstraints_ElementSize);
            outConstraints = OutConstraints_Marshaler.FromNative(OutConstraints_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.ConstraintInstanceAccessor>.DestructInstance(OutConstraints_NativeBuffer, 0);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetConstraints
    static readonly IntPtr GetConstraints_NativeFunction;
    static readonly int GetConstraints_ParamsSize;
    static readonly int GetConstraints_bIncludesTerminated_Offset;
    static readonly int GetConstraints_OutConstraints_Offset;
    static readonly int GetConstraints_OutConstraints_ElementSize;
    
    public void GetConstraints(bool bIncludesTerminated, out System.Collections.Generic.IList<UnrealSharp.Engine.ConstraintInstanceAccessor> outConstraints)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetConstraints_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, GetConstraints_bIncludesTerminated_Offset), 0, null, bIncludesTerminated);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetConstraints_NativeFunction, ParamsBuffer);
            
            IntPtr OutConstraints_NativeBuffer = IntPtr.Add(ParamsBuffer, GetConstraints_OutConstraints_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.ConstraintInstanceAccessor> OutConstraints_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Engine.ConstraintInstanceAccessor> (1, UnrealSharp.Engine.ConstraintInstanceAccessorMarshaler.ToNative, UnrealSharp.Engine.ConstraintInstanceAccessorMarshaler.FromNative, GetConstraints_OutConstraints_ElementSize);
            outConstraints = OutConstraints_Marshaler.FromNative(OutConstraints_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.ConstraintInstanceAccessor>.DestructInstance(OutConstraints_NativeBuffer, 0);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetConstraintByName
    static readonly IntPtr GetConstraintByName_NativeFunction;
    static readonly int GetConstraintByName_ParamsSize;
    static readonly int GetConstraintByName_ConstraintName_Offset;
    static readonly int GetConstraintByName_bIncludesTerminated_Offset;
    static readonly int GetConstraintByName_ReturnValue_Offset;
    
    public UnrealSharp.Engine.ConstraintInstanceAccessor GetConstraintByName(Name constraintName, bool bIncludesTerminated)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetConstraintByName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetConstraintByName_ConstraintName_Offset), 0, null, constraintName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, GetConstraintByName_bIncludesTerminated_Offset), 0, null, bIncludesTerminated);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetConstraintByName_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.ConstraintInstanceAccessor returnValue;
            returnValue = UnrealSharp.Engine.ConstraintInstanceAccessorMarshaler.FromNative(IntPtr.Add(ParamsBuffer, GetConstraintByName_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetClothMaxDistanceScale
    static readonly IntPtr GetClothMaxDistanceScale_NativeFunction;
    static readonly int GetClothMaxDistanceScale_ParamsSize;
    static readonly int GetClothMaxDistanceScale_ReturnValue_Offset;
    
    public float GetClothMaxDistanceScale()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetClothMaxDistanceScale_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetClothMaxDistanceScale_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetClothMaxDistanceScale_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetClothingSimulationInteractor
    static readonly IntPtr GetClothingSimulationInteractor_NativeFunction;
    static readonly int GetClothingSimulationInteractor_ParamsSize;
    static readonly int GetClothingSimulationInteractor_ReturnValue_Offset;
    
    public UnrealSharp.ClothingSystemRuntimeInterface.ClothingSimulationInteractor GetClothingSimulationInteractor()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetClothingSimulationInteractor_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetClothingSimulationInteractor_NativeFunction, ParamsBuffer);
            
            UnrealSharp.ClothingSystemRuntimeInterface.ClothingSimulationInteractor returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.ClothingSystemRuntimeInterface.ClothingSimulationInteractor>.FromNative(IntPtr.Add(ParamsBuffer, GetClothingSimulationInteractor_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetBoneMass
    static readonly IntPtr GetBoneMass_NativeFunction;
    static readonly int GetBoneMass_ParamsSize;
    static readonly int GetBoneMass_BoneName_Offset;
    static readonly int GetBoneMass_bScaleMass_Offset;
    static readonly int GetBoneMass_ReturnValue_Offset;
    
    public float GetBoneMass(Name boneName = default(Name), bool bScaleMass = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBoneMass_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetBoneMass_BoneName_Offset), 0, null, boneName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, GetBoneMass_bScaleMass_Offset), 0, null, bScaleMass);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetBoneMass_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetBoneMass_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetBoneLinearVelocity
    static readonly IntPtr GetBoneLinearVelocity_NativeFunction;
    static readonly int GetBoneLinearVelocity_ParamsSize;
    static readonly int GetBoneLinearVelocity_InBoneName_Offset;
    static readonly int GetBoneLinearVelocity_ReturnValue_Offset;
    
    public System.DoubleNumerics.Vector3 GetBoneLinearVelocity(Name inBoneName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBoneLinearVelocity_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetBoneLinearVelocity_InBoneName_Offset), 0, null, inBoneName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetBoneLinearVelocity_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector3 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, GetBoneLinearVelocity_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetAnimInstance
    static readonly IntPtr GetAnimInstance_NativeFunction;
    static readonly int GetAnimInstance_ParamsSize;
    static readonly int GetAnimInstance_ReturnValue_Offset;
    
    public UnrealSharp.Engine.AnimInstance GetAnimInstance()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetAnimInstance_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetAnimInstance_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.AnimInstance returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.AnimInstance>.FromNative(IntPtr.Add(ParamsBuffer, GetAnimInstance_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetAnimationMode
    static readonly IntPtr GetAnimationMode_NativeFunction;
    static readonly int GetAnimationMode_ParamsSize;
    static readonly int GetAnimationMode_ReturnValue_Offset;
    
    public UnrealSharp.Engine.EAnimationMode GetAnimationMode()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetAnimationMode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetAnimationMode_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.EAnimationMode returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.Engine.EAnimationMode>.FromNative(IntPtr.Add(ParamsBuffer, GetAnimationMode_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetAllowRigidBodyAnimNode
    static readonly IntPtr GetAllowRigidBodyAnimNode_NativeFunction;
    static readonly int GetAllowRigidBodyAnimNode_ParamsSize;
    static readonly int GetAllowRigidBodyAnimNode_ReturnValue_Offset;
    
    public bool GetAllowRigidBodyAnimNode()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetAllowRigidBodyAnimNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetAllowRigidBodyAnimNode_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetAllowRigidBodyAnimNode_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetAllowedAnimCurveEvaluate
    static readonly IntPtr GetAllowedAnimCurveEvaluate_NativeFunction;
    static readonly int GetAllowedAnimCurveEvaluate_ParamsSize;
    static readonly int GetAllowedAnimCurveEvaluate_ReturnValue_Offset;
    
    public bool GetAllowedAnimCurveEvaluate()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetAllowedAnimCurveEvaluate_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetAllowedAnimCurveEvaluate_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetAllowedAnimCurveEvaluate_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:GetAllowClothActors
    static readonly IntPtr GetAllowClothActors_NativeFunction;
    static readonly int GetAllowClothActors_ParamsSize;
    static readonly int GetAllowClothActors_ReturnValue_Offset;
    
    public bool GetAllowClothActors()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetAllowClothActors_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetAllowClothActors_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetAllowClothActors_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:ForceClothNextUpdateTeleportAndReset
    static readonly IntPtr ForceClothNextUpdateTeleportAndReset_NativeFunction;
    
    public void ForceClothNextUpdateTeleportAndReset()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ForceClothNextUpdateTeleportAndReset_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:ForceClothNextUpdateTeleport
    static readonly IntPtr ForceClothNextUpdateTeleport_NativeFunction;
    
    public void ForceClothNextUpdateTeleport()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ForceClothNextUpdateTeleport_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:FindConstraintBoneName
    static readonly IntPtr FindConstraintBoneName_NativeFunction;
    static readonly int FindConstraintBoneName_ParamsSize;
    static readonly int FindConstraintBoneName_ConstraintIndex_Offset;
    static readonly int FindConstraintBoneName_ReturnValue_Offset;
    
    public Name FindConstraintBoneName(int constraintIndex)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[FindConstraintBoneName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, FindConstraintBoneName_ConstraintIndex_Offset), 0, null, constraintIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, FindConstraintBoneName_NativeFunction, ParamsBuffer);
            
            Name returnValue;
            returnValue = BlittableMarshaller<Name>.FromNative(IntPtr.Add(ParamsBuffer, FindConstraintBoneName_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:ClearMorphTargets
    static readonly IntPtr ClearMorphTargets_NativeFunction;
    
    public void ClearMorphTargets()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ClearMorphTargets_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:BreakConstraint
    static readonly IntPtr BreakConstraint_NativeFunction;
    static readonly int BreakConstraint_ParamsSize;
    static readonly int BreakConstraint_Impulse_Offset;
    static readonly int BreakConstraint_HitLocation_Offset;
    static readonly int BreakConstraint_InBoneName_Offset;
    
    public void BreakConstraint(System.DoubleNumerics.Vector3 impulse, System.DoubleNumerics.Vector3 hitLocation, Name inBoneName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[BreakConstraint_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, BreakConstraint_Impulse_Offset), 0, null, impulse);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, BreakConstraint_HitLocation_Offset), 0, null, hitLocation);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, BreakConstraint_InBoneName_Offset), 0, null, inBoneName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, BreakConstraint_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:BindClothToLeaderPoseComponent
    static readonly IntPtr BindClothToLeaderPoseComponent_NativeFunction;
    
    public void BindClothToLeaderPoseComponent()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, BindClothToLeaderPoseComponent_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:AllowAnimCurveEvaluation
    static readonly IntPtr AllowAnimCurveEvaluation_NativeFunction;
    static readonly int AllowAnimCurveEvaluation_ParamsSize;
    static readonly int AllowAnimCurveEvaluation_NameOfCurve_Offset;
    static readonly int AllowAnimCurveEvaluation_bAllow_Offset;
    
    public void AllowAnimCurveEvaluation(Name nameOfCurve, bool bAllow)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AllowAnimCurveEvaluation_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AllowAnimCurveEvaluation_NameOfCurve_Offset), 0, null, nameOfCurve);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AllowAnimCurveEvaluation_bAllow_Offset), 0, null, bAllow);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AllowAnimCurveEvaluation_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:AddImpulseToAllBodiesBelow
    static readonly IntPtr AddImpulseToAllBodiesBelow_NativeFunction;
    static readonly int AddImpulseToAllBodiesBelow_ParamsSize;
    static readonly int AddImpulseToAllBodiesBelow_Impulse_Offset;
    static readonly int AddImpulseToAllBodiesBelow_BoneName_Offset;
    static readonly int AddImpulseToAllBodiesBelow_bVelChange_Offset;
    static readonly int AddImpulseToAllBodiesBelow_bIncludeSelf_Offset;
    
    public void AddImpulseToAllBodiesBelow(System.DoubleNumerics.Vector3 impulse, Name boneName = default(Name), bool bVelChange = false, bool bIncludeSelf = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddImpulseToAllBodiesBelow_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, AddImpulseToAllBodiesBelow_Impulse_Offset), 0, null, impulse);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddImpulseToAllBodiesBelow_BoneName_Offset), 0, null, boneName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddImpulseToAllBodiesBelow_bVelChange_Offset), 0, null, bVelChange);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddImpulseToAllBodiesBelow_bIncludeSelf_Offset), 0, null, bIncludeSelf);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddImpulseToAllBodiesBelow_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:AddForceToAllBodiesBelow
    static readonly IntPtr AddForceToAllBodiesBelow_NativeFunction;
    static readonly int AddForceToAllBodiesBelow_ParamsSize;
    static readonly int AddForceToAllBodiesBelow_Force_Offset;
    static readonly int AddForceToAllBodiesBelow_BoneName_Offset;
    static readonly int AddForceToAllBodiesBelow_bAccelChange_Offset;
    static readonly int AddForceToAllBodiesBelow_bIncludeSelf_Offset;
    
    public void AddForceToAllBodiesBelow(System.DoubleNumerics.Vector3 force, Name boneName = default(Name), bool bAccelChange = false, bool bIncludeSelf = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddForceToAllBodiesBelow_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, AddForceToAllBodiesBelow_Force_Offset), 0, null, force);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddForceToAllBodiesBelow_BoneName_Offset), 0, null, boneName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddForceToAllBodiesBelow_bAccelChange_Offset), 0, null, bAccelChange);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddForceToAllBodiesBelow_bIncludeSelf_Offset), 0, null, bIncludeSelf);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddForceToAllBodiesBelow_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkeletalMeshComponent:AccumulateAllBodiesBelowPhysicsBlendWeight
    static readonly IntPtr AccumulateAllBodiesBelowPhysicsBlendWeight_NativeFunction;
    static readonly int AccumulateAllBodiesBelowPhysicsBlendWeight_ParamsSize;
    static readonly int AccumulateAllBodiesBelowPhysicsBlendWeight_InBoneName_Offset;
    static readonly int AccumulateAllBodiesBelowPhysicsBlendWeight_AddPhysicsBlendWeight_Offset;
    static readonly int AccumulateAllBodiesBelowPhysicsBlendWeight_bSkipCustomPhysicsType_Offset;
    
    public void AccumulateAllBodiesBelowPhysicsBlendWeight(Name inBoneName, float addPhysicsBlendWeight, bool bSkipCustomPhysicsType = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AccumulateAllBodiesBelowPhysicsBlendWeight_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AccumulateAllBodiesBelowPhysicsBlendWeight_InBoneName_Offset), 0, null, inBoneName);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, AccumulateAllBodiesBelowPhysicsBlendWeight_AddPhysicsBlendWeight_Offset), 0, null, addPhysicsBlendWeight);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AccumulateAllBodiesBelowPhysicsBlendWeight_bSkipCustomPhysicsType_Offset), 0, null, bSkipCustomPhysicsType);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AccumulateAllBodiesBelowPhysicsBlendWeight_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    
}
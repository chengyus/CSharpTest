// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
abstract public partial class SkinnedMeshComponent : UnrealSharp.Engine.MeshComponent
{
    
    static SkinnedMeshComponent()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("SkinnedMeshComponent");
        
        SkeletalMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "SkeletalMesh");
        SkinnedAsset_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "SkinnedAsset");
        LeaderPoseComponent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "LeaderPoseComponent");
        SkinCacheUsage_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "SkinCacheUsage");
        SkinCacheUsage_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "SkinCacheUsage");
        bSetMeshDeformer_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bSetMeshDeformer");
        MeshDeformer_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "MeshDeformer");
        MeshDeformerInstanceSettings_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "MeshDeformerInstanceSettings");
        MeshDeformerInstance_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "MeshDeformerInstance");
        PhysicsAssetOverride_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "PhysicsAssetOverride");
        ForcedLodModel_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ForcedLodModel");
        MinLodModel_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "MinLodModel");
        StreamingDistanceMultiplier_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "StreamingDistanceMultiplier");
        VisibilityBasedAnimTickOption_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "VisibilityBasedAnimTickOption");
        bOverrideMinLod_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bOverrideMinLod");
        bOverrideMinLod_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bOverrideMinLod");
        bUseBoundsFromLeaderPoseComponent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bUseBoundsFromLeaderPoseComponent");
        bUseBoundsFromLeaderPoseComponent_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bUseBoundsFromLeaderPoseComponent");
        bDisableMorphTarget_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bDisableMorphTarget");
        bDisableMorphTarget_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bDisableMorphTarget");
        bPerBoneMotionBlur_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bPerBoneMotionBlur");
        bPerBoneMotionBlur_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bPerBoneMotionBlur");
        bComponentUseFixedSkelBounds_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bComponentUseFixedSkelBounds");
        bComponentUseFixedSkelBounds_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bComponentUseFixedSkelBounds");
        bConsiderAllBodiesForBounds_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bConsiderAllBodiesForBounds");
        bConsiderAllBodiesForBounds_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bConsiderAllBodiesForBounds");
        bSyncAttachParentLOD_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bSyncAttachParentLOD");
        bSyncAttachParentLOD_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bSyncAttachParentLOD");
        bCastCapsuleDirectShadow_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bCastCapsuleDirectShadow");
        bCastCapsuleDirectShadow_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bCastCapsuleDirectShadow");
        bCastCapsuleIndirectShadow_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bCastCapsuleIndirectShadow");
        bCastCapsuleIndirectShadow_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bCastCapsuleIndirectShadow");
        bEnableUpdateRateOptimizations_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bEnableUpdateRateOptimizations");
        bEnableUpdateRateOptimizations_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bEnableUpdateRateOptimizations");
        bDisplayDebugUpdateRateOptimizations_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bDisplayDebugUpdateRateOptimizations");
        bDisplayDebugUpdateRateOptimizations_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bDisplayDebugUpdateRateOptimizations");
        bRenderStatic_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bRenderStatic");
        bRenderStatic_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bRenderStatic");
        bIgnoreLeaderPoseComponentLOD_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bIgnoreLeaderPoseComponentLOD");
        bIgnoreLeaderPoseComponentLOD_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bIgnoreLeaderPoseComponentLOD");
        CapsuleIndirectShadowMinVisibility_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "CapsuleIndirectShadowMinVisibility");
        
        UnsetMeshDeformer_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "UnsetMeshDeformer");
        UnloadSkinWeightProfile_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "UnloadSkinWeightProfile");
        UnloadSkinWeightProfile_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(UnloadSkinWeightProfile_NativeFunction);
        UnloadSkinWeightProfile_InProfileName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(UnloadSkinWeightProfile_NativeFunction, "InProfileName");
        UnHideBoneByName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "UnHideBoneByName");
        UnHideBoneByName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(UnHideBoneByName_NativeFunction);
        UnHideBoneByName_BoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(UnHideBoneByName_NativeFunction, "BoneName");
        TransformToBoneSpace_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "TransformToBoneSpace");
        TransformToBoneSpace_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(TransformToBoneSpace_NativeFunction);
        TransformToBoneSpace_BoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TransformToBoneSpace_NativeFunction, "BoneName");
        TransformToBoneSpace_InPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TransformToBoneSpace_NativeFunction, "InPosition");
        TransformToBoneSpace_InRotation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TransformToBoneSpace_NativeFunction, "InRotation");
        TransformToBoneSpace_OutPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TransformToBoneSpace_NativeFunction, "OutPosition");
        TransformToBoneSpace_OutRotation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TransformToBoneSpace_NativeFunction, "OutRotation");
        TransformFromBoneSpace_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "TransformFromBoneSpace");
        TransformFromBoneSpace_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(TransformFromBoneSpace_NativeFunction);
        TransformFromBoneSpace_BoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TransformFromBoneSpace_NativeFunction, "BoneName");
        TransformFromBoneSpace_InPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TransformFromBoneSpace_NativeFunction, "InPosition");
        TransformFromBoneSpace_InRotation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TransformFromBoneSpace_NativeFunction, "InRotation");
        TransformFromBoneSpace_OutPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TransformFromBoneSpace_NativeFunction, "OutPosition");
        TransformFromBoneSpace_OutRotation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TransformFromBoneSpace_NativeFunction, "OutRotation");
        ShowMaterialSection_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ShowMaterialSection");
        ShowMaterialSection_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ShowMaterialSection_NativeFunction);
        ShowMaterialSection_MaterialID_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ShowMaterialSection_NativeFunction, "MaterialID");
        ShowMaterialSection_SectionIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ShowMaterialSection_NativeFunction, "SectionIndex");
        ShowMaterialSection_bShow_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ShowMaterialSection_NativeFunction, "bShow");
        ShowMaterialSection_LODIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ShowMaterialSection_NativeFunction, "LODIndex");
        ShowAllMaterialSections_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ShowAllMaterialSections");
        ShowAllMaterialSections_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ShowAllMaterialSections_NativeFunction);
        ShowAllMaterialSections_LODIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ShowAllMaterialSections_NativeFunction, "LODIndex");
        SetVertexOffsetUsage_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetVertexOffsetUsage");
        SetVertexOffsetUsage_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetVertexOffsetUsage_NativeFunction);
        SetVertexOffsetUsage_LODIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetVertexOffsetUsage_NativeFunction, "LODIndex");
        SetVertexOffsetUsage_Usage_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetVertexOffsetUsage_NativeFunction, "Usage");
        SetVertexColorOverride_LinearColor_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetVertexColorOverride_LinearColor");
        SetVertexColorOverride_LinearColor_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetVertexColorOverride_LinearColor_NativeFunction);
        SetVertexColorOverride_LinearColor_LODIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetVertexColorOverride_LinearColor_NativeFunction, "LODIndex");
        SetVertexColorOverride_LinearColor_VertexColors_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetVertexColorOverride_LinearColor_NativeFunction, "VertexColors");
        SetVertexColorOverride_LinearColor_VertexColors_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(SetVertexColorOverride_LinearColor_NativeFunction, "VertexColors");
        SetSkinWeightProfile_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSkinWeightProfile");
        SetSkinWeightProfile_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSkinWeightProfile_NativeFunction);
        SetSkinWeightProfile_InProfileName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSkinWeightProfile_NativeFunction, "InProfileName");
        SetSkinWeightProfile_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSkinWeightProfile_NativeFunction, "ReturnValue");
        SetSkinWeightOverride_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSkinWeightOverride");
        SetSkinWeightOverride_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSkinWeightOverride_NativeFunction);
        SetSkinWeightOverride_LODIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSkinWeightOverride_NativeFunction, "LODIndex");
        SetSkinWeightOverride_SkinWeights_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSkinWeightOverride_NativeFunction, "SkinWeights");
        SetSkinWeightOverride_SkinWeights_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(SetSkinWeightOverride_NativeFunction, "SkinWeights");
        SetSkinnedAssetAndUpdate_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSkinnedAssetAndUpdate");
        SetSkinnedAssetAndUpdate_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSkinnedAssetAndUpdate_NativeFunction);
        SetSkinnedAssetAndUpdate_NewMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSkinnedAssetAndUpdate_NativeFunction, "NewMesh");
        SetSkinnedAssetAndUpdate_bReinitPose_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSkinnedAssetAndUpdate_NativeFunction, "bReinitPose");
        SetRenderStatic_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetRenderStatic");
        SetRenderStatic_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetRenderStatic_NativeFunction);
        SetRenderStatic_bNewValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetRenderStatic_NativeFunction, "bNewValue");
        SetPreSkinningOffsets_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPreSkinningOffsets");
        SetPreSkinningOffsets_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPreSkinningOffsets_NativeFunction);
        SetPreSkinningOffsets_LODIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPreSkinningOffsets_NativeFunction, "LODIndex");
        SetPreSkinningOffsets_Offsets_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPreSkinningOffsets_NativeFunction, "Offsets");
        SetPreSkinningOffsets_Offsets_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(SetPreSkinningOffsets_NativeFunction, "Offsets");
        SetPostSkinningOffsets_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPostSkinningOffsets");
        SetPostSkinningOffsets_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPostSkinningOffsets_NativeFunction);
        SetPostSkinningOffsets_LODIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPostSkinningOffsets_NativeFunction, "LODIndex");
        SetPostSkinningOffsets_Offsets_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPostSkinningOffsets_NativeFunction, "Offsets");
        SetPostSkinningOffsets_Offsets_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(SetPostSkinningOffsets_NativeFunction, "Offsets");
        SetPhysicsAsset_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPhysicsAsset");
        SetPhysicsAsset_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPhysicsAsset_NativeFunction);
        SetPhysicsAsset_NewPhysicsAsset_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPhysicsAsset_NativeFunction, "NewPhysicsAsset");
        SetPhysicsAsset_bForceReInit_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPhysicsAsset_NativeFunction, "bForceReInit");
        SetMinLOD_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetMinLOD");
        SetMinLOD_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetMinLOD_NativeFunction);
        SetMinLOD_InNewMinLOD_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetMinLOD_NativeFunction, "InNewMinLOD");
        SetMeshDeformer_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetMeshDeformer");
        SetMeshDeformer_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetMeshDeformer_NativeFunction);
        SetMeshDeformer_InMeshDeformer_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetMeshDeformer_NativeFunction, "InMeshDeformer");
        SetLeaderPoseComponent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetLeaderPoseComponent");
        SetLeaderPoseComponent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetLeaderPoseComponent_NativeFunction);
        SetLeaderPoseComponent_NewLeaderBoneComponent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLeaderPoseComponent_NativeFunction, "NewLeaderBoneComponent");
        SetLeaderPoseComponent_bForceUpdate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLeaderPoseComponent_NativeFunction, "bForceUpdate");
        SetLeaderPoseComponent_bInFollowerShouldTickPose_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLeaderPoseComponent_NativeFunction, "bInFollowerShouldTickPose");
        SetForcedLOD_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetForcedLOD");
        SetForcedLOD_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetForcedLOD_NativeFunction);
        SetForcedLOD_InNewForcedLOD_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetForcedLOD_NativeFunction, "InNewForcedLOD");
        SetCastCapsuleIndirectShadow_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCastCapsuleIndirectShadow");
        SetCastCapsuleIndirectShadow_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCastCapsuleIndirectShadow_NativeFunction);
        SetCastCapsuleIndirectShadow_bNewValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCastCapsuleIndirectShadow_NativeFunction, "bNewValue");
        SetCastCapsuleDirectShadow_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCastCapsuleDirectShadow");
        SetCastCapsuleDirectShadow_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCastCapsuleDirectShadow_NativeFunction);
        SetCastCapsuleDirectShadow_bNewValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCastCapsuleDirectShadow_NativeFunction, "bNewValue");
        SetCapsuleIndirectShadowMinVisibility_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCapsuleIndirectShadowMinVisibility");
        SetCapsuleIndirectShadowMinVisibility_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCapsuleIndirectShadowMinVisibility_NativeFunction);
        SetCapsuleIndirectShadowMinVisibility_NewValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCapsuleIndirectShadowMinVisibility_NativeFunction, "NewValue");
        IsUsingSkinWeightProfile_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsUsingSkinWeightProfile");
        IsUsingSkinWeightProfile_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsUsingSkinWeightProfile_NativeFunction);
        IsUsingSkinWeightProfile_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsUsingSkinWeightProfile_NativeFunction, "ReturnValue");
        IsMaterialSectionShown_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsMaterialSectionShown");
        IsMaterialSectionShown_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsMaterialSectionShown_NativeFunction);
        IsMaterialSectionShown_MaterialID_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsMaterialSectionShown_NativeFunction, "MaterialID");
        IsMaterialSectionShown_LODIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsMaterialSectionShown_NativeFunction, "LODIndex");
        IsMaterialSectionShown_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsMaterialSectionShown_NativeFunction, "ReturnValue");
        IsBoneHiddenByName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsBoneHiddenByName");
        IsBoneHiddenByName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsBoneHiddenByName_NativeFunction);
        IsBoneHiddenByName_BoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsBoneHiddenByName_NativeFunction, "BoneName");
        IsBoneHiddenByName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsBoneHiddenByName_NativeFunction, "ReturnValue");
        HideBoneByName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "HideBoneByName");
        HideBoneByName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(HideBoneByName_NativeFunction);
        HideBoneByName_BoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HideBoneByName_NativeFunction, "BoneName");
        HideBoneByName_PhysBodyOption_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HideBoneByName_NativeFunction, "PhysBodyOption");
        GetVertexOffsetUsage_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetVertexOffsetUsage");
        GetVertexOffsetUsage_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetVertexOffsetUsage_NativeFunction);
        GetVertexOffsetUsage_LODIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetVertexOffsetUsage_NativeFunction, "LODIndex");
        GetVertexOffsetUsage_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetVertexOffsetUsage_NativeFunction, "ReturnValue");
        GetTwistAndSwingAngleOfDeltaRotationFromRefPose_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetTwistAndSwingAngleOfDeltaRotationFromRefPose");
        GetTwistAndSwingAngleOfDeltaRotationFromRefPose_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetTwistAndSwingAngleOfDeltaRotationFromRefPose_NativeFunction);
        GetTwistAndSwingAngleOfDeltaRotationFromRefPose_BoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTwistAndSwingAngleOfDeltaRotationFromRefPose_NativeFunction, "BoneName");
        GetTwistAndSwingAngleOfDeltaRotationFromRefPose_OutTwistAngle_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTwistAndSwingAngleOfDeltaRotationFromRefPose_NativeFunction, "OutTwistAngle");
        GetTwistAndSwingAngleOfDeltaRotationFromRefPose_OutSwingAngle_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTwistAndSwingAngleOfDeltaRotationFromRefPose_NativeFunction, "OutSwingAngle");
        GetTwistAndSwingAngleOfDeltaRotationFromRefPose_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTwistAndSwingAngleOfDeltaRotationFromRefPose_NativeFunction, "ReturnValue");
        GetSocketBoneName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSocketBoneName");
        GetSocketBoneName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSocketBoneName_NativeFunction);
        GetSocketBoneName_InSocketName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSocketBoneName_NativeFunction, "InSocketName");
        GetSocketBoneName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSocketBoneName_NativeFunction, "ReturnValue");
        GetSkinnedAsset_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSkinnedAsset");
        GetSkinnedAsset_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSkinnedAsset_NativeFunction);
        GetSkinnedAsset_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSkinnedAsset_NativeFunction, "ReturnValue");
        GetSkeletalMesh_DEPRECATED_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSkeletalMesh_DEPRECATED");
        GetSkeletalMesh_DEPRECATED_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSkeletalMesh_DEPRECATED_NativeFunction);
        GetSkeletalMesh_DEPRECATED_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSkeletalMesh_DEPRECATED_NativeFunction, "ReturnValue");
        GetRefPoseTransform_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetRefPoseTransform");
        GetRefPoseTransform_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetRefPoseTransform_NativeFunction);
        GetRefPoseTransform_BoneIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetRefPoseTransform_NativeFunction, "BoneIndex");
        GetRefPoseTransform_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetRefPoseTransform_NativeFunction, "ReturnValue");
        GetRefPosePosition_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetRefPosePosition");
        GetRefPosePosition_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetRefPosePosition_NativeFunction);
        GetRefPosePosition_BoneIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetRefPosePosition_NativeFunction, "BoneIndex");
        GetRefPosePosition_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetRefPosePosition_NativeFunction, "ReturnValue");
        GetPredictedLODLevel_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetPredictedLODLevel");
        GetPredictedLODLevel_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetPredictedLODLevel_NativeFunction);
        GetPredictedLODLevel_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetPredictedLODLevel_NativeFunction, "ReturnValue");
        GetParentBone_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetParentBone");
        GetParentBone_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetParentBone_NativeFunction);
        GetParentBone_BoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParentBone_NativeFunction, "BoneName");
        GetParentBone_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParentBone_NativeFunction, "ReturnValue");
        GetNumLODs_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetNumLODs");
        GetNumLODs_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetNumLODs_NativeFunction);
        GetNumLODs_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetNumLODs_NativeFunction, "ReturnValue");
        GetNumBones_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetNumBones");
        GetNumBones_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetNumBones_NativeFunction);
        GetNumBones_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetNumBones_NativeFunction, "ReturnValue");
        GetForcedLOD_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetForcedLOD");
        GetForcedLOD_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetForcedLOD_NativeFunction);
        GetForcedLOD_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetForcedLOD_NativeFunction, "ReturnValue");
        GetDeltaTransformFromRefPose_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetDeltaTransformFromRefPose");
        GetDeltaTransformFromRefPose_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetDeltaTransformFromRefPose_NativeFunction);
        GetDeltaTransformFromRefPose_BoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDeltaTransformFromRefPose_NativeFunction, "BoneName");
        GetDeltaTransformFromRefPose_BaseName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDeltaTransformFromRefPose_NativeFunction, "BaseName");
        GetDeltaTransformFromRefPose_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDeltaTransformFromRefPose_NativeFunction, "ReturnValue");
        GetCurrentSkinWeightProfileName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCurrentSkinWeightProfileName");
        GetCurrentSkinWeightProfileName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCurrentSkinWeightProfileName_NativeFunction);
        GetCurrentSkinWeightProfileName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCurrentSkinWeightProfileName_NativeFunction, "ReturnValue");
        GetBoneTransform_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBoneTransform");
        GetBoneTransform_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBoneTransform_NativeFunction);
        GetBoneTransform_InBoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBoneTransform_NativeFunction, "InBoneName");
        GetBoneTransform_TransformSpace_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBoneTransform_NativeFunction, "TransformSpace");
        GetBoneTransform_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBoneTransform_NativeFunction, "ReturnValue");
        GetBoneName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBoneName");
        GetBoneName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBoneName_NativeFunction);
        GetBoneName_BoneIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBoneName_NativeFunction, "BoneIndex");
        GetBoneName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBoneName_NativeFunction, "ReturnValue");
        GetBoneIndex_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBoneIndex");
        GetBoneIndex_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBoneIndex_NativeFunction);
        GetBoneIndex_BoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBoneIndex_NativeFunction, "BoneName");
        GetBoneIndex_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBoneIndex_NativeFunction, "ReturnValue");
        FindClosestBone_K2_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "FindClosestBone_K2");
        FindClosestBone_K2_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(FindClosestBone_K2_NativeFunction);
        FindClosestBone_K2_TestLocation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(FindClosestBone_K2_NativeFunction, "TestLocation");
        FindClosestBone_K2_BoneLocation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(FindClosestBone_K2_NativeFunction, "BoneLocation");
        FindClosestBone_K2_IgnoreScale_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(FindClosestBone_K2_NativeFunction, "IgnoreScale");
        FindClosestBone_K2_bRequirePhysicsAsset_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(FindClosestBone_K2_NativeFunction, "bRequirePhysicsAsset");
        FindClosestBone_K2_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(FindClosestBone_K2_NativeFunction, "ReturnValue");
        ClearVertexColorOverride_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ClearVertexColorOverride");
        ClearVertexColorOverride_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ClearVertexColorOverride_NativeFunction);
        ClearVertexColorOverride_LODIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ClearVertexColorOverride_NativeFunction, "LODIndex");
        ClearSkinWeightProfile_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ClearSkinWeightProfile");
        ClearSkinWeightOverride_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ClearSkinWeightOverride");
        ClearSkinWeightOverride_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ClearSkinWeightOverride_NativeFunction);
        ClearSkinWeightOverride_LODIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ClearSkinWeightOverride_NativeFunction, "LODIndex");
        BoneIsChildOf_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "BoneIsChildOf");
        BoneIsChildOf_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(BoneIsChildOf_NativeFunction);
        BoneIsChildOf_BoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BoneIsChildOf_NativeFunction, "BoneName");
        BoneIsChildOf_ParentBoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BoneIsChildOf_NativeFunction, "ParentBoneName");
        BoneIsChildOf_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BoneIsChildOf_NativeFunction, "ReturnValue");
        
        
    }
    
    protected SkinnedMeshComponent(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ObjectProperty /Script/Engine.SkinnedMeshComponent:SkeletalMesh
    static readonly int SkeletalMesh_Offset;
    
    public UnrealSharp.Engine.SkeletalMesh SkeletalMesh
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.Engine.SkeletalMesh>.FromNative(IntPtr.Add(NativeObject, SkeletalMesh_Offset), 0, this);
        }
    }
    
    // ObjectProperty /Script/Engine.SkinnedMeshComponent:SkinnedAsset
    static readonly int SkinnedAsset_Offset;
    
    public UnrealSharp.Engine.SkinnedAsset SkinnedAsset
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.Engine.SkinnedAsset>.FromNative(IntPtr.Add(NativeObject, SkinnedAsset_Offset), 0, this);
        }
    }
    
    // WeakObjectProperty /Script/Engine.SkinnedMeshComponent:LeaderPoseComponent
    static readonly int LeaderPoseComponent_Offset;
    
    public WeakObject<UnrealSharp.Engine.SkinnedMeshComponent> LeaderPoseComponent
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<WeakObject<UnrealSharp.Engine.SkinnedMeshComponent>>.FromNative(IntPtr.Add(NativeObject, LeaderPoseComponent_Offset), 0, this);
        }
    }
    
    // ArrayProperty /Script/Engine.SkinnedMeshComponent:SkinCacheUsage
    static readonly int SkinCacheUsage_Offset;
    static readonly IntPtr SkinCacheUsage_NativeProperty;
    UnrealArrayReadOnlyMarshaler<UnrealSharp.Engine.ESkinCacheUsage> SkinCacheUsage_Wrapper = null;
    
    public System.Collections.Generic.IReadOnlyList<UnrealSharp.Engine.ESkinCacheUsage> SkinCacheUsage
    {
        get
        {
            if(SkinCacheUsage_Wrapper == null)
            {
                SkinCacheUsage_Wrapper = new UnrealArrayReadOnlyMarshaler<UnrealSharp.Engine.ESkinCacheUsage>(1, SkinCacheUsage_NativeProperty, BlittableMarshaller<UnrealSharp.Engine.ESkinCacheUsage>.ToNative, BlittableMarshaller<UnrealSharp.Engine.ESkinCacheUsage>.FromNative);
            }
            
            return SkinCacheUsage_Wrapper.FromNative(IntPtr.Add(NativeObject,SkinCacheUsage_Offset),0,this);
        }
    }
    
    // BoolProperty /Script/Engine.SkinnedMeshComponent:bSetMeshDeformer
    static readonly int bSetMeshDeformer_Offset;
    
    public bool bSetMeshDeformer
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bSetMeshDeformer_Offset), 0, this);
        }
    }
    
    // ObjectProperty /Script/Engine.SkinnedMeshComponent:MeshDeformer
    static readonly int MeshDeformer_Offset;
    
    public UnrealSharp.Engine.MeshDeformer MeshDeformer
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.Engine.MeshDeformer>.FromNative(IntPtr.Add(NativeObject, MeshDeformer_Offset), 0, this);
        }
    }
    
    // ObjectProperty /Script/Engine.SkinnedMeshComponent:MeshDeformerInstanceSettings
    static readonly int MeshDeformerInstanceSettings_Offset;
    
    public UnrealSharp.Engine.MeshDeformerInstanceSettings MeshDeformerInstanceSettings
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.Engine.MeshDeformerInstanceSettings>.FromNative(IntPtr.Add(NativeObject, MeshDeformerInstanceSettings_Offset), 0, this);
        }
    }
    
    // ObjectProperty /Script/Engine.SkinnedMeshComponent:MeshDeformerInstance
    static readonly int MeshDeformerInstance_Offset;
    
    public UnrealSharp.Engine.MeshDeformerInstance MeshDeformerInstance
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.Engine.MeshDeformerInstance>.FromNative(IntPtr.Add(NativeObject, MeshDeformerInstance_Offset), 0, this);
        }
    }
    
    // ObjectProperty /Script/Engine.SkinnedMeshComponent:PhysicsAssetOverride
    static readonly int PhysicsAssetOverride_Offset;
    
    public UnrealSharp.Engine.PhysicsAsset PhysicsAssetOverride
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.Engine.PhysicsAsset>.FromNative(IntPtr.Add(NativeObject, PhysicsAssetOverride_Offset), 0, this);
        }
    }
    
    // IntProperty /Script/Engine.SkinnedMeshComponent:ForcedLodModel
    static readonly int ForcedLodModel_Offset;
    
    public int ForcedLodModel
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<int>.FromNative(IntPtr.Add(NativeObject, ForcedLodModel_Offset), 0, this);
        }
    }
    
    // IntProperty /Script/Engine.SkinnedMeshComponent:MinLodModel
    static readonly int MinLodModel_Offset;
    
    public int MinLodModel
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<int>.FromNative(IntPtr.Add(NativeObject, MinLodModel_Offset), 0, this);
        }
    }
    
    // FloatProperty /Script/Engine.SkinnedMeshComponent:StreamingDistanceMultiplier
    static readonly int StreamingDistanceMultiplier_Offset;
    
    public float StreamingDistanceMultiplier
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, StreamingDistanceMultiplier_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, StreamingDistanceMultiplier_Offset), 0, this, value);
        }
    }
    
    // EnumProperty /Script/Engine.SkinnedMeshComponent:VisibilityBasedAnimTickOption
    static readonly int VisibilityBasedAnimTickOption_Offset;
    
    public UnrealSharp.Engine.EVisibilityBasedAnimTickOption VisibilityBasedAnimTickOption
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Engine.EVisibilityBasedAnimTickOption>.FromNative(IntPtr.Add(NativeObject, VisibilityBasedAnimTickOption_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.Engine.EVisibilityBasedAnimTickOption>.ToNative(IntPtr.Add(NativeObject, VisibilityBasedAnimTickOption_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/Engine.SkinnedMeshComponent:bOverrideMinLod
    static readonly int bOverrideMinLod_Offset;
    static readonly IntPtr bOverrideMinLod_NativeProperty;
    
    public bool bOverrideMinLod
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bOverrideMinLod_NativeProperty, bOverrideMinLod_Offset);
        }
    }
    
    // BoolProperty /Script/Engine.SkinnedMeshComponent:bUseBoundsFromLeaderPoseComponent
    static readonly int bUseBoundsFromLeaderPoseComponent_Offset;
    static readonly IntPtr bUseBoundsFromLeaderPoseComponent_NativeProperty;
    
    public bool bUseBoundsFromLeaderPoseComponent
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bUseBoundsFromLeaderPoseComponent_NativeProperty, bUseBoundsFromLeaderPoseComponent_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bUseBoundsFromLeaderPoseComponent_NativeProperty, bUseBoundsFromLeaderPoseComponent_Offset, value);
        }
    }
    
    // BoolProperty /Script/Engine.SkinnedMeshComponent:bDisableMorphTarget
    static readonly int bDisableMorphTarget_Offset;
    static readonly IntPtr bDisableMorphTarget_NativeProperty;
    
    public bool bDisableMorphTarget
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bDisableMorphTarget_NativeProperty, bDisableMorphTarget_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bDisableMorphTarget_NativeProperty, bDisableMorphTarget_Offset, value);
        }
    }
    
    // BoolProperty /Script/Engine.SkinnedMeshComponent:bPerBoneMotionBlur
    static readonly int bPerBoneMotionBlur_Offset;
    static readonly IntPtr bPerBoneMotionBlur_NativeProperty;
    
    public bool bPerBoneMotionBlur
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bPerBoneMotionBlur_NativeProperty, bPerBoneMotionBlur_Offset);
        }
    }
    
    // BoolProperty /Script/Engine.SkinnedMeshComponent:bComponentUseFixedSkelBounds
    static readonly int bComponentUseFixedSkelBounds_Offset;
    static readonly IntPtr bComponentUseFixedSkelBounds_NativeProperty;
    
    public bool bComponentUseFixedSkelBounds
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bComponentUseFixedSkelBounds_NativeProperty, bComponentUseFixedSkelBounds_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bComponentUseFixedSkelBounds_NativeProperty, bComponentUseFixedSkelBounds_Offset, value);
        }
    }
    
    // BoolProperty /Script/Engine.SkinnedMeshComponent:bConsiderAllBodiesForBounds
    static readonly int bConsiderAllBodiesForBounds_Offset;
    static readonly IntPtr bConsiderAllBodiesForBounds_NativeProperty;
    
    public bool bConsiderAllBodiesForBounds
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bConsiderAllBodiesForBounds_NativeProperty, bConsiderAllBodiesForBounds_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bConsiderAllBodiesForBounds_NativeProperty, bConsiderAllBodiesForBounds_Offset, value);
        }
    }
    
    // BoolProperty /Script/Engine.SkinnedMeshComponent:bSyncAttachParentLOD
    static readonly int bSyncAttachParentLOD_Offset;
    static readonly IntPtr bSyncAttachParentLOD_NativeProperty;
    
    public bool bSyncAttachParentLOD
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bSyncAttachParentLOD_NativeProperty, bSyncAttachParentLOD_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bSyncAttachParentLOD_NativeProperty, bSyncAttachParentLOD_Offset, value);
        }
    }
    
    // BoolProperty /Script/Engine.SkinnedMeshComponent:bCastCapsuleDirectShadow
    static readonly int bCastCapsuleDirectShadow_Offset;
    static readonly IntPtr bCastCapsuleDirectShadow_NativeProperty;
    
    public bool bCastCapsuleDirectShadow
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bCastCapsuleDirectShadow_NativeProperty, bCastCapsuleDirectShadow_Offset);
        }
    }
    
    // BoolProperty /Script/Engine.SkinnedMeshComponent:bCastCapsuleIndirectShadow
    static readonly int bCastCapsuleIndirectShadow_Offset;
    static readonly IntPtr bCastCapsuleIndirectShadow_NativeProperty;
    
    public bool bCastCapsuleIndirectShadow
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bCastCapsuleIndirectShadow_NativeProperty, bCastCapsuleIndirectShadow_Offset);
        }
    }
    
    // BoolProperty /Script/Engine.SkinnedMeshComponent:bEnableUpdateRateOptimizations
    static readonly int bEnableUpdateRateOptimizations_Offset;
    static readonly IntPtr bEnableUpdateRateOptimizations_NativeProperty;
    
    public bool bEnableUpdateRateOptimizations
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bEnableUpdateRateOptimizations_NativeProperty, bEnableUpdateRateOptimizations_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bEnableUpdateRateOptimizations_NativeProperty, bEnableUpdateRateOptimizations_Offset, value);
        }
    }
    
    // BoolProperty /Script/Engine.SkinnedMeshComponent:bDisplayDebugUpdateRateOptimizations
    static readonly int bDisplayDebugUpdateRateOptimizations_Offset;
    static readonly IntPtr bDisplayDebugUpdateRateOptimizations_NativeProperty;
    
    public bool bDisplayDebugUpdateRateOptimizations
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bDisplayDebugUpdateRateOptimizations_NativeProperty, bDisplayDebugUpdateRateOptimizations_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bDisplayDebugUpdateRateOptimizations_NativeProperty, bDisplayDebugUpdateRateOptimizations_Offset, value);
        }
    }
    
    // BoolProperty /Script/Engine.SkinnedMeshComponent:bRenderStatic
    static readonly int bRenderStatic_Offset;
    static readonly IntPtr bRenderStatic_NativeProperty;
    
    public bool bRenderStatic
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bRenderStatic_NativeProperty, bRenderStatic_Offset);
        }
    }
    
    // BoolProperty /Script/Engine.SkinnedMeshComponent:bIgnoreLeaderPoseComponentLOD
    static readonly int bIgnoreLeaderPoseComponentLOD_Offset;
    static readonly IntPtr bIgnoreLeaderPoseComponentLOD_NativeProperty;
    
    public bool bIgnoreLeaderPoseComponentLOD
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bIgnoreLeaderPoseComponentLOD_NativeProperty, bIgnoreLeaderPoseComponentLOD_Offset);
        }
    }
    
    // FloatProperty /Script/Engine.SkinnedMeshComponent:CapsuleIndirectShadowMinVisibility
    static readonly int CapsuleIndirectShadowMinVisibility_Offset;
    
    public float CapsuleIndirectShadowMinVisibility
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, CapsuleIndirectShadowMinVisibility_Offset), 0, this);
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:UnsetMeshDeformer
    static readonly IntPtr UnsetMeshDeformer_NativeFunction;
    
    public void UnsetMeshDeformer()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, UnsetMeshDeformer_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:UnloadSkinWeightProfile
    static readonly IntPtr UnloadSkinWeightProfile_NativeFunction;
    static readonly int UnloadSkinWeightProfile_ParamsSize;
    static readonly int UnloadSkinWeightProfile_InProfileName_Offset;
    
    public void UnloadSkinWeightProfile(Name inProfileName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[UnloadSkinWeightProfile_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, UnloadSkinWeightProfile_InProfileName_Offset), 0, null, inProfileName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, UnloadSkinWeightProfile_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:UnHideBoneByName
    static readonly IntPtr UnHideBoneByName_NativeFunction;
    static readonly int UnHideBoneByName_ParamsSize;
    static readonly int UnHideBoneByName_BoneName_Offset;
    
    public void UnHideBoneByName(Name boneName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[UnHideBoneByName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, UnHideBoneByName_BoneName_Offset), 0, null, boneName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, UnHideBoneByName_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:TransformToBoneSpace
    static readonly IntPtr TransformToBoneSpace_NativeFunction;
    static readonly int TransformToBoneSpace_ParamsSize;
    static readonly int TransformToBoneSpace_BoneName_Offset;
    static readonly int TransformToBoneSpace_InPosition_Offset;
    static readonly int TransformToBoneSpace_InRotation_Offset;
    static readonly int TransformToBoneSpace_OutPosition_Offset;
    static readonly int TransformToBoneSpace_OutRotation_Offset;
    
    public void TransformToBoneSpace(Name boneName, System.DoubleNumerics.Vector3 inPosition, UnrealSharp.Rotator inRotation, out System.DoubleNumerics.Vector3 outPosition, out UnrealSharp.Rotator outRotation)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[TransformToBoneSpace_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, TransformToBoneSpace_BoneName_Offset), 0, null, boneName);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, TransformToBoneSpace_InPosition_Offset), 0, null, inPosition);
            BlittableMarshaller<UnrealSharp.Rotator>.ToNative(IntPtr.Add(ParamsBuffer, TransformToBoneSpace_InRotation_Offset), 0, null, inRotation);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, TransformToBoneSpace_NativeFunction, ParamsBuffer);
            
            outPosition = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, TransformToBoneSpace_OutPosition_Offset), 0, null);
            outRotation = BlittableMarshaller<UnrealSharp.Rotator>.FromNative(IntPtr.Add(ParamsBuffer, TransformToBoneSpace_OutRotation_Offset), 0, null);
            
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:TransformFromBoneSpace
    static readonly IntPtr TransformFromBoneSpace_NativeFunction;
    static readonly int TransformFromBoneSpace_ParamsSize;
    static readonly int TransformFromBoneSpace_BoneName_Offset;
    static readonly int TransformFromBoneSpace_InPosition_Offset;
    static readonly int TransformFromBoneSpace_InRotation_Offset;
    static readonly int TransformFromBoneSpace_OutPosition_Offset;
    static readonly int TransformFromBoneSpace_OutRotation_Offset;
    
    public void TransformFromBoneSpace(Name boneName, System.DoubleNumerics.Vector3 inPosition, UnrealSharp.Rotator inRotation, out System.DoubleNumerics.Vector3 outPosition, out UnrealSharp.Rotator outRotation)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[TransformFromBoneSpace_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, TransformFromBoneSpace_BoneName_Offset), 0, null, boneName);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, TransformFromBoneSpace_InPosition_Offset), 0, null, inPosition);
            BlittableMarshaller<UnrealSharp.Rotator>.ToNative(IntPtr.Add(ParamsBuffer, TransformFromBoneSpace_InRotation_Offset), 0, null, inRotation);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, TransformFromBoneSpace_NativeFunction, ParamsBuffer);
            
            outPosition = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, TransformFromBoneSpace_OutPosition_Offset), 0, null);
            outRotation = BlittableMarshaller<UnrealSharp.Rotator>.FromNative(IntPtr.Add(ParamsBuffer, TransformFromBoneSpace_OutRotation_Offset), 0, null);
            
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:ShowMaterialSection
    static readonly IntPtr ShowMaterialSection_NativeFunction;
    static readonly int ShowMaterialSection_ParamsSize;
    static readonly int ShowMaterialSection_MaterialID_Offset;
    static readonly int ShowMaterialSection_SectionIndex_Offset;
    static readonly int ShowMaterialSection_bShow_Offset;
    static readonly int ShowMaterialSection_LODIndex_Offset;
    
    public void ShowMaterialSection(int materialID, int sectionIndex, bool bShow, int lODIndex)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ShowMaterialSection_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, ShowMaterialSection_MaterialID_Offset), 0, null, materialID);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, ShowMaterialSection_SectionIndex_Offset), 0, null, sectionIndex);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ShowMaterialSection_bShow_Offset), 0, null, bShow);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, ShowMaterialSection_LODIndex_Offset), 0, null, lODIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ShowMaterialSection_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:ShowAllMaterialSections
    static readonly IntPtr ShowAllMaterialSections_NativeFunction;
    static readonly int ShowAllMaterialSections_ParamsSize;
    static readonly int ShowAllMaterialSections_LODIndex_Offset;
    
    public void ShowAllMaterialSections(int lODIndex)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ShowAllMaterialSections_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, ShowAllMaterialSections_LODIndex_Offset), 0, null, lODIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ShowAllMaterialSections_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:SetVertexOffsetUsage
    static readonly IntPtr SetVertexOffsetUsage_NativeFunction;
    static readonly int SetVertexOffsetUsage_ParamsSize;
    static readonly int SetVertexOffsetUsage_LODIndex_Offset;
    static readonly int SetVertexOffsetUsage_Usage_Offset;
    
    public void SetVertexOffsetUsage(int lODIndex, int usage)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetVertexOffsetUsage_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetVertexOffsetUsage_LODIndex_Offset), 0, null, lODIndex);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetVertexOffsetUsage_Usage_Offset), 0, null, usage);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetVertexOffsetUsage_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:SetVertexColorOverride_LinearColor
    static readonly IntPtr SetVertexColorOverride_LinearColor_NativeFunction;
    static readonly int SetVertexColorOverride_LinearColor_ParamsSize;
    static readonly int SetVertexColorOverride_LinearColor_LODIndex_Offset;
    static readonly int SetVertexColorOverride_LinearColor_VertexColors_Offset;
    static readonly int SetVertexColorOverride_LinearColor_VertexColors_ElementSize;
    
    public void SetVertexColorOverride_LinearColor(int lODIndex, System.Collections.Generic.IList<UnrealSharp.CoreUObject.LinearColor> vertexColors)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetVertexColorOverride_LinearColor_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetVertexColorOverride_LinearColor_LODIndex_Offset), 0, null, lODIndex);
            IntPtr VertexColors_NativeBuffer = IntPtr.Add(ParamsBuffer, SetVertexColorOverride_LinearColor_VertexColors_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.LinearColor> VertexColors_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.LinearColor>(1, BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.ToNative, BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.FromNative, SetVertexColorOverride_LinearColor_VertexColors_ElementSize);
            VertexColors_Marshaler.ToNative(VertexColors_NativeBuffer, 0, null, vertexColors);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetVertexColorOverride_LinearColor_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:SetSkinWeightProfile
    static readonly IntPtr SetSkinWeightProfile_NativeFunction;
    static readonly int SetSkinWeightProfile_ParamsSize;
    static readonly int SetSkinWeightProfile_InProfileName_Offset;
    static readonly int SetSkinWeightProfile_ReturnValue_Offset;
    
    public bool SetSkinWeightProfile(Name inProfileName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSkinWeightProfile_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetSkinWeightProfile_InProfileName_Offset), 0, null, inProfileName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSkinWeightProfile_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetSkinWeightProfile_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:SetSkinWeightOverride
    static readonly IntPtr SetSkinWeightOverride_NativeFunction;
    static readonly int SetSkinWeightOverride_ParamsSize;
    static readonly int SetSkinWeightOverride_LODIndex_Offset;
    static readonly int SetSkinWeightOverride_SkinWeights_Offset;
    static readonly int SetSkinWeightOverride_SkinWeights_ElementSize;
    
    public void SetSkinWeightOverride(int lODIndex, System.Collections.Generic.IList<UnrealSharp.Engine.SkelMeshSkinWeightInfo> skinWeights)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSkinWeightOverride_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetSkinWeightOverride_LODIndex_Offset), 0, null, lODIndex);
            IntPtr SkinWeights_NativeBuffer = IntPtr.Add(ParamsBuffer, SetSkinWeightOverride_SkinWeights_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.SkelMeshSkinWeightInfo> SkinWeights_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Engine.SkelMeshSkinWeightInfo>(1, UnrealSharp.Engine.SkelMeshSkinWeightInfoMarshaler.ToNative, UnrealSharp.Engine.SkelMeshSkinWeightInfoMarshaler.FromNative, SetSkinWeightOverride_SkinWeights_ElementSize);
            SkinWeights_Marshaler.ToNative(SkinWeights_NativeBuffer, 0, null, skinWeights);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSkinWeightOverride_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:SetSkinnedAssetAndUpdate
    static readonly IntPtr SetSkinnedAssetAndUpdate_NativeFunction;
    static readonly int SetSkinnedAssetAndUpdate_ParamsSize;
    static readonly int SetSkinnedAssetAndUpdate_NewMesh_Offset;
    static readonly int SetSkinnedAssetAndUpdate_bReinitPose_Offset;
    
    public void SetSkinnedAssetAndUpdate(UnrealSharp.Engine.SkinnedAsset newMesh, bool bReinitPose = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSkinnedAssetAndUpdate_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.SkinnedAsset>.ToNative(IntPtr.Add(ParamsBuffer, SetSkinnedAssetAndUpdate_NewMesh_Offset), 0, null, newMesh);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetSkinnedAssetAndUpdate_bReinitPose_Offset), 0, null, bReinitPose);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSkinnedAssetAndUpdate_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:SetRenderStatic
    static readonly IntPtr SetRenderStatic_NativeFunction;
    static readonly int SetRenderStatic_ParamsSize;
    static readonly int SetRenderStatic_bNewValue_Offset;
    
    public void SetRenderStatic(bool bNewValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetRenderStatic_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetRenderStatic_bNewValue_Offset), 0, null, bNewValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetRenderStatic_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:SetPreSkinningOffsets
    static readonly IntPtr SetPreSkinningOffsets_NativeFunction;
    static readonly int SetPreSkinningOffsets_ParamsSize;
    static readonly int SetPreSkinningOffsets_LODIndex_Offset;
    static readonly int SetPreSkinningOffsets_Offsets_Offset;
    static readonly int SetPreSkinningOffsets_Offsets_ElementSize;
    
    public void SetPreSkinningOffsets(int lODIndex, System.Collections.Generic.IList<System.DoubleNumerics.Vector3> offsets)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPreSkinningOffsets_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetPreSkinningOffsets_LODIndex_Offset), 0, null, lODIndex);
            IntPtr Offsets_NativeBuffer = IntPtr.Add(ParamsBuffer, SetPreSkinningOffsets_Offsets_Offset);
            UnrealArrayCopyMarshaler<System.DoubleNumerics.Vector3> Offsets_Marshaler = new UnrealArrayCopyMarshaler<System.DoubleNumerics.Vector3>(1, BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative, BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative, SetPreSkinningOffsets_Offsets_ElementSize);
            Offsets_Marshaler.ToNative(Offsets_NativeBuffer, 0, null, offsets);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPreSkinningOffsets_NativeFunction, ParamsBuffer);
            
            UnrealArrayCopyMarshaler<System.DoubleNumerics.Vector3>.DestructInstance(Offsets_NativeBuffer, 0);
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:SetPostSkinningOffsets
    static readonly IntPtr SetPostSkinningOffsets_NativeFunction;
    static readonly int SetPostSkinningOffsets_ParamsSize;
    static readonly int SetPostSkinningOffsets_LODIndex_Offset;
    static readonly int SetPostSkinningOffsets_Offsets_Offset;
    static readonly int SetPostSkinningOffsets_Offsets_ElementSize;
    
    public void SetPostSkinningOffsets(int lODIndex, System.Collections.Generic.IList<System.DoubleNumerics.Vector3> offsets)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPostSkinningOffsets_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetPostSkinningOffsets_LODIndex_Offset), 0, null, lODIndex);
            IntPtr Offsets_NativeBuffer = IntPtr.Add(ParamsBuffer, SetPostSkinningOffsets_Offsets_Offset);
            UnrealArrayCopyMarshaler<System.DoubleNumerics.Vector3> Offsets_Marshaler = new UnrealArrayCopyMarshaler<System.DoubleNumerics.Vector3>(1, BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative, BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative, SetPostSkinningOffsets_Offsets_ElementSize);
            Offsets_Marshaler.ToNative(Offsets_NativeBuffer, 0, null, offsets);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPostSkinningOffsets_NativeFunction, ParamsBuffer);
            
            UnrealArrayCopyMarshaler<System.DoubleNumerics.Vector3>.DestructInstance(Offsets_NativeBuffer, 0);
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:SetPhysicsAsset
    static readonly IntPtr SetPhysicsAsset_NativeFunction;
    static readonly int SetPhysicsAsset_ParamsSize;
    static readonly int SetPhysicsAsset_NewPhysicsAsset_Offset;
    static readonly int SetPhysicsAsset_bForceReInit_Offset;
    
    public void SetPhysicsAsset(UnrealSharp.Engine.PhysicsAsset newPhysicsAsset, bool bForceReInit = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPhysicsAsset_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.PhysicsAsset>.ToNative(IntPtr.Add(ParamsBuffer, SetPhysicsAsset_NewPhysicsAsset_Offset), 0, null, newPhysicsAsset);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetPhysicsAsset_bForceReInit_Offset), 0, null, bForceReInit);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPhysicsAsset_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:SetMinLOD
    static readonly IntPtr SetMinLOD_NativeFunction;
    static readonly int SetMinLOD_ParamsSize;
    static readonly int SetMinLOD_InNewMinLOD_Offset;
    
    public void SetMinLOD(int inNewMinLOD)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetMinLOD_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetMinLOD_InNewMinLOD_Offset), 0, null, inNewMinLOD);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetMinLOD_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:SetMeshDeformer
    static readonly IntPtr SetMeshDeformer_NativeFunction;
    static readonly int SetMeshDeformer_ParamsSize;
    static readonly int SetMeshDeformer_InMeshDeformer_Offset;
    
    public void SetMeshDeformer(UnrealSharp.Engine.MeshDeformer inMeshDeformer)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetMeshDeformer_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.MeshDeformer>.ToNative(IntPtr.Add(ParamsBuffer, SetMeshDeformer_InMeshDeformer_Offset), 0, null, inMeshDeformer);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetMeshDeformer_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:SetLeaderPoseComponent
    static readonly IntPtr SetLeaderPoseComponent_NativeFunction;
    static readonly int SetLeaderPoseComponent_ParamsSize;
    static readonly int SetLeaderPoseComponent_NewLeaderBoneComponent_Offset;
    static readonly int SetLeaderPoseComponent_bForceUpdate_Offset;
    static readonly int SetLeaderPoseComponent_bInFollowerShouldTickPose_Offset;
    
    public void SetLeaderPoseComponent(UnrealSharp.Engine.SkinnedMeshComponent newLeaderBoneComponent, bool bForceUpdate = false, bool bInFollowerShouldTickPose = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetLeaderPoseComponent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.SkinnedMeshComponent>.ToNative(IntPtr.Add(ParamsBuffer, SetLeaderPoseComponent_NewLeaderBoneComponent_Offset), 0, null, newLeaderBoneComponent);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetLeaderPoseComponent_bForceUpdate_Offset), 0, null, bForceUpdate);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetLeaderPoseComponent_bInFollowerShouldTickPose_Offset), 0, null, bInFollowerShouldTickPose);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetLeaderPoseComponent_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:SetForcedLOD
    static readonly IntPtr SetForcedLOD_NativeFunction;
    static readonly int SetForcedLOD_ParamsSize;
    static readonly int SetForcedLOD_InNewForcedLOD_Offset;
    
    public void SetForcedLOD(int inNewForcedLOD)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetForcedLOD_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetForcedLOD_InNewForcedLOD_Offset), 0, null, inNewForcedLOD);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetForcedLOD_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:SetCastCapsuleIndirectShadow
    static readonly IntPtr SetCastCapsuleIndirectShadow_NativeFunction;
    static readonly int SetCastCapsuleIndirectShadow_ParamsSize;
    static readonly int SetCastCapsuleIndirectShadow_bNewValue_Offset;
    
    public void SetCastCapsuleIndirectShadow(bool bNewValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCastCapsuleIndirectShadow_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCastCapsuleIndirectShadow_bNewValue_Offset), 0, null, bNewValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCastCapsuleIndirectShadow_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:SetCastCapsuleDirectShadow
    static readonly IntPtr SetCastCapsuleDirectShadow_NativeFunction;
    static readonly int SetCastCapsuleDirectShadow_ParamsSize;
    static readonly int SetCastCapsuleDirectShadow_bNewValue_Offset;
    
    public void SetCastCapsuleDirectShadow(bool bNewValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCastCapsuleDirectShadow_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCastCapsuleDirectShadow_bNewValue_Offset), 0, null, bNewValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCastCapsuleDirectShadow_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:SetCapsuleIndirectShadowMinVisibility
    static readonly IntPtr SetCapsuleIndirectShadowMinVisibility_NativeFunction;
    static readonly int SetCapsuleIndirectShadowMinVisibility_ParamsSize;
    static readonly int SetCapsuleIndirectShadowMinVisibility_NewValue_Offset;
    
    public void SetCapsuleIndirectShadowMinVisibility(float newValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCapsuleIndirectShadowMinVisibility_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetCapsuleIndirectShadowMinVisibility_NewValue_Offset), 0, null, newValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCapsuleIndirectShadowMinVisibility_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:IsUsingSkinWeightProfile
    static readonly IntPtr IsUsingSkinWeightProfile_NativeFunction;
    static readonly int IsUsingSkinWeightProfile_ParamsSize;
    static readonly int IsUsingSkinWeightProfile_ReturnValue_Offset;
    
    public bool IsUsingSkinWeightProfile()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsUsingSkinWeightProfile_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsUsingSkinWeightProfile_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsUsingSkinWeightProfile_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:IsMaterialSectionShown
    static readonly IntPtr IsMaterialSectionShown_NativeFunction;
    static readonly int IsMaterialSectionShown_ParamsSize;
    static readonly int IsMaterialSectionShown_MaterialID_Offset;
    static readonly int IsMaterialSectionShown_LODIndex_Offset;
    static readonly int IsMaterialSectionShown_ReturnValue_Offset;
    
    public bool IsMaterialSectionShown(int materialID, int lODIndex)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsMaterialSectionShown_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, IsMaterialSectionShown_MaterialID_Offset), 0, null, materialID);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, IsMaterialSectionShown_LODIndex_Offset), 0, null, lODIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsMaterialSectionShown_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsMaterialSectionShown_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:IsBoneHiddenByName
    static readonly IntPtr IsBoneHiddenByName_NativeFunction;
    static readonly int IsBoneHiddenByName_ParamsSize;
    static readonly int IsBoneHiddenByName_BoneName_Offset;
    static readonly int IsBoneHiddenByName_ReturnValue_Offset;
    
    public bool IsBoneHiddenByName(Name boneName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsBoneHiddenByName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, IsBoneHiddenByName_BoneName_Offset), 0, null, boneName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsBoneHiddenByName_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsBoneHiddenByName_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:HideBoneByName
    static readonly IntPtr HideBoneByName_NativeFunction;
    static readonly int HideBoneByName_ParamsSize;
    static readonly int HideBoneByName_BoneName_Offset;
    static readonly int HideBoneByName_PhysBodyOption_Offset;
    
    public void HideBoneByName(Name boneName, UnrealSharp.Engine.EPhysBodyOp physBodyOption)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[HideBoneByName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, HideBoneByName_BoneName_Offset), 0, null, boneName);
            BlittableMarshaller<UnrealSharp.Engine.EPhysBodyOp>.ToNative(IntPtr.Add(ParamsBuffer, HideBoneByName_PhysBodyOption_Offset), 0, null, physBodyOption);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, HideBoneByName_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:GetVertexOffsetUsage
    static readonly IntPtr GetVertexOffsetUsage_NativeFunction;
    static readonly int GetVertexOffsetUsage_ParamsSize;
    static readonly int GetVertexOffsetUsage_LODIndex_Offset;
    static readonly int GetVertexOffsetUsage_ReturnValue_Offset;
    
    public int GetVertexOffsetUsage(int lODIndex)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetVertexOffsetUsage_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetVertexOffsetUsage_LODIndex_Offset), 0, null, lODIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetVertexOffsetUsage_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetVertexOffsetUsage_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:GetTwistAndSwingAngleOfDeltaRotationFromRefPose
    static readonly IntPtr GetTwistAndSwingAngleOfDeltaRotationFromRefPose_NativeFunction;
    static readonly int GetTwistAndSwingAngleOfDeltaRotationFromRefPose_ParamsSize;
    static readonly int GetTwistAndSwingAngleOfDeltaRotationFromRefPose_BoneName_Offset;
    static readonly int GetTwistAndSwingAngleOfDeltaRotationFromRefPose_OutTwistAngle_Offset;
    static readonly int GetTwistAndSwingAngleOfDeltaRotationFromRefPose_OutSwingAngle_Offset;
    static readonly int GetTwistAndSwingAngleOfDeltaRotationFromRefPose_ReturnValue_Offset;
    
    public bool GetTwistAndSwingAngleOfDeltaRotationFromRefPose(Name boneName, out float outTwistAngle, out float outSwingAngle)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetTwistAndSwingAngleOfDeltaRotationFromRefPose_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetTwistAndSwingAngleOfDeltaRotationFromRefPose_BoneName_Offset), 0, null, boneName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetTwistAndSwingAngleOfDeltaRotationFromRefPose_NativeFunction, ParamsBuffer);
            
            outTwistAngle = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetTwistAndSwingAngleOfDeltaRotationFromRefPose_OutTwistAngle_Offset), 0, null);
            outSwingAngle = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetTwistAndSwingAngleOfDeltaRotationFromRefPose_OutSwingAngle_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetTwistAndSwingAngleOfDeltaRotationFromRefPose_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:GetSocketBoneName
    static readonly IntPtr GetSocketBoneName_NativeFunction;
    static readonly int GetSocketBoneName_ParamsSize;
    static readonly int GetSocketBoneName_InSocketName_Offset;
    static readonly int GetSocketBoneName_ReturnValue_Offset;
    
    public Name GetSocketBoneName(Name inSocketName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSocketBoneName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetSocketBoneName_InSocketName_Offset), 0, null, inSocketName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSocketBoneName_NativeFunction, ParamsBuffer);
            
            Name returnValue;
            returnValue = BlittableMarshaller<Name>.FromNative(IntPtr.Add(ParamsBuffer, GetSocketBoneName_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:GetSkinnedAsset
    static readonly IntPtr GetSkinnedAsset_NativeFunction;
    static readonly int GetSkinnedAsset_ParamsSize;
    static readonly int GetSkinnedAsset_ReturnValue_Offset;
    
    public UnrealSharp.Engine.SkinnedAsset GetSkinnedAsset()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSkinnedAsset_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSkinnedAsset_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.SkinnedAsset returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.SkinnedAsset>.FromNative(IntPtr.Add(ParamsBuffer, GetSkinnedAsset_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:GetSkeletalMesh_DEPRECATED
    static readonly IntPtr GetSkeletalMesh_DEPRECATED_NativeFunction;
    static readonly int GetSkeletalMesh_DEPRECATED_ParamsSize;
    static readonly int GetSkeletalMesh_DEPRECATED_ReturnValue_Offset;
    
    [Obsolete("Use USkeletalMeshComponent::GetSkeletalMeshAsset() or GetSkinnedAsset() instead.")]
    public UnrealSharp.Engine.SkeletalMesh GetSkeletalMesh_DEPRECATED()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSkeletalMesh_DEPRECATED_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSkeletalMesh_DEPRECATED_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.SkeletalMesh returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.SkeletalMesh>.FromNative(IntPtr.Add(ParamsBuffer, GetSkeletalMesh_DEPRECATED_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:GetRefPoseTransform
    static readonly IntPtr GetRefPoseTransform_NativeFunction;
    static readonly int GetRefPoseTransform_ParamsSize;
    static readonly int GetRefPoseTransform_BoneIndex_Offset;
    static readonly int GetRefPoseTransform_ReturnValue_Offset;
    
    public UnrealSharp.Transform GetRefPoseTransform(int boneIndex)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetRefPoseTransform_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetRefPoseTransform_BoneIndex_Offset), 0, null, boneIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetRefPoseTransform_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Transform returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.Transform>.FromNative(IntPtr.Add(ParamsBuffer, GetRefPoseTransform_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:GetRefPosePosition
    static readonly IntPtr GetRefPosePosition_NativeFunction;
    static readonly int GetRefPosePosition_ParamsSize;
    static readonly int GetRefPosePosition_BoneIndex_Offset;
    static readonly int GetRefPosePosition_ReturnValue_Offset;
    
    public System.DoubleNumerics.Vector3 GetRefPosePosition(int boneIndex)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetRefPosePosition_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetRefPosePosition_BoneIndex_Offset), 0, null, boneIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetRefPosePosition_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector3 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, GetRefPosePosition_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:GetPredictedLODLevel
    static readonly IntPtr GetPredictedLODLevel_NativeFunction;
    static readonly int GetPredictedLODLevel_ParamsSize;
    static readonly int GetPredictedLODLevel_ReturnValue_Offset;
    
    public int GetPredictedLODLevel()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetPredictedLODLevel_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetPredictedLODLevel_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetPredictedLODLevel_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:GetParentBone
    static readonly IntPtr GetParentBone_NativeFunction;
    static readonly int GetParentBone_ParamsSize;
    static readonly int GetParentBone_BoneName_Offset;
    static readonly int GetParentBone_ReturnValue_Offset;
    
    public Name GetParentBone(Name boneName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetParentBone_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetParentBone_BoneName_Offset), 0, null, boneName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetParentBone_NativeFunction, ParamsBuffer);
            
            Name returnValue;
            returnValue = BlittableMarshaller<Name>.FromNative(IntPtr.Add(ParamsBuffer, GetParentBone_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:GetNumLODs
    static readonly IntPtr GetNumLODs_NativeFunction;
    static readonly int GetNumLODs_ParamsSize;
    static readonly int GetNumLODs_ReturnValue_Offset;
    
    public int GetNumLODs()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetNumLODs_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetNumLODs_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetNumLODs_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:GetNumBones
    static readonly IntPtr GetNumBones_NativeFunction;
    static readonly int GetNumBones_ParamsSize;
    static readonly int GetNumBones_ReturnValue_Offset;
    
    public int GetNumBones()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetNumBones_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetNumBones_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetNumBones_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:GetForcedLOD
    static readonly IntPtr GetForcedLOD_NativeFunction;
    static readonly int GetForcedLOD_ParamsSize;
    static readonly int GetForcedLOD_ReturnValue_Offset;
    
    public int GetForcedLOD()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetForcedLOD_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetForcedLOD_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetForcedLOD_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:GetDeltaTransformFromRefPose
    static readonly IntPtr GetDeltaTransformFromRefPose_NativeFunction;
    static readonly int GetDeltaTransformFromRefPose_ParamsSize;
    static readonly int GetDeltaTransformFromRefPose_BoneName_Offset;
    static readonly int GetDeltaTransformFromRefPose_BaseName_Offset;
    static readonly int GetDeltaTransformFromRefPose_ReturnValue_Offset;
    
    public UnrealSharp.Transform GetDeltaTransformFromRefPose(Name boneName, Name baseName = default(Name))
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetDeltaTransformFromRefPose_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetDeltaTransformFromRefPose_BoneName_Offset), 0, null, boneName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetDeltaTransformFromRefPose_BaseName_Offset), 0, null, baseName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetDeltaTransformFromRefPose_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Transform returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.Transform>.FromNative(IntPtr.Add(ParamsBuffer, GetDeltaTransformFromRefPose_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:GetCurrentSkinWeightProfileName
    static readonly IntPtr GetCurrentSkinWeightProfileName_NativeFunction;
    static readonly int GetCurrentSkinWeightProfileName_ParamsSize;
    static readonly int GetCurrentSkinWeightProfileName_ReturnValue_Offset;
    
    public Name GetCurrentSkinWeightProfileName()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCurrentSkinWeightProfileName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCurrentSkinWeightProfileName_NativeFunction, ParamsBuffer);
            
            Name returnValue;
            returnValue = BlittableMarshaller<Name>.FromNative(IntPtr.Add(ParamsBuffer, GetCurrentSkinWeightProfileName_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:GetBoneTransform
    static readonly IntPtr GetBoneTransform_NativeFunction;
    static readonly int GetBoneTransform_ParamsSize;
    static readonly int GetBoneTransform_InBoneName_Offset;
    static readonly int GetBoneTransform_TransformSpace_Offset;
    static readonly int GetBoneTransform_ReturnValue_Offset;
    
    public UnrealSharp.Transform GetBoneTransform(Name inBoneName, UnrealSharp.Engine.ERelativeTransformSpace transformSpace = UnrealSharp.Engine.ERelativeTransformSpace.RTS_World)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBoneTransform_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetBoneTransform_InBoneName_Offset), 0, null, inBoneName);
            BlittableMarshaller<UnrealSharp.Engine.ERelativeTransformSpace>.ToNative(IntPtr.Add(ParamsBuffer, GetBoneTransform_TransformSpace_Offset), 0, null, transformSpace);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetBoneTransform_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Transform returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.Transform>.FromNative(IntPtr.Add(ParamsBuffer, GetBoneTransform_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:GetBoneName
    static readonly IntPtr GetBoneName_NativeFunction;
    static readonly int GetBoneName_ParamsSize;
    static readonly int GetBoneName_BoneIndex_Offset;
    static readonly int GetBoneName_ReturnValue_Offset;
    
    public Name GetBoneName(int boneIndex)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBoneName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetBoneName_BoneIndex_Offset), 0, null, boneIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetBoneName_NativeFunction, ParamsBuffer);
            
            Name returnValue;
            returnValue = BlittableMarshaller<Name>.FromNative(IntPtr.Add(ParamsBuffer, GetBoneName_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:GetBoneIndex
    static readonly IntPtr GetBoneIndex_NativeFunction;
    static readonly int GetBoneIndex_ParamsSize;
    static readonly int GetBoneIndex_BoneName_Offset;
    static readonly int GetBoneIndex_ReturnValue_Offset;
    
    public int GetBoneIndex(Name boneName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBoneIndex_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetBoneIndex_BoneName_Offset), 0, null, boneName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetBoneIndex_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetBoneIndex_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:FindClosestBone_K2
    static readonly IntPtr FindClosestBone_K2_NativeFunction;
    static readonly int FindClosestBone_K2_ParamsSize;
    static readonly int FindClosestBone_K2_TestLocation_Offset;
    static readonly int FindClosestBone_K2_BoneLocation_Offset;
    static readonly int FindClosestBone_K2_IgnoreScale_Offset;
    static readonly int FindClosestBone_K2_bRequirePhysicsAsset_Offset;
    static readonly int FindClosestBone_K2_ReturnValue_Offset;
    
    public Name FindClosestBone_K2(System.DoubleNumerics.Vector3 testLocation, out System.DoubleNumerics.Vector3 boneLocation, float ignoreScale = 0.000000f, bool bRequirePhysicsAsset = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[FindClosestBone_K2_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, FindClosestBone_K2_TestLocation_Offset), 0, null, testLocation);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, FindClosestBone_K2_IgnoreScale_Offset), 0, null, ignoreScale);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, FindClosestBone_K2_bRequirePhysicsAsset_Offset), 0, null, bRequirePhysicsAsset);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, FindClosestBone_K2_NativeFunction, ParamsBuffer);
            
            boneLocation = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, FindClosestBone_K2_BoneLocation_Offset), 0, null);
            Name returnValue;
            returnValue = BlittableMarshaller<Name>.FromNative(IntPtr.Add(ParamsBuffer, FindClosestBone_K2_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:ClearVertexColorOverride
    static readonly IntPtr ClearVertexColorOverride_NativeFunction;
    static readonly int ClearVertexColorOverride_ParamsSize;
    static readonly int ClearVertexColorOverride_LODIndex_Offset;
    
    public void ClearVertexColorOverride(int lODIndex)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ClearVertexColorOverride_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, ClearVertexColorOverride_LODIndex_Offset), 0, null, lODIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ClearVertexColorOverride_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:ClearSkinWeightProfile
    static readonly IntPtr ClearSkinWeightProfile_NativeFunction;
    
    public void ClearSkinWeightProfile()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ClearSkinWeightProfile_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:ClearSkinWeightOverride
    static readonly IntPtr ClearSkinWeightOverride_NativeFunction;
    static readonly int ClearSkinWeightOverride_ParamsSize;
    static readonly int ClearSkinWeightOverride_LODIndex_Offset;
    
    public void ClearSkinWeightOverride(int lODIndex)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ClearSkinWeightOverride_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, ClearSkinWeightOverride_LODIndex_Offset), 0, null, lODIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ClearSkinWeightOverride_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SkinnedMeshComponent:BoneIsChildOf
    static readonly IntPtr BoneIsChildOf_NativeFunction;
    static readonly int BoneIsChildOf_ParamsSize;
    static readonly int BoneIsChildOf_BoneName_Offset;
    static readonly int BoneIsChildOf_ParentBoneName_Offset;
    static readonly int BoneIsChildOf_ReturnValue_Offset;
    
    public bool BoneIsChildOf(Name boneName, Name parentBoneName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[BoneIsChildOf_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, BoneIsChildOf_BoneName_Offset), 0, null, boneName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, BoneIsChildOf_ParentBoneName_Offset), 0, null, parentBoneName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, BoneIsChildOf_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, BoneIsChildOf_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class SoundMix : UnrealSharp.CoreUObject.Object
{
    
    static SoundMix()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("SoundMix");
        
        SoundClassEffects_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "SoundClassEffects");
        SoundClassEffects_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "SoundClassEffects");
        
        
        
    }
    
    protected SoundMix(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ArrayProperty /Script/Engine.SoundMix:SoundClassEffects
    static readonly int SoundClassEffects_Offset;
    static readonly IntPtr SoundClassEffects_NativeProperty;
    UnrealArrayReadOnlyMarshaler<UnrealSharp.Engine.SoundClassAdjuster> SoundClassEffects_Wrapper = null;
    
    public System.Collections.Generic.IReadOnlyList<UnrealSharp.Engine.SoundClassAdjuster> SoundClassEffects
    {
        get
        {
            if(SoundClassEffects_Wrapper == null)
            {
                SoundClassEffects_Wrapper = new UnrealArrayReadOnlyMarshaler<UnrealSharp.Engine.SoundClassAdjuster>(1, SoundClassEffects_NativeProperty, UnrealSharp.Engine.SoundClassAdjusterMarshaler.ToNative, UnrealSharp.Engine.SoundClassAdjusterMarshaler.FromNative);
            }
            
            return SoundClassEffects_Wrapper.FromNative(IntPtr.Add(NativeObject,SoundClassEffects_Offset),0,this);
        }
    }
    
    
}
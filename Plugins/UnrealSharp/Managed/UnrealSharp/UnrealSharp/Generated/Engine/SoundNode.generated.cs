// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
abstract public partial class SoundNode : UnrealSharp.CoreUObject.Object
{
    
    static SoundNode()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("SoundNode");
        
        ChildNodes_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ChildNodes");
        ChildNodes_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "ChildNodes");
        
        
        
    }
    
    protected SoundNode(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ArrayProperty /Script/Engine.SoundNode:ChildNodes
    static readonly int ChildNodes_Offset;
    static readonly IntPtr ChildNodes_NativeProperty;
    UnrealArrayReadOnlyMarshaler<UnrealSharp.Engine.SoundNode> ChildNodes_Wrapper = null;
    
    public System.Collections.Generic.IReadOnlyList<UnrealSharp.Engine.SoundNode> ChildNodes
    {
        get
        {
            if(ChildNodes_Wrapper == null)
            {
                ChildNodes_Wrapper = new UnrealArrayReadOnlyMarshaler<UnrealSharp.Engine.SoundNode>(1, ChildNodes_NativeProperty, ObjectMarshaller<UnrealSharp.Engine.SoundNode>.ToNative, ObjectMarshaller<UnrealSharp.Engine.SoundNode>.FromNative);
            }
            
            return ChildNodes_Wrapper.FromNative(IntPtr.Add(NativeObject,ChildNodes_Offset),0,this);
        }
    }
    
    
}
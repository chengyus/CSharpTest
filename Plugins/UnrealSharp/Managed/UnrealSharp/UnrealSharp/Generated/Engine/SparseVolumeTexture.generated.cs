// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class SparseVolumeTexture : UnrealSharp.CoreUObject.Object
{
    
    static SparseVolumeTexture()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("SparseVolumeTexture");
        
        
        GetSizeZ_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSizeZ");
        GetSizeZ_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSizeZ_NativeFunction);
        GetSizeZ_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSizeZ_NativeFunction, "ReturnValue");
        GetSizeY_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSizeY");
        GetSizeY_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSizeY_NativeFunction);
        GetSizeY_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSizeY_NativeFunction, "ReturnValue");
        GetSizeX_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSizeX");
        GetSizeX_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSizeX_NativeFunction);
        GetSizeX_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSizeX_NativeFunction, "ReturnValue");
        GetNumMipLevels_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetNumMipLevels");
        GetNumMipLevels_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetNumMipLevels_NativeFunction);
        GetNumMipLevels_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetNumMipLevels_NativeFunction, "ReturnValue");
        GetNumFrames_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetNumFrames");
        GetNumFrames_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetNumFrames_NativeFunction);
        GetNumFrames_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetNumFrames_NativeFunction, "ReturnValue");
        
        
    }
    
    protected SparseVolumeTexture(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Engine.SparseVolumeTexture:GetSizeZ
    static readonly IntPtr GetSizeZ_NativeFunction;
    static readonly int GetSizeZ_ParamsSize;
    static readonly int GetSizeZ_ReturnValue_Offset;
    
    public int GetSizeZ()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSizeZ_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSizeZ_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetSizeZ_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SparseVolumeTexture:GetSizeY
    static readonly IntPtr GetSizeY_NativeFunction;
    static readonly int GetSizeY_ParamsSize;
    static readonly int GetSizeY_ReturnValue_Offset;
    
    public int GetSizeY()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSizeY_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSizeY_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetSizeY_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SparseVolumeTexture:GetSizeX
    static readonly IntPtr GetSizeX_NativeFunction;
    static readonly int GetSizeX_ParamsSize;
    static readonly int GetSizeX_ReturnValue_Offset;
    
    public int GetSizeX()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSizeX_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSizeX_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetSizeX_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SparseVolumeTexture:GetNumMipLevels
    static readonly IntPtr GetNumMipLevels_NativeFunction;
    static readonly int GetNumMipLevels_ParamsSize;
    static readonly int GetNumMipLevels_ReturnValue_Offset;
    
    public int GetNumMipLevels()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetNumMipLevels_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetNumMipLevels_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetNumMipLevels_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SparseVolumeTexture:GetNumFrames
    static readonly IntPtr GetNumFrames_NativeFunction;
    static readonly int GetNumFrames_ParamsSize;
    static readonly int GetNumFrames_ReturnValue_Offset;
    
    public int GetNumFrames()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetNumFrames_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetNumFrames_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetNumFrames_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
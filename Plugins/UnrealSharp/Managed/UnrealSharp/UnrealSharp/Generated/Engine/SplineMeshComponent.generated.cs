// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class SplineMeshComponent : UnrealSharp.Engine.StaticMeshComponent
{
    
    static SplineMeshComponent()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("SplineMeshComponent");
        
        
        UpdateMesh_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "UpdateMesh");
        SetStartTangent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetStartTangent");
        SetStartTangent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetStartTangent_NativeFunction);
        SetStartTangent_StartTangent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStartTangent_NativeFunction, "StartTangent");
        SetStartTangent_bUpdateMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStartTangent_NativeFunction, "bUpdateMesh");
        SetStartScale_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetStartScale");
        SetStartScale_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetStartScale_NativeFunction);
        SetStartScale_StartScale_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStartScale_NativeFunction, "StartScale");
        SetStartScale_bUpdateMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStartScale_NativeFunction, "bUpdateMesh");
        SetStartRollDegrees_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetStartRollDegrees");
        SetStartRollDegrees_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetStartRollDegrees_NativeFunction);
        SetStartRollDegrees_StartRollDegrees_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStartRollDegrees_NativeFunction, "StartRollDegrees");
        SetStartRollDegrees_bUpdateMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStartRollDegrees_NativeFunction, "bUpdateMesh");
        SetStartRoll_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetStartRoll");
        SetStartRoll_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetStartRoll_NativeFunction);
        SetStartRoll_StartRoll_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStartRoll_NativeFunction, "StartRoll");
        SetStartRoll_bUpdateMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStartRoll_NativeFunction, "bUpdateMesh");
        SetStartPosition_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetStartPosition");
        SetStartPosition_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetStartPosition_NativeFunction);
        SetStartPosition_StartPos_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStartPosition_NativeFunction, "StartPos");
        SetStartPosition_bUpdateMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStartPosition_NativeFunction, "bUpdateMesh");
        SetStartOffset_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetStartOffset");
        SetStartOffset_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetStartOffset_NativeFunction);
        SetStartOffset_StartOffset_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStartOffset_NativeFunction, "StartOffset");
        SetStartOffset_bUpdateMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStartOffset_NativeFunction, "bUpdateMesh");
        SetStartAndEnd_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetStartAndEnd");
        SetStartAndEnd_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetStartAndEnd_NativeFunction);
        SetStartAndEnd_StartPos_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStartAndEnd_NativeFunction, "StartPos");
        SetStartAndEnd_StartTangent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStartAndEnd_NativeFunction, "StartTangent");
        SetStartAndEnd_EndPos_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStartAndEnd_NativeFunction, "EndPos");
        SetStartAndEnd_EndTangent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStartAndEnd_NativeFunction, "EndTangent");
        SetStartAndEnd_bUpdateMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStartAndEnd_NativeFunction, "bUpdateMesh");
        SetSplineUpDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSplineUpDir");
        SetSplineUpDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSplineUpDir_NativeFunction);
        SetSplineUpDir_InSplineUpDir_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSplineUpDir_NativeFunction, "InSplineUpDir");
        SetSplineUpDir_bUpdateMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSplineUpDir_NativeFunction, "bUpdateMesh");
        SetForwardAxis_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetForwardAxis");
        SetForwardAxis_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetForwardAxis_NativeFunction);
        SetForwardAxis_InForwardAxis_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetForwardAxis_NativeFunction, "InForwardAxis");
        SetForwardAxis_bUpdateMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetForwardAxis_NativeFunction, "bUpdateMesh");
        SetEndTangent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetEndTangent");
        SetEndTangent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetEndTangent_NativeFunction);
        SetEndTangent_EndTangent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEndTangent_NativeFunction, "EndTangent");
        SetEndTangent_bUpdateMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEndTangent_NativeFunction, "bUpdateMesh");
        SetEndScale_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetEndScale");
        SetEndScale_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetEndScale_NativeFunction);
        SetEndScale_EndScale_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEndScale_NativeFunction, "EndScale");
        SetEndScale_bUpdateMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEndScale_NativeFunction, "bUpdateMesh");
        SetEndRollDegrees_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetEndRollDegrees");
        SetEndRollDegrees_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetEndRollDegrees_NativeFunction);
        SetEndRollDegrees_EndRollDegrees_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEndRollDegrees_NativeFunction, "EndRollDegrees");
        SetEndRollDegrees_bUpdateMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEndRollDegrees_NativeFunction, "bUpdateMesh");
        SetEndRoll_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetEndRoll");
        SetEndRoll_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetEndRoll_NativeFunction);
        SetEndRoll_EndRoll_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEndRoll_NativeFunction, "EndRoll");
        SetEndRoll_bUpdateMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEndRoll_NativeFunction, "bUpdateMesh");
        SetEndPosition_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetEndPosition");
        SetEndPosition_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetEndPosition_NativeFunction);
        SetEndPosition_EndPos_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEndPosition_NativeFunction, "EndPos");
        SetEndPosition_bUpdateMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEndPosition_NativeFunction, "bUpdateMesh");
        SetEndOffset_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetEndOffset");
        SetEndOffset_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetEndOffset_NativeFunction);
        SetEndOffset_EndOffset_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEndOffset_NativeFunction, "EndOffset");
        SetEndOffset_bUpdateMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEndOffset_NativeFunction, "bUpdateMesh");
        SetBoundaryMin_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetBoundaryMin");
        SetBoundaryMin_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetBoundaryMin_NativeFunction);
        SetBoundaryMin_InBoundaryMin_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBoundaryMin_NativeFunction, "InBoundaryMin");
        SetBoundaryMin_bUpdateMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBoundaryMin_NativeFunction, "bUpdateMesh");
        SetBoundaryMax_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetBoundaryMax");
        SetBoundaryMax_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetBoundaryMax_NativeFunction);
        SetBoundaryMax_InBoundaryMax_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBoundaryMax_NativeFunction, "InBoundaryMax");
        SetBoundaryMax_bUpdateMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBoundaryMax_NativeFunction, "bUpdateMesh");
        GetStartTangent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetStartTangent");
        GetStartTangent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetStartTangent_NativeFunction);
        GetStartTangent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetStartTangent_NativeFunction, "ReturnValue");
        GetStartScale_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetStartScale");
        GetStartScale_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetStartScale_NativeFunction);
        GetStartScale_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetStartScale_NativeFunction, "ReturnValue");
        GetStartRoll_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetStartRoll");
        GetStartRoll_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetStartRoll_NativeFunction);
        GetStartRoll_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetStartRoll_NativeFunction, "ReturnValue");
        GetStartPosition_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetStartPosition");
        GetStartPosition_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetStartPosition_NativeFunction);
        GetStartPosition_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetStartPosition_NativeFunction, "ReturnValue");
        GetStartOffset_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetStartOffset");
        GetStartOffset_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetStartOffset_NativeFunction);
        GetStartOffset_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetStartOffset_NativeFunction, "ReturnValue");
        GetSplineUpDir_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSplineUpDir");
        GetSplineUpDir_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSplineUpDir_NativeFunction);
        GetSplineUpDir_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSplineUpDir_NativeFunction, "ReturnValue");
        GetForwardAxis_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetForwardAxis");
        GetForwardAxis_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetForwardAxis_NativeFunction);
        GetForwardAxis_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetForwardAxis_NativeFunction, "ReturnValue");
        GetEndTangent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetEndTangent");
        GetEndTangent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetEndTangent_NativeFunction);
        GetEndTangent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetEndTangent_NativeFunction, "ReturnValue");
        GetEndScale_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetEndScale");
        GetEndScale_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetEndScale_NativeFunction);
        GetEndScale_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetEndScale_NativeFunction, "ReturnValue");
        GetEndRoll_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetEndRoll");
        GetEndRoll_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetEndRoll_NativeFunction);
        GetEndRoll_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetEndRoll_NativeFunction, "ReturnValue");
        GetEndPosition_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetEndPosition");
        GetEndPosition_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetEndPosition_NativeFunction);
        GetEndPosition_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetEndPosition_NativeFunction, "ReturnValue");
        GetEndOffset_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetEndOffset");
        GetEndOffset_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetEndOffset_NativeFunction);
        GetEndOffset_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetEndOffset_NativeFunction, "ReturnValue");
        GetBoundaryMin_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBoundaryMin");
        GetBoundaryMin_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBoundaryMin_NativeFunction);
        GetBoundaryMin_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBoundaryMin_NativeFunction, "ReturnValue");
        GetBoundaryMax_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBoundaryMax");
        GetBoundaryMax_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBoundaryMax_NativeFunction);
        GetBoundaryMax_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBoundaryMax_NativeFunction, "ReturnValue");
        
        
    }
    
    protected SplineMeshComponent(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Engine.SplineMeshComponent:UpdateMesh
    static readonly IntPtr UpdateMesh_NativeFunction;
    
    public void UpdateMesh()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, UpdateMesh_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:SetStartTangent
    static readonly IntPtr SetStartTangent_NativeFunction;
    static readonly int SetStartTangent_ParamsSize;
    static readonly int SetStartTangent_StartTangent_Offset;
    static readonly int SetStartTangent_bUpdateMesh_Offset;
    
    public void SetStartTangent(System.DoubleNumerics.Vector3 startTangent, bool bUpdateMesh = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetStartTangent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, SetStartTangent_StartTangent_Offset), 0, null, startTangent);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetStartTangent_bUpdateMesh_Offset), 0, null, bUpdateMesh);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetStartTangent_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:SetStartScale
    static readonly IntPtr SetStartScale_NativeFunction;
    static readonly int SetStartScale_ParamsSize;
    static readonly int SetStartScale_StartScale_Offset;
    static readonly int SetStartScale_bUpdateMesh_Offset;
    
    public void SetStartScale()
    {
        System.DoubleNumerics.Vector2 startScale = new System.DoubleNumerics.Vector2
        {
            X=1.000f,
            Y=1.000f,
        };
        SetStartScale(startScale);
    }
    
    public void SetStartScale(System.DoubleNumerics.Vector2 startScale, bool bUpdateMesh = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetStartScale_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, SetStartScale_StartScale_Offset), 0, null, startScale);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetStartScale_bUpdateMesh_Offset), 0, null, bUpdateMesh);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetStartScale_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:SetStartRollDegrees
    static readonly IntPtr SetStartRollDegrees_NativeFunction;
    static readonly int SetStartRollDegrees_ParamsSize;
    static readonly int SetStartRollDegrees_StartRollDegrees_Offset;
    static readonly int SetStartRollDegrees_bUpdateMesh_Offset;
    
    public void SetStartRollDegrees(float startRollDegrees, bool bUpdateMesh = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetStartRollDegrees_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetStartRollDegrees_StartRollDegrees_Offset), 0, null, startRollDegrees);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetStartRollDegrees_bUpdateMesh_Offset), 0, null, bUpdateMesh);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetStartRollDegrees_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:SetStartRoll
    static readonly IntPtr SetStartRoll_NativeFunction;
    static readonly int SetStartRoll_ParamsSize;
    static readonly int SetStartRoll_StartRoll_Offset;
    static readonly int SetStartRoll_bUpdateMesh_Offset;
    
    public void SetStartRoll(float startRoll, bool bUpdateMesh = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetStartRoll_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetStartRoll_StartRoll_Offset), 0, null, startRoll);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetStartRoll_bUpdateMesh_Offset), 0, null, bUpdateMesh);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetStartRoll_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:SetStartPosition
    static readonly IntPtr SetStartPosition_NativeFunction;
    static readonly int SetStartPosition_ParamsSize;
    static readonly int SetStartPosition_StartPos_Offset;
    static readonly int SetStartPosition_bUpdateMesh_Offset;
    
    public void SetStartPosition(System.DoubleNumerics.Vector3 startPos, bool bUpdateMesh = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetStartPosition_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, SetStartPosition_StartPos_Offset), 0, null, startPos);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetStartPosition_bUpdateMesh_Offset), 0, null, bUpdateMesh);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetStartPosition_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:SetStartOffset
    static readonly IntPtr SetStartOffset_NativeFunction;
    static readonly int SetStartOffset_ParamsSize;
    static readonly int SetStartOffset_StartOffset_Offset;
    static readonly int SetStartOffset_bUpdateMesh_Offset;
    
    public void SetStartOffset(System.DoubleNumerics.Vector2 startOffset, bool bUpdateMesh = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetStartOffset_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, SetStartOffset_StartOffset_Offset), 0, null, startOffset);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetStartOffset_bUpdateMesh_Offset), 0, null, bUpdateMesh);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetStartOffset_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:SetStartAndEnd
    static readonly IntPtr SetStartAndEnd_NativeFunction;
    static readonly int SetStartAndEnd_ParamsSize;
    static readonly int SetStartAndEnd_StartPos_Offset;
    static readonly int SetStartAndEnd_StartTangent_Offset;
    static readonly int SetStartAndEnd_EndPos_Offset;
    static readonly int SetStartAndEnd_EndTangent_Offset;
    static readonly int SetStartAndEnd_bUpdateMesh_Offset;
    
    public void SetStartAndEnd(System.DoubleNumerics.Vector3 startPos, System.DoubleNumerics.Vector3 startTangent, System.DoubleNumerics.Vector3 endPos, System.DoubleNumerics.Vector3 endTangent, bool bUpdateMesh = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetStartAndEnd_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, SetStartAndEnd_StartPos_Offset), 0, null, startPos);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, SetStartAndEnd_StartTangent_Offset), 0, null, startTangent);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, SetStartAndEnd_EndPos_Offset), 0, null, endPos);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, SetStartAndEnd_EndTangent_Offset), 0, null, endTangent);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetStartAndEnd_bUpdateMesh_Offset), 0, null, bUpdateMesh);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetStartAndEnd_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:SetSplineUpDir
    static readonly IntPtr SetSplineUpDir_NativeFunction;
    static readonly int SetSplineUpDir_ParamsSize;
    static readonly int SetSplineUpDir_InSplineUpDir_Offset;
    static readonly int SetSplineUpDir_bUpdateMesh_Offset;
    
    public void SetSplineUpDir(System.DoubleNumerics.Vector3 inSplineUpDir, bool bUpdateMesh = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSplineUpDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, SetSplineUpDir_InSplineUpDir_Offset), 0, null, inSplineUpDir);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetSplineUpDir_bUpdateMesh_Offset), 0, null, bUpdateMesh);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSplineUpDir_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:SetForwardAxis
    static readonly IntPtr SetForwardAxis_NativeFunction;
    static readonly int SetForwardAxis_ParamsSize;
    static readonly int SetForwardAxis_InForwardAxis_Offset;
    static readonly int SetForwardAxis_bUpdateMesh_Offset;
    
    public void SetForwardAxis(UnrealSharp.Engine.ESplineMeshAxis inForwardAxis, bool bUpdateMesh = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetForwardAxis_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.Engine.ESplineMeshAxis>.ToNative(IntPtr.Add(ParamsBuffer, SetForwardAxis_InForwardAxis_Offset), 0, null, inForwardAxis);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetForwardAxis_bUpdateMesh_Offset), 0, null, bUpdateMesh);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetForwardAxis_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:SetEndTangent
    static readonly IntPtr SetEndTangent_NativeFunction;
    static readonly int SetEndTangent_ParamsSize;
    static readonly int SetEndTangent_EndTangent_Offset;
    static readonly int SetEndTangent_bUpdateMesh_Offset;
    
    public void SetEndTangent(System.DoubleNumerics.Vector3 endTangent, bool bUpdateMesh = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetEndTangent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, SetEndTangent_EndTangent_Offset), 0, null, endTangent);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetEndTangent_bUpdateMesh_Offset), 0, null, bUpdateMesh);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetEndTangent_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:SetEndScale
    static readonly IntPtr SetEndScale_NativeFunction;
    static readonly int SetEndScale_ParamsSize;
    static readonly int SetEndScale_EndScale_Offset;
    static readonly int SetEndScale_bUpdateMesh_Offset;
    
    public void SetEndScale()
    {
        System.DoubleNumerics.Vector2 endScale = new System.DoubleNumerics.Vector2
        {
            X=1.000f,
            Y=1.000f,
        };
        SetEndScale(endScale);
    }
    
    public void SetEndScale(System.DoubleNumerics.Vector2 endScale, bool bUpdateMesh = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetEndScale_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, SetEndScale_EndScale_Offset), 0, null, endScale);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetEndScale_bUpdateMesh_Offset), 0, null, bUpdateMesh);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetEndScale_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:SetEndRollDegrees
    static readonly IntPtr SetEndRollDegrees_NativeFunction;
    static readonly int SetEndRollDegrees_ParamsSize;
    static readonly int SetEndRollDegrees_EndRollDegrees_Offset;
    static readonly int SetEndRollDegrees_bUpdateMesh_Offset;
    
    public void SetEndRollDegrees(float endRollDegrees, bool bUpdateMesh = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetEndRollDegrees_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetEndRollDegrees_EndRollDegrees_Offset), 0, null, endRollDegrees);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetEndRollDegrees_bUpdateMesh_Offset), 0, null, bUpdateMesh);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetEndRollDegrees_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:SetEndRoll
    static readonly IntPtr SetEndRoll_NativeFunction;
    static readonly int SetEndRoll_ParamsSize;
    static readonly int SetEndRoll_EndRoll_Offset;
    static readonly int SetEndRoll_bUpdateMesh_Offset;
    
    public void SetEndRoll(float endRoll, bool bUpdateMesh = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetEndRoll_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetEndRoll_EndRoll_Offset), 0, null, endRoll);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetEndRoll_bUpdateMesh_Offset), 0, null, bUpdateMesh);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetEndRoll_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:SetEndPosition
    static readonly IntPtr SetEndPosition_NativeFunction;
    static readonly int SetEndPosition_ParamsSize;
    static readonly int SetEndPosition_EndPos_Offset;
    static readonly int SetEndPosition_bUpdateMesh_Offset;
    
    public void SetEndPosition(System.DoubleNumerics.Vector3 endPos, bool bUpdateMesh = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetEndPosition_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, SetEndPosition_EndPos_Offset), 0, null, endPos);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetEndPosition_bUpdateMesh_Offset), 0, null, bUpdateMesh);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetEndPosition_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:SetEndOffset
    static readonly IntPtr SetEndOffset_NativeFunction;
    static readonly int SetEndOffset_ParamsSize;
    static readonly int SetEndOffset_EndOffset_Offset;
    static readonly int SetEndOffset_bUpdateMesh_Offset;
    
    public void SetEndOffset(System.DoubleNumerics.Vector2 endOffset, bool bUpdateMesh = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetEndOffset_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, SetEndOffset_EndOffset_Offset), 0, null, endOffset);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetEndOffset_bUpdateMesh_Offset), 0, null, bUpdateMesh);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetEndOffset_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:SetBoundaryMin
    static readonly IntPtr SetBoundaryMin_NativeFunction;
    static readonly int SetBoundaryMin_ParamsSize;
    static readonly int SetBoundaryMin_InBoundaryMin_Offset;
    static readonly int SetBoundaryMin_bUpdateMesh_Offset;
    
    public void SetBoundaryMin(float inBoundaryMin, bool bUpdateMesh = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetBoundaryMin_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetBoundaryMin_InBoundaryMin_Offset), 0, null, inBoundaryMin);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetBoundaryMin_bUpdateMesh_Offset), 0, null, bUpdateMesh);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetBoundaryMin_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:SetBoundaryMax
    static readonly IntPtr SetBoundaryMax_NativeFunction;
    static readonly int SetBoundaryMax_ParamsSize;
    static readonly int SetBoundaryMax_InBoundaryMax_Offset;
    static readonly int SetBoundaryMax_bUpdateMesh_Offset;
    
    public void SetBoundaryMax(float inBoundaryMax, bool bUpdateMesh = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetBoundaryMax_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetBoundaryMax_InBoundaryMax_Offset), 0, null, inBoundaryMax);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetBoundaryMax_bUpdateMesh_Offset), 0, null, bUpdateMesh);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetBoundaryMax_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:GetStartTangent
    static readonly IntPtr GetStartTangent_NativeFunction;
    static readonly int GetStartTangent_ParamsSize;
    static readonly int GetStartTangent_ReturnValue_Offset;
    
    public System.DoubleNumerics.Vector3 GetStartTangent()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetStartTangent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetStartTangent_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector3 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, GetStartTangent_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:GetStartScale
    static readonly IntPtr GetStartScale_NativeFunction;
    static readonly int GetStartScale_ParamsSize;
    static readonly int GetStartScale_ReturnValue_Offset;
    
    public System.DoubleNumerics.Vector2 GetStartScale()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetStartScale_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetStartScale_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector2 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(ParamsBuffer, GetStartScale_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:GetStartRoll
    static readonly IntPtr GetStartRoll_NativeFunction;
    static readonly int GetStartRoll_ParamsSize;
    static readonly int GetStartRoll_ReturnValue_Offset;
    
    public float GetStartRoll()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetStartRoll_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetStartRoll_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetStartRoll_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:GetStartPosition
    static readonly IntPtr GetStartPosition_NativeFunction;
    static readonly int GetStartPosition_ParamsSize;
    static readonly int GetStartPosition_ReturnValue_Offset;
    
    public System.DoubleNumerics.Vector3 GetStartPosition()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetStartPosition_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetStartPosition_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector3 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, GetStartPosition_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:GetStartOffset
    static readonly IntPtr GetStartOffset_NativeFunction;
    static readonly int GetStartOffset_ParamsSize;
    static readonly int GetStartOffset_ReturnValue_Offset;
    
    public System.DoubleNumerics.Vector2 GetStartOffset()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetStartOffset_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetStartOffset_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector2 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(ParamsBuffer, GetStartOffset_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:GetSplineUpDir
    static readonly IntPtr GetSplineUpDir_NativeFunction;
    static readonly int GetSplineUpDir_ParamsSize;
    static readonly int GetSplineUpDir_ReturnValue_Offset;
    
    public System.DoubleNumerics.Vector3 GetSplineUpDir()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSplineUpDir_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSplineUpDir_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector3 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, GetSplineUpDir_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:GetForwardAxis
    static readonly IntPtr GetForwardAxis_NativeFunction;
    static readonly int GetForwardAxis_ParamsSize;
    static readonly int GetForwardAxis_ReturnValue_Offset;
    
    public UnrealSharp.Engine.ESplineMeshAxis GetForwardAxis()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetForwardAxis_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetForwardAxis_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.ESplineMeshAxis returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.Engine.ESplineMeshAxis>.FromNative(IntPtr.Add(ParamsBuffer, GetForwardAxis_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:GetEndTangent
    static readonly IntPtr GetEndTangent_NativeFunction;
    static readonly int GetEndTangent_ParamsSize;
    static readonly int GetEndTangent_ReturnValue_Offset;
    
    public System.DoubleNumerics.Vector3 GetEndTangent()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetEndTangent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetEndTangent_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector3 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, GetEndTangent_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:GetEndScale
    static readonly IntPtr GetEndScale_NativeFunction;
    static readonly int GetEndScale_ParamsSize;
    static readonly int GetEndScale_ReturnValue_Offset;
    
    public System.DoubleNumerics.Vector2 GetEndScale()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetEndScale_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetEndScale_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector2 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(ParamsBuffer, GetEndScale_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:GetEndRoll
    static readonly IntPtr GetEndRoll_NativeFunction;
    static readonly int GetEndRoll_ParamsSize;
    static readonly int GetEndRoll_ReturnValue_Offset;
    
    public float GetEndRoll()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetEndRoll_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetEndRoll_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetEndRoll_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:GetEndPosition
    static readonly IntPtr GetEndPosition_NativeFunction;
    static readonly int GetEndPosition_ParamsSize;
    static readonly int GetEndPosition_ReturnValue_Offset;
    
    public System.DoubleNumerics.Vector3 GetEndPosition()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetEndPosition_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetEndPosition_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector3 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, GetEndPosition_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:GetEndOffset
    static readonly IntPtr GetEndOffset_NativeFunction;
    static readonly int GetEndOffset_ParamsSize;
    static readonly int GetEndOffset_ReturnValue_Offset;
    
    public System.DoubleNumerics.Vector2 GetEndOffset()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetEndOffset_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetEndOffset_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector2 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(ParamsBuffer, GetEndOffset_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:GetBoundaryMin
    static readonly IntPtr GetBoundaryMin_NativeFunction;
    static readonly int GetBoundaryMin_ParamsSize;
    static readonly int GetBoundaryMin_ReturnValue_Offset;
    
    public float GetBoundaryMin()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBoundaryMin_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetBoundaryMin_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetBoundaryMin_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.SplineMeshComponent:GetBoundaryMax
    static readonly IntPtr GetBoundaryMax_NativeFunction;
    static readonly int GetBoundaryMax_ParamsSize;
    static readonly int GetBoundaryMax_ReturnValue_Offset;
    
    public float GetBoundaryMax()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBoundaryMax_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetBoundaryMax_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetBoundaryMax_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
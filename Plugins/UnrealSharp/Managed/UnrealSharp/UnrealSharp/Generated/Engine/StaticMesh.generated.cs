// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class StaticMesh : UnrealSharp.Engine.StreamableRenderAsset
{
    
    static readonly IntPtr NativeClassPtr;
    static StaticMesh()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("StaticMesh");
        
        StaticMaterials_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "StaticMaterials");
        StaticMaterials_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "StaticMaterials");
        LODForCollision_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "LODForCollision");
        
        SetNumSourceModels_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetNumSourceModels");
        SetNumSourceModels_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetNumSourceModels_NativeFunction);
        SetNumSourceModels_Num_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNumSourceModels_NativeFunction, "Num");
        SetMinimumLODForPlatform_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetMinimumLODForPlatform");
        SetMinimumLODForPlatform_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetMinimumLODForPlatform_NativeFunction);
        SetMinimumLODForPlatform_PlatformName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetMinimumLODForPlatform_NativeFunction, "PlatformName");
        SetMinimumLODForPlatform_InMinLOD_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetMinimumLODForPlatform_NativeFunction, "InMinLOD");
        SetMaterial_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetMaterial");
        SetMaterial_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetMaterial_NativeFunction);
        SetMaterial_MaterialIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetMaterial_NativeFunction, "MaterialIndex");
        SetMaterial_NewMaterial_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetMaterial_NativeFunction, "NewMaterial");
        RemoveSocket_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveSocket");
        RemoveSocket_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveSocket_NativeFunction);
        RemoveSocket_Socket_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveSocket_NativeFunction, "Socket");
        IsLODScreenSizeAutoComputed_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsLODScreenSizeAutoComputed");
        IsLODScreenSizeAutoComputed_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsLODScreenSizeAutoComputed_NativeFunction);
        IsLODScreenSizeAutoComputed_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsLODScreenSizeAutoComputed_NativeFunction, "ReturnValue");
        GetStaticMeshDescription_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetStaticMeshDescription");
        GetStaticMeshDescription_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetStaticMeshDescription_NativeFunction);
        GetStaticMeshDescription_LODIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetStaticMeshDescription_NativeFunction, "LODIndex");
        GetStaticMeshDescription_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetStaticMeshDescription_NativeFunction, "ReturnValue");
        GetSocketsByTag_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSocketsByTag");
        GetSocketsByTag_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSocketsByTag_NativeFunction);
        GetSocketsByTag_InSocketTag_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSocketsByTag_NativeFunction, "InSocketTag");
        GetSocketsByTag_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSocketsByTag_NativeFunction, "ReturnValue");
        GetSocketsByTag_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetSocketsByTag_NativeFunction, "ReturnValue");
        GetNumTriangles_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetNumTriangles");
        GetNumTriangles_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetNumTriangles_NativeFunction);
        GetNumTriangles_LODIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetNumTriangles_NativeFunction, "LODIndex");
        GetNumTriangles_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetNumTriangles_NativeFunction, "ReturnValue");
        GetNumSections_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetNumSections");
        GetNumSections_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetNumSections_NativeFunction);
        GetNumSections_InLOD_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetNumSections_NativeFunction, "InLOD");
        GetNumSections_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetNumSections_NativeFunction, "ReturnValue");
        GetNumLODs_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetNumLODs");
        GetNumLODs_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetNumLODs_NativeFunction);
        GetNumLODs_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetNumLODs_NativeFunction, "ReturnValue");
        GetMinimumLODForQualityLevel_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetMinimumLODForQualityLevel");
        GetMinimumLODForQualityLevel_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetMinimumLODForQualityLevel_NativeFunction);
        GetMinimumLODForQualityLevel_QualityLevel_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMinimumLODForQualityLevel_NativeFunction, "QualityLevel");
        GetMinimumLODForQualityLevel_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMinimumLODForQualityLevel_NativeFunction, "ReturnValue");
        GetMinimumLODForPlatform_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetMinimumLODForPlatform");
        GetMinimumLODForPlatform_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetMinimumLODForPlatform_NativeFunction);
        GetMinimumLODForPlatform_PlatformName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMinimumLODForPlatform_NativeFunction, "PlatformName");
        GetMinimumLODForPlatform_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMinimumLODForPlatform_NativeFunction, "ReturnValue");
        GetMaterialIndex_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetMaterialIndex");
        GetMaterialIndex_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetMaterialIndex_NativeFunction);
        GetMaterialIndex_MaterialSlotName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMaterialIndex_NativeFunction, "MaterialSlotName");
        GetMaterialIndex_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMaterialIndex_NativeFunction, "ReturnValue");
        GetMaterial_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetMaterial");
        GetMaterial_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetMaterial_NativeFunction);
        GetMaterial_MaterialIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMaterial_NativeFunction, "MaterialIndex");
        GetMaterial_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMaterial_NativeFunction, "ReturnValue");
        GetBounds_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBounds");
        GetBounds_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBounds_NativeFunction);
        GetBounds_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBounds_NativeFunction, "ReturnValue");
        GetBoundingBox_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBoundingBox");
        GetBoundingBox_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBoundingBox_NativeFunction);
        GetBoundingBox_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBoundingBox_NativeFunction, "ReturnValue");
        FindSocket_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "FindSocket");
        FindSocket_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(FindSocket_NativeFunction);
        FindSocket_InSocketName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(FindSocket_NativeFunction, "InSocketName");
        FindSocket_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(FindSocket_NativeFunction, "ReturnValue");
        CreateStaticMeshDescription_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CreateStaticMeshDescription");
        CreateStaticMeshDescription_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(CreateStaticMeshDescription_NativeFunction);
        CreateStaticMeshDescription_Outer_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CreateStaticMeshDescription_NativeFunction, "Outer");
        CreateStaticMeshDescription_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CreateStaticMeshDescription_NativeFunction, "ReturnValue");
        BuildFromStaticMeshDescriptions_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "BuildFromStaticMeshDescriptions");
        BuildFromStaticMeshDescriptions_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(BuildFromStaticMeshDescriptions_NativeFunction);
        BuildFromStaticMeshDescriptions_StaticMeshDescriptions_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BuildFromStaticMeshDescriptions_NativeFunction, "StaticMeshDescriptions");
        BuildFromStaticMeshDescriptions_StaticMeshDescriptions_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(BuildFromStaticMeshDescriptions_NativeFunction, "StaticMeshDescriptions");
        BuildFromStaticMeshDescriptions_bBuildSimpleCollision_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BuildFromStaticMeshDescriptions_NativeFunction, "bBuildSimpleCollision");
        BuildFromStaticMeshDescriptions_bFastBuild_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BuildFromStaticMeshDescriptions_NativeFunction, "bFastBuild");
        AddSocket_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddSocket");
        AddSocket_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddSocket_NativeFunction);
        AddSocket_Socket_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddSocket_NativeFunction, "Socket");
        AddMaterial_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddMaterial");
        AddMaterial_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddMaterial_NativeFunction);
        AddMaterial_Material_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddMaterial_NativeFunction, "Material");
        AddMaterial_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddMaterial_NativeFunction, "ReturnValue");
        
        
    }
    
    protected StaticMesh(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ArrayProperty /Script/Engine.StaticMesh:StaticMaterials
    static readonly int StaticMaterials_Offset;
    static readonly IntPtr StaticMaterials_NativeProperty;
    UnrealArrayReadWriteMarshaler<UnrealSharp.Engine.StaticMaterial> StaticMaterials_Wrapper = null;
    
    public System.Collections.Generic.IList<UnrealSharp.Engine.StaticMaterial> StaticMaterials
    {
        get
        {
            if(StaticMaterials_Wrapper == null)
            {
                StaticMaterials_Wrapper = new UnrealArrayReadWriteMarshaler<UnrealSharp.Engine.StaticMaterial>(1, StaticMaterials_NativeProperty, UnrealSharp.Engine.StaticMaterialMarshaler.ToNative, UnrealSharp.Engine.StaticMaterialMarshaler.FromNative);
            }
            
            return StaticMaterials_Wrapper.FromNative(IntPtr.Add(NativeObject,StaticMaterials_Offset),0,this);
        }
    }
    
    // IntProperty /Script/Engine.StaticMesh:LODForCollision
    static readonly int LODForCollision_Offset;
    
    public int LODForCollision
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<int>.FromNative(IntPtr.Add(NativeObject, LODForCollision_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<int>.ToNative(IntPtr.Add(NativeObject, LODForCollision_Offset), 0, this, value);
        }
    }
    
    // Function /Script/Engine.StaticMesh:SetNumSourceModels
    static readonly IntPtr SetNumSourceModels_NativeFunction;
    static readonly int SetNumSourceModels_ParamsSize;
    static readonly int SetNumSourceModels_Num_Offset;
    
    public void SetNumSourceModels(int num)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetNumSourceModels_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetNumSourceModels_Num_Offset), 0, null, num);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetNumSourceModels_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.StaticMesh:SetMinimumLODForPlatform
    static readonly IntPtr SetMinimumLODForPlatform_NativeFunction;
    static readonly int SetMinimumLODForPlatform_ParamsSize;
    static readonly int SetMinimumLODForPlatform_PlatformName_Offset;
    static readonly int SetMinimumLODForPlatform_InMinLOD_Offset;
    
    public void SetMinimumLODForPlatform(Name platformName, int inMinLOD)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetMinimumLODForPlatform_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetMinimumLODForPlatform_PlatformName_Offset), 0, null, platformName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetMinimumLODForPlatform_InMinLOD_Offset), 0, null, inMinLOD);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetMinimumLODForPlatform_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/Engine.StaticMesh:SetMaterial
    static readonly IntPtr SetMaterial_NativeFunction;
    static readonly int SetMaterial_ParamsSize;
    static readonly int SetMaterial_MaterialIndex_Offset;
    static readonly int SetMaterial_NewMaterial_Offset;
    
    public void SetMaterial(int materialIndex, UnrealSharp.Engine.MaterialInterface newMaterial)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetMaterial_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetMaterial_MaterialIndex_Offset), 0, null, materialIndex);
            ObjectMarshaller<UnrealSharp.Engine.MaterialInterface>.ToNative(IntPtr.Add(ParamsBuffer, SetMaterial_NewMaterial_Offset), 0, null, newMaterial);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetMaterial_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.StaticMesh:RemoveSocket
    static readonly IntPtr RemoveSocket_NativeFunction;
    static readonly int RemoveSocket_ParamsSize;
    static readonly int RemoveSocket_Socket_Offset;
    
    public void RemoveSocket(UnrealSharp.Engine.StaticMeshSocket socket)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveSocket_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.StaticMeshSocket>.ToNative(IntPtr.Add(ParamsBuffer, RemoveSocket_Socket_Offset), 0, null, socket);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveSocket_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.StaticMesh:IsLODScreenSizeAutoComputed
    static readonly IntPtr IsLODScreenSizeAutoComputed_NativeFunction;
    static readonly int IsLODScreenSizeAutoComputed_ParamsSize;
    static readonly int IsLODScreenSizeAutoComputed_ReturnValue_Offset;
    
    public bool IsLODScreenSizeAutoComputed()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsLODScreenSizeAutoComputed_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsLODScreenSizeAutoComputed_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsLODScreenSizeAutoComputed_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.StaticMesh:GetStaticMeshDescription
    static readonly IntPtr GetStaticMeshDescription_NativeFunction;
    static readonly int GetStaticMeshDescription_ParamsSize;
    static readonly int GetStaticMeshDescription_LODIndex_Offset;
    static readonly int GetStaticMeshDescription_ReturnValue_Offset;
    
    public UnrealSharp.StaticMeshDescription.StaticMeshDescription GetStaticMeshDescription(int lODIndex)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetStaticMeshDescription_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetStaticMeshDescription_LODIndex_Offset), 0, null, lODIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetStaticMeshDescription_NativeFunction, ParamsBuffer);
            
            UnrealSharp.StaticMeshDescription.StaticMeshDescription returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.StaticMeshDescription.StaticMeshDescription>.FromNative(IntPtr.Add(ParamsBuffer, GetStaticMeshDescription_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.StaticMesh:GetSocketsByTag
    static readonly IntPtr GetSocketsByTag_NativeFunction;
    static readonly int GetSocketsByTag_ParamsSize;
    static readonly int GetSocketsByTag_InSocketTag_Offset;
    static readonly int GetSocketsByTag_ReturnValue_Offset;
    static readonly int GetSocketsByTag_ReturnValue_ElementSize;
    
    public System.Collections.Generic.IList<UnrealSharp.Engine.StaticMeshSocket> GetSocketsByTag(string inSocketTag)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSocketsByTag_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InSocketTag_NativePtr = IntPtr.Add(ParamsBuffer,GetSocketsByTag_InSocketTag_Offset);
            StringMarshaller.ToNative(InSocketTag_NativePtr,0,null,inSocketTag);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSocketsByTag_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.Engine.StaticMeshSocket> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, GetSocketsByTag_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.StaticMeshSocket> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Engine.StaticMeshSocket> (1, ObjectMarshaller<UnrealSharp.Engine.StaticMeshSocket>.ToNative, ObjectMarshaller<UnrealSharp.Engine.StaticMeshSocket>.FromNative, GetSocketsByTag_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.StaticMeshSocket>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            StringMarshaller.DestructInstance(InSocketTag_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/Engine.StaticMesh:GetNumTriangles
    static readonly IntPtr GetNumTriangles_NativeFunction;
    static readonly int GetNumTriangles_ParamsSize;
    static readonly int GetNumTriangles_LODIndex_Offset;
    static readonly int GetNumTriangles_ReturnValue_Offset;
    
    public int GetNumTriangles(int lODIndex)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetNumTriangles_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetNumTriangles_LODIndex_Offset), 0, null, lODIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetNumTriangles_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetNumTriangles_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.StaticMesh:GetNumSections
    static readonly IntPtr GetNumSections_NativeFunction;
    static readonly int GetNumSections_ParamsSize;
    static readonly int GetNumSections_InLOD_Offset;
    static readonly int GetNumSections_ReturnValue_Offset;
    
    public int GetNumSections(int inLOD)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetNumSections_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetNumSections_InLOD_Offset), 0, null, inLOD);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetNumSections_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetNumSections_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.StaticMesh:GetNumLODs
    static readonly IntPtr GetNumLODs_NativeFunction;
    static readonly int GetNumLODs_ParamsSize;
    static readonly int GetNumLODs_ReturnValue_Offset;
    
    public int GetNumLods()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetNumLODs_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetNumLODs_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetNumLODs_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.StaticMesh:GetMinimumLODForQualityLevel
    static readonly IntPtr GetMinimumLODForQualityLevel_NativeFunction;
    static readonly int GetMinimumLODForQualityLevel_ParamsSize;
    static readonly int GetMinimumLODForQualityLevel_QualityLevel_Offset;
    static readonly int GetMinimumLODForQualityLevel_ReturnValue_Offset;
    
    public int GetMinimumLODForQualityLevel(Name qualityLevel)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetMinimumLODForQualityLevel_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetMinimumLODForQualityLevel_QualityLevel_Offset), 0, null, qualityLevel);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetMinimumLODForQualityLevel_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetMinimumLODForQualityLevel_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.StaticMesh:GetMinimumLODForPlatform
    static readonly IntPtr GetMinimumLODForPlatform_NativeFunction;
    static readonly int GetMinimumLODForPlatform_ParamsSize;
    static readonly int GetMinimumLODForPlatform_PlatformName_Offset;
    static readonly int GetMinimumLODForPlatform_ReturnValue_Offset;
    
    public int GetMinimumLODForPlatform(Name platformName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetMinimumLODForPlatform_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetMinimumLODForPlatform_PlatformName_Offset), 0, null, platformName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetMinimumLODForPlatform_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetMinimumLODForPlatform_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.StaticMesh:GetMaterialIndex
    static readonly IntPtr GetMaterialIndex_NativeFunction;
    static readonly int GetMaterialIndex_ParamsSize;
    static readonly int GetMaterialIndex_MaterialSlotName_Offset;
    static readonly int GetMaterialIndex_ReturnValue_Offset;
    
    public int GetMaterialIndex(Name materialSlotName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetMaterialIndex_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetMaterialIndex_MaterialSlotName_Offset), 0, null, materialSlotName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetMaterialIndex_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetMaterialIndex_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.StaticMesh:GetMaterial
    static readonly IntPtr GetMaterial_NativeFunction;
    static readonly int GetMaterial_ParamsSize;
    static readonly int GetMaterial_MaterialIndex_Offset;
    static readonly int GetMaterial_ReturnValue_Offset;
    
    public UnrealSharp.Engine.MaterialInterface GetMaterial(int materialIndex)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetMaterial_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetMaterial_MaterialIndex_Offset), 0, null, materialIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetMaterial_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.MaterialInterface returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.MaterialInterface>.FromNative(IntPtr.Add(ParamsBuffer, GetMaterial_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.StaticMesh:GetBounds
    static readonly IntPtr GetBounds_NativeFunction;
    static readonly int GetBounds_ParamsSize;
    static readonly int GetBounds_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.BoxSphereBounds GetBounds()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBounds_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetBounds_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.BoxSphereBounds returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.CoreUObject.BoxSphereBounds>.FromNative(IntPtr.Add(ParamsBuffer, GetBounds_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.StaticMesh:GetBoundingBox
    static readonly IntPtr GetBoundingBox_NativeFunction;
    static readonly int GetBoundingBox_ParamsSize;
    static readonly int GetBoundingBox_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.Box GetBoundingBox()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBoundingBox_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetBoundingBox_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.Box returnValue;
            returnValue = UnrealSharp.CoreUObject.BoxMarshaler.FromNative(IntPtr.Add(ParamsBuffer, GetBoundingBox_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.StaticMesh:FindSocket
    static readonly IntPtr FindSocket_NativeFunction;
    static readonly int FindSocket_ParamsSize;
    static readonly int FindSocket_InSocketName_Offset;
    static readonly int FindSocket_ReturnValue_Offset;
    
    public UnrealSharp.Engine.StaticMeshSocket FindSocket(Name inSocketName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[FindSocket_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, FindSocket_InSocketName_Offset), 0, null, inSocketName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, FindSocket_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.StaticMeshSocket returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.StaticMeshSocket>.FromNative(IntPtr.Add(ParamsBuffer, FindSocket_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.StaticMesh:CreateStaticMeshDescription
    static readonly IntPtr CreateStaticMeshDescription_NativeFunction;
    static readonly int CreateStaticMeshDescription_ParamsSize;
    static readonly int CreateStaticMeshDescription_Outer_Offset;
    static readonly int CreateStaticMeshDescription_ReturnValue_Offset;
    
    public static UnrealSharp.StaticMeshDescription.StaticMeshDescription CreateStaticMeshDescription(UnrealSharp.CoreUObject.Object outer = default(UnrealSharp.CoreUObject.Object))
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[CreateStaticMeshDescription_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, CreateStaticMeshDescription_Outer_Offset), 0, null, outer);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, CreateStaticMeshDescription_NativeFunction, ParamsBuffer);
            
            UnrealSharp.StaticMeshDescription.StaticMeshDescription returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.StaticMeshDescription.StaticMeshDescription>.FromNative(IntPtr.Add(ParamsBuffer, CreateStaticMeshDescription_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.StaticMesh:BuildFromStaticMeshDescriptions
    static readonly IntPtr BuildFromStaticMeshDescriptions_NativeFunction;
    static readonly int BuildFromStaticMeshDescriptions_ParamsSize;
    static readonly int BuildFromStaticMeshDescriptions_StaticMeshDescriptions_Offset;
    static readonly int BuildFromStaticMeshDescriptions_StaticMeshDescriptions_ElementSize;
    static readonly int BuildFromStaticMeshDescriptions_bBuildSimpleCollision_Offset;
    static readonly int BuildFromStaticMeshDescriptions_bFastBuild_Offset;
    
    public void BuildFromStaticMeshDescriptions(System.Collections.Generic.IList<UnrealSharp.StaticMeshDescription.StaticMeshDescription> staticMeshDescriptions, bool bBuildSimpleCollision = false, bool bFastBuild = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[BuildFromStaticMeshDescriptions_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr StaticMeshDescriptions_NativeBuffer = IntPtr.Add(ParamsBuffer, BuildFromStaticMeshDescriptions_StaticMeshDescriptions_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.StaticMeshDescription.StaticMeshDescription> StaticMeshDescriptions_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.StaticMeshDescription.StaticMeshDescription>(1, ObjectMarshaller<UnrealSharp.StaticMeshDescription.StaticMeshDescription>.ToNative, ObjectMarshaller<UnrealSharp.StaticMeshDescription.StaticMeshDescription>.FromNative, BuildFromStaticMeshDescriptions_StaticMeshDescriptions_ElementSize);
            StaticMeshDescriptions_Marshaler.ToNative(StaticMeshDescriptions_NativeBuffer, 0, null, staticMeshDescriptions);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, BuildFromStaticMeshDescriptions_bBuildSimpleCollision_Offset), 0, null, bBuildSimpleCollision);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, BuildFromStaticMeshDescriptions_bFastBuild_Offset), 0, null, bFastBuild);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, BuildFromStaticMeshDescriptions_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/Engine.StaticMesh:AddSocket
    static readonly IntPtr AddSocket_NativeFunction;
    static readonly int AddSocket_ParamsSize;
    static readonly int AddSocket_Socket_Offset;
    
    public void AddSocket(UnrealSharp.Engine.StaticMeshSocket socket)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddSocket_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.StaticMeshSocket>.ToNative(IntPtr.Add(ParamsBuffer, AddSocket_Socket_Offset), 0, null, socket);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddSocket_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.StaticMesh:AddMaterial
    static readonly IntPtr AddMaterial_NativeFunction;
    static readonly int AddMaterial_ParamsSize;
    static readonly int AddMaterial_Material_Offset;
    static readonly int AddMaterial_ReturnValue_Offset;
    
    public Name AddMaterial(UnrealSharp.Engine.MaterialInterface material)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddMaterial_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.MaterialInterface>.ToNative(IntPtr.Add(ParamsBuffer, AddMaterial_Material_Offset), 0, null, material);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddMaterial_NativeFunction, ParamsBuffer);
            
            Name returnValue;
            returnValue = BlittableMarshaller<Name>.FromNative(IntPtr.Add(ParamsBuffer, AddMaterial_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class StaticMeshSocket : UnrealSharp.CoreUObject.Object
{
    
    static StaticMeshSocket()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("StaticMeshSocket");
        
        SocketName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "SocketName");
        RelativeLocation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "RelativeLocation");
        RelativeRotation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "RelativeRotation");
        RelativeScale_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "RelativeScale");
        Tag_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Tag");
        Tag_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "Tag");
        
        
        
    }
    
    protected StaticMeshSocket(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // NameProperty /Script/Engine.StaticMeshSocket:SocketName
    static readonly int SocketName_Offset;
    
    public Name SocketName
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<Name>.FromNative(IntPtr.Add(NativeObject, SocketName_Offset), 0, this);
        }
    }
    
    // StructProperty /Script/Engine.StaticMeshSocket:RelativeLocation
    static readonly int RelativeLocation_Offset;
    
    public System.DoubleNumerics.Vector3 RelativeLocation
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(NativeObject, RelativeLocation_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(NativeObject, RelativeLocation_Offset), 0, this, value);
        }
    }
    
    // StructProperty /Script/Engine.StaticMeshSocket:RelativeRotation
    static readonly int RelativeRotation_Offset;
    
    public UnrealSharp.Rotator RelativeRotation
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Rotator>.FromNative(IntPtr.Add(NativeObject, RelativeRotation_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.Rotator>.ToNative(IntPtr.Add(NativeObject, RelativeRotation_Offset), 0, this, value);
        }
    }
    
    // StructProperty /Script/Engine.StaticMeshSocket:RelativeScale
    static readonly int RelativeScale_Offset;
    
    public System.DoubleNumerics.Vector3 RelativeScale
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(NativeObject, RelativeScale_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(NativeObject, RelativeScale_Offset), 0, this, value);
        }
    }
    
    // StrProperty /Script/Engine.StaticMeshSocket:Tag
    static readonly int Tag_Offset;
    static readonly IntPtr Tag_NativeProperty;
    
    public string Tag
    {
        get
        {
            CheckObjectForValidity();
            return StringMarshaller.FromNative(IntPtr.Add(NativeObject,Tag_Offset),0,this);
        }
        set
        {
            CheckObjectForValidity();
            StringMarshaller.ToNative(IntPtr.Add(NativeObject,Tag_Offset),0,this,value);
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class StereoLayerFunctionLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static StereoLayerFunctionLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("StereoLayerFunctionLibrary");
        
        
        ShowSplashScreen_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ShowSplashScreen");
        SetSplashScreen_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSplashScreen");
        SetSplashScreen_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSplashScreen_NativeFunction);
        SetSplashScreen_Texture_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSplashScreen_NativeFunction, "Texture");
        SetSplashScreen_Scale_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSplashScreen_NativeFunction, "Scale");
        SetSplashScreen_Offset_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSplashScreen_NativeFunction, "Offset");
        SetSplashScreen_bShowLoadingMovie_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSplashScreen_NativeFunction, "bShowLoadingMovie");
        SetSplashScreen_bShowOnSet_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSplashScreen_NativeFunction, "bShowOnSet");
        HideSplashScreen_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "HideSplashScreen");
        EnableAutoLoadingSplashScreen_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "EnableAutoLoadingSplashScreen");
        EnableAutoLoadingSplashScreen_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(EnableAutoLoadingSplashScreen_NativeFunction);
        EnableAutoLoadingSplashScreen_InAutoShowEnabled_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EnableAutoLoadingSplashScreen_NativeFunction, "InAutoShowEnabled");
        
        
    }
    
    protected StereoLayerFunctionLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Engine.StereoLayerFunctionLibrary:ShowSplashScreen
    static readonly IntPtr ShowSplashScreen_NativeFunction;
    
    [Obsolete("Please use Show Loading Screen instead.")]
    public static void ShowSplashScreen()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ShowSplashScreen_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/Engine.StereoLayerFunctionLibrary:SetSplashScreen
    static readonly IntPtr SetSplashScreen_NativeFunction;
    static readonly int SetSplashScreen_ParamsSize;
    static readonly int SetSplashScreen_Texture_Offset;
    static readonly int SetSplashScreen_Scale_Offset;
    static readonly int SetSplashScreen_Offset_Offset;
    static readonly int SetSplashScreen_bShowLoadingMovie_Offset;
    static readonly int SetSplashScreen_bShowOnSet_Offset;
    
    [Obsolete("Please use Add Loading Screen Splash instead.")]
    public static void SetSplashScreen(UnrealSharp.Engine.Texture texture)
    {
        System.DoubleNumerics.Vector2 scale = new System.DoubleNumerics.Vector2
        {
            X=1.000f,
            Y=1.000f,
        };
        SetSplashScreen(texture, scale);
    }
    
    [Obsolete("Please use Add Loading Screen Splash instead.")]
    public static void SetSplashScreen(UnrealSharp.Engine.Texture texture, System.DoubleNumerics.Vector2 scale)
    {
        System.DoubleNumerics.Vector3 offset = new System.DoubleNumerics.Vector3
        {
            X=0.000000f,
            Y=0.000000f,
            Z=0.000000f,
        };
        SetSplashScreen(texture, scale, offset);
    }
    
    [Obsolete("Please use Add Loading Screen Splash instead.")]
    public static void SetSplashScreen(UnrealSharp.Engine.Texture texture, System.DoubleNumerics.Vector2 scale, System.DoubleNumerics.Vector3 offset, bool bShowLoadingMovie = false, bool bShowOnSet = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSplashScreen_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.Texture>.ToNative(IntPtr.Add(ParamsBuffer, SetSplashScreen_Texture_Offset), 0, null, texture);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, SetSplashScreen_Scale_Offset), 0, null, scale);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, SetSplashScreen_Offset_Offset), 0, null, offset);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetSplashScreen_bShowLoadingMovie_Offset), 0, null, bShowLoadingMovie);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetSplashScreen_bShowOnSet_Offset), 0, null, bShowOnSet);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetSplashScreen_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Engine.StereoLayerFunctionLibrary:HideSplashScreen
    static readonly IntPtr HideSplashScreen_NativeFunction;
    
    [Obsolete("Please use Hide Loading Screen instead.")]
    public static void HideSplashScreen()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, HideSplashScreen_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/Engine.StereoLayerFunctionLibrary:EnableAutoLoadingSplashScreen
    static readonly IntPtr EnableAutoLoadingSplashScreen_NativeFunction;
    static readonly int EnableAutoLoadingSplashScreen_ParamsSize;
    static readonly int EnableAutoLoadingSplashScreen_InAutoShowEnabled_Offset;
    
    [Obsolete("We don't recommend using Auto Show Loading Screen any longer, and it will be removed in a future update.")]
    public static void EnableAutoLoadingSplashScreen(bool inAutoShowEnabled)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[EnableAutoLoadingSplashScreen_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, EnableAutoLoadingSplashScreen_InAutoShowEnabled_Offset), 0, null, inAutoShowEnabled);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, EnableAutoLoadingSplashScreen_NativeFunction, ParamsBuffer);
            
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class StreamableSparseVolumeTexture : UnrealSharp.Engine.SparseVolumeTexture
{
    
    static StreamableSparseVolumeTexture()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("StreamableSparseVolumeTexture");
        
        AddressX_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "AddressX");
        AddressY_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "AddressY");
        AddressZ_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "AddressZ");
        bLocalDDCOnly_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bLocalDDCOnly");
        
        
        
    }
    
    protected StreamableSparseVolumeTexture(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ByteProperty /Script/Engine.StreamableSparseVolumeTexture:AddressX
    static readonly int AddressX_Offset;
    
    public UnrealSharp.Engine.TextureAddress AddressX
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Engine.TextureAddress>.FromNative(IntPtr.Add(NativeObject, AddressX_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.Engine.TextureAddress>.ToNative(IntPtr.Add(NativeObject, AddressX_Offset), 0, this, value);
        }
    }
    
    // ByteProperty /Script/Engine.StreamableSparseVolumeTexture:AddressY
    static readonly int AddressY_Offset;
    
    public UnrealSharp.Engine.TextureAddress AddressY
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Engine.TextureAddress>.FromNative(IntPtr.Add(NativeObject, AddressY_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.Engine.TextureAddress>.ToNative(IntPtr.Add(NativeObject, AddressY_Offset), 0, this, value);
        }
    }
    
    // ByteProperty /Script/Engine.StreamableSparseVolumeTexture:AddressZ
    static readonly int AddressZ_Offset;
    
    public UnrealSharp.Engine.TextureAddress AddressZ
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Engine.TextureAddress>.FromNative(IntPtr.Add(NativeObject, AddressZ_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.Engine.TextureAddress>.ToNative(IntPtr.Add(NativeObject, AddressZ_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/Engine.StreamableSparseVolumeTexture:bLocalDDCOnly
    static readonly int bLocalDDCOnly_Offset;
    
    public bool bLocalDDCOnly
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bLocalDDCOnly_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, bLocalDDCOnly_Offset), 0, this, value);
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class Texture2D : UnrealSharp.Engine.Texture
{
    
    static Texture2D()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("Texture2D");
        
        AddressX_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "AddressX");
        AddressY_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "AddressY");
        
        Blueprint_GetSizeY_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Blueprint_GetSizeY");
        Blueprint_GetSizeY_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Blueprint_GetSizeY_NativeFunction);
        Blueprint_GetSizeY_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Blueprint_GetSizeY_NativeFunction, "ReturnValue");
        Blueprint_GetSizeX_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Blueprint_GetSizeX");
        Blueprint_GetSizeX_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Blueprint_GetSizeX_NativeFunction);
        Blueprint_GetSizeX_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Blueprint_GetSizeX_NativeFunction, "ReturnValue");
        
        
    }
    
    protected Texture2D(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ByteProperty /Script/Engine.Texture2D:AddressX
    static readonly int AddressX_Offset;
    
    public UnrealSharp.Engine.TextureAddress AddressX
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Engine.TextureAddress>.FromNative(IntPtr.Add(NativeObject, AddressX_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.Engine.TextureAddress>.ToNative(IntPtr.Add(NativeObject, AddressX_Offset), 0, this, value);
        }
    }
    
    // ByteProperty /Script/Engine.Texture2D:AddressY
    static readonly int AddressY_Offset;
    
    public UnrealSharp.Engine.TextureAddress AddressY
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Engine.TextureAddress>.FromNative(IntPtr.Add(NativeObject, AddressY_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.Engine.TextureAddress>.ToNative(IntPtr.Add(NativeObject, AddressY_Offset), 0, this, value);
        }
    }
    
    // Function /Script/Engine.Texture2D:Blueprint_GetSizeY
    static readonly IntPtr Blueprint_GetSizeY_NativeFunction;
    static readonly int Blueprint_GetSizeY_ParamsSize;
    static readonly int Blueprint_GetSizeY_ReturnValue_Offset;
    
    public int Blueprint_GetSizeY()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Blueprint_GetSizeY_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, Blueprint_GetSizeY_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, Blueprint_GetSizeY_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.Texture2D:Blueprint_GetSizeX
    static readonly IntPtr Blueprint_GetSizeX_NativeFunction;
    static readonly int Blueprint_GetSizeX_ParamsSize;
    static readonly int Blueprint_GetSizeX_ReturnValue_Offset;
    
    public int Blueprint_GetSizeX()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Blueprint_GetSizeX_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, Blueprint_GetSizeX_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, Blueprint_GetSizeX_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
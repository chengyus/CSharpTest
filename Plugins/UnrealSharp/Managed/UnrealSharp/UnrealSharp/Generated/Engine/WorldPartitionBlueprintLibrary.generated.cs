// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Engine;

[UClass]
public partial class WorldPartitionBlueprintLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static WorldPartitionBlueprintLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("WorldPartitionBlueprintLibrary");
        
        
        UnpinActors_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "UnpinActors");
        UnpinActors_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(UnpinActors_NativeFunction);
        UnpinActors_InActorsToUnpin_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(UnpinActors_NativeFunction, "InActorsToUnpin");
        UnpinActors_InActorsToUnpin_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(UnpinActors_NativeFunction, "InActorsToUnpin");
        UnloadActors_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "UnloadActors");
        UnloadActors_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(UnloadActors_NativeFunction);
        UnloadActors_InActorsToUnload_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(UnloadActors_NativeFunction, "InActorsToUnload");
        UnloadActors_InActorsToUnload_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(UnloadActors_NativeFunction, "InActorsToUnload");
        PinActors_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "PinActors");
        PinActors_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(PinActors_NativeFunction);
        PinActors_InActorsToPin_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PinActors_NativeFunction, "InActorsToPin");
        PinActors_InActorsToPin_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(PinActors_NativeFunction, "InActorsToPin");
        LoadActors_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "LoadActors");
        LoadActors_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(LoadActors_NativeFunction);
        LoadActors_InActorsToLoad_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LoadActors_NativeFunction, "InActorsToLoad");
        LoadActors_InActorsToLoad_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(LoadActors_NativeFunction, "InActorsToLoad");
        GetRuntimeWorldBounds_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetRuntimeWorldBounds");
        GetRuntimeWorldBounds_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetRuntimeWorldBounds_NativeFunction);
        GetRuntimeWorldBounds_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetRuntimeWorldBounds_NativeFunction, "ReturnValue");
        GetIntersectingActorDescs_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetIntersectingActorDescs");
        GetIntersectingActorDescs_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetIntersectingActorDescs_NativeFunction);
        GetIntersectingActorDescs_InBox_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetIntersectingActorDescs_NativeFunction, "InBox");
        GetIntersectingActorDescs_OutActorDescs_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetIntersectingActorDescs_NativeFunction, "OutActorDescs");
        GetIntersectingActorDescs_OutActorDescs_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetIntersectingActorDescs_NativeFunction, "OutActorDescs");
        GetIntersectingActorDescs_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetIntersectingActorDescs_NativeFunction, "ReturnValue");
        GetEditorWorldBounds_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetEditorWorldBounds");
        GetEditorWorldBounds_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetEditorWorldBounds_NativeFunction);
        GetEditorWorldBounds_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetEditorWorldBounds_NativeFunction, "ReturnValue");
        GetDataLayerManager_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetDataLayerManager");
        GetDataLayerManager_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetDataLayerManager_NativeFunction);
        GetDataLayerManager_WorldContextObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDataLayerManager_NativeFunction, "WorldContextObject");
        GetDataLayerManager_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDataLayerManager_NativeFunction, "ReturnValue");
        GetActorDescs_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetActorDescs");
        GetActorDescs_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetActorDescs_NativeFunction);
        GetActorDescs_OutActorDescs_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetActorDescs_NativeFunction, "OutActorDescs");
        GetActorDescs_OutActorDescs_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetActorDescs_NativeFunction, "OutActorDescs");
        GetActorDescs_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetActorDescs_NativeFunction, "ReturnValue");
        
        
    }
    
    protected WorldPartitionBlueprintLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Engine.WorldPartitionBlueprintLibrary:UnpinActors
    static readonly IntPtr UnpinActors_NativeFunction;
    static readonly int UnpinActors_ParamsSize;
    static readonly int UnpinActors_InActorsToUnpin_Offset;
    static readonly int UnpinActors_InActorsToUnpin_ElementSize;
    
    public static void UnpinActors(System.Collections.Generic.IList<UnrealSharp.CoreUObject.Guid> inActorsToUnpin)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[UnpinActors_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InActorsToUnpin_NativeBuffer = IntPtr.Add(ParamsBuffer, UnpinActors_InActorsToUnpin_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Guid> InActorsToUnpin_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Guid>(1, UnrealSharp.CoreUObject.GuidMarshaler.ToNative, UnrealSharp.CoreUObject.GuidMarshaler.FromNative, UnpinActors_InActorsToUnpin_ElementSize);
            InActorsToUnpin_Marshaler.ToNative(InActorsToUnpin_NativeBuffer, 0, null, inActorsToUnpin);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, UnpinActors_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/Engine.WorldPartitionBlueprintLibrary:UnloadActors
    static readonly IntPtr UnloadActors_NativeFunction;
    static readonly int UnloadActors_ParamsSize;
    static readonly int UnloadActors_InActorsToUnload_Offset;
    static readonly int UnloadActors_InActorsToUnload_ElementSize;
    
    public static void UnloadActors(System.Collections.Generic.IList<UnrealSharp.CoreUObject.Guid> inActorsToUnload)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[UnloadActors_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InActorsToUnload_NativeBuffer = IntPtr.Add(ParamsBuffer, UnloadActors_InActorsToUnload_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Guid> InActorsToUnload_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Guid>(1, UnrealSharp.CoreUObject.GuidMarshaler.ToNative, UnrealSharp.CoreUObject.GuidMarshaler.FromNative, UnloadActors_InActorsToUnload_ElementSize);
            InActorsToUnload_Marshaler.ToNative(InActorsToUnload_NativeBuffer, 0, null, inActorsToUnload);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, UnloadActors_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/Engine.WorldPartitionBlueprintLibrary:PinActors
    static readonly IntPtr PinActors_NativeFunction;
    static readonly int PinActors_ParamsSize;
    static readonly int PinActors_InActorsToPin_Offset;
    static readonly int PinActors_InActorsToPin_ElementSize;
    
    public static void PinActors(System.Collections.Generic.IList<UnrealSharp.CoreUObject.Guid> inActorsToPin)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[PinActors_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InActorsToPin_NativeBuffer = IntPtr.Add(ParamsBuffer, PinActors_InActorsToPin_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Guid> InActorsToPin_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Guid>(1, UnrealSharp.CoreUObject.GuidMarshaler.ToNative, UnrealSharp.CoreUObject.GuidMarshaler.FromNative, PinActors_InActorsToPin_ElementSize);
            InActorsToPin_Marshaler.ToNative(InActorsToPin_NativeBuffer, 0, null, inActorsToPin);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, PinActors_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/Engine.WorldPartitionBlueprintLibrary:LoadActors
    static readonly IntPtr LoadActors_NativeFunction;
    static readonly int LoadActors_ParamsSize;
    static readonly int LoadActors_InActorsToLoad_Offset;
    static readonly int LoadActors_InActorsToLoad_ElementSize;
    
    public static void LoadActors(System.Collections.Generic.IList<UnrealSharp.CoreUObject.Guid> inActorsToLoad)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[LoadActors_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InActorsToLoad_NativeBuffer = IntPtr.Add(ParamsBuffer, LoadActors_InActorsToLoad_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Guid> InActorsToLoad_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Guid>(1, UnrealSharp.CoreUObject.GuidMarshaler.ToNative, UnrealSharp.CoreUObject.GuidMarshaler.FromNative, LoadActors_InActorsToLoad_ElementSize);
            InActorsToLoad_Marshaler.ToNative(InActorsToLoad_NativeBuffer, 0, null, inActorsToLoad);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, LoadActors_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/Engine.WorldPartitionBlueprintLibrary:GetRuntimeWorldBounds
    static readonly IntPtr GetRuntimeWorldBounds_NativeFunction;
    static readonly int GetRuntimeWorldBounds_ParamsSize;
    static readonly int GetRuntimeWorldBounds_ReturnValue_Offset;
    
    public static UnrealSharp.CoreUObject.Box GetRuntimeWorldBounds()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetRuntimeWorldBounds_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetRuntimeWorldBounds_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.Box returnValue;
            returnValue = UnrealSharp.CoreUObject.BoxMarshaler.FromNative(IntPtr.Add(ParamsBuffer, GetRuntimeWorldBounds_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.WorldPartitionBlueprintLibrary:GetIntersectingActorDescs
    static readonly IntPtr GetIntersectingActorDescs_NativeFunction;
    static readonly int GetIntersectingActorDescs_ParamsSize;
    static readonly int GetIntersectingActorDescs_InBox_Offset;
    static readonly int GetIntersectingActorDescs_OutActorDescs_Offset;
    static readonly int GetIntersectingActorDescs_OutActorDescs_ElementSize;
    static readonly int GetIntersectingActorDescs_ReturnValue_Offset;
    
    public static bool GetIntersectingActorDescs(UnrealSharp.CoreUObject.Box inBox, out System.Collections.Generic.IList<UnrealSharp.Engine.ActorDesc> outActorDescs)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetIntersectingActorDescs_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.CoreUObject.BoxMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetIntersectingActorDescs_InBox_Offset), 0, null, inBox);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetIntersectingActorDescs_NativeFunction, ParamsBuffer);
            
            IntPtr OutActorDescs_NativeBuffer = IntPtr.Add(ParamsBuffer, GetIntersectingActorDescs_OutActorDescs_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.ActorDesc> OutActorDescs_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Engine.ActorDesc> (1, UnrealSharp.Engine.ActorDescMarshaler.ToNative, UnrealSharp.Engine.ActorDescMarshaler.FromNative, GetIntersectingActorDescs_OutActorDescs_ElementSize);
            outActorDescs = OutActorDescs_Marshaler.FromNative(OutActorDescs_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.ActorDesc>.DestructInstance(OutActorDescs_NativeBuffer, 0);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetIntersectingActorDescs_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.WorldPartitionBlueprintLibrary:GetEditorWorldBounds
    static readonly IntPtr GetEditorWorldBounds_NativeFunction;
    static readonly int GetEditorWorldBounds_ParamsSize;
    static readonly int GetEditorWorldBounds_ReturnValue_Offset;
    
    public static UnrealSharp.CoreUObject.Box GetEditorWorldBounds()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetEditorWorldBounds_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetEditorWorldBounds_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.Box returnValue;
            returnValue = UnrealSharp.CoreUObject.BoxMarshaler.FromNative(IntPtr.Add(ParamsBuffer, GetEditorWorldBounds_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.WorldPartitionBlueprintLibrary:GetDataLayerManager
    static readonly IntPtr GetDataLayerManager_NativeFunction;
    static readonly int GetDataLayerManager_ParamsSize;
    static readonly int GetDataLayerManager_WorldContextObject_Offset;
    static readonly int GetDataLayerManager_ReturnValue_Offset;
    
    public static UnrealSharp.Engine.DataLayerManager GetDataLayerManager(UnrealSharp.CoreUObject.Object worldContextObject)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetDataLayerManager_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, GetDataLayerManager_WorldContextObject_Offset), 0, null, worldContextObject);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetDataLayerManager_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.DataLayerManager returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.DataLayerManager>.FromNative(IntPtr.Add(ParamsBuffer, GetDataLayerManager_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Engine.WorldPartitionBlueprintLibrary:GetActorDescs
    static readonly IntPtr GetActorDescs_NativeFunction;
    static readonly int GetActorDescs_ParamsSize;
    static readonly int GetActorDescs_OutActorDescs_Offset;
    static readonly int GetActorDescs_OutActorDescs_ElementSize;
    static readonly int GetActorDescs_ReturnValue_Offset;
    
    public static bool GetActorDescs(out System.Collections.Generic.IList<UnrealSharp.Engine.ActorDesc> outActorDescs)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetActorDescs_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetActorDescs_NativeFunction, ParamsBuffer);
            
            IntPtr OutActorDescs_NativeBuffer = IntPtr.Add(ParamsBuffer, GetActorDescs_OutActorDescs_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.ActorDesc> OutActorDescs_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Engine.ActorDesc> (1, UnrealSharp.Engine.ActorDescMarshaler.ToNative, UnrealSharp.Engine.ActorDescMarshaler.FromNative, GetActorDescs_OutActorDescs_ElementSize);
            outActorDescs = OutActorDescs_Marshaler.FromNative(OutActorDescs_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.ActorDesc>.DestructInstance(OutActorDescs_NativeBuffer, 0);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetActorDescs_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
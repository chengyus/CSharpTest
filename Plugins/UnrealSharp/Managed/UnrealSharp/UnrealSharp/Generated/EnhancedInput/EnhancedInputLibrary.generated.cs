// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.EnhancedInput;

[UClass]
public partial class EnhancedInputLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static EnhancedInputLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("EnhancedInputLibrary");
        
        
        RequestRebuildControlMappingsUsingContext_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RequestRebuildControlMappingsUsingContext");
        RequestRebuildControlMappingsUsingContext_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RequestRebuildControlMappingsUsingContext_NativeFunction);
        RequestRebuildControlMappingsUsingContext_Context_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RequestRebuildControlMappingsUsingContext_NativeFunction, "Context");
        RequestRebuildControlMappingsUsingContext_bForceImmediately_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RequestRebuildControlMappingsUsingContext_NativeFunction, "bForceImmediately");
        IsActionKeyMappingPlayerMappable_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsActionKeyMappingPlayerMappable");
        IsActionKeyMappingPlayerMappable_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsActionKeyMappingPlayerMappable_NativeFunction);
        IsActionKeyMappingPlayerMappable_ActionKeyMapping_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsActionKeyMappingPlayerMappable_NativeFunction, "ActionKeyMapping");
        IsActionKeyMappingPlayerMappable_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsActionKeyMappingPlayerMappable_NativeFunction, "ReturnValue");
        GetThirdPlayerMappableKeySlot_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetThirdPlayerMappableKeySlot");
        GetThirdPlayerMappableKeySlot_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetThirdPlayerMappableKeySlot_NativeFunction);
        GetThirdPlayerMappableKeySlot_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetThirdPlayerMappableKeySlot_NativeFunction, "ReturnValue");
        GetSecondPlayerMappableKeySlot_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSecondPlayerMappableKeySlot");
        GetSecondPlayerMappableKeySlot_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSecondPlayerMappableKeySlot_NativeFunction);
        GetSecondPlayerMappableKeySlot_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSecondPlayerMappableKeySlot_NativeFunction, "ReturnValue");
        GetPlayerMappableKeySettings_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetPlayerMappableKeySettings");
        GetPlayerMappableKeySettings_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetPlayerMappableKeySettings_NativeFunction);
        GetPlayerMappableKeySettings_ActionKeyMapping_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetPlayerMappableKeySettings_NativeFunction, "ActionKeyMapping");
        GetPlayerMappableKeySettings_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetPlayerMappableKeySettings_NativeFunction, "ReturnValue");
        GetMappingName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetMappingName");
        GetMappingName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetMappingName_NativeFunction);
        GetMappingName_ActionKeyMapping_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMappingName_NativeFunction, "ActionKeyMapping");
        GetMappingName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMappingName_NativeFunction, "ReturnValue");
        GetFourthPlayerMappableKeySlot_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetFourthPlayerMappableKeySlot");
        GetFourthPlayerMappableKeySlot_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetFourthPlayerMappableKeySlot_NativeFunction);
        GetFourthPlayerMappableKeySlot_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetFourthPlayerMappableKeySlot_NativeFunction, "ReturnValue");
        GetFirstPlayerMappableKeySlot_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetFirstPlayerMappableKeySlot");
        GetFirstPlayerMappableKeySlot_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetFirstPlayerMappableKeySlot_NativeFunction);
        GetFirstPlayerMappableKeySlot_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetFirstPlayerMappableKeySlot_NativeFunction, "ReturnValue");
        Conv_InputActionValueToString_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Conv_InputActionValueToString");
        Conv_InputActionValueToString_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Conv_InputActionValueToString_NativeFunction);
        Conv_InputActionValueToString_ActionValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Conv_InputActionValueToString_NativeFunction, "ActionValue");
        Conv_InputActionValueToString_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Conv_InputActionValueToString_NativeFunction, "ReturnValue");
        
        
    }
    
    protected EnhancedInputLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/EnhancedInput.EnhancedInputLibrary:RequestRebuildControlMappingsUsingContext
    static readonly IntPtr RequestRebuildControlMappingsUsingContext_NativeFunction;
    static readonly int RequestRebuildControlMappingsUsingContext_ParamsSize;
    static readonly int RequestRebuildControlMappingsUsingContext_Context_Offset;
    static readonly int RequestRebuildControlMappingsUsingContext_bForceImmediately_Offset;
    
    public static void RequestRebuildControlMappingsUsingContext(UnrealSharp.EnhancedInput.InputMappingContext context, bool bForceImmediately = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RequestRebuildControlMappingsUsingContext_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.EnhancedInput.InputMappingContext>.ToNative(IntPtr.Add(ParamsBuffer, RequestRebuildControlMappingsUsingContext_Context_Offset), 0, null, context);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RequestRebuildControlMappingsUsingContext_bForceImmediately_Offset), 0, null, bForceImmediately);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, RequestRebuildControlMappingsUsingContext_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/EnhancedInput.EnhancedInputLibrary:IsActionKeyMappingPlayerMappable
    static readonly IntPtr IsActionKeyMappingPlayerMappable_NativeFunction;
    static readonly int IsActionKeyMappingPlayerMappable_ParamsSize;
    static readonly int IsActionKeyMappingPlayerMappable_ActionKeyMapping_Offset;
    static readonly int IsActionKeyMappingPlayerMappable_ReturnValue_Offset;
    
    public static bool IsActionKeyMappingPlayerMappable(UnrealSharp.EnhancedInput.EnhancedActionKeyMapping actionKeyMapping)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsActionKeyMappingPlayerMappable_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.EnhancedInput.EnhancedActionKeyMappingMarshaler.ToNative(IntPtr.Add(ParamsBuffer, IsActionKeyMappingPlayerMappable_ActionKeyMapping_Offset), 0, null, actionKeyMapping);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, IsActionKeyMappingPlayerMappable_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsActionKeyMappingPlayerMappable_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/EnhancedInput.EnhancedInputLibrary:GetThirdPlayerMappableKeySlot
    static readonly IntPtr GetThirdPlayerMappableKeySlot_NativeFunction;
    static readonly int GetThirdPlayerMappableKeySlot_ParamsSize;
    static readonly int GetThirdPlayerMappableKeySlot_ReturnValue_Offset;
    
    [Obsolete("FPlayerMappableKeyOptions has been deprecated. Please use UPlayerMappableKeySettings instead.")]
    public static UnrealSharp.EnhancedInput.PlayerMappableKeySlotData GetThirdPlayerMappableKeySlot()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetThirdPlayerMappableKeySlot_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetThirdPlayerMappableKeySlot_NativeFunction, ParamsBuffer);
            
            UnrealSharp.EnhancedInput.PlayerMappableKeySlotData returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.EnhancedInput.PlayerMappableKeySlotData>.FromNative(IntPtr.Add(ParamsBuffer, GetThirdPlayerMappableKeySlot_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/EnhancedInput.EnhancedInputLibrary:GetSecondPlayerMappableKeySlot
    static readonly IntPtr GetSecondPlayerMappableKeySlot_NativeFunction;
    static readonly int GetSecondPlayerMappableKeySlot_ParamsSize;
    static readonly int GetSecondPlayerMappableKeySlot_ReturnValue_Offset;
    
    [Obsolete("FPlayerMappableKeyOptions has been deprecated. Please use UPlayerMappableKeySettings instead.")]
    public static UnrealSharp.EnhancedInput.PlayerMappableKeySlotData GetSecondPlayerMappableKeySlot()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSecondPlayerMappableKeySlot_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetSecondPlayerMappableKeySlot_NativeFunction, ParamsBuffer);
            
            UnrealSharp.EnhancedInput.PlayerMappableKeySlotData returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.EnhancedInput.PlayerMappableKeySlotData>.FromNative(IntPtr.Add(ParamsBuffer, GetSecondPlayerMappableKeySlot_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/EnhancedInput.EnhancedInputLibrary:GetPlayerMappableKeySettings
    static readonly IntPtr GetPlayerMappableKeySettings_NativeFunction;
    static readonly int GetPlayerMappableKeySettings_ParamsSize;
    static readonly int GetPlayerMappableKeySettings_ActionKeyMapping_Offset;
    static readonly int GetPlayerMappableKeySettings_ReturnValue_Offset;
    
    public static UnrealSharp.EnhancedInput.PlayerMappableKeySettings GetPlayerMappableKeySettings(UnrealSharp.EnhancedInput.EnhancedActionKeyMapping actionKeyMapping)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetPlayerMappableKeySettings_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.EnhancedInput.EnhancedActionKeyMappingMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetPlayerMappableKeySettings_ActionKeyMapping_Offset), 0, null, actionKeyMapping);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetPlayerMappableKeySettings_NativeFunction, ParamsBuffer);
            
            UnrealSharp.EnhancedInput.PlayerMappableKeySettings returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.EnhancedInput.PlayerMappableKeySettings>.FromNative(IntPtr.Add(ParamsBuffer, GetPlayerMappableKeySettings_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/EnhancedInput.EnhancedInputLibrary:GetMappingName
    static readonly IntPtr GetMappingName_NativeFunction;
    static readonly int GetMappingName_ParamsSize;
    static readonly int GetMappingName_ActionKeyMapping_Offset;
    static readonly int GetMappingName_ReturnValue_Offset;
    
    public static Name GetMappingName(UnrealSharp.EnhancedInput.EnhancedActionKeyMapping actionKeyMapping)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetMappingName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.EnhancedInput.EnhancedActionKeyMappingMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetMappingName_ActionKeyMapping_Offset), 0, null, actionKeyMapping);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetMappingName_NativeFunction, ParamsBuffer);
            
            Name returnValue;
            returnValue = BlittableMarshaller<Name>.FromNative(IntPtr.Add(ParamsBuffer, GetMappingName_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/EnhancedInput.EnhancedInputLibrary:GetFourthPlayerMappableKeySlot
    static readonly IntPtr GetFourthPlayerMappableKeySlot_NativeFunction;
    static readonly int GetFourthPlayerMappableKeySlot_ParamsSize;
    static readonly int GetFourthPlayerMappableKeySlot_ReturnValue_Offset;
    
    [Obsolete("FPlayerMappableKeyOptions has been deprecated. Please use UPlayerMappableKeySettings instead.")]
    public static UnrealSharp.EnhancedInput.PlayerMappableKeySlotData GetFourthPlayerMappableKeySlot()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetFourthPlayerMappableKeySlot_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetFourthPlayerMappableKeySlot_NativeFunction, ParamsBuffer);
            
            UnrealSharp.EnhancedInput.PlayerMappableKeySlotData returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.EnhancedInput.PlayerMappableKeySlotData>.FromNative(IntPtr.Add(ParamsBuffer, GetFourthPlayerMappableKeySlot_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/EnhancedInput.EnhancedInputLibrary:GetFirstPlayerMappableKeySlot
    static readonly IntPtr GetFirstPlayerMappableKeySlot_NativeFunction;
    static readonly int GetFirstPlayerMappableKeySlot_ParamsSize;
    static readonly int GetFirstPlayerMappableKeySlot_ReturnValue_Offset;
    
    [Obsolete("FPlayerMappableKeyOptions has been deprecated. Please use UPlayerMappableKeySettings instead.")]
    public static UnrealSharp.EnhancedInput.PlayerMappableKeySlotData GetFirstPlayerMappableKeySlot()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetFirstPlayerMappableKeySlot_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetFirstPlayerMappableKeySlot_NativeFunction, ParamsBuffer);
            
            UnrealSharp.EnhancedInput.PlayerMappableKeySlotData returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.EnhancedInput.PlayerMappableKeySlotData>.FromNative(IntPtr.Add(ParamsBuffer, GetFirstPlayerMappableKeySlot_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/EnhancedInput.EnhancedInputLibrary:Conv_InputActionValueToString
    static readonly IntPtr Conv_InputActionValueToString_NativeFunction;
    static readonly int Conv_InputActionValueToString_ParamsSize;
    static readonly int Conv_InputActionValueToString_ActionValue_Offset;
    static readonly int Conv_InputActionValueToString_ReturnValue_Offset;
    
    public static string Conv_InputActionValueToString(UnrealSharp.EnhancedInput.InputActionValue actionValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Conv_InputActionValueToString_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.EnhancedInput.InputActionValueMarshaler.ToNative(IntPtr.Add(ParamsBuffer, Conv_InputActionValueToString_ActionValue_Offset), 0, null, actionValue);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, Conv_InputActionValueToString_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,Conv_InputActionValueToString_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.EnhancedInput;

[UClass]
public partial class InputMappingContext : UnrealSharp.Engine.DataAsset
{
    
    static InputMappingContext()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("InputMappingContext");
        
        Mappings_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Mappings");
        Mappings_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "Mappings");
        ContextDescription_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ContextDescription");
        ContextDescription_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "ContextDescription");
        
        UnmapKey_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "UnmapKey");
        UnmapKey_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(UnmapKey_NativeFunction);
        UnmapKey_Action_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(UnmapKey_NativeFunction, "Action");
        UnmapKey_Key_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(UnmapKey_NativeFunction, "Key");
        UnmapAllKeysFromAction_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "UnmapAllKeysFromAction");
        UnmapAllKeysFromAction_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(UnmapAllKeysFromAction_NativeFunction);
        UnmapAllKeysFromAction_Action_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(UnmapAllKeysFromAction_NativeFunction, "Action");
        UnmapAll_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "UnmapAll");
        UnmapAction_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "UnmapAction");
        UnmapAction_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(UnmapAction_NativeFunction);
        UnmapAction_Action_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(UnmapAction_NativeFunction, "Action");
        MapKey_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "MapKey");
        MapKey_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(MapKey_NativeFunction);
        MapKey_Action_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MapKey_NativeFunction, "Action");
        MapKey_ToKey_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MapKey_NativeFunction, "ToKey");
        MapKey_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MapKey_NativeFunction, "ReturnValue");
        
        
    }
    
    protected InputMappingContext(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ArrayProperty /Script/EnhancedInput.InputMappingContext:Mappings
    static readonly int Mappings_Offset;
    static readonly IntPtr Mappings_NativeProperty;
    UnrealArrayReadOnlyMarshaler<UnrealSharp.EnhancedInput.EnhancedActionKeyMapping> Mappings_Wrapper = null;
    
    public System.Collections.Generic.IReadOnlyList<UnrealSharp.EnhancedInput.EnhancedActionKeyMapping> Mappings
    {
        get
        {
            if(Mappings_Wrapper == null)
            {
                Mappings_Wrapper = new UnrealArrayReadOnlyMarshaler<UnrealSharp.EnhancedInput.EnhancedActionKeyMapping>(1, Mappings_NativeProperty, UnrealSharp.EnhancedInput.EnhancedActionKeyMappingMarshaler.ToNative, UnrealSharp.EnhancedInput.EnhancedActionKeyMappingMarshaler.FromNative);
            }
            
            return Mappings_Wrapper.FromNative(IntPtr.Add(NativeObject,Mappings_Offset),0,this);
        }
    }
    
    // TextProperty /Script/EnhancedInput.InputMappingContext:ContextDescription
    static readonly int ContextDescription_Offset;
    static readonly IntPtr ContextDescription_NativeProperty;
    TextMarshaller ContextDescription_Wrapper;
    
    public Text ContextDescription
    {
        get
        {
            if (ContextDescription_Wrapper == null)
            {
                ContextDescription_Wrapper  = new TextMarshaller(1);
            }
            return ContextDescription_Wrapper.FromNative(this.NativeObject + ContextDescription_Offset, 0, this);
        }
    }
    
    // Function /Script/EnhancedInput.InputMappingContext:UnmapKey
    static readonly IntPtr UnmapKey_NativeFunction;
    static readonly int UnmapKey_ParamsSize;
    static readonly int UnmapKey_Action_Offset;
    static readonly int UnmapKey_Key_Offset;
    
    public void UnmapKey(UnrealSharp.EnhancedInput.InputAction action, UnrealSharp.InputCore.Key key)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[UnmapKey_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.EnhancedInput.InputAction>.ToNative(IntPtr.Add(ParamsBuffer, UnmapKey_Action_Offset), 0, null, action);
            UnrealSharp.InputCore.KeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, UnmapKey_Key_Offset), 0, null, key);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, UnmapKey_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/EnhancedInput.InputMappingContext:UnmapAllKeysFromAction
    static readonly IntPtr UnmapAllKeysFromAction_NativeFunction;
    static readonly int UnmapAllKeysFromAction_ParamsSize;
    static readonly int UnmapAllKeysFromAction_Action_Offset;
    
    public void UnmapAllKeysFromAction(UnrealSharp.EnhancedInput.InputAction action)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[UnmapAllKeysFromAction_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.EnhancedInput.InputAction>.ToNative(IntPtr.Add(ParamsBuffer, UnmapAllKeysFromAction_Action_Offset), 0, null, action);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, UnmapAllKeysFromAction_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/EnhancedInput.InputMappingContext:UnmapAll
    static readonly IntPtr UnmapAll_NativeFunction;
    
    public void UnmapAll()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, UnmapAll_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/EnhancedInput.InputMappingContext:UnmapAction
    static readonly IntPtr UnmapAction_NativeFunction;
    static readonly int UnmapAction_ParamsSize;
    static readonly int UnmapAction_Action_Offset;
    
    [Obsolete("This function is obsolete")]
    public void UnmapAction(UnrealSharp.EnhancedInput.InputAction action)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[UnmapAction_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.EnhancedInput.InputAction>.ToNative(IntPtr.Add(ParamsBuffer, UnmapAction_Action_Offset), 0, null, action);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, UnmapAction_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/EnhancedInput.InputMappingContext:MapKey
    static readonly IntPtr MapKey_NativeFunction;
    static readonly int MapKey_ParamsSize;
    static readonly int MapKey_Action_Offset;
    static readonly int MapKey_ToKey_Offset;
    static readonly int MapKey_ReturnValue_Offset;
    
    public UnrealSharp.EnhancedInput.EnhancedActionKeyMapping MapKey(UnrealSharp.EnhancedInput.InputAction action, UnrealSharp.InputCore.Key toKey)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[MapKey_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.EnhancedInput.InputAction>.ToNative(IntPtr.Add(ParamsBuffer, MapKey_Action_Offset), 0, null, action);
            UnrealSharp.InputCore.KeyMarshaler.ToNative(IntPtr.Add(ParamsBuffer, MapKey_ToKey_Offset), 0, null, toKey);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, MapKey_NativeFunction, ParamsBuffer);
            
            UnrealSharp.EnhancedInput.EnhancedActionKeyMapping returnValue;
            returnValue = UnrealSharp.EnhancedInput.EnhancedActionKeyMappingMarshaler.FromNative(IntPtr.Add(ParamsBuffer, MapKey_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
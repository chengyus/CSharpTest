// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.EnhancedInput;

[UClass]
public partial class InputModifierFOVScaling : UnrealSharp.EnhancedInput.InputModifier
{
    
    static InputModifierFOVScaling()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("InputModifierFOVScaling");
        
        FOVScale_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "FOVScale");
        FOVScalingType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "FOVScalingType");
        
        
        
    }
    
    protected InputModifierFOVScaling(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // FloatProperty /Script/EnhancedInput.InputModifierFOVScaling:FOVScale
    static readonly int FOVScale_Offset;
    
    public float FOVScale
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, FOVScale_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, FOVScale_Offset), 0, this, value);
        }
    }
    
    // EnumProperty /Script/EnhancedInput.InputModifierFOVScaling:FOVScalingType
    static readonly int FOVScalingType_Offset;
    
    public UnrealSharp.EnhancedInput.EFOVScalingType FOVScalingType
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.EnhancedInput.EFOVScalingType>.FromNative(IntPtr.Add(NativeObject, FOVScalingType_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.EnhancedInput.EFOVScalingType>.ToNative(IntPtr.Add(NativeObject, FOVScalingType_Offset), 0, this, value);
        }
    }
    
    
}
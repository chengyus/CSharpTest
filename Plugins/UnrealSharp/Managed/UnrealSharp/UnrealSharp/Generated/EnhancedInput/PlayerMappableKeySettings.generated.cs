// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.EnhancedInput;

[UClass]
public partial class PlayerMappableKeySettings : UnrealSharp.CoreUObject.Object
{
    
    static PlayerMappableKeySettings()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("PlayerMappableKeySettings");
        
        Metadata_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Metadata");
        Name_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Name");
        DisplayName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "DisplayName");
        DisplayName_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "DisplayName");
        DisplayCategory_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "DisplayCategory");
        DisplayCategory_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "DisplayCategory");
        SupportedKeyProfiles_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "SupportedKeyProfiles");
        
        
        
    }
    
    protected PlayerMappableKeySettings(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ObjectProperty /Script/EnhancedInput.PlayerMappableKeySettings:Metadata
    static readonly int Metadata_Offset;
    
    public UnrealSharp.CoreUObject.Object Metadata
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.CoreUObject.Object>.FromNative(IntPtr.Add(NativeObject, Metadata_Offset), 0, this);
        }
    }
    
    // NameProperty /Script/EnhancedInput.PlayerMappableKeySettings:Name
    static readonly int Name_Offset;
    
    public Name Name
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<Name>.FromNative(IntPtr.Add(NativeObject, Name_Offset), 0, this);
        }
    }
    
    // TextProperty /Script/EnhancedInput.PlayerMappableKeySettings:DisplayName
    static readonly int DisplayName_Offset;
    static readonly IntPtr DisplayName_NativeProperty;
    TextMarshaller DisplayName_Wrapper;
    
    public Text DisplayName
    {
        get
        {
            if (DisplayName_Wrapper == null)
            {
                DisplayName_Wrapper  = new TextMarshaller(1);
            }
            return DisplayName_Wrapper.FromNative(this.NativeObject + DisplayName_Offset, 0, this);
        }
    }
    
    // TextProperty /Script/EnhancedInput.PlayerMappableKeySettings:DisplayCategory
    static readonly int DisplayCategory_Offset;
    static readonly IntPtr DisplayCategory_NativeProperty;
    TextMarshaller DisplayCategory_Wrapper;
    
    public Text DisplayCategory
    {
        get
        {
            if (DisplayCategory_Wrapper == null)
            {
                DisplayCategory_Wrapper  = new TextMarshaller(1);
            }
            return DisplayCategory_Wrapper.FromNative(this.NativeObject + DisplayCategory_Offset, 0, this);
        }
    }
    
    // StructProperty /Script/EnhancedInput.PlayerMappableKeySettings:SupportedKeyProfiles
    static readonly int SupportedKeyProfiles_Offset;
    
    public UnrealSharp.GameplayTags.GameplayTagContainer SupportedKeyProfiles
    {
        get
        {
            CheckObjectForValidity();
            return UnrealSharp.GameplayTags.GameplayTagContainerMarshaler.FromNative(IntPtr.Add(NativeObject, SupportedKeyProfiles_Offset), 0, this);
        }
    }
    
    
}
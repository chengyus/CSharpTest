// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.FieldSystemEngine;

[UClass]
public partial class CullingField : UnrealSharp.FieldSystemEngine.FieldNodeBase
{
    
    static CullingField()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("CullingField");
        
        Culling_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Culling");
        Field_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Field");
        Operation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Operation");
        
        SetCullingField_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCullingField");
        SetCullingField_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCullingField_NativeFunction);
        SetCullingField_Culling_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCullingField_NativeFunction, "Culling");
        SetCullingField_Field_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCullingField_NativeFunction, "Field");
        SetCullingField_Operation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCullingField_NativeFunction, "Operation");
        SetCullingField_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCullingField_NativeFunction, "ReturnValue");
        
        
    }
    
    protected CullingField(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ObjectProperty /Script/FieldSystemEngine.CullingField:Culling
    static readonly int Culling_Offset;
    
    public UnrealSharp.FieldSystemEngine.FieldNodeBase Culling
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.FieldSystemEngine.FieldNodeBase>.FromNative(IntPtr.Add(NativeObject, Culling_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            ObjectMarshaller<UnrealSharp.FieldSystemEngine.FieldNodeBase>.ToNative(IntPtr.Add(NativeObject, Culling_Offset), 0, this, value);
        }
    }
    
    // ObjectProperty /Script/FieldSystemEngine.CullingField:Field
    static readonly int Field_Offset;
    
    public UnrealSharp.FieldSystemEngine.FieldNodeBase Field
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.FieldSystemEngine.FieldNodeBase>.FromNative(IntPtr.Add(NativeObject, Field_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            ObjectMarshaller<UnrealSharp.FieldSystemEngine.FieldNodeBase>.ToNative(IntPtr.Add(NativeObject, Field_Offset), 0, this, value);
        }
    }
    
    // ByteProperty /Script/FieldSystemEngine.CullingField:Operation
    static readonly int Operation_Offset;
    
    public UnrealSharp.Chaos.EFieldCullingOperationType Operation
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Chaos.EFieldCullingOperationType>.FromNative(IntPtr.Add(NativeObject, Operation_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.Chaos.EFieldCullingOperationType>.ToNative(IntPtr.Add(NativeObject, Operation_Offset), 0, this, value);
        }
    }
    
    // Function /Script/FieldSystemEngine.CullingField:SetCullingField
    static readonly IntPtr SetCullingField_NativeFunction;
    static readonly int SetCullingField_ParamsSize;
    static readonly int SetCullingField_Culling_Offset;
    static readonly int SetCullingField_Field_Offset;
    static readonly int SetCullingField_Operation_Offset;
    static readonly int SetCullingField_ReturnValue_Offset;
    
    public UnrealSharp.FieldSystemEngine.CullingField SetCullingField(UnrealSharp.FieldSystemEngine.FieldNodeBase culling, UnrealSharp.FieldSystemEngine.FieldNodeBase field, UnrealSharp.Chaos.EFieldCullingOperationType operation)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCullingField_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.FieldSystemEngine.FieldNodeBase>.ToNative(IntPtr.Add(ParamsBuffer, SetCullingField_Culling_Offset), 0, null, culling);
            ObjectMarshaller<UnrealSharp.FieldSystemEngine.FieldNodeBase>.ToNative(IntPtr.Add(ParamsBuffer, SetCullingField_Field_Offset), 0, null, field);
            BlittableMarshaller<UnrealSharp.Chaos.EFieldCullingOperationType>.ToNative(IntPtr.Add(ParamsBuffer, SetCullingField_Operation_Offset), 0, null, operation);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCullingField_NativeFunction, ParamsBuffer);
            
            UnrealSharp.FieldSystemEngine.CullingField returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.FieldSystemEngine.CullingField>.FromNative(IntPtr.Add(ParamsBuffer, SetCullingField_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.FieldSystemEngine;

[UClass]
public partial class FieldSystemMetaDataFilter : UnrealSharp.FieldSystemEngine.FieldSystemMetaData
{
    
    static FieldSystemMetaDataFilter()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("FieldSystemMetaDataFilter");
        
        FilterType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "FilterType");
        ObjectType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ObjectType");
        PositionType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "PositionType");
        
        SetMetaDataFilterType_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetMetaDataFilterType");
        SetMetaDataFilterType_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetMetaDataFilterType_NativeFunction);
        SetMetaDataFilterType_FilterType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetMetaDataFilterType_NativeFunction, "FilterType");
        SetMetaDataFilterType_ObjectType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetMetaDataFilterType_NativeFunction, "ObjectType");
        SetMetaDataFilterType_PositionType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetMetaDataFilterType_NativeFunction, "PositionType");
        SetMetaDataFilterType_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetMetaDataFilterType_NativeFunction, "ReturnValue");
        
        
    }
    
    protected FieldSystemMetaDataFilter(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ByteProperty /Script/FieldSystemEngine.FieldSystemMetaDataFilter:FilterType
    static readonly int FilterType_Offset;
    
    public UnrealSharp.Chaos.EFieldFilterType FilterType
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Chaos.EFieldFilterType>.FromNative(IntPtr.Add(NativeObject, FilterType_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.Chaos.EFieldFilterType>.ToNative(IntPtr.Add(NativeObject, FilterType_Offset), 0, this, value);
        }
    }
    
    // ByteProperty /Script/FieldSystemEngine.FieldSystemMetaDataFilter:ObjectType
    static readonly int ObjectType_Offset;
    
    public UnrealSharp.Chaos.EFieldObjectType ObjectType
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Chaos.EFieldObjectType>.FromNative(IntPtr.Add(NativeObject, ObjectType_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.Chaos.EFieldObjectType>.ToNative(IntPtr.Add(NativeObject, ObjectType_Offset), 0, this, value);
        }
    }
    
    // ByteProperty /Script/FieldSystemEngine.FieldSystemMetaDataFilter:PositionType
    static readonly int PositionType_Offset;
    
    public UnrealSharp.Chaos.EFieldPositionType PositionType
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Chaos.EFieldPositionType>.FromNative(IntPtr.Add(NativeObject, PositionType_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.Chaos.EFieldPositionType>.ToNative(IntPtr.Add(NativeObject, PositionType_Offset), 0, this, value);
        }
    }
    
    // Function /Script/FieldSystemEngine.FieldSystemMetaDataFilter:SetMetaDataFilterType
    static readonly IntPtr SetMetaDataFilterType_NativeFunction;
    static readonly int SetMetaDataFilterType_ParamsSize;
    static readonly int SetMetaDataFilterType_FilterType_Offset;
    static readonly int SetMetaDataFilterType_ObjectType_Offset;
    static readonly int SetMetaDataFilterType_PositionType_Offset;
    static readonly int SetMetaDataFilterType_ReturnValue_Offset;
    
    public UnrealSharp.FieldSystemEngine.FieldSystemMetaDataFilter SetMetaDataFilterType(UnrealSharp.Chaos.EFieldFilterType filterType, UnrealSharp.Chaos.EFieldObjectType objectType, UnrealSharp.Chaos.EFieldPositionType positionType)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetMetaDataFilterType_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.Chaos.EFieldFilterType>.ToNative(IntPtr.Add(ParamsBuffer, SetMetaDataFilterType_FilterType_Offset), 0, null, filterType);
            BlittableMarshaller<UnrealSharp.Chaos.EFieldObjectType>.ToNative(IntPtr.Add(ParamsBuffer, SetMetaDataFilterType_ObjectType_Offset), 0, null, objectType);
            BlittableMarshaller<UnrealSharp.Chaos.EFieldPositionType>.ToNative(IntPtr.Add(ParamsBuffer, SetMetaDataFilterType_PositionType_Offset), 0, null, positionType);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetMetaDataFilterType_NativeFunction, ParamsBuffer);
            
            UnrealSharp.FieldSystemEngine.FieldSystemMetaDataFilter returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.FieldSystemEngine.FieldSystemMetaDataFilter>.FromNative(IntPtr.Add(ParamsBuffer, SetMetaDataFilterType_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
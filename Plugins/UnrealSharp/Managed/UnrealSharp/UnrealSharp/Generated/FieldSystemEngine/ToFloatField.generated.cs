// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.FieldSystemEngine;

[UClass]
public partial class ToFloatField : UnrealSharp.FieldSystemEngine.FieldNodeFloat
{
    
    static ToFloatField()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("ToFloatField");
        
        IntField_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "IntField");
        
        SetToFloatField_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetToFloatField");
        SetToFloatField_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetToFloatField_NativeFunction);
        SetToFloatField_IntegerField_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetToFloatField_NativeFunction, "IntegerField");
        SetToFloatField_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetToFloatField_NativeFunction, "ReturnValue");
        
        
    }
    
    protected ToFloatField(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ObjectProperty /Script/FieldSystemEngine.ToFloatField:IntField
    static readonly int IntField_Offset;
    
    public UnrealSharp.FieldSystemEngine.FieldNodeInt IntField
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.FieldSystemEngine.FieldNodeInt>.FromNative(IntPtr.Add(NativeObject, IntField_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            ObjectMarshaller<UnrealSharp.FieldSystemEngine.FieldNodeInt>.ToNative(IntPtr.Add(NativeObject, IntField_Offset), 0, this, value);
        }
    }
    
    // Function /Script/FieldSystemEngine.ToFloatField:SetToFloatField
    static readonly IntPtr SetToFloatField_NativeFunction;
    static readonly int SetToFloatField_ParamsSize;
    static readonly int SetToFloatField_IntegerField_Offset;
    static readonly int SetToFloatField_ReturnValue_Offset;
    
    public UnrealSharp.FieldSystemEngine.ToFloatField SetToFloatField(UnrealSharp.FieldSystemEngine.FieldNodeInt integerField)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetToFloatField_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.FieldSystemEngine.FieldNodeInt>.ToNative(IntPtr.Add(ParamsBuffer, SetToFloatField_IntegerField_Offset), 0, null, integerField);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetToFloatField_NativeFunction, ParamsBuffer);
            
            UnrealSharp.FieldSystemEngine.ToFloatField returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.FieldSystemEngine.ToFloatField>.FromNative(IntPtr.Add(ParamsBuffer, SetToFloatField_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.FieldSystemEngine;

[UClass]
public partial class UniformInteger : UnrealSharp.FieldSystemEngine.FieldNodeInt
{
    
    static UniformInteger()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("UniformInteger");
        
        Magnitude_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Magnitude");
        
        SetUniformInteger_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetUniformInteger");
        SetUniformInteger_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetUniformInteger_NativeFunction);
        SetUniformInteger_Magnitude_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetUniformInteger_NativeFunction, "Magnitude");
        SetUniformInteger_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetUniformInteger_NativeFunction, "ReturnValue");
        
        
    }
    
    protected UniformInteger(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // IntProperty /Script/FieldSystemEngine.UniformInteger:Magnitude
    static readonly int Magnitude_Offset;
    
    public int Magnitude
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<int>.FromNative(IntPtr.Add(NativeObject, Magnitude_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<int>.ToNative(IntPtr.Add(NativeObject, Magnitude_Offset), 0, this, value);
        }
    }
    
    // Function /Script/FieldSystemEngine.UniformInteger:SetUniformInteger
    static readonly IntPtr SetUniformInteger_NativeFunction;
    static readonly int SetUniformInteger_ParamsSize;
    static readonly int SetUniformInteger_Magnitude_Offset;
    static readonly int SetUniformInteger_ReturnValue_Offset;
    
    public UnrealSharp.FieldSystemEngine.UniformInteger SetUniformInteger(int magnitude)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetUniformInteger_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetUniformInteger_Magnitude_Offset), 0, null, magnitude);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetUniformInteger_NativeFunction, ParamsBuffer);
            
            UnrealSharp.FieldSystemEngine.UniformInteger returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.FieldSystemEngine.UniformInteger>.FromNative(IntPtr.Add(ParamsBuffer, SetUniformInteger_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
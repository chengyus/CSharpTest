// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.FieldSystemEngine;

[UClass]
public partial class UniformScalar : UnrealSharp.FieldSystemEngine.FieldNodeFloat
{
    
    static UniformScalar()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("UniformScalar");
        
        Magnitude_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Magnitude");
        
        SetUniformScalar_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetUniformScalar");
        SetUniformScalar_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetUniformScalar_NativeFunction);
        SetUniformScalar_Magnitude_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetUniformScalar_NativeFunction, "Magnitude");
        SetUniformScalar_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetUniformScalar_NativeFunction, "ReturnValue");
        
        
    }
    
    protected UniformScalar(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // FloatProperty /Script/FieldSystemEngine.UniformScalar:Magnitude
    static readonly int Magnitude_Offset;
    
    public float Magnitude
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, Magnitude_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, Magnitude_Offset), 0, this, value);
        }
    }
    
    // Function /Script/FieldSystemEngine.UniformScalar:SetUniformScalar
    static readonly IntPtr SetUniformScalar_NativeFunction;
    static readonly int SetUniformScalar_ParamsSize;
    static readonly int SetUniformScalar_Magnitude_Offset;
    static readonly int SetUniformScalar_ReturnValue_Offset;
    
    public UnrealSharp.FieldSystemEngine.UniformScalar SetUniformScalar(float magnitude)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetUniformScalar_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetUniformScalar_Magnitude_Offset), 0, null, magnitude);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetUniformScalar_NativeFunction, ParamsBuffer);
            
            UnrealSharp.FieldSystemEngine.UniformScalar returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.FieldSystemEngine.UniformScalar>.FromNative(IntPtr.Add(ParamsBuffer, SetUniformScalar_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
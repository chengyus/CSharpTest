// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Foliage;

[UClass]
public partial class InstancedFoliageActor : UnrealSharp.Engine.ISMPartitionActor
{
    
    static readonly IntPtr NativeClassPtr;
    static InstancedFoliageActor()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("InstancedFoliageActor");
        
        
        RemoveAllInstances_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveAllInstances");
        RemoveAllInstances_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveAllInstances_NativeFunction);
        RemoveAllInstances_WorldContextObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveAllInstances_NativeFunction, "WorldContextObject");
        RemoveAllInstances_InFoliageType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveAllInstances_NativeFunction, "InFoliageType");
        AddInstances_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddInstances");
        AddInstances_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddInstances_NativeFunction);
        AddInstances_WorldContextObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddInstances_NativeFunction, "WorldContextObject");
        AddInstances_InFoliageType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddInstances_NativeFunction, "InFoliageType");
        AddInstances_InTransforms_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddInstances_NativeFunction, "InTransforms");
        AddInstances_InTransforms_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(AddInstances_NativeFunction, "InTransforms");
        
        
    }
    
    protected InstancedFoliageActor(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Foliage.InstancedFoliageActor:RemoveAllInstances
    static readonly IntPtr RemoveAllInstances_NativeFunction;
    static readonly int RemoveAllInstances_ParamsSize;
    static readonly int RemoveAllInstances_WorldContextObject_Offset;
    static readonly int RemoveAllInstances_InFoliageType_Offset;
    
    public static void RemoveAllInstances(UnrealSharp.CoreUObject.Object worldContextObject, UnrealSharp.Foliage.FoliageType inFoliageType)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveAllInstances_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, RemoveAllInstances_WorldContextObject_Offset), 0, null, worldContextObject);
            ObjectMarshaller<UnrealSharp.Foliage.FoliageType>.ToNative(IntPtr.Add(ParamsBuffer, RemoveAllInstances_InFoliageType_Offset), 0, null, inFoliageType);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, RemoveAllInstances_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Foliage.InstancedFoliageActor:AddInstances
    static readonly IntPtr AddInstances_NativeFunction;
    static readonly int AddInstances_ParamsSize;
    static readonly int AddInstances_WorldContextObject_Offset;
    static readonly int AddInstances_InFoliageType_Offset;
    static readonly int AddInstances_InTransforms_Offset;
    static readonly int AddInstances_InTransforms_ElementSize;
    
    public static void AddInstances(UnrealSharp.CoreUObject.Object worldContextObject, UnrealSharp.Foliage.FoliageType inFoliageType, System.Collections.Generic.IList<UnrealSharp.Transform> inTransforms)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddInstances_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, AddInstances_WorldContextObject_Offset), 0, null, worldContextObject);
            ObjectMarshaller<UnrealSharp.Foliage.FoliageType>.ToNative(IntPtr.Add(ParamsBuffer, AddInstances_InFoliageType_Offset), 0, null, inFoliageType);
            IntPtr InTransforms_NativeBuffer = IntPtr.Add(ParamsBuffer, AddInstances_InTransforms_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Transform> InTransforms_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Transform>(1, BlittableMarshaller<UnrealSharp.Transform>.ToNative, BlittableMarshaller<UnrealSharp.Transform>.FromNative, AddInstances_InTransforms_ElementSize);
            InTransforms_Marshaler.ToNative(InTransforms_NativeBuffer, 0, null, inTransforms);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, AddInstances_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    
}
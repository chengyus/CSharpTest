// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Foliage;

[UClass]
public partial class InteractiveFoliageActor : UnrealSharp.Engine.StaticMeshActor
{
    
    static InteractiveFoliageActor()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("InteractiveFoliageActor");
        
        FoliageDamageImpulseScale_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "FoliageDamageImpulseScale");
        FoliageTouchImpulseScale_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "FoliageTouchImpulseScale");
        FoliageStiffness_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "FoliageStiffness");
        FoliageStiffnessQuadratic_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "FoliageStiffnessQuadratic");
        FoliageDamping_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "FoliageDamping");
        MaxDamageImpulse_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "MaxDamageImpulse");
        MaxTouchImpulse_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "MaxTouchImpulse");
        MaxForce_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "MaxForce");
        
        
        
    }
    
    protected InteractiveFoliageActor(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // FloatProperty /Script/Foliage.InteractiveFoliageActor:FoliageDamageImpulseScale
    static readonly int FoliageDamageImpulseScale_Offset;
    
    public float FoliageDamageImpulseScale
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, FoliageDamageImpulseScale_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, FoliageDamageImpulseScale_Offset), 0, this, value);
        }
    }
    
    // FloatProperty /Script/Foliage.InteractiveFoliageActor:FoliageTouchImpulseScale
    static readonly int FoliageTouchImpulseScale_Offset;
    
    public float FoliageTouchImpulseScale
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, FoliageTouchImpulseScale_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, FoliageTouchImpulseScale_Offset), 0, this, value);
        }
    }
    
    // FloatProperty /Script/Foliage.InteractiveFoliageActor:FoliageStiffness
    static readonly int FoliageStiffness_Offset;
    
    public float FoliageStiffness
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, FoliageStiffness_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, FoliageStiffness_Offset), 0, this, value);
        }
    }
    
    // FloatProperty /Script/Foliage.InteractiveFoliageActor:FoliageStiffnessQuadratic
    static readonly int FoliageStiffnessQuadratic_Offset;
    
    public float FoliageStiffnessQuadratic
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, FoliageStiffnessQuadratic_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, FoliageStiffnessQuadratic_Offset), 0, this, value);
        }
    }
    
    // FloatProperty /Script/Foliage.InteractiveFoliageActor:FoliageDamping
    static readonly int FoliageDamping_Offset;
    
    public float FoliageDamping
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, FoliageDamping_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, FoliageDamping_Offset), 0, this, value);
        }
    }
    
    // FloatProperty /Script/Foliage.InteractiveFoliageActor:MaxDamageImpulse
    static readonly int MaxDamageImpulse_Offset;
    
    public float MaxDamageImpulse
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, MaxDamageImpulse_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, MaxDamageImpulse_Offset), 0, this, value);
        }
    }
    
    // FloatProperty /Script/Foliage.InteractiveFoliageActor:MaxTouchImpulse
    static readonly int MaxTouchImpulse_Offset;
    
    public float MaxTouchImpulse
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, MaxTouchImpulse_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, MaxTouchImpulse_Offset), 0, this, value);
        }
    }
    
    // FloatProperty /Script/Foliage.InteractiveFoliageActor:MaxForce
    static readonly int MaxForce_Offset;
    
    public float MaxForce
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, MaxForce_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, MaxForce_Offset), 0, this, value);
        }
    }
    
    
}
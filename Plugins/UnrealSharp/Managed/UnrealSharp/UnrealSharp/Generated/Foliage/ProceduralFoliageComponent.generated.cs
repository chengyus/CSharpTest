// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Foliage;

[UClass]
public partial class ProceduralFoliageComponent : UnrealSharp.Engine.ActorComponent
{
    
    static ProceduralFoliageComponent()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("ProceduralFoliageComponent");
        
        FoliageSpawner_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "FoliageSpawner");
        TileOverlap_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "TileOverlap");
        bAllowLandscape_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bAllowLandscape");
        bAllowBSP_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bAllowBSP");
        bAllowStaticMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bAllowStaticMesh");
        bAllowTranslucent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bAllowTranslucent");
        bAllowFoliage_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bAllowFoliage");
        bShowDebugTiles_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bShowDebugTiles");
        
        
        
    }
    
    protected ProceduralFoliageComponent(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ObjectProperty /Script/Foliage.ProceduralFoliageComponent:FoliageSpawner
    static readonly int FoliageSpawner_Offset;
    
    public UnrealSharp.Foliage.ProceduralFoliageSpawner FoliageSpawner
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.Foliage.ProceduralFoliageSpawner>.FromNative(IntPtr.Add(NativeObject, FoliageSpawner_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            ObjectMarshaller<UnrealSharp.Foliage.ProceduralFoliageSpawner>.ToNative(IntPtr.Add(NativeObject, FoliageSpawner_Offset), 0, this, value);
        }
    }
    
    // FloatProperty /Script/Foliage.ProceduralFoliageComponent:TileOverlap
    static readonly int TileOverlap_Offset;
    
    public float TileOverlap
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, TileOverlap_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, TileOverlap_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/Foliage.ProceduralFoliageComponent:bAllowLandscape
    static readonly int bAllowLandscape_Offset;
    
    public bool bAllowLandscape
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bAllowLandscape_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, bAllowLandscape_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/Foliage.ProceduralFoliageComponent:bAllowBSP
    static readonly int bAllowBSP_Offset;
    
    public bool bAllowBSP
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bAllowBSP_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, bAllowBSP_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/Foliage.ProceduralFoliageComponent:bAllowStaticMesh
    static readonly int bAllowStaticMesh_Offset;
    
    public bool bAllowStaticMesh
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bAllowStaticMesh_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, bAllowStaticMesh_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/Foliage.ProceduralFoliageComponent:bAllowTranslucent
    static readonly int bAllowTranslucent_Offset;
    
    public bool bAllowTranslucent
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bAllowTranslucent_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, bAllowTranslucent_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/Foliage.ProceduralFoliageComponent:bAllowFoliage
    static readonly int bAllowFoliage_Offset;
    
    public bool bAllowFoliage
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bAllowFoliage_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, bAllowFoliage_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/Foliage.ProceduralFoliageComponent:bShowDebugTiles
    static readonly int bShowDebugTiles_Offset;
    
    public bool bShowDebugTiles
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bShowDebugTiles_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, bShowDebugTiles_Offset), 0, this, value);
        }
    }
    
    
}
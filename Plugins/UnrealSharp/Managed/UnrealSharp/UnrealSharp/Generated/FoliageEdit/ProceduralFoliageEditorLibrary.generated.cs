// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.FoliageEdit;

[UClass]
public partial class ProceduralFoliageEditorLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static ProceduralFoliageEditorLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("ProceduralFoliageEditorLibrary");
        
        
        ResimulateProceduralFoliageVolumes_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ResimulateProceduralFoliageVolumes");
        ResimulateProceduralFoliageVolumes_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ResimulateProceduralFoliageVolumes_NativeFunction);
        ResimulateProceduralFoliageVolumes_ProceduralFoliageVolumes_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ResimulateProceduralFoliageVolumes_NativeFunction, "ProceduralFoliageVolumes");
        ResimulateProceduralFoliageVolumes_ProceduralFoliageVolumes_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(ResimulateProceduralFoliageVolumes_NativeFunction, "ProceduralFoliageVolumes");
        ResimulateProceduralFoliageComponents_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ResimulateProceduralFoliageComponents");
        ResimulateProceduralFoliageComponents_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ResimulateProceduralFoliageComponents_NativeFunction);
        ResimulateProceduralFoliageComponents_ProceduralFoliageComponents_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ResimulateProceduralFoliageComponents_NativeFunction, "ProceduralFoliageComponents");
        ResimulateProceduralFoliageComponents_ProceduralFoliageComponents_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(ResimulateProceduralFoliageComponents_NativeFunction, "ProceduralFoliageComponents");
        ClearProceduralFoliageVolumes_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ClearProceduralFoliageVolumes");
        ClearProceduralFoliageVolumes_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ClearProceduralFoliageVolumes_NativeFunction);
        ClearProceduralFoliageVolumes_ProceduralFoliageVolumes_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ClearProceduralFoliageVolumes_NativeFunction, "ProceduralFoliageVolumes");
        ClearProceduralFoliageVolumes_ProceduralFoliageVolumes_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(ClearProceduralFoliageVolumes_NativeFunction, "ProceduralFoliageVolumes");
        ClearProceduralFoliageComponents_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ClearProceduralFoliageComponents");
        ClearProceduralFoliageComponents_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ClearProceduralFoliageComponents_NativeFunction);
        ClearProceduralFoliageComponents_ProceduralFoliageComponents_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ClearProceduralFoliageComponents_NativeFunction, "ProceduralFoliageComponents");
        ClearProceduralFoliageComponents_ProceduralFoliageComponents_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(ClearProceduralFoliageComponents_NativeFunction, "ProceduralFoliageComponents");
        
        
    }
    
    protected ProceduralFoliageEditorLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/FoliageEdit.ProceduralFoliageEditorLibrary:ResimulateProceduralFoliageVolumes
    static readonly IntPtr ResimulateProceduralFoliageVolumes_NativeFunction;
    static readonly int ResimulateProceduralFoliageVolumes_ParamsSize;
    static readonly int ResimulateProceduralFoliageVolumes_ProceduralFoliageVolumes_Offset;
    static readonly int ResimulateProceduralFoliageVolumes_ProceduralFoliageVolumes_ElementSize;
    
    public static void ResimulateProceduralFoliageVolumes(System.Collections.Generic.IList<UnrealSharp.Foliage.ProceduralFoliageVolume> proceduralFoliageVolumes)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ResimulateProceduralFoliageVolumes_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr ProceduralFoliageVolumes_NativeBuffer = IntPtr.Add(ParamsBuffer, ResimulateProceduralFoliageVolumes_ProceduralFoliageVolumes_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Foliage.ProceduralFoliageVolume> ProceduralFoliageVolumes_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Foliage.ProceduralFoliageVolume>(1, ObjectMarshaller<UnrealSharp.Foliage.ProceduralFoliageVolume>.ToNative, ObjectMarshaller<UnrealSharp.Foliage.ProceduralFoliageVolume>.FromNative, ResimulateProceduralFoliageVolumes_ProceduralFoliageVolumes_ElementSize);
            ProceduralFoliageVolumes_Marshaler.ToNative(ProceduralFoliageVolumes_NativeBuffer, 0, null, proceduralFoliageVolumes);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ResimulateProceduralFoliageVolumes_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/FoliageEdit.ProceduralFoliageEditorLibrary:ResimulateProceduralFoliageComponents
    static readonly IntPtr ResimulateProceduralFoliageComponents_NativeFunction;
    static readonly int ResimulateProceduralFoliageComponents_ParamsSize;
    static readonly int ResimulateProceduralFoliageComponents_ProceduralFoliageComponents_Offset;
    static readonly int ResimulateProceduralFoliageComponents_ProceduralFoliageComponents_ElementSize;
    
    public static void ResimulateProceduralFoliageComponents(System.Collections.Generic.IList<UnrealSharp.Foliage.ProceduralFoliageComponent> proceduralFoliageComponents)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ResimulateProceduralFoliageComponents_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr ProceduralFoliageComponents_NativeBuffer = IntPtr.Add(ParamsBuffer, ResimulateProceduralFoliageComponents_ProceduralFoliageComponents_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Foliage.ProceduralFoliageComponent> ProceduralFoliageComponents_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Foliage.ProceduralFoliageComponent>(1, ObjectMarshaller<UnrealSharp.Foliage.ProceduralFoliageComponent>.ToNative, ObjectMarshaller<UnrealSharp.Foliage.ProceduralFoliageComponent>.FromNative, ResimulateProceduralFoliageComponents_ProceduralFoliageComponents_ElementSize);
            ProceduralFoliageComponents_Marshaler.ToNative(ProceduralFoliageComponents_NativeBuffer, 0, null, proceduralFoliageComponents);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ResimulateProceduralFoliageComponents_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/FoliageEdit.ProceduralFoliageEditorLibrary:ClearProceduralFoliageVolumes
    static readonly IntPtr ClearProceduralFoliageVolumes_NativeFunction;
    static readonly int ClearProceduralFoliageVolumes_ParamsSize;
    static readonly int ClearProceduralFoliageVolumes_ProceduralFoliageVolumes_Offset;
    static readonly int ClearProceduralFoliageVolumes_ProceduralFoliageVolumes_ElementSize;
    
    public static void ClearProceduralFoliageVolumes(System.Collections.Generic.IList<UnrealSharp.Foliage.ProceduralFoliageVolume> proceduralFoliageVolumes)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ClearProceduralFoliageVolumes_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr ProceduralFoliageVolumes_NativeBuffer = IntPtr.Add(ParamsBuffer, ClearProceduralFoliageVolumes_ProceduralFoliageVolumes_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Foliage.ProceduralFoliageVolume> ProceduralFoliageVolumes_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Foliage.ProceduralFoliageVolume>(1, ObjectMarshaller<UnrealSharp.Foliage.ProceduralFoliageVolume>.ToNative, ObjectMarshaller<UnrealSharp.Foliage.ProceduralFoliageVolume>.FromNative, ClearProceduralFoliageVolumes_ProceduralFoliageVolumes_ElementSize);
            ProceduralFoliageVolumes_Marshaler.ToNative(ProceduralFoliageVolumes_NativeBuffer, 0, null, proceduralFoliageVolumes);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ClearProceduralFoliageVolumes_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/FoliageEdit.ProceduralFoliageEditorLibrary:ClearProceduralFoliageComponents
    static readonly IntPtr ClearProceduralFoliageComponents_NativeFunction;
    static readonly int ClearProceduralFoliageComponents_ParamsSize;
    static readonly int ClearProceduralFoliageComponents_ProceduralFoliageComponents_Offset;
    static readonly int ClearProceduralFoliageComponents_ProceduralFoliageComponents_ElementSize;
    
    public static void ClearProceduralFoliageComponents(System.Collections.Generic.IList<UnrealSharp.Foliage.ProceduralFoliageComponent> proceduralFoliageComponents)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ClearProceduralFoliageComponents_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr ProceduralFoliageComponents_NativeBuffer = IntPtr.Add(ParamsBuffer, ClearProceduralFoliageComponents_ProceduralFoliageComponents_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Foliage.ProceduralFoliageComponent> ProceduralFoliageComponents_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Foliage.ProceduralFoliageComponent>(1, ObjectMarshaller<UnrealSharp.Foliage.ProceduralFoliageComponent>.ToNative, ObjectMarshaller<UnrealSharp.Foliage.ProceduralFoliageComponent>.FromNative, ClearProceduralFoliageComponents_ProceduralFoliageComponents_ElementSize);
            ProceduralFoliageComponents_Marshaler.ToNative(ProceduralFoliageComponents_NativeBuffer, 0, null, proceduralFoliageComponents);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ClearProceduralFoliageComponents_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    
}
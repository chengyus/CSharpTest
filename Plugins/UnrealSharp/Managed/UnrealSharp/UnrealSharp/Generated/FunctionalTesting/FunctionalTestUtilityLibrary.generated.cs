// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.FunctionalTesting;

[UClass]
public partial class FunctionalTestUtilityLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static FunctionalTestUtilityLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("FunctionalTestUtilityLibrary");
        
        
        TraceChannelTestUtil_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "TraceChannelTestUtil");
        TraceChannelTestUtil_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(TraceChannelTestUtil_NativeFunction);
        TraceChannelTestUtil_WorldContextObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TraceChannelTestUtil_NativeFunction, "WorldContextObject");
        TraceChannelTestUtil_BatchOptions_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TraceChannelTestUtil_NativeFunction, "BatchOptions");
        TraceChannelTestUtil_Start_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TraceChannelTestUtil_NativeFunction, "Start");
        TraceChannelTestUtil_End_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TraceChannelTestUtil_NativeFunction, "End");
        TraceChannelTestUtil_SphereCapsuleRadius_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TraceChannelTestUtil_NativeFunction, "SphereCapsuleRadius");
        TraceChannelTestUtil_CapsuleHalfHeight_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TraceChannelTestUtil_NativeFunction, "CapsuleHalfHeight");
        TraceChannelTestUtil_BoxHalfSize_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TraceChannelTestUtil_NativeFunction, "BoxHalfSize");
        TraceChannelTestUtil_Orientation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TraceChannelTestUtil_NativeFunction, "Orientation");
        TraceChannelTestUtil_TraceChannel_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TraceChannelTestUtil_NativeFunction, "TraceChannel");
        TraceChannelTestUtil_ObjectTypes_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TraceChannelTestUtil_NativeFunction, "ObjectTypes");
        TraceChannelTestUtil_ObjectTypes_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(TraceChannelTestUtil_NativeFunction, "ObjectTypes");
        TraceChannelTestUtil_ProfileName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TraceChannelTestUtil_NativeFunction, "ProfileName");
        TraceChannelTestUtil_bTraceComplex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TraceChannelTestUtil_NativeFunction, "bTraceComplex");
        TraceChannelTestUtil_ActorsToIgnore_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TraceChannelTestUtil_NativeFunction, "ActorsToIgnore");
        TraceChannelTestUtil_ActorsToIgnore_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(TraceChannelTestUtil_NativeFunction, "ActorsToIgnore");
        TraceChannelTestUtil_bIgnoreSelf_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TraceChannelTestUtil_NativeFunction, "bIgnoreSelf");
        TraceChannelTestUtil_DrawDebugType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TraceChannelTestUtil_NativeFunction, "DrawDebugType");
        TraceChannelTestUtil_TraceColor_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TraceChannelTestUtil_NativeFunction, "TraceColor");
        TraceChannelTestUtil_TraceHitColor_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TraceChannelTestUtil_NativeFunction, "TraceHitColor");
        TraceChannelTestUtil_DrawTime_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TraceChannelTestUtil_NativeFunction, "DrawTime");
        TraceChannelTestUtil_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TraceChannelTestUtil_NativeFunction, "ReturnValue");
        
        
    }
    
    protected FunctionalTestUtilityLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/FunctionalTesting.FunctionalTestUtilityLibrary:TraceChannelTestUtil
    static readonly IntPtr TraceChannelTestUtil_NativeFunction;
    static readonly int TraceChannelTestUtil_ParamsSize;
    static readonly int TraceChannelTestUtil_WorldContextObject_Offset;
    static readonly int TraceChannelTestUtil_BatchOptions_Offset;
    static readonly int TraceChannelTestUtil_Start_Offset;
    static readonly int TraceChannelTestUtil_End_Offset;
    static readonly int TraceChannelTestUtil_SphereCapsuleRadius_Offset;
    static readonly int TraceChannelTestUtil_CapsuleHalfHeight_Offset;
    static readonly int TraceChannelTestUtil_BoxHalfSize_Offset;
    static readonly int TraceChannelTestUtil_Orientation_Offset;
    static readonly int TraceChannelTestUtil_TraceChannel_Offset;
    static readonly int TraceChannelTestUtil_ObjectTypes_Offset;
    static readonly int TraceChannelTestUtil_ObjectTypes_ElementSize;
    static readonly int TraceChannelTestUtil_ProfileName_Offset;
    static readonly int TraceChannelTestUtil_bTraceComplex_Offset;
    static readonly int TraceChannelTestUtil_ActorsToIgnore_Offset;
    static readonly int TraceChannelTestUtil_ActorsToIgnore_ElementSize;
    static readonly int TraceChannelTestUtil_bIgnoreSelf_Offset;
    static readonly int TraceChannelTestUtil_DrawDebugType_Offset;
    static readonly int TraceChannelTestUtil_TraceColor_Offset;
    static readonly int TraceChannelTestUtil_TraceHitColor_Offset;
    static readonly int TraceChannelTestUtil_DrawTime_Offset;
    static readonly int TraceChannelTestUtil_ReturnValue_Offset;
    
    public static UnrealSharp.FunctionalTesting.TraceQueryTestResults TraceChannelTestUtil(UnrealSharp.CoreUObject.Object worldContextObject, UnrealSharp.FunctionalTesting.TraceChannelTestBatchOptions batchOptions, System.DoubleNumerics.Vector3 start, System.DoubleNumerics.Vector3 end, float sphereCapsuleRadius, float capsuleHalfHeight, System.DoubleNumerics.Vector3 boxHalfSize, UnrealSharp.Rotator orientation, UnrealSharp.Engine.ETraceTypeQuery traceChannel, System.Collections.Generic.IList<UnrealSharp.Engine.EObjectTypeQuery> objectTypes, Name profileName, bool bTraceComplex, System.Collections.Generic.IList<UnrealSharp.Engine.Actor> actorsToIgnore, bool bIgnoreSelf, UnrealSharp.Engine.EDrawDebugTrace drawDebugType)
    {
        UnrealSharp.CoreUObject.LinearColor traceColor = new UnrealSharp.CoreUObject.LinearColor
        {
            R=1.000000f,
            G=0.000000f,
            B=0.000000f,
            A=1.000000f,
        };
        return TraceChannelTestUtil(worldContextObject, batchOptions, start, end, sphereCapsuleRadius, capsuleHalfHeight, boxHalfSize, orientation, traceChannel, objectTypes, profileName, bTraceComplex, actorsToIgnore, bIgnoreSelf, drawDebugType, traceColor);
    }
    
    public static UnrealSharp.FunctionalTesting.TraceQueryTestResults TraceChannelTestUtil(UnrealSharp.CoreUObject.Object worldContextObject, UnrealSharp.FunctionalTesting.TraceChannelTestBatchOptions batchOptions, System.DoubleNumerics.Vector3 start, System.DoubleNumerics.Vector3 end, float sphereCapsuleRadius, float capsuleHalfHeight, System.DoubleNumerics.Vector3 boxHalfSize, UnrealSharp.Rotator orientation, UnrealSharp.Engine.ETraceTypeQuery traceChannel, System.Collections.Generic.IList<UnrealSharp.Engine.EObjectTypeQuery> objectTypes, Name profileName, bool bTraceComplex, System.Collections.Generic.IList<UnrealSharp.Engine.Actor> actorsToIgnore, bool bIgnoreSelf, UnrealSharp.Engine.EDrawDebugTrace drawDebugType, UnrealSharp.CoreUObject.LinearColor traceColor)
    {
        UnrealSharp.CoreUObject.LinearColor traceHitColor = new UnrealSharp.CoreUObject.LinearColor
        {
            R=0.000000f,
            G=1.000000f,
            B=0.000000f,
            A=1.000000f,
        };
        return TraceChannelTestUtil(worldContextObject, batchOptions, start, end, sphereCapsuleRadius, capsuleHalfHeight, boxHalfSize, orientation, traceChannel, objectTypes, profileName, bTraceComplex, actorsToIgnore, bIgnoreSelf, drawDebugType, traceColor, traceHitColor);
    }
    
    public static UnrealSharp.FunctionalTesting.TraceQueryTestResults TraceChannelTestUtil(UnrealSharp.CoreUObject.Object worldContextObject, UnrealSharp.FunctionalTesting.TraceChannelTestBatchOptions batchOptions, System.DoubleNumerics.Vector3 start, System.DoubleNumerics.Vector3 end, float sphereCapsuleRadius, float capsuleHalfHeight, System.DoubleNumerics.Vector3 boxHalfSize, UnrealSharp.Rotator orientation, UnrealSharp.Engine.ETraceTypeQuery traceChannel, System.Collections.Generic.IList<UnrealSharp.Engine.EObjectTypeQuery> objectTypes, Name profileName, bool bTraceComplex, System.Collections.Generic.IList<UnrealSharp.Engine.Actor> actorsToIgnore, bool bIgnoreSelf, UnrealSharp.Engine.EDrawDebugTrace drawDebugType, UnrealSharp.CoreUObject.LinearColor traceColor, UnrealSharp.CoreUObject.LinearColor traceHitColor, float drawTime = 5.000000f)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[TraceChannelTestUtil_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, TraceChannelTestUtil_WorldContextObject_Offset), 0, null, worldContextObject);
            UnrealSharp.FunctionalTesting.TraceChannelTestBatchOptionsMarshaler.ToNative(IntPtr.Add(ParamsBuffer, TraceChannelTestUtil_BatchOptions_Offset), 0, null, batchOptions);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, TraceChannelTestUtil_Start_Offset), 0, null, start);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, TraceChannelTestUtil_End_Offset), 0, null, end);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, TraceChannelTestUtil_SphereCapsuleRadius_Offset), 0, null, sphereCapsuleRadius);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, TraceChannelTestUtil_CapsuleHalfHeight_Offset), 0, null, capsuleHalfHeight);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, TraceChannelTestUtil_BoxHalfSize_Offset), 0, null, boxHalfSize);
            BlittableMarshaller<UnrealSharp.Rotator>.ToNative(IntPtr.Add(ParamsBuffer, TraceChannelTestUtil_Orientation_Offset), 0, null, orientation);
            BlittableMarshaller<UnrealSharp.Engine.ETraceTypeQuery>.ToNative(IntPtr.Add(ParamsBuffer, TraceChannelTestUtil_TraceChannel_Offset), 0, null, traceChannel);
            IntPtr ObjectTypes_NativeBuffer = IntPtr.Add(ParamsBuffer, TraceChannelTestUtil_ObjectTypes_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.EObjectTypeQuery> ObjectTypes_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Engine.EObjectTypeQuery>(1, BlittableMarshaller<UnrealSharp.Engine.EObjectTypeQuery>.ToNative, BlittableMarshaller<UnrealSharp.Engine.EObjectTypeQuery>.FromNative, TraceChannelTestUtil_ObjectTypes_ElementSize);
            ObjectTypes_Marshaler.ToNative(ObjectTypes_NativeBuffer, 0, null, objectTypes);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, TraceChannelTestUtil_ProfileName_Offset), 0, null, profileName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, TraceChannelTestUtil_bTraceComplex_Offset), 0, null, bTraceComplex);
            IntPtr ActorsToIgnore_NativeBuffer = IntPtr.Add(ParamsBuffer, TraceChannelTestUtil_ActorsToIgnore_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor> ActorsToIgnore_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor>(1, ObjectMarshaller<UnrealSharp.Engine.Actor>.ToNative, ObjectMarshaller<UnrealSharp.Engine.Actor>.FromNative, TraceChannelTestUtil_ActorsToIgnore_ElementSize);
            ActorsToIgnore_Marshaler.ToNative(ActorsToIgnore_NativeBuffer, 0, null, actorsToIgnore);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, TraceChannelTestUtil_bIgnoreSelf_Offset), 0, null, bIgnoreSelf);
            BlittableMarshaller<UnrealSharp.Engine.EDrawDebugTrace>.ToNative(IntPtr.Add(ParamsBuffer, TraceChannelTestUtil_DrawDebugType_Offset), 0, null, drawDebugType);
            BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.ToNative(IntPtr.Add(ParamsBuffer, TraceChannelTestUtil_TraceColor_Offset), 0, null, traceColor);
            BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.ToNative(IntPtr.Add(ParamsBuffer, TraceChannelTestUtil_TraceHitColor_Offset), 0, null, traceHitColor);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, TraceChannelTestUtil_DrawTime_Offset), 0, null, drawTime);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, TraceChannelTestUtil_NativeFunction, ParamsBuffer);
            
            UnrealSharp.FunctionalTesting.TraceQueryTestResults returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.FunctionalTesting.TraceQueryTestResults>.FromNative(IntPtr.Add(ParamsBuffer, TraceChannelTestUtil_ReturnValue_Offset), 0, null);
            
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.EObjectTypeQuery>.DestructInstance(ObjectTypes_NativeBuffer, 0);
            return returnValue;
        }
    }
    
    
}
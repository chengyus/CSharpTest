// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.FunctionalTesting;

[UClass]
public partial class FunctionalTestingManager : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static FunctionalTestingManager()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("FunctionalTestingManager");
        
        
        RunAllFunctionalTests_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RunAllFunctionalTests");
        RunAllFunctionalTests_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RunAllFunctionalTests_NativeFunction);
        RunAllFunctionalTests_WorldContextObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RunAllFunctionalTests_NativeFunction, "WorldContextObject");
        RunAllFunctionalTests_bNewLog_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RunAllFunctionalTests_NativeFunction, "bNewLog");
        RunAllFunctionalTests_bRunLooped_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RunAllFunctionalTests_NativeFunction, "bRunLooped");
        RunAllFunctionalTests_FailedTestsReproString_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RunAllFunctionalTests_NativeFunction, "FailedTestsReproString");
        RunAllFunctionalTests_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RunAllFunctionalTests_NativeFunction, "ReturnValue");
        
        
    }
    
    protected FunctionalTestingManager(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/FunctionalTesting.FunctionalTestingManager:RunAllFunctionalTests
    static readonly IntPtr RunAllFunctionalTests_NativeFunction;
    static readonly int RunAllFunctionalTests_ParamsSize;
    static readonly int RunAllFunctionalTests_WorldContextObject_Offset;
    static readonly int RunAllFunctionalTests_bNewLog_Offset;
    static readonly int RunAllFunctionalTests_bRunLooped_Offset;
    static readonly int RunAllFunctionalTests_FailedTestsReproString_Offset;
    static readonly int RunAllFunctionalTests_ReturnValue_Offset;
    
    public static bool RunAllFunctionalTests(UnrealSharp.CoreUObject.Object worldContextObject, bool bNewLog = true, bool bRunLooped = false, string failedTestsReproString = "")
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RunAllFunctionalTests_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, RunAllFunctionalTests_WorldContextObject_Offset), 0, null, worldContextObject);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RunAllFunctionalTests_bNewLog_Offset), 0, null, bNewLog);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RunAllFunctionalTests_bRunLooped_Offset), 0, null, bRunLooped);
            IntPtr FailedTestsReproString_NativePtr = IntPtr.Add(ParamsBuffer,RunAllFunctionalTests_FailedTestsReproString_Offset);
            StringMarshaller.ToNative(FailedTestsReproString_NativePtr,0,null,failedTestsReproString);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, RunAllFunctionalTests_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RunAllFunctionalTests_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(FailedTestsReproString_NativePtr, 0);
            return returnValue;
        }
    }
    
    
}
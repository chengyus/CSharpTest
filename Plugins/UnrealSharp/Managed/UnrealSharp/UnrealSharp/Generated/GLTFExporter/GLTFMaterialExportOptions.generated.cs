// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.GLTFExporter;

[UClass]
public partial class GLTFMaterialExportOptions : UnrealSharp.Engine.AssetUserData
{
    
    static GLTFMaterialExportOptions()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("GLTFMaterialExportOptions");
        
        Proxy_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Proxy");
        Default_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Default");
        
        
        
    }
    
    protected GLTFMaterialExportOptions(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ObjectProperty /Script/GLTFExporter.GLTFMaterialExportOptions:Proxy
    static readonly int Proxy_Offset;
    
    public UnrealSharp.Engine.MaterialInterface Proxy
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.Engine.MaterialInterface>.FromNative(IntPtr.Add(NativeObject, Proxy_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            ObjectMarshaller<UnrealSharp.Engine.MaterialInterface>.ToNative(IntPtr.Add(NativeObject, Proxy_Offset), 0, this, value);
        }
    }
    
    // StructProperty /Script/GLTFExporter.GLTFMaterialExportOptions:Default
    static readonly int Default_Offset;
    
    public UnrealSharp.GLTFExporter.GLTFOverrideMaterialBakeSettings Default
    {
        get
        {
            CheckObjectForValidity();
            return UnrealSharp.GLTFExporter.GLTFOverrideMaterialBakeSettingsMarshaler.FromNative(IntPtr.Add(NativeObject, Default_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            UnrealSharp.GLTFExporter.GLTFOverrideMaterialBakeSettingsMarshaler.ToNative(IntPtr.Add(NativeObject, Default_Offset), 0, this, value);
        }
    }
    
    
}
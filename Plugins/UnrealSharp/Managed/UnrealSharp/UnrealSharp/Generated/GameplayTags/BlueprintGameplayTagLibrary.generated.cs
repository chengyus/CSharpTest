// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.GameplayTags;

[UClass]
public partial class GameplayTagLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static GameplayTagLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("BlueprintGameplayTagLibrary");
        
        
        RemoveGameplayTag_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveGameplayTag");
        RemoveGameplayTag_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveGameplayTag_NativeFunction);
        RemoveGameplayTag_TagContainer_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveGameplayTag_NativeFunction, "TagContainer");
        RemoveGameplayTag_Tag_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveGameplayTag_NativeFunction, "Tag");
        RemoveGameplayTag_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveGameplayTag_NativeFunction, "ReturnValue");
        NotEqual_GameplayTagContainer_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "NotEqual_GameplayTagContainer");
        NotEqual_GameplayTagContainer_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(NotEqual_GameplayTagContainer_NativeFunction);
        NotEqual_GameplayTagContainer_A_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NotEqual_GameplayTagContainer_NativeFunction, "A");
        NotEqual_GameplayTagContainer_B_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NotEqual_GameplayTagContainer_NativeFunction, "B");
        NotEqual_GameplayTagContainer_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NotEqual_GameplayTagContainer_NativeFunction, "ReturnValue");
        NotEqual_GameplayTag_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "NotEqual_GameplayTag");
        NotEqual_GameplayTag_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(NotEqual_GameplayTag_NativeFunction);
        NotEqual_GameplayTag_A_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NotEqual_GameplayTag_NativeFunction, "A");
        NotEqual_GameplayTag_B_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NotEqual_GameplayTag_NativeFunction, "B");
        NotEqual_GameplayTag_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NotEqual_GameplayTag_NativeFunction, "ReturnValue");
        MatchesTag_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "MatchesTag");
        MatchesTag_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(MatchesTag_NativeFunction);
        MatchesTag_TagOne_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MatchesTag_NativeFunction, "TagOne");
        MatchesTag_TagTwo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MatchesTag_NativeFunction, "TagTwo");
        MatchesTag_bExactMatch_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MatchesTag_NativeFunction, "bExactMatch");
        MatchesTag_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MatchesTag_NativeFunction, "ReturnValue");
        MatchesAnyTags_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "MatchesAnyTags");
        MatchesAnyTags_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(MatchesAnyTags_NativeFunction);
        MatchesAnyTags_TagOne_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MatchesAnyTags_NativeFunction, "TagOne");
        MatchesAnyTags_OtherContainer_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MatchesAnyTags_NativeFunction, "OtherContainer");
        MatchesAnyTags_bExactMatch_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MatchesAnyTags_NativeFunction, "bExactMatch");
        MatchesAnyTags_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MatchesAnyTags_NativeFunction, "ReturnValue");
        MakeLiteralGameplayTagContainer_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "MakeLiteralGameplayTagContainer");
        MakeLiteralGameplayTagContainer_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(MakeLiteralGameplayTagContainer_NativeFunction);
        MakeLiteralGameplayTagContainer_Value_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeLiteralGameplayTagContainer_NativeFunction, "Value");
        MakeLiteralGameplayTagContainer_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeLiteralGameplayTagContainer_NativeFunction, "ReturnValue");
        MakeLiteralGameplayTag_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "MakeLiteralGameplayTag");
        MakeLiteralGameplayTag_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(MakeLiteralGameplayTag_NativeFunction);
        MakeLiteralGameplayTag_Value_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeLiteralGameplayTag_NativeFunction, "Value");
        MakeLiteralGameplayTag_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeLiteralGameplayTag_NativeFunction, "ReturnValue");
        MakeGameplayTagQuery_MatchNoTags_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "MakeGameplayTagQuery_MatchNoTags");
        MakeGameplayTagQuery_MatchNoTags_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(MakeGameplayTagQuery_MatchNoTags_NativeFunction);
        MakeGameplayTagQuery_MatchNoTags_InTags_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeGameplayTagQuery_MatchNoTags_NativeFunction, "InTags");
        MakeGameplayTagQuery_MatchNoTags_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeGameplayTagQuery_MatchNoTags_NativeFunction, "ReturnValue");
        MakeGameplayTagQuery_MatchAnyTags_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "MakeGameplayTagQuery_MatchAnyTags");
        MakeGameplayTagQuery_MatchAnyTags_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(MakeGameplayTagQuery_MatchAnyTags_NativeFunction);
        MakeGameplayTagQuery_MatchAnyTags_InTags_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeGameplayTagQuery_MatchAnyTags_NativeFunction, "InTags");
        MakeGameplayTagQuery_MatchAnyTags_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeGameplayTagQuery_MatchAnyTags_NativeFunction, "ReturnValue");
        MakeGameplayTagQuery_MatchAllTags_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "MakeGameplayTagQuery_MatchAllTags");
        MakeGameplayTagQuery_MatchAllTags_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(MakeGameplayTagQuery_MatchAllTags_NativeFunction);
        MakeGameplayTagQuery_MatchAllTags_InTags_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeGameplayTagQuery_MatchAllTags_NativeFunction, "InTags");
        MakeGameplayTagQuery_MatchAllTags_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeGameplayTagQuery_MatchAllTags_NativeFunction, "ReturnValue");
        MakeGameplayTagQuery_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "MakeGameplayTagQuery");
        MakeGameplayTagQuery_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(MakeGameplayTagQuery_NativeFunction);
        MakeGameplayTagQuery_TagQuery_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeGameplayTagQuery_NativeFunction, "TagQuery");
        MakeGameplayTagQuery_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeGameplayTagQuery_NativeFunction, "ReturnValue");
        MakeGameplayTagContainerFromTag_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "MakeGameplayTagContainerFromTag");
        MakeGameplayTagContainerFromTag_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(MakeGameplayTagContainerFromTag_NativeFunction);
        MakeGameplayTagContainerFromTag_SingleTag_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeGameplayTagContainerFromTag_NativeFunction, "SingleTag");
        MakeGameplayTagContainerFromTag_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeGameplayTagContainerFromTag_NativeFunction, "ReturnValue");
        MakeGameplayTagContainerFromArray_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "MakeGameplayTagContainerFromArray");
        MakeGameplayTagContainerFromArray_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(MakeGameplayTagContainerFromArray_NativeFunction);
        MakeGameplayTagContainerFromArray_GameplayTags_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeGameplayTagContainerFromArray_NativeFunction, "GameplayTags");
        MakeGameplayTagContainerFromArray_GameplayTags_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(MakeGameplayTagContainerFromArray_NativeFunction, "GameplayTags");
        MakeGameplayTagContainerFromArray_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeGameplayTagContainerFromArray_NativeFunction, "ReturnValue");
        IsTagQueryEmpty_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsTagQueryEmpty");
        IsTagQueryEmpty_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsTagQueryEmpty_NativeFunction);
        IsTagQueryEmpty_TagQuery_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsTagQueryEmpty_NativeFunction, "TagQuery");
        IsTagQueryEmpty_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsTagQueryEmpty_NativeFunction, "ReturnValue");
        IsGameplayTagValid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsGameplayTagValid");
        IsGameplayTagValid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsGameplayTagValid_NativeFunction);
        IsGameplayTagValid_GameplayTag_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsGameplayTagValid_NativeFunction, "GameplayTag");
        IsGameplayTagValid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsGameplayTagValid_NativeFunction, "ReturnValue");
        HasTag_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "HasTag");
        HasTag_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(HasTag_NativeFunction);
        HasTag_TagContainer_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasTag_NativeFunction, "TagContainer");
        HasTag_Tag_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasTag_NativeFunction, "Tag");
        HasTag_bExactMatch_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasTag_NativeFunction, "bExactMatch");
        HasTag_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasTag_NativeFunction, "ReturnValue");
        HasAnyTags_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "HasAnyTags");
        HasAnyTags_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(HasAnyTags_NativeFunction);
        HasAnyTags_TagContainer_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasAnyTags_NativeFunction, "TagContainer");
        HasAnyTags_OtherContainer_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasAnyTags_NativeFunction, "OtherContainer");
        HasAnyTags_bExactMatch_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasAnyTags_NativeFunction, "bExactMatch");
        HasAnyTags_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasAnyTags_NativeFunction, "ReturnValue");
        HasAllTags_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "HasAllTags");
        HasAllTags_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(HasAllTags_NativeFunction);
        HasAllTags_TagContainer_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasAllTags_NativeFunction, "TagContainer");
        HasAllTags_OtherContainer_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasAllTags_NativeFunction, "OtherContainer");
        HasAllTags_bExactMatch_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasAllTags_NativeFunction, "bExactMatch");
        HasAllTags_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasAllTags_NativeFunction, "ReturnValue");
        GetTagName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetTagName");
        GetTagName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetTagName_NativeFunction);
        GetTagName_GameplayTag_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTagName_NativeFunction, "GameplayTag");
        GetTagName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTagName_NativeFunction, "ReturnValue");
        GetNumGameplayTagsInContainer_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetNumGameplayTagsInContainer");
        GetNumGameplayTagsInContainer_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetNumGameplayTagsInContainer_NativeFunction);
        GetNumGameplayTagsInContainer_TagContainer_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetNumGameplayTagsInContainer_NativeFunction, "TagContainer");
        GetNumGameplayTagsInContainer_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetNumGameplayTagsInContainer_NativeFunction, "ReturnValue");
        GetDebugStringFromGameplayTagContainer_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetDebugStringFromGameplayTagContainer");
        GetDebugStringFromGameplayTagContainer_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetDebugStringFromGameplayTagContainer_NativeFunction);
        GetDebugStringFromGameplayTagContainer_TagContainer_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDebugStringFromGameplayTagContainer_NativeFunction, "TagContainer");
        GetDebugStringFromGameplayTagContainer_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDebugStringFromGameplayTagContainer_NativeFunction, "ReturnValue");
        GetDebugStringFromGameplayTag_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetDebugStringFromGameplayTag");
        GetDebugStringFromGameplayTag_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetDebugStringFromGameplayTag_NativeFunction);
        GetDebugStringFromGameplayTag_GameplayTag_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDebugStringFromGameplayTag_NativeFunction, "GameplayTag");
        GetDebugStringFromGameplayTag_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDebugStringFromGameplayTag_NativeFunction, "ReturnValue");
        GetAllActorsOfClassMatchingTagQuery_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetAllActorsOfClassMatchingTagQuery");
        GetAllActorsOfClassMatchingTagQuery_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetAllActorsOfClassMatchingTagQuery_NativeFunction);
        GetAllActorsOfClassMatchingTagQuery_WorldContextObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAllActorsOfClassMatchingTagQuery_NativeFunction, "WorldContextObject");
        GetAllActorsOfClassMatchingTagQuery_ActorClass_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAllActorsOfClassMatchingTagQuery_NativeFunction, "ActorClass");
        GetAllActorsOfClassMatchingTagQuery_GameplayTagQuery_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAllActorsOfClassMatchingTagQuery_NativeFunction, "GameplayTagQuery");
        GetAllActorsOfClassMatchingTagQuery_OutActors_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAllActorsOfClassMatchingTagQuery_NativeFunction, "OutActors");
        GetAllActorsOfClassMatchingTagQuery_OutActors_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetAllActorsOfClassMatchingTagQuery_NativeFunction, "OutActors");
        EqualEqual_GameplayTagContainer_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "EqualEqual_GameplayTagContainer");
        EqualEqual_GameplayTagContainer_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(EqualEqual_GameplayTagContainer_NativeFunction);
        EqualEqual_GameplayTagContainer_A_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EqualEqual_GameplayTagContainer_NativeFunction, "A");
        EqualEqual_GameplayTagContainer_B_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EqualEqual_GameplayTagContainer_NativeFunction, "B");
        EqualEqual_GameplayTagContainer_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EqualEqual_GameplayTagContainer_NativeFunction, "ReturnValue");
        EqualEqual_GameplayTag_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "EqualEqual_GameplayTag");
        EqualEqual_GameplayTag_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(EqualEqual_GameplayTag_NativeFunction);
        EqualEqual_GameplayTag_A_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EqualEqual_GameplayTag_NativeFunction, "A");
        EqualEqual_GameplayTag_B_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EqualEqual_GameplayTag_NativeFunction, "B");
        EqualEqual_GameplayTag_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EqualEqual_GameplayTag_NativeFunction, "ReturnValue");
        DoesContainerMatchTagQuery_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "DoesContainerMatchTagQuery");
        DoesContainerMatchTagQuery_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(DoesContainerMatchTagQuery_NativeFunction);
        DoesContainerMatchTagQuery_TagContainer_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(DoesContainerMatchTagQuery_NativeFunction, "TagContainer");
        DoesContainerMatchTagQuery_TagQuery_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(DoesContainerMatchTagQuery_NativeFunction, "TagQuery");
        DoesContainerMatchTagQuery_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(DoesContainerMatchTagQuery_NativeFunction, "ReturnValue");
        BreakGameplayTagContainer_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "BreakGameplayTagContainer");
        BreakGameplayTagContainer_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(BreakGameplayTagContainer_NativeFunction);
        BreakGameplayTagContainer_GameplayTagContainer_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BreakGameplayTagContainer_NativeFunction, "GameplayTagContainer");
        BreakGameplayTagContainer_GameplayTags_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BreakGameplayTagContainer_NativeFunction, "GameplayTags");
        BreakGameplayTagContainer_GameplayTags_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(BreakGameplayTagContainer_NativeFunction, "GameplayTags");
        AppendGameplayTagContainers_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AppendGameplayTagContainers");
        AppendGameplayTagContainers_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AppendGameplayTagContainers_NativeFunction);
        AppendGameplayTagContainers_InOutTagContainer_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AppendGameplayTagContainers_NativeFunction, "InOutTagContainer");
        AppendGameplayTagContainers_InTagContainer_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AppendGameplayTagContainers_NativeFunction, "InTagContainer");
        AddGameplayTag_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddGameplayTag");
        AddGameplayTag_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddGameplayTag_NativeFunction);
        AddGameplayTag_TagContainer_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddGameplayTag_NativeFunction, "TagContainer");
        AddGameplayTag_Tag_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddGameplayTag_NativeFunction, "Tag");
        
        
    }
    
    protected GameplayTagLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/GameplayTags.BlueprintGameplayTagLibrary:RemoveGameplayTag
    static readonly IntPtr RemoveGameplayTag_NativeFunction;
    static readonly int RemoveGameplayTag_ParamsSize;
    static readonly int RemoveGameplayTag_TagContainer_Offset;
    static readonly int RemoveGameplayTag_Tag_Offset;
    static readonly int RemoveGameplayTag_ReturnValue_Offset;
    
    public static bool RemoveGameplayTag(ref UnrealSharp.GameplayTags.GameplayTagContainer tagContainer, UnrealSharp.GameplayTags.GameplayTag tag)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveGameplayTag_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagContainerMarshaler.ToNative(IntPtr.Add(ParamsBuffer, RemoveGameplayTag_TagContainer_Offset), 0, null, tagContainer);
            UnrealSharp.GameplayTags.GameplayTagMarshaler.ToNative(IntPtr.Add(ParamsBuffer, RemoveGameplayTag_Tag_Offset), 0, null, tag);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, RemoveGameplayTag_NativeFunction, ParamsBuffer);
            
            tagContainer = UnrealSharp.GameplayTags.GameplayTagContainerMarshaler.FromNative(IntPtr.Add(ParamsBuffer, RemoveGameplayTag_TagContainer_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveGameplayTag_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GameplayTags.BlueprintGameplayTagLibrary:NotEqual_GameplayTagContainer
    static readonly IntPtr NotEqual_GameplayTagContainer_NativeFunction;
    static readonly int NotEqual_GameplayTagContainer_ParamsSize;
    static readonly int NotEqual_GameplayTagContainer_A_Offset;
    static readonly int NotEqual_GameplayTagContainer_B_Offset;
    static readonly int NotEqual_GameplayTagContainer_ReturnValue_Offset;
    
    public static bool NotEqual_GameplayTagContainer(UnrealSharp.GameplayTags.GameplayTagContainer a, UnrealSharp.GameplayTags.GameplayTagContainer b)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[NotEqual_GameplayTagContainer_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagContainerMarshaler.ToNative(IntPtr.Add(ParamsBuffer, NotEqual_GameplayTagContainer_A_Offset), 0, null, a);
            UnrealSharp.GameplayTags.GameplayTagContainerMarshaler.ToNative(IntPtr.Add(ParamsBuffer, NotEqual_GameplayTagContainer_B_Offset), 0, null, b);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, NotEqual_GameplayTagContainer_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, NotEqual_GameplayTagContainer_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GameplayTags.BlueprintGameplayTagLibrary:NotEqual_GameplayTag
    static readonly IntPtr NotEqual_GameplayTag_NativeFunction;
    static readonly int NotEqual_GameplayTag_ParamsSize;
    static readonly int NotEqual_GameplayTag_A_Offset;
    static readonly int NotEqual_GameplayTag_B_Offset;
    static readonly int NotEqual_GameplayTag_ReturnValue_Offset;
    
    public static bool NotEqual_GameplayTag(UnrealSharp.GameplayTags.GameplayTag a, UnrealSharp.GameplayTags.GameplayTag b)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[NotEqual_GameplayTag_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagMarshaler.ToNative(IntPtr.Add(ParamsBuffer, NotEqual_GameplayTag_A_Offset), 0, null, a);
            UnrealSharp.GameplayTags.GameplayTagMarshaler.ToNative(IntPtr.Add(ParamsBuffer, NotEqual_GameplayTag_B_Offset), 0, null, b);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, NotEqual_GameplayTag_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, NotEqual_GameplayTag_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GameplayTags.BlueprintGameplayTagLibrary:MatchesTag
    static readonly IntPtr MatchesTag_NativeFunction;
    static readonly int MatchesTag_ParamsSize;
    static readonly int MatchesTag_TagOne_Offset;
    static readonly int MatchesTag_TagTwo_Offset;
    static readonly int MatchesTag_bExactMatch_Offset;
    static readonly int MatchesTag_ReturnValue_Offset;
    
    public static bool MatchesTag(UnrealSharp.GameplayTags.GameplayTag tagOne, UnrealSharp.GameplayTags.GameplayTag tagTwo, bool bExactMatch)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[MatchesTag_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagMarshaler.ToNative(IntPtr.Add(ParamsBuffer, MatchesTag_TagOne_Offset), 0, null, tagOne);
            UnrealSharp.GameplayTags.GameplayTagMarshaler.ToNative(IntPtr.Add(ParamsBuffer, MatchesTag_TagTwo_Offset), 0, null, tagTwo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, MatchesTag_bExactMatch_Offset), 0, null, bExactMatch);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, MatchesTag_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, MatchesTag_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GameplayTags.BlueprintGameplayTagLibrary:MatchesAnyTags
    static readonly IntPtr MatchesAnyTags_NativeFunction;
    static readonly int MatchesAnyTags_ParamsSize;
    static readonly int MatchesAnyTags_TagOne_Offset;
    static readonly int MatchesAnyTags_OtherContainer_Offset;
    static readonly int MatchesAnyTags_bExactMatch_Offset;
    static readonly int MatchesAnyTags_ReturnValue_Offset;
    
    public static bool MatchesAnyTags(UnrealSharp.GameplayTags.GameplayTag tagOne, UnrealSharp.GameplayTags.GameplayTagContainer otherContainer, bool bExactMatch)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[MatchesAnyTags_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagMarshaler.ToNative(IntPtr.Add(ParamsBuffer, MatchesAnyTags_TagOne_Offset), 0, null, tagOne);
            UnrealSharp.GameplayTags.GameplayTagContainerMarshaler.ToNative(IntPtr.Add(ParamsBuffer, MatchesAnyTags_OtherContainer_Offset), 0, null, otherContainer);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, MatchesAnyTags_bExactMatch_Offset), 0, null, bExactMatch);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, MatchesAnyTags_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, MatchesAnyTags_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GameplayTags.BlueprintGameplayTagLibrary:MakeLiteralGameplayTagContainer
    static readonly IntPtr MakeLiteralGameplayTagContainer_NativeFunction;
    static readonly int MakeLiteralGameplayTagContainer_ParamsSize;
    static readonly int MakeLiteralGameplayTagContainer_Value_Offset;
    static readonly int MakeLiteralGameplayTagContainer_ReturnValue_Offset;
    
    public static UnrealSharp.GameplayTags.GameplayTagContainer MakeLiteralGameplayTagContainer(UnrealSharp.GameplayTags.GameplayTagContainer value)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[MakeLiteralGameplayTagContainer_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagContainerMarshaler.ToNative(IntPtr.Add(ParamsBuffer, MakeLiteralGameplayTagContainer_Value_Offset), 0, null, value);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, MakeLiteralGameplayTagContainer_NativeFunction, ParamsBuffer);
            
            UnrealSharp.GameplayTags.GameplayTagContainer returnValue;
            returnValue = UnrealSharp.GameplayTags.GameplayTagContainerMarshaler.FromNative(IntPtr.Add(ParamsBuffer, MakeLiteralGameplayTagContainer_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GameplayTags.BlueprintGameplayTagLibrary:MakeLiteralGameplayTag
    static readonly IntPtr MakeLiteralGameplayTag_NativeFunction;
    static readonly int MakeLiteralGameplayTag_ParamsSize;
    static readonly int MakeLiteralGameplayTag_Value_Offset;
    static readonly int MakeLiteralGameplayTag_ReturnValue_Offset;
    
    public static UnrealSharp.GameplayTags.GameplayTag MakeLiteralGameplayTag(UnrealSharp.GameplayTags.GameplayTag value)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[MakeLiteralGameplayTag_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagMarshaler.ToNative(IntPtr.Add(ParamsBuffer, MakeLiteralGameplayTag_Value_Offset), 0, null, value);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, MakeLiteralGameplayTag_NativeFunction, ParamsBuffer);
            
            UnrealSharp.GameplayTags.GameplayTag returnValue;
            returnValue = UnrealSharp.GameplayTags.GameplayTagMarshaler.FromNative(IntPtr.Add(ParamsBuffer, MakeLiteralGameplayTag_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GameplayTags.BlueprintGameplayTagLibrary:MakeGameplayTagQuery_MatchNoTags
    static readonly IntPtr MakeGameplayTagQuery_MatchNoTags_NativeFunction;
    static readonly int MakeGameplayTagQuery_MatchNoTags_ParamsSize;
    static readonly int MakeGameplayTagQuery_MatchNoTags_InTags_Offset;
    static readonly int MakeGameplayTagQuery_MatchNoTags_ReturnValue_Offset;
    
    public static UnrealSharp.GameplayTags.GameplayTagQuery MakeGameplayTagQuery_MatchNoTags(UnrealSharp.GameplayTags.GameplayTagContainer inTags)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[MakeGameplayTagQuery_MatchNoTags_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagContainerMarshaler.ToNative(IntPtr.Add(ParamsBuffer, MakeGameplayTagQuery_MatchNoTags_InTags_Offset), 0, null, inTags);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, MakeGameplayTagQuery_MatchNoTags_NativeFunction, ParamsBuffer);
            
            UnrealSharp.GameplayTags.GameplayTagQuery returnValue;
            returnValue = UnrealSharp.GameplayTags.GameplayTagQueryMarshaler.FromNative(IntPtr.Add(ParamsBuffer, MakeGameplayTagQuery_MatchNoTags_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GameplayTags.BlueprintGameplayTagLibrary:MakeGameplayTagQuery_MatchAnyTags
    static readonly IntPtr MakeGameplayTagQuery_MatchAnyTags_NativeFunction;
    static readonly int MakeGameplayTagQuery_MatchAnyTags_ParamsSize;
    static readonly int MakeGameplayTagQuery_MatchAnyTags_InTags_Offset;
    static readonly int MakeGameplayTagQuery_MatchAnyTags_ReturnValue_Offset;
    
    public static UnrealSharp.GameplayTags.GameplayTagQuery MakeGameplayTagQuery_MatchAnyTags(UnrealSharp.GameplayTags.GameplayTagContainer inTags)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[MakeGameplayTagQuery_MatchAnyTags_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagContainerMarshaler.ToNative(IntPtr.Add(ParamsBuffer, MakeGameplayTagQuery_MatchAnyTags_InTags_Offset), 0, null, inTags);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, MakeGameplayTagQuery_MatchAnyTags_NativeFunction, ParamsBuffer);
            
            UnrealSharp.GameplayTags.GameplayTagQuery returnValue;
            returnValue = UnrealSharp.GameplayTags.GameplayTagQueryMarshaler.FromNative(IntPtr.Add(ParamsBuffer, MakeGameplayTagQuery_MatchAnyTags_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GameplayTags.BlueprintGameplayTagLibrary:MakeGameplayTagQuery_MatchAllTags
    static readonly IntPtr MakeGameplayTagQuery_MatchAllTags_NativeFunction;
    static readonly int MakeGameplayTagQuery_MatchAllTags_ParamsSize;
    static readonly int MakeGameplayTagQuery_MatchAllTags_InTags_Offset;
    static readonly int MakeGameplayTagQuery_MatchAllTags_ReturnValue_Offset;
    
    public static UnrealSharp.GameplayTags.GameplayTagQuery MakeGameplayTagQuery_MatchAllTags(UnrealSharp.GameplayTags.GameplayTagContainer inTags)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[MakeGameplayTagQuery_MatchAllTags_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagContainerMarshaler.ToNative(IntPtr.Add(ParamsBuffer, MakeGameplayTagQuery_MatchAllTags_InTags_Offset), 0, null, inTags);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, MakeGameplayTagQuery_MatchAllTags_NativeFunction, ParamsBuffer);
            
            UnrealSharp.GameplayTags.GameplayTagQuery returnValue;
            returnValue = UnrealSharp.GameplayTags.GameplayTagQueryMarshaler.FromNative(IntPtr.Add(ParamsBuffer, MakeGameplayTagQuery_MatchAllTags_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GameplayTags.BlueprintGameplayTagLibrary:MakeGameplayTagQuery
    static readonly IntPtr MakeGameplayTagQuery_NativeFunction;
    static readonly int MakeGameplayTagQuery_ParamsSize;
    static readonly int MakeGameplayTagQuery_TagQuery_Offset;
    static readonly int MakeGameplayTagQuery_ReturnValue_Offset;
    
    public static UnrealSharp.GameplayTags.GameplayTagQuery MakeGameplayTagQuery(UnrealSharp.GameplayTags.GameplayTagQuery tagQuery)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[MakeGameplayTagQuery_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagQueryMarshaler.ToNative(IntPtr.Add(ParamsBuffer, MakeGameplayTagQuery_TagQuery_Offset), 0, null, tagQuery);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, MakeGameplayTagQuery_NativeFunction, ParamsBuffer);
            
            UnrealSharp.GameplayTags.GameplayTagQuery returnValue;
            returnValue = UnrealSharp.GameplayTags.GameplayTagQueryMarshaler.FromNative(IntPtr.Add(ParamsBuffer, MakeGameplayTagQuery_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GameplayTags.BlueprintGameplayTagLibrary:MakeGameplayTagContainerFromTag
    static readonly IntPtr MakeGameplayTagContainerFromTag_NativeFunction;
    static readonly int MakeGameplayTagContainerFromTag_ParamsSize;
    static readonly int MakeGameplayTagContainerFromTag_SingleTag_Offset;
    static readonly int MakeGameplayTagContainerFromTag_ReturnValue_Offset;
    
    public static UnrealSharp.GameplayTags.GameplayTagContainer MakeGameplayTagContainerFromTag(UnrealSharp.GameplayTags.GameplayTag singleTag)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[MakeGameplayTagContainerFromTag_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagMarshaler.ToNative(IntPtr.Add(ParamsBuffer, MakeGameplayTagContainerFromTag_SingleTag_Offset), 0, null, singleTag);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, MakeGameplayTagContainerFromTag_NativeFunction, ParamsBuffer);
            
            UnrealSharp.GameplayTags.GameplayTagContainer returnValue;
            returnValue = UnrealSharp.GameplayTags.GameplayTagContainerMarshaler.FromNative(IntPtr.Add(ParamsBuffer, MakeGameplayTagContainerFromTag_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GameplayTags.BlueprintGameplayTagLibrary:MakeGameplayTagContainerFromArray
    static readonly IntPtr MakeGameplayTagContainerFromArray_NativeFunction;
    static readonly int MakeGameplayTagContainerFromArray_ParamsSize;
    static readonly int MakeGameplayTagContainerFromArray_GameplayTags_Offset;
    static readonly int MakeGameplayTagContainerFromArray_GameplayTags_ElementSize;
    static readonly int MakeGameplayTagContainerFromArray_ReturnValue_Offset;
    
    public static UnrealSharp.GameplayTags.GameplayTagContainer MakeGameplayTagContainerFromArray(System.Collections.Generic.IList<UnrealSharp.GameplayTags.GameplayTag> gameplayTags)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[MakeGameplayTagContainerFromArray_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr GameplayTags_NativeBuffer = IntPtr.Add(ParamsBuffer, MakeGameplayTagContainerFromArray_GameplayTags_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.GameplayTags.GameplayTag> GameplayTags_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.GameplayTags.GameplayTag>(1, UnrealSharp.GameplayTags.GameplayTagMarshaler.ToNative, UnrealSharp.GameplayTags.GameplayTagMarshaler.FromNative, MakeGameplayTagContainerFromArray_GameplayTags_ElementSize);
            GameplayTags_Marshaler.ToNative(GameplayTags_NativeBuffer, 0, null, gameplayTags);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, MakeGameplayTagContainerFromArray_NativeFunction, ParamsBuffer);
            
            UnrealSharp.GameplayTags.GameplayTagContainer returnValue;
            returnValue = UnrealSharp.GameplayTags.GameplayTagContainerMarshaler.FromNative(IntPtr.Add(ParamsBuffer, MakeGameplayTagContainerFromArray_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GameplayTags.BlueprintGameplayTagLibrary:IsTagQueryEmpty
    static readonly IntPtr IsTagQueryEmpty_NativeFunction;
    static readonly int IsTagQueryEmpty_ParamsSize;
    static readonly int IsTagQueryEmpty_TagQuery_Offset;
    static readonly int IsTagQueryEmpty_ReturnValue_Offset;
    
    public static bool IsTagQueryEmpty(UnrealSharp.GameplayTags.GameplayTagQuery tagQuery)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsTagQueryEmpty_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagQueryMarshaler.ToNative(IntPtr.Add(ParamsBuffer, IsTagQueryEmpty_TagQuery_Offset), 0, null, tagQuery);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, IsTagQueryEmpty_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsTagQueryEmpty_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GameplayTags.BlueprintGameplayTagLibrary:IsGameplayTagValid
    static readonly IntPtr IsGameplayTagValid_NativeFunction;
    static readonly int IsGameplayTagValid_ParamsSize;
    static readonly int IsGameplayTagValid_GameplayTag_Offset;
    static readonly int IsGameplayTagValid_ReturnValue_Offset;
    
    public static bool IsGameplayTagValid(UnrealSharp.GameplayTags.GameplayTag gameplayTag)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsGameplayTagValid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagMarshaler.ToNative(IntPtr.Add(ParamsBuffer, IsGameplayTagValid_GameplayTag_Offset), 0, null, gameplayTag);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, IsGameplayTagValid_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsGameplayTagValid_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GameplayTags.BlueprintGameplayTagLibrary:HasTag
    static readonly IntPtr HasTag_NativeFunction;
    static readonly int HasTag_ParamsSize;
    static readonly int HasTag_TagContainer_Offset;
    static readonly int HasTag_Tag_Offset;
    static readonly int HasTag_bExactMatch_Offset;
    static readonly int HasTag_ReturnValue_Offset;
    
    public static bool HasTag(UnrealSharp.GameplayTags.GameplayTagContainer tagContainer, UnrealSharp.GameplayTags.GameplayTag tag, bool bExactMatch)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[HasTag_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagContainerMarshaler.ToNative(IntPtr.Add(ParamsBuffer, HasTag_TagContainer_Offset), 0, null, tagContainer);
            UnrealSharp.GameplayTags.GameplayTagMarshaler.ToNative(IntPtr.Add(ParamsBuffer, HasTag_Tag_Offset), 0, null, tag);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, HasTag_bExactMatch_Offset), 0, null, bExactMatch);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, HasTag_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, HasTag_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GameplayTags.BlueprintGameplayTagLibrary:HasAnyTags
    static readonly IntPtr HasAnyTags_NativeFunction;
    static readonly int HasAnyTags_ParamsSize;
    static readonly int HasAnyTags_TagContainer_Offset;
    static readonly int HasAnyTags_OtherContainer_Offset;
    static readonly int HasAnyTags_bExactMatch_Offset;
    static readonly int HasAnyTags_ReturnValue_Offset;
    
    public static bool HasAnyTags(UnrealSharp.GameplayTags.GameplayTagContainer tagContainer, UnrealSharp.GameplayTags.GameplayTagContainer otherContainer, bool bExactMatch)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[HasAnyTags_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagContainerMarshaler.ToNative(IntPtr.Add(ParamsBuffer, HasAnyTags_TagContainer_Offset), 0, null, tagContainer);
            UnrealSharp.GameplayTags.GameplayTagContainerMarshaler.ToNative(IntPtr.Add(ParamsBuffer, HasAnyTags_OtherContainer_Offset), 0, null, otherContainer);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, HasAnyTags_bExactMatch_Offset), 0, null, bExactMatch);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, HasAnyTags_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, HasAnyTags_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GameplayTags.BlueprintGameplayTagLibrary:HasAllTags
    static readonly IntPtr HasAllTags_NativeFunction;
    static readonly int HasAllTags_ParamsSize;
    static readonly int HasAllTags_TagContainer_Offset;
    static readonly int HasAllTags_OtherContainer_Offset;
    static readonly int HasAllTags_bExactMatch_Offset;
    static readonly int HasAllTags_ReturnValue_Offset;
    
    public static bool HasAllTags(UnrealSharp.GameplayTags.GameplayTagContainer tagContainer, UnrealSharp.GameplayTags.GameplayTagContainer otherContainer, bool bExactMatch)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[HasAllTags_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagContainerMarshaler.ToNative(IntPtr.Add(ParamsBuffer, HasAllTags_TagContainer_Offset), 0, null, tagContainer);
            UnrealSharp.GameplayTags.GameplayTagContainerMarshaler.ToNative(IntPtr.Add(ParamsBuffer, HasAllTags_OtherContainer_Offset), 0, null, otherContainer);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, HasAllTags_bExactMatch_Offset), 0, null, bExactMatch);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, HasAllTags_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, HasAllTags_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GameplayTags.BlueprintGameplayTagLibrary:GetTagName
    static readonly IntPtr GetTagName_NativeFunction;
    static readonly int GetTagName_ParamsSize;
    static readonly int GetTagName_GameplayTag_Offset;
    static readonly int GetTagName_ReturnValue_Offset;
    
    public static Name GetTagName(UnrealSharp.GameplayTags.GameplayTag gameplayTag)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetTagName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetTagName_GameplayTag_Offset), 0, null, gameplayTag);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetTagName_NativeFunction, ParamsBuffer);
            
            Name returnValue;
            returnValue = BlittableMarshaller<Name>.FromNative(IntPtr.Add(ParamsBuffer, GetTagName_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GameplayTags.BlueprintGameplayTagLibrary:GetNumGameplayTagsInContainer
    static readonly IntPtr GetNumGameplayTagsInContainer_NativeFunction;
    static readonly int GetNumGameplayTagsInContainer_ParamsSize;
    static readonly int GetNumGameplayTagsInContainer_TagContainer_Offset;
    static readonly int GetNumGameplayTagsInContainer_ReturnValue_Offset;
    
    public static int GetNumGameplayTagsInContainer(UnrealSharp.GameplayTags.GameplayTagContainer tagContainer)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetNumGameplayTagsInContainer_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagContainerMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetNumGameplayTagsInContainer_TagContainer_Offset), 0, null, tagContainer);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetNumGameplayTagsInContainer_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetNumGameplayTagsInContainer_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GameplayTags.BlueprintGameplayTagLibrary:GetDebugStringFromGameplayTagContainer
    static readonly IntPtr GetDebugStringFromGameplayTagContainer_NativeFunction;
    static readonly int GetDebugStringFromGameplayTagContainer_ParamsSize;
    static readonly int GetDebugStringFromGameplayTagContainer_TagContainer_Offset;
    static readonly int GetDebugStringFromGameplayTagContainer_ReturnValue_Offset;
    
    public static string GetDebugStringFromGameplayTagContainer(UnrealSharp.GameplayTags.GameplayTagContainer tagContainer)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetDebugStringFromGameplayTagContainer_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagContainerMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetDebugStringFromGameplayTagContainer_TagContainer_Offset), 0, null, tagContainer);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetDebugStringFromGameplayTagContainer_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetDebugStringFromGameplayTagContainer_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/GameplayTags.BlueprintGameplayTagLibrary:GetDebugStringFromGameplayTag
    static readonly IntPtr GetDebugStringFromGameplayTag_NativeFunction;
    static readonly int GetDebugStringFromGameplayTag_ParamsSize;
    static readonly int GetDebugStringFromGameplayTag_GameplayTag_Offset;
    static readonly int GetDebugStringFromGameplayTag_ReturnValue_Offset;
    
    public static string GetDebugStringFromGameplayTag(UnrealSharp.GameplayTags.GameplayTag gameplayTag)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetDebugStringFromGameplayTag_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetDebugStringFromGameplayTag_GameplayTag_Offset), 0, null, gameplayTag);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetDebugStringFromGameplayTag_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetDebugStringFromGameplayTag_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/GameplayTags.BlueprintGameplayTagLibrary:GetAllActorsOfClassMatchingTagQuery
    static readonly IntPtr GetAllActorsOfClassMatchingTagQuery_NativeFunction;
    static readonly int GetAllActorsOfClassMatchingTagQuery_ParamsSize;
    static readonly int GetAllActorsOfClassMatchingTagQuery_WorldContextObject_Offset;
    static readonly int GetAllActorsOfClassMatchingTagQuery_ActorClass_Offset;
    static readonly int GetAllActorsOfClassMatchingTagQuery_GameplayTagQuery_Offset;
    static readonly int GetAllActorsOfClassMatchingTagQuery_OutActors_Offset;
    static readonly int GetAllActorsOfClassMatchingTagQuery_OutActors_ElementSize;
    
    public static void GetAllActorsOfClassMatchingTagQuery(UnrealSharp.CoreUObject.Object worldContextObject, SubclassOf<UnrealSharp.Engine.Actor> actorClass, UnrealSharp.GameplayTags.GameplayTagQuery gameplayTagQuery, out System.Collections.Generic.IList<UnrealSharp.Engine.Actor> outActors)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetAllActorsOfClassMatchingTagQuery_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, GetAllActorsOfClassMatchingTagQuery_WorldContextObject_Offset), 0, null, worldContextObject);
            SubclassOfMarshaller<UnrealSharp.Engine.Actor>.ToNative(IntPtr.Add(ParamsBuffer, GetAllActorsOfClassMatchingTagQuery_ActorClass_Offset), 0, null, actorClass);
            UnrealSharp.GameplayTags.GameplayTagQueryMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetAllActorsOfClassMatchingTagQuery_GameplayTagQuery_Offset), 0, null, gameplayTagQuery);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetAllActorsOfClassMatchingTagQuery_NativeFunction, ParamsBuffer);
            
            IntPtr OutActors_NativeBuffer = IntPtr.Add(ParamsBuffer, GetAllActorsOfClassMatchingTagQuery_OutActors_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor> OutActors_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor> (1, ObjectMarshaller<UnrealSharp.Engine.Actor>.ToNative, ObjectMarshaller<UnrealSharp.Engine.Actor>.FromNative, GetAllActorsOfClassMatchingTagQuery_OutActors_ElementSize);
            outActors = OutActors_Marshaler.FromNative(OutActors_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor>.DestructInstance(OutActors_NativeBuffer, 0);
            
        }
    }
    
    // Function /Script/GameplayTags.BlueprintGameplayTagLibrary:EqualEqual_GameplayTagContainer
    static readonly IntPtr EqualEqual_GameplayTagContainer_NativeFunction;
    static readonly int EqualEqual_GameplayTagContainer_ParamsSize;
    static readonly int EqualEqual_GameplayTagContainer_A_Offset;
    static readonly int EqualEqual_GameplayTagContainer_B_Offset;
    static readonly int EqualEqual_GameplayTagContainer_ReturnValue_Offset;
    
    public static bool EqualEqual_GameplayTagContainer(UnrealSharp.GameplayTags.GameplayTagContainer a, UnrealSharp.GameplayTags.GameplayTagContainer b)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[EqualEqual_GameplayTagContainer_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagContainerMarshaler.ToNative(IntPtr.Add(ParamsBuffer, EqualEqual_GameplayTagContainer_A_Offset), 0, null, a);
            UnrealSharp.GameplayTags.GameplayTagContainerMarshaler.ToNative(IntPtr.Add(ParamsBuffer, EqualEqual_GameplayTagContainer_B_Offset), 0, null, b);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, EqualEqual_GameplayTagContainer_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, EqualEqual_GameplayTagContainer_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GameplayTags.BlueprintGameplayTagLibrary:EqualEqual_GameplayTag
    static readonly IntPtr EqualEqual_GameplayTag_NativeFunction;
    static readonly int EqualEqual_GameplayTag_ParamsSize;
    static readonly int EqualEqual_GameplayTag_A_Offset;
    static readonly int EqualEqual_GameplayTag_B_Offset;
    static readonly int EqualEqual_GameplayTag_ReturnValue_Offset;
    
    public static bool EqualEqual_GameplayTag(UnrealSharp.GameplayTags.GameplayTag a, UnrealSharp.GameplayTags.GameplayTag b)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[EqualEqual_GameplayTag_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagMarshaler.ToNative(IntPtr.Add(ParamsBuffer, EqualEqual_GameplayTag_A_Offset), 0, null, a);
            UnrealSharp.GameplayTags.GameplayTagMarshaler.ToNative(IntPtr.Add(ParamsBuffer, EqualEqual_GameplayTag_B_Offset), 0, null, b);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, EqualEqual_GameplayTag_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, EqualEqual_GameplayTag_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GameplayTags.BlueprintGameplayTagLibrary:DoesContainerMatchTagQuery
    static readonly IntPtr DoesContainerMatchTagQuery_NativeFunction;
    static readonly int DoesContainerMatchTagQuery_ParamsSize;
    static readonly int DoesContainerMatchTagQuery_TagContainer_Offset;
    static readonly int DoesContainerMatchTagQuery_TagQuery_Offset;
    static readonly int DoesContainerMatchTagQuery_ReturnValue_Offset;
    
    public static bool DoesContainerMatchTagQuery(UnrealSharp.GameplayTags.GameplayTagContainer tagContainer, UnrealSharp.GameplayTags.GameplayTagQuery tagQuery)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[DoesContainerMatchTagQuery_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagContainerMarshaler.ToNative(IntPtr.Add(ParamsBuffer, DoesContainerMatchTagQuery_TagContainer_Offset), 0, null, tagContainer);
            UnrealSharp.GameplayTags.GameplayTagQueryMarshaler.ToNative(IntPtr.Add(ParamsBuffer, DoesContainerMatchTagQuery_TagQuery_Offset), 0, null, tagQuery);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, DoesContainerMatchTagQuery_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, DoesContainerMatchTagQuery_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GameplayTags.BlueprintGameplayTagLibrary:BreakGameplayTagContainer
    static readonly IntPtr BreakGameplayTagContainer_NativeFunction;
    static readonly int BreakGameplayTagContainer_ParamsSize;
    static readonly int BreakGameplayTagContainer_GameplayTagContainer_Offset;
    static readonly int BreakGameplayTagContainer_GameplayTags_Offset;
    static readonly int BreakGameplayTagContainer_GameplayTags_ElementSize;
    
    public static void BreakGameplayTagContainer(UnrealSharp.GameplayTags.GameplayTagContainer gameplayTagContainer, out System.Collections.Generic.IList<UnrealSharp.GameplayTags.GameplayTag> gameplayTags)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[BreakGameplayTagContainer_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagContainerMarshaler.ToNative(IntPtr.Add(ParamsBuffer, BreakGameplayTagContainer_GameplayTagContainer_Offset), 0, null, gameplayTagContainer);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, BreakGameplayTagContainer_NativeFunction, ParamsBuffer);
            
            IntPtr GameplayTags_NativeBuffer = IntPtr.Add(ParamsBuffer, BreakGameplayTagContainer_GameplayTags_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.GameplayTags.GameplayTag> GameplayTags_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.GameplayTags.GameplayTag> (1, UnrealSharp.GameplayTags.GameplayTagMarshaler.ToNative, UnrealSharp.GameplayTags.GameplayTagMarshaler.FromNative, BreakGameplayTagContainer_GameplayTags_ElementSize);
            gameplayTags = GameplayTags_Marshaler.FromNative(GameplayTags_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.GameplayTags.GameplayTag>.DestructInstance(GameplayTags_NativeBuffer, 0);
            
        }
    }
    
    // Function /Script/GameplayTags.BlueprintGameplayTagLibrary:AppendGameplayTagContainers
    static readonly IntPtr AppendGameplayTagContainers_NativeFunction;
    static readonly int AppendGameplayTagContainers_ParamsSize;
    static readonly int AppendGameplayTagContainers_InOutTagContainer_Offset;
    static readonly int AppendGameplayTagContainers_InTagContainer_Offset;
    
    public static void AppendGameplayTagContainers(ref UnrealSharp.GameplayTags.GameplayTagContainer inOutTagContainer, UnrealSharp.GameplayTags.GameplayTagContainer inTagContainer)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AppendGameplayTagContainers_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagContainerMarshaler.ToNative(IntPtr.Add(ParamsBuffer, AppendGameplayTagContainers_InOutTagContainer_Offset), 0, null, inOutTagContainer);
            UnrealSharp.GameplayTags.GameplayTagContainerMarshaler.ToNative(IntPtr.Add(ParamsBuffer, AppendGameplayTagContainers_InTagContainer_Offset), 0, null, inTagContainer);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, AppendGameplayTagContainers_NativeFunction, ParamsBuffer);
            
            inOutTagContainer = UnrealSharp.GameplayTags.GameplayTagContainerMarshaler.FromNative(IntPtr.Add(ParamsBuffer, AppendGameplayTagContainers_InOutTagContainer_Offset), 0, null);
            
        }
    }
    
    // Function /Script/GameplayTags.BlueprintGameplayTagLibrary:AddGameplayTag
    static readonly IntPtr AddGameplayTag_NativeFunction;
    static readonly int AddGameplayTag_ParamsSize;
    static readonly int AddGameplayTag_TagContainer_Offset;
    static readonly int AddGameplayTag_Tag_Offset;
    
    public static void AddGameplayTag(ref UnrealSharp.GameplayTags.GameplayTagContainer tagContainer, UnrealSharp.GameplayTags.GameplayTag tag)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddGameplayTag_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.GameplayTags.GameplayTagContainerMarshaler.ToNative(IntPtr.Add(ParamsBuffer, AddGameplayTag_TagContainer_Offset), 0, null, tagContainer);
            UnrealSharp.GameplayTags.GameplayTagMarshaler.ToNative(IntPtr.Add(ParamsBuffer, AddGameplayTag_Tag_Offset), 0, null, tag);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, AddGameplayTag_NativeFunction, ParamsBuffer);
            
            tagContainer = UnrealSharp.GameplayTags.GameplayTagContainerMarshaler.FromNative(IntPtr.Add(ParamsBuffer, AddGameplayTag_TagContainer_Offset), 0, null);
            
        }
    }
    
    
}
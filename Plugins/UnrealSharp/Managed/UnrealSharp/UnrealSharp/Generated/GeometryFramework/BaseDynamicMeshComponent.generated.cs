// This file is automatically generated
using UnrealSharp.InteractiveToolsFramework;
using UnrealSharp.GeometryFramework;
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.GeometryFramework;

[UClass]
abstract public partial class BaseDynamicMeshComponent : UnrealSharp.Engine.MeshComponent, IToolFrameworkComponent, IMeshVertexCommandChangeTarget, IMeshCommandChangeTarget, IMeshReplacementCommandChangeTarget
{
    
    static BaseDynamicMeshComponent()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("BaseDynamicMeshComponent");
        
        bExplicitShowWireframe_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bExplicitShowWireframe");
        WireframeColor_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "WireframeColor");
        ColorMode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ColorMode");
        ConstantColor_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ConstantColor");
        ColorSpaceMode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ColorSpaceMode");
        bEnableFlatShading_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bEnableFlatShading");
        bEnableViewModeOverrides_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bEnableViewModeOverrides");
        bEnableRaytracing_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bEnableRaytracing");
        
        SetViewModeOverridesEnabled_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetViewModeOverridesEnabled");
        SetViewModeOverridesEnabled_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetViewModeOverridesEnabled_NativeFunction);
        SetViewModeOverridesEnabled_bEnabled_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetViewModeOverridesEnabled_NativeFunction, "bEnabled");
        SetVertexColorSpaceTransformMode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetVertexColorSpaceTransformMode");
        SetVertexColorSpaceTransformMode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetVertexColorSpaceTransformMode_NativeFunction);
        SetVertexColorSpaceTransformMode_NewMode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetVertexColorSpaceTransformMode_NativeFunction, "NewMode");
        SetShadowsEnabled_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetShadowsEnabled");
        SetShadowsEnabled_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetShadowsEnabled_NativeFunction);
        SetShadowsEnabled_bEnabled_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetShadowsEnabled_NativeFunction, "bEnabled");
        SetSecondaryRenderMaterial_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSecondaryRenderMaterial");
        SetSecondaryRenderMaterial_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSecondaryRenderMaterial_NativeFunction);
        SetSecondaryRenderMaterial_Material_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSecondaryRenderMaterial_NativeFunction, "Material");
        SetSecondaryBuffersVisibility_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSecondaryBuffersVisibility");
        SetSecondaryBuffersVisibility_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSecondaryBuffersVisibility_NativeFunction);
        SetSecondaryBuffersVisibility_bSetVisible_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSecondaryBuffersVisibility_NativeFunction, "bSetVisible");
        SetOverrideRenderMaterial_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetOverrideRenderMaterial");
        SetOverrideRenderMaterial_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetOverrideRenderMaterial_NativeFunction);
        SetOverrideRenderMaterial_Material_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetOverrideRenderMaterial_NativeFunction, "Material");
        SetEnableWireframeRenderPass_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetEnableWireframeRenderPass");
        SetEnableWireframeRenderPass_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetEnableWireframeRenderPass_NativeFunction);
        SetEnableWireframeRenderPass_bEnable_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEnableWireframeRenderPass_NativeFunction, "bEnable");
        SetEnableRaytracing_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetEnableRaytracing");
        SetEnableRaytracing_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetEnableRaytracing_NativeFunction);
        SetEnableRaytracing_bSetEnabled_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEnableRaytracing_NativeFunction, "bSetEnabled");
        SetEnableFlatShading_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetEnableFlatShading");
        SetEnableFlatShading_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetEnableFlatShading_NativeFunction);
        SetEnableFlatShading_bEnable_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEnableFlatShading_NativeFunction, "bEnable");
        SetConstantOverrideColor_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetConstantOverrideColor");
        SetConstantOverrideColor_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetConstantOverrideColor_NativeFunction);
        SetConstantOverrideColor_NewColor_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetConstantOverrideColor_NativeFunction, "NewColor");
        SetColorOverrideMode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetColorOverrideMode");
        SetColorOverrideMode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetColorOverrideMode_NativeFunction);
        SetColorOverrideMode_NewMode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetColorOverrideMode_NativeFunction, "NewMode");
        HasOverrideRenderMaterial_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "HasOverrideRenderMaterial");
        HasOverrideRenderMaterial_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(HasOverrideRenderMaterial_NativeFunction);
        HasOverrideRenderMaterial_k_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasOverrideRenderMaterial_NativeFunction, "k");
        HasOverrideRenderMaterial_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasOverrideRenderMaterial_NativeFunction, "ReturnValue");
        GetViewModeOverridesEnabled_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetViewModeOverridesEnabled");
        GetViewModeOverridesEnabled_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetViewModeOverridesEnabled_NativeFunction);
        GetViewModeOverridesEnabled_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetViewModeOverridesEnabled_NativeFunction, "ReturnValue");
        GetVertexColorSpaceTransformMode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetVertexColorSpaceTransformMode");
        GetVertexColorSpaceTransformMode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetVertexColorSpaceTransformMode_NativeFunction);
        GetVertexColorSpaceTransformMode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetVertexColorSpaceTransformMode_NativeFunction, "ReturnValue");
        GetShadowsEnabled_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetShadowsEnabled");
        GetShadowsEnabled_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetShadowsEnabled_NativeFunction);
        GetShadowsEnabled_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetShadowsEnabled_NativeFunction, "ReturnValue");
        GetSecondaryRenderMaterial_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSecondaryRenderMaterial");
        GetSecondaryRenderMaterial_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSecondaryRenderMaterial_NativeFunction);
        GetSecondaryRenderMaterial_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSecondaryRenderMaterial_NativeFunction, "ReturnValue");
        GetSecondaryBuffersVisibility_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSecondaryBuffersVisibility");
        GetSecondaryBuffersVisibility_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSecondaryBuffersVisibility_NativeFunction);
        GetSecondaryBuffersVisibility_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSecondaryBuffersVisibility_NativeFunction, "ReturnValue");
        GetOverrideRenderMaterial_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetOverrideRenderMaterial");
        GetOverrideRenderMaterial_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetOverrideRenderMaterial_NativeFunction);
        GetOverrideRenderMaterial_MaterialIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetOverrideRenderMaterial_NativeFunction, "MaterialIndex");
        GetOverrideRenderMaterial_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetOverrideRenderMaterial_NativeFunction, "ReturnValue");
        GetFlatShadingEnabled_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetFlatShadingEnabled");
        GetFlatShadingEnabled_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetFlatShadingEnabled_NativeFunction);
        GetFlatShadingEnabled_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetFlatShadingEnabled_NativeFunction, "ReturnValue");
        GetEnableWireframeRenderPass_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetEnableWireframeRenderPass");
        GetEnableWireframeRenderPass_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetEnableWireframeRenderPass_NativeFunction);
        GetEnableWireframeRenderPass_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetEnableWireframeRenderPass_NativeFunction, "ReturnValue");
        GetEnableRaytracing_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetEnableRaytracing");
        GetEnableRaytracing_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetEnableRaytracing_NativeFunction);
        GetEnableRaytracing_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetEnableRaytracing_NativeFunction, "ReturnValue");
        GetDynamicMesh_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetDynamicMesh");
        GetDynamicMesh_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetDynamicMesh_NativeFunction);
        GetDynamicMesh_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDynamicMesh_NativeFunction, "ReturnValue");
        GetConstantOverrideColor_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetConstantOverrideColor");
        GetConstantOverrideColor_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetConstantOverrideColor_NativeFunction);
        GetConstantOverrideColor_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetConstantOverrideColor_NativeFunction, "ReturnValue");
        GetColorOverrideMode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetColorOverrideMode");
        GetColorOverrideMode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetColorOverrideMode_NativeFunction);
        GetColorOverrideMode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetColorOverrideMode_NativeFunction, "ReturnValue");
        ClearSecondaryRenderMaterial_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ClearSecondaryRenderMaterial");
        ClearOverrideRenderMaterial_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ClearOverrideRenderMaterial");
        
        
    }
    
    protected BaseDynamicMeshComponent(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // BoolProperty /Script/GeometryFramework.BaseDynamicMeshComponent:bExplicitShowWireframe
    static readonly int bExplicitShowWireframe_Offset;
    
    public bool bExplicitShowWireframe
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bExplicitShowWireframe_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, bExplicitShowWireframe_Offset), 0, this, value);
        }
    }
    
    // StructProperty /Script/GeometryFramework.BaseDynamicMeshComponent:WireframeColor
    static readonly int WireframeColor_Offset;
    
    public UnrealSharp.CoreUObject.LinearColor WireframeColor
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.FromNative(IntPtr.Add(NativeObject, WireframeColor_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.ToNative(IntPtr.Add(NativeObject, WireframeColor_Offset), 0, this, value);
        }
    }
    
    // EnumProperty /Script/GeometryFramework.BaseDynamicMeshComponent:ColorMode
    static readonly int ColorMode_Offset;
    
    public UnrealSharp.GeometryFramework.EDynamicMeshComponentColorOverrideMode ColorMode
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.GeometryFramework.EDynamicMeshComponentColorOverrideMode>.FromNative(IntPtr.Add(NativeObject, ColorMode_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.GeometryFramework.EDynamicMeshComponentColorOverrideMode>.ToNative(IntPtr.Add(NativeObject, ColorMode_Offset), 0, this, value);
        }
    }
    
    // StructProperty /Script/GeometryFramework.BaseDynamicMeshComponent:ConstantColor
    static readonly int ConstantColor_Offset;
    
    public UnrealSharp.CoreUObject.Color ConstantColor
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.CoreUObject.Color>.FromNative(IntPtr.Add(NativeObject, ConstantColor_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.CoreUObject.Color>.ToNative(IntPtr.Add(NativeObject, ConstantColor_Offset), 0, this, value);
        }
    }
    
    // EnumProperty /Script/GeometryFramework.BaseDynamicMeshComponent:ColorSpaceMode
    static readonly int ColorSpaceMode_Offset;
    
    public UnrealSharp.GeometryFramework.EDynamicMeshVertexColorTransformMode ColorSpaceMode
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.GeometryFramework.EDynamicMeshVertexColorTransformMode>.FromNative(IntPtr.Add(NativeObject, ColorSpaceMode_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.GeometryFramework.EDynamicMeshVertexColorTransformMode>.ToNative(IntPtr.Add(NativeObject, ColorSpaceMode_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/GeometryFramework.BaseDynamicMeshComponent:bEnableFlatShading
    static readonly int bEnableFlatShading_Offset;
    
    public bool bEnableFlatShading
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bEnableFlatShading_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, bEnableFlatShading_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/GeometryFramework.BaseDynamicMeshComponent:bEnableViewModeOverrides
    static readonly int bEnableViewModeOverrides_Offset;
    
    public bool bEnableViewModeOverrides
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bEnableViewModeOverrides_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, bEnableViewModeOverrides_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/GeometryFramework.BaseDynamicMeshComponent:bEnableRaytracing
    static readonly int bEnableRaytracing_Offset;
    
    public bool bEnableRaytracing
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bEnableRaytracing_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, bEnableRaytracing_Offset), 0, this, value);
        }
    }
    
    // Function /Script/GeometryFramework.BaseDynamicMeshComponent:SetViewModeOverridesEnabled
    static readonly IntPtr SetViewModeOverridesEnabled_NativeFunction;
    static readonly int SetViewModeOverridesEnabled_ParamsSize;
    static readonly int SetViewModeOverridesEnabled_bEnabled_Offset;
    
    public void SetViewModeOverridesEnabled(bool bEnabled)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetViewModeOverridesEnabled_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetViewModeOverridesEnabled_bEnabled_Offset), 0, null, bEnabled);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetViewModeOverridesEnabled_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/GeometryFramework.BaseDynamicMeshComponent:SetVertexColorSpaceTransformMode
    static readonly IntPtr SetVertexColorSpaceTransformMode_NativeFunction;
    static readonly int SetVertexColorSpaceTransformMode_ParamsSize;
    static readonly int SetVertexColorSpaceTransformMode_NewMode_Offset;
    
    public void SetVertexColorSpaceTransformMode(UnrealSharp.GeometryFramework.EDynamicMeshVertexColorTransformMode newMode)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetVertexColorSpaceTransformMode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.GeometryFramework.EDynamicMeshVertexColorTransformMode>.ToNative(IntPtr.Add(ParamsBuffer, SetVertexColorSpaceTransformMode_NewMode_Offset), 0, null, newMode);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetVertexColorSpaceTransformMode_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/GeometryFramework.BaseDynamicMeshComponent:SetShadowsEnabled
    static readonly IntPtr SetShadowsEnabled_NativeFunction;
    static readonly int SetShadowsEnabled_ParamsSize;
    static readonly int SetShadowsEnabled_bEnabled_Offset;
    
    public void SetShadowsEnabled(bool bEnabled)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetShadowsEnabled_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetShadowsEnabled_bEnabled_Offset), 0, null, bEnabled);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetShadowsEnabled_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/GeometryFramework.BaseDynamicMeshComponent:SetSecondaryRenderMaterial
    static readonly IntPtr SetSecondaryRenderMaterial_NativeFunction;
    static readonly int SetSecondaryRenderMaterial_ParamsSize;
    static readonly int SetSecondaryRenderMaterial_Material_Offset;
    
    public void SetSecondaryRenderMaterial(UnrealSharp.Engine.MaterialInterface material)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSecondaryRenderMaterial_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.MaterialInterface>.ToNative(IntPtr.Add(ParamsBuffer, SetSecondaryRenderMaterial_Material_Offset), 0, null, material);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSecondaryRenderMaterial_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/GeometryFramework.BaseDynamicMeshComponent:SetSecondaryBuffersVisibility
    static readonly IntPtr SetSecondaryBuffersVisibility_NativeFunction;
    static readonly int SetSecondaryBuffersVisibility_ParamsSize;
    static readonly int SetSecondaryBuffersVisibility_bSetVisible_Offset;
    
    public void SetSecondaryBuffersVisibility(bool bSetVisible)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSecondaryBuffersVisibility_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetSecondaryBuffersVisibility_bSetVisible_Offset), 0, null, bSetVisible);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSecondaryBuffersVisibility_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/GeometryFramework.BaseDynamicMeshComponent:SetOverrideRenderMaterial
    static readonly IntPtr SetOverrideRenderMaterial_NativeFunction;
    static readonly int SetOverrideRenderMaterial_ParamsSize;
    static readonly int SetOverrideRenderMaterial_Material_Offset;
    
    public void SetOverrideRenderMaterial(UnrealSharp.Engine.MaterialInterface material)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetOverrideRenderMaterial_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.MaterialInterface>.ToNative(IntPtr.Add(ParamsBuffer, SetOverrideRenderMaterial_Material_Offset), 0, null, material);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetOverrideRenderMaterial_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/GeometryFramework.BaseDynamicMeshComponent:SetEnableWireframeRenderPass
    static readonly IntPtr SetEnableWireframeRenderPass_NativeFunction;
    static readonly int SetEnableWireframeRenderPass_ParamsSize;
    static readonly int SetEnableWireframeRenderPass_bEnable_Offset;
    
    public void SetEnableWireframeRenderPass(bool bEnable)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetEnableWireframeRenderPass_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetEnableWireframeRenderPass_bEnable_Offset), 0, null, bEnable);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetEnableWireframeRenderPass_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/GeometryFramework.BaseDynamicMeshComponent:SetEnableRaytracing
    static readonly IntPtr SetEnableRaytracing_NativeFunction;
    static readonly int SetEnableRaytracing_ParamsSize;
    static readonly int SetEnableRaytracing_bSetEnabled_Offset;
    
    public void SetEnableRaytracing(bool bSetEnabled)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetEnableRaytracing_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetEnableRaytracing_bSetEnabled_Offset), 0, null, bSetEnabled);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetEnableRaytracing_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/GeometryFramework.BaseDynamicMeshComponent:SetEnableFlatShading
    static readonly IntPtr SetEnableFlatShading_NativeFunction;
    static readonly int SetEnableFlatShading_ParamsSize;
    static readonly int SetEnableFlatShading_bEnable_Offset;
    
    public void SetEnableFlatShading(bool bEnable)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetEnableFlatShading_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetEnableFlatShading_bEnable_Offset), 0, null, bEnable);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetEnableFlatShading_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/GeometryFramework.BaseDynamicMeshComponent:SetConstantOverrideColor
    static readonly IntPtr SetConstantOverrideColor_NativeFunction;
    static readonly int SetConstantOverrideColor_ParamsSize;
    static readonly int SetConstantOverrideColor_NewColor_Offset;
    
    public void SetConstantOverrideColor(UnrealSharp.CoreUObject.Color newColor)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetConstantOverrideColor_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.CoreUObject.Color>.ToNative(IntPtr.Add(ParamsBuffer, SetConstantOverrideColor_NewColor_Offset), 0, null, newColor);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetConstantOverrideColor_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/GeometryFramework.BaseDynamicMeshComponent:SetColorOverrideMode
    static readonly IntPtr SetColorOverrideMode_NativeFunction;
    static readonly int SetColorOverrideMode_ParamsSize;
    static readonly int SetColorOverrideMode_NewMode_Offset;
    
    public void SetColorOverrideMode(UnrealSharp.GeometryFramework.EDynamicMeshComponentColorOverrideMode newMode)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetColorOverrideMode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.GeometryFramework.EDynamicMeshComponentColorOverrideMode>.ToNative(IntPtr.Add(ParamsBuffer, SetColorOverrideMode_NewMode_Offset), 0, null, newMode);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetColorOverrideMode_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/GeometryFramework.BaseDynamicMeshComponent:HasOverrideRenderMaterial
    static readonly IntPtr HasOverrideRenderMaterial_NativeFunction;
    static readonly int HasOverrideRenderMaterial_ParamsSize;
    static readonly int HasOverrideRenderMaterial_k_Offset;
    static readonly int HasOverrideRenderMaterial_ReturnValue_Offset;
    
    public bool HasOverrideRenderMaterial(int k)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[HasOverrideRenderMaterial_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, HasOverrideRenderMaterial_k_Offset), 0, null, k);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, HasOverrideRenderMaterial_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, HasOverrideRenderMaterial_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GeometryFramework.BaseDynamicMeshComponent:GetViewModeOverridesEnabled
    static readonly IntPtr GetViewModeOverridesEnabled_NativeFunction;
    static readonly int GetViewModeOverridesEnabled_ParamsSize;
    static readonly int GetViewModeOverridesEnabled_ReturnValue_Offset;
    
    public bool GetViewModeOverridesEnabled()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetViewModeOverridesEnabled_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetViewModeOverridesEnabled_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetViewModeOverridesEnabled_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GeometryFramework.BaseDynamicMeshComponent:GetVertexColorSpaceTransformMode
    static readonly IntPtr GetVertexColorSpaceTransformMode_NativeFunction;
    static readonly int GetVertexColorSpaceTransformMode_ParamsSize;
    static readonly int GetVertexColorSpaceTransformMode_ReturnValue_Offset;
    
    public UnrealSharp.GeometryFramework.EDynamicMeshVertexColorTransformMode GetVertexColorSpaceTransformMode()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetVertexColorSpaceTransformMode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetVertexColorSpaceTransformMode_NativeFunction, ParamsBuffer);
            
            UnrealSharp.GeometryFramework.EDynamicMeshVertexColorTransformMode returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.GeometryFramework.EDynamicMeshVertexColorTransformMode>.FromNative(IntPtr.Add(ParamsBuffer, GetVertexColorSpaceTransformMode_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GeometryFramework.BaseDynamicMeshComponent:GetShadowsEnabled
    static readonly IntPtr GetShadowsEnabled_NativeFunction;
    static readonly int GetShadowsEnabled_ParamsSize;
    static readonly int GetShadowsEnabled_ReturnValue_Offset;
    
    public bool GetShadowsEnabled()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetShadowsEnabled_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetShadowsEnabled_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetShadowsEnabled_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GeometryFramework.BaseDynamicMeshComponent:GetSecondaryRenderMaterial
    static readonly IntPtr GetSecondaryRenderMaterial_NativeFunction;
    static readonly int GetSecondaryRenderMaterial_ParamsSize;
    static readonly int GetSecondaryRenderMaterial_ReturnValue_Offset;
    
    public UnrealSharp.Engine.MaterialInterface GetSecondaryRenderMaterial()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSecondaryRenderMaterial_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSecondaryRenderMaterial_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.MaterialInterface returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.MaterialInterface>.FromNative(IntPtr.Add(ParamsBuffer, GetSecondaryRenderMaterial_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GeometryFramework.BaseDynamicMeshComponent:GetSecondaryBuffersVisibility
    static readonly IntPtr GetSecondaryBuffersVisibility_NativeFunction;
    static readonly int GetSecondaryBuffersVisibility_ParamsSize;
    static readonly int GetSecondaryBuffersVisibility_ReturnValue_Offset;
    
    public bool GetSecondaryBuffersVisibility()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSecondaryBuffersVisibility_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSecondaryBuffersVisibility_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetSecondaryBuffersVisibility_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GeometryFramework.BaseDynamicMeshComponent:GetOverrideRenderMaterial
    static readonly IntPtr GetOverrideRenderMaterial_NativeFunction;
    static readonly int GetOverrideRenderMaterial_ParamsSize;
    static readonly int GetOverrideRenderMaterial_MaterialIndex_Offset;
    static readonly int GetOverrideRenderMaterial_ReturnValue_Offset;
    
    public UnrealSharp.Engine.MaterialInterface GetOverrideRenderMaterial(int materialIndex)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetOverrideRenderMaterial_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetOverrideRenderMaterial_MaterialIndex_Offset), 0, null, materialIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetOverrideRenderMaterial_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.MaterialInterface returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.MaterialInterface>.FromNative(IntPtr.Add(ParamsBuffer, GetOverrideRenderMaterial_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GeometryFramework.BaseDynamicMeshComponent:GetFlatShadingEnabled
    static readonly IntPtr GetFlatShadingEnabled_NativeFunction;
    static readonly int GetFlatShadingEnabled_ParamsSize;
    static readonly int GetFlatShadingEnabled_ReturnValue_Offset;
    
    public bool GetFlatShadingEnabled()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetFlatShadingEnabled_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetFlatShadingEnabled_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetFlatShadingEnabled_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GeometryFramework.BaseDynamicMeshComponent:GetEnableWireframeRenderPass
    static readonly IntPtr GetEnableWireframeRenderPass_NativeFunction;
    static readonly int GetEnableWireframeRenderPass_ParamsSize;
    static readonly int GetEnableWireframeRenderPass_ReturnValue_Offset;
    
    public bool GetEnableWireframeRenderPass()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetEnableWireframeRenderPass_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetEnableWireframeRenderPass_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetEnableWireframeRenderPass_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GeometryFramework.BaseDynamicMeshComponent:GetEnableRaytracing
    static readonly IntPtr GetEnableRaytracing_NativeFunction;
    static readonly int GetEnableRaytracing_ParamsSize;
    static readonly int GetEnableRaytracing_ReturnValue_Offset;
    
    public bool GetEnableRaytracing()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetEnableRaytracing_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetEnableRaytracing_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetEnableRaytracing_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GeometryFramework.BaseDynamicMeshComponent:GetDynamicMesh
    static readonly IntPtr GetDynamicMesh_NativeFunction;
    static readonly int GetDynamicMesh_ParamsSize;
    static readonly int GetDynamicMesh_ReturnValue_Offset;
    
    public UnrealSharp.GeometryFramework.DynamicMesh GetDynamicMesh()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetDynamicMesh_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetDynamicMesh_NativeFunction, ParamsBuffer);
            
            UnrealSharp.GeometryFramework.DynamicMesh returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.GeometryFramework.DynamicMesh>.FromNative(IntPtr.Add(ParamsBuffer, GetDynamicMesh_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GeometryFramework.BaseDynamicMeshComponent:GetConstantOverrideColor
    static readonly IntPtr GetConstantOverrideColor_NativeFunction;
    static readonly int GetConstantOverrideColor_ParamsSize;
    static readonly int GetConstantOverrideColor_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.Color GetConstantOverrideColor()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetConstantOverrideColor_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetConstantOverrideColor_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.Color returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.CoreUObject.Color>.FromNative(IntPtr.Add(ParamsBuffer, GetConstantOverrideColor_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GeometryFramework.BaseDynamicMeshComponent:GetColorOverrideMode
    static readonly IntPtr GetColorOverrideMode_NativeFunction;
    static readonly int GetColorOverrideMode_ParamsSize;
    static readonly int GetColorOverrideMode_ReturnValue_Offset;
    
    public UnrealSharp.GeometryFramework.EDynamicMeshComponentColorOverrideMode GetColorOverrideMode()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetColorOverrideMode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetColorOverrideMode_NativeFunction, ParamsBuffer);
            
            UnrealSharp.GeometryFramework.EDynamicMeshComponentColorOverrideMode returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.GeometryFramework.EDynamicMeshComponentColorOverrideMode>.FromNative(IntPtr.Add(ParamsBuffer, GetColorOverrideMode_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GeometryFramework.BaseDynamicMeshComponent:ClearSecondaryRenderMaterial
    static readonly IntPtr ClearSecondaryRenderMaterial_NativeFunction;
    
    public void ClearSecondaryRenderMaterial()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ClearSecondaryRenderMaterial_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/GeometryFramework.BaseDynamicMeshComponent:ClearOverrideRenderMaterial
    static readonly IntPtr ClearOverrideRenderMaterial_NativeFunction;
    
    public void ClearOverrideRenderMaterial()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ClearOverrideRenderMaterial_NativeFunction, IntPtr.Zero);
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.GeometryFramework;

[UClass]
public partial class DynamicMeshPool : UnrealSharp.CoreUObject.Object
{
    
    static DynamicMeshPool()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("DynamicMeshPool");
        
        
        ReturnMesh_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ReturnMesh");
        ReturnMesh_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ReturnMesh_NativeFunction);
        ReturnMesh_Mesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReturnMesh_NativeFunction, "Mesh");
        ReturnAllMeshes_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ReturnAllMeshes");
        RequestMesh_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RequestMesh");
        RequestMesh_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RequestMesh_NativeFunction);
        RequestMesh_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RequestMesh_NativeFunction, "ReturnValue");
        FreeAllMeshes_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "FreeAllMeshes");
        
        
    }
    
    protected DynamicMeshPool(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/GeometryFramework.DynamicMeshPool:ReturnMesh
    static readonly IntPtr ReturnMesh_NativeFunction;
    static readonly int ReturnMesh_ParamsSize;
    static readonly int ReturnMesh_Mesh_Offset;
    
    public void ReturnMesh(UnrealSharp.GeometryFramework.DynamicMesh mesh)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ReturnMesh_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.GeometryFramework.DynamicMesh>.ToNative(IntPtr.Add(ParamsBuffer, ReturnMesh_Mesh_Offset), 0, null, mesh);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ReturnMesh_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/GeometryFramework.DynamicMeshPool:ReturnAllMeshes
    static readonly IntPtr ReturnAllMeshes_NativeFunction;
    
    public void ReturnAllMeshes()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ReturnAllMeshes_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/GeometryFramework.DynamicMeshPool:RequestMesh
    static readonly IntPtr RequestMesh_NativeFunction;
    static readonly int RequestMesh_ParamsSize;
    static readonly int RequestMesh_ReturnValue_Offset;
    
    public UnrealSharp.GeometryFramework.DynamicMesh RequestMesh()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RequestMesh_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RequestMesh_NativeFunction, ParamsBuffer);
            
            UnrealSharp.GeometryFramework.DynamicMesh returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.GeometryFramework.DynamicMesh>.FromNative(IntPtr.Add(ParamsBuffer, RequestMesh_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/GeometryFramework.DynamicMeshPool:FreeAllMeshes
    static readonly IntPtr FreeAllMeshes_NativeFunction;
    
    public void FreeAllMeshes()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, FreeAllMeshes_NativeFunction, IntPtr.Zero);
        }
    }
    
    
}
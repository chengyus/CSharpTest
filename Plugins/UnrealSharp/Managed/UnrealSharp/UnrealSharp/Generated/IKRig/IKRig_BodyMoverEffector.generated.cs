// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.IKRig;

[UClass]
public partial class IKRig_BodyMoverEffector : UnrealSharp.CoreUObject.Object
{
    
    static IKRig_BodyMoverEffector()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("IKRig_BodyMoverEffector");
        
        GoalName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "GoalName");
        BoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "BoneName");
        InfluenceMultiplier_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "InfluenceMultiplier");
        
        
        
    }
    
    protected IKRig_BodyMoverEffector(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // NameProperty /Script/IKRig.IKRig_BodyMoverEffector:GoalName
    static readonly int GoalName_Offset;
    
    public Name GoalName
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<Name>.FromNative(IntPtr.Add(NativeObject, GoalName_Offset), 0, this);
        }
    }
    
    // NameProperty /Script/IKRig.IKRig_BodyMoverEffector:BoneName
    static readonly int BoneName_Offset;
    
    public Name BoneName
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<Name>.FromNative(IntPtr.Add(NativeObject, BoneName_Offset), 0, this);
        }
    }
    
    // FloatProperty /Script/IKRig.IKRig_BodyMoverEffector:InfluenceMultiplier
    static readonly int InfluenceMultiplier_Offset;
    
    public float InfluenceMultiplier
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, InfluenceMultiplier_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, InfluenceMultiplier_Offset), 0, this, value);
        }
    }
    
    
}
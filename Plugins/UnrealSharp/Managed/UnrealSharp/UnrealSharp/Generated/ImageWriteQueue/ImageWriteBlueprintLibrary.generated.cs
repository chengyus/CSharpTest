// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.ImageWriteQueue;

[UClass]
public partial class ImageWriteBlueprintLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static ImageWriteBlueprintLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("ImageWriteBlueprintLibrary");
        
        
        ExportToDisk_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ExportToDisk");
        ExportToDisk_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ExportToDisk_NativeFunction);
        ExportToDisk_Texture_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ExportToDisk_NativeFunction, "Texture");
        ExportToDisk_Filename_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ExportToDisk_NativeFunction, "Filename");
        ExportToDisk_Options_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ExportToDisk_NativeFunction, "Options");
        
        
    }
    
    protected ImageWriteBlueprintLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/ImageWriteQueue.ImageWriteBlueprintLibrary:ExportToDisk
    static readonly IntPtr ExportToDisk_NativeFunction;
    static readonly int ExportToDisk_ParamsSize;
    static readonly int ExportToDisk_Texture_Offset;
    static readonly int ExportToDisk_Filename_Offset;
    static readonly int ExportToDisk_Options_Offset;
    
    public static void ExportToDisk(UnrealSharp.Engine.Texture texture, string filename, UnrealSharp.ImageWriteQueue.ImageWriteOptions options)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ExportToDisk_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.Texture>.ToNative(IntPtr.Add(ParamsBuffer, ExportToDisk_Texture_Offset), 0, null, texture);
            IntPtr Filename_NativePtr = IntPtr.Add(ParamsBuffer,ExportToDisk_Filename_Offset);
            StringMarshaller.ToNative(Filename_NativePtr,0,null,filename);
            UnrealSharp.ImageWriteQueue.ImageWriteOptionsMarshaler.ToNative(IntPtr.Add(ParamsBuffer, ExportToDisk_Options_Offset), 0, null, options);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ExportToDisk_NativeFunction, ParamsBuffer);
            
            
            StringMarshaller.DestructInstance(Filename_NativePtr, 0);
        }
    }
    
    
}
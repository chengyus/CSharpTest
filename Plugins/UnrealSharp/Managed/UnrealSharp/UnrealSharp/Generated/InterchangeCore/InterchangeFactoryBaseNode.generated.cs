// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.InterchangeCore;

[UClass]
public partial class InterchangeFactoryBaseNode : UnrealSharp.InterchangeCore.InterchangeBaseNode
{
    
    static InterchangeFactoryBaseNode()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("InterchangeFactoryBaseNode");
        
        
        UnsetSkipNodeImport_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "UnsetSkipNodeImport");
        UnsetSkipNodeImport_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(UnsetSkipNodeImport_NativeFunction);
        UnsetSkipNodeImport_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(UnsetSkipNodeImport_NativeFunction, "ReturnValue");
        UnsetForceNodeReimport_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "UnsetForceNodeReimport");
        UnsetForceNodeReimport_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(UnsetForceNodeReimport_NativeFunction);
        UnsetForceNodeReimport_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(UnsetForceNodeReimport_NativeFunction, "ReturnValue");
        ShouldSkipNodeImport_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ShouldSkipNodeImport");
        ShouldSkipNodeImport_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ShouldSkipNodeImport_NativeFunction);
        ShouldSkipNodeImport_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ShouldSkipNodeImport_NativeFunction, "ReturnValue");
        ShouldForceNodeReimport_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ShouldForceNodeReimport");
        ShouldForceNodeReimport_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ShouldForceNodeReimport_NativeFunction);
        ShouldForceNodeReimport_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ShouldForceNodeReimport_NativeFunction, "ReturnValue");
        SetSkipNodeImport_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSkipNodeImport");
        SetSkipNodeImport_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSkipNodeImport_NativeFunction);
        SetSkipNodeImport_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSkipNodeImport_NativeFunction, "ReturnValue");
        SetReimportStrategyFlags_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetReimportStrategyFlags");
        SetReimportStrategyFlags_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetReimportStrategyFlags_NativeFunction);
        SetReimportStrategyFlags_ReimportStrategyFlags_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetReimportStrategyFlags_NativeFunction, "ReimportStrategyFlags");
        SetReimportStrategyFlags_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetReimportStrategyFlags_NativeFunction, "ReturnValue");
        SetForceNodeReimport_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetForceNodeReimport");
        SetForceNodeReimport_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetForceNodeReimport_NativeFunction);
        SetForceNodeReimport_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetForceNodeReimport_NativeFunction, "ReturnValue");
        SetCustomSubPath_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomSubPath");
        SetCustomSubPath_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomSubPath_NativeFunction);
        SetCustomSubPath_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomSubPath_NativeFunction, "AttributeValue");
        SetCustomSubPath_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomSubPath_NativeFunction, "ReturnValue");
        SetCustomReferenceObject_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomReferenceObject");
        SetCustomReferenceObject_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomReferenceObject_NativeFunction);
        SetCustomReferenceObject_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomReferenceObject_NativeFunction, "AttributeValue");
        SetCustomReferenceObject_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomReferenceObject_NativeFunction, "ReturnValue");
        RemoveFactoryDependencyUid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveFactoryDependencyUid");
        RemoveFactoryDependencyUid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveFactoryDependencyUid_NativeFunction);
        RemoveFactoryDependencyUid_DependencyUid_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveFactoryDependencyUid_NativeFunction, "DependencyUid");
        RemoveFactoryDependencyUid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveFactoryDependencyUid_NativeFunction, "ReturnValue");
        GetReimportStrategyFlags_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetReimportStrategyFlags");
        GetReimportStrategyFlags_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetReimportStrategyFlags_NativeFunction);
        GetReimportStrategyFlags_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetReimportStrategyFlags_NativeFunction, "ReturnValue");
        GetFactoryDependency_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetFactoryDependency");
        GetFactoryDependency_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetFactoryDependency_NativeFunction);
        GetFactoryDependency_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetFactoryDependency_NativeFunction, "Index");
        GetFactoryDependency_OutDependency_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetFactoryDependency_NativeFunction, "OutDependency");
        GetFactoryDependenciesCount_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetFactoryDependenciesCount");
        GetFactoryDependenciesCount_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetFactoryDependenciesCount_NativeFunction);
        GetFactoryDependenciesCount_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetFactoryDependenciesCount_NativeFunction, "ReturnValue");
        GetCustomSubPath_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomSubPath");
        GetCustomSubPath_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomSubPath_NativeFunction);
        GetCustomSubPath_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomSubPath_NativeFunction, "AttributeValue");
        GetCustomSubPath_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomSubPath_NativeFunction, "ReturnValue");
        GetCustomReferenceObject_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomReferenceObject");
        GetCustomReferenceObject_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomReferenceObject_NativeFunction);
        GetCustomReferenceObject_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomReferenceObject_NativeFunction, "AttributeValue");
        GetCustomReferenceObject_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomReferenceObject_NativeFunction, "ReturnValue");
        AddFactoryDependencyUid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddFactoryDependencyUid");
        AddFactoryDependencyUid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddFactoryDependencyUid_NativeFunction);
        AddFactoryDependencyUid_DependencyUid_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddFactoryDependencyUid_NativeFunction, "DependencyUid");
        AddFactoryDependencyUid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddFactoryDependencyUid_NativeFunction, "ReturnValue");
        
        
    }
    
    protected InterchangeFactoryBaseNode(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/InterchangeCore.InterchangeFactoryBaseNode:UnsetSkipNodeImport
    static readonly IntPtr UnsetSkipNodeImport_NativeFunction;
    static readonly int UnsetSkipNodeImport_ParamsSize;
    static readonly int UnsetSkipNodeImport_ReturnValue_Offset;
    
    public bool UnsetSkipNodeImport()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[UnsetSkipNodeImport_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, UnsetSkipNodeImport_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, UnsetSkipNodeImport_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeCore.InterchangeFactoryBaseNode:UnsetForceNodeReimport
    static readonly IntPtr UnsetForceNodeReimport_NativeFunction;
    static readonly int UnsetForceNodeReimport_ParamsSize;
    static readonly int UnsetForceNodeReimport_ReturnValue_Offset;
    
    public bool UnsetForceNodeReimport()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[UnsetForceNodeReimport_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, UnsetForceNodeReimport_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, UnsetForceNodeReimport_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeCore.InterchangeFactoryBaseNode:ShouldSkipNodeImport
    static readonly IntPtr ShouldSkipNodeImport_NativeFunction;
    static readonly int ShouldSkipNodeImport_ParamsSize;
    static readonly int ShouldSkipNodeImport_ReturnValue_Offset;
    
    public bool ShouldSkipNodeImport()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ShouldSkipNodeImport_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ShouldSkipNodeImport_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, ShouldSkipNodeImport_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeCore.InterchangeFactoryBaseNode:ShouldForceNodeReimport
    static readonly IntPtr ShouldForceNodeReimport_NativeFunction;
    static readonly int ShouldForceNodeReimport_ParamsSize;
    static readonly int ShouldForceNodeReimport_ReturnValue_Offset;
    
    public bool ShouldForceNodeReimport()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ShouldForceNodeReimport_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ShouldForceNodeReimport_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, ShouldForceNodeReimport_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeCore.InterchangeFactoryBaseNode:SetSkipNodeImport
    static readonly IntPtr SetSkipNodeImport_NativeFunction;
    static readonly int SetSkipNodeImport_ParamsSize;
    static readonly int SetSkipNodeImport_ReturnValue_Offset;
    
    public bool SetSkipNodeImport()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSkipNodeImport_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSkipNodeImport_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetSkipNodeImport_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeCore.InterchangeFactoryBaseNode:SetReimportStrategyFlags
    static readonly IntPtr SetReimportStrategyFlags_NativeFunction;
    static readonly int SetReimportStrategyFlags_ParamsSize;
    static readonly int SetReimportStrategyFlags_ReimportStrategyFlags_Offset;
    static readonly int SetReimportStrategyFlags_ReturnValue_Offset;
    
    public bool SetReimportStrategyFlags(UnrealSharp.InterchangeCore.EReimportStrategyFlags reimportStrategyFlags)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetReimportStrategyFlags_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.InterchangeCore.EReimportStrategyFlags>.ToNative(IntPtr.Add(ParamsBuffer, SetReimportStrategyFlags_ReimportStrategyFlags_Offset), 0, null, reimportStrategyFlags);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetReimportStrategyFlags_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetReimportStrategyFlags_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeCore.InterchangeFactoryBaseNode:SetForceNodeReimport
    static readonly IntPtr SetForceNodeReimport_NativeFunction;
    static readonly int SetForceNodeReimport_ParamsSize;
    static readonly int SetForceNodeReimport_ReturnValue_Offset;
    
    public bool SetForceNodeReimport()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetForceNodeReimport_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetForceNodeReimport_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetForceNodeReimport_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeCore.InterchangeFactoryBaseNode:SetCustomSubPath
    static readonly IntPtr SetCustomSubPath_NativeFunction;
    static readonly int SetCustomSubPath_ParamsSize;
    static readonly int SetCustomSubPath_AttributeValue_Offset;
    static readonly int SetCustomSubPath_ReturnValue_Offset;
    
    public bool SetCustomSubPath(string attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomSubPath_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr AttributeValue_NativePtr = IntPtr.Add(ParamsBuffer,SetCustomSubPath_AttributeValue_Offset);
            StringMarshaller.ToNative(AttributeValue_NativePtr,0,null,attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomSubPath_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomSubPath_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(AttributeValue_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeCore.InterchangeFactoryBaseNode:SetCustomReferenceObject
    static readonly IntPtr SetCustomReferenceObject_NativeFunction;
    static readonly int SetCustomReferenceObject_ParamsSize;
    static readonly int SetCustomReferenceObject_AttributeValue_Offset;
    static readonly int SetCustomReferenceObject_ReturnValue_Offset;
    
    public bool SetCustomReferenceObject(UnrealSharp.CoreUObject.SoftObjectPath attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomReferenceObject_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.CoreUObject.SoftObjectPathMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetCustomReferenceObject_AttributeValue_Offset), 0, null, attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomReferenceObject_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomReferenceObject_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeCore.InterchangeFactoryBaseNode:RemoveFactoryDependencyUid
    static readonly IntPtr RemoveFactoryDependencyUid_NativeFunction;
    static readonly int RemoveFactoryDependencyUid_ParamsSize;
    static readonly int RemoveFactoryDependencyUid_DependencyUid_Offset;
    static readonly int RemoveFactoryDependencyUid_ReturnValue_Offset;
    
    public bool RemoveFactoryDependencyUid(string dependencyUid)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveFactoryDependencyUid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr DependencyUid_NativePtr = IntPtr.Add(ParamsBuffer,RemoveFactoryDependencyUid_DependencyUid_Offset);
            StringMarshaller.ToNative(DependencyUid_NativePtr,0,null,dependencyUid);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveFactoryDependencyUid_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveFactoryDependencyUid_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(DependencyUid_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeCore.InterchangeFactoryBaseNode:GetReimportStrategyFlags
    static readonly IntPtr GetReimportStrategyFlags_NativeFunction;
    static readonly int GetReimportStrategyFlags_ParamsSize;
    static readonly int GetReimportStrategyFlags_ReturnValue_Offset;
    
    public UnrealSharp.InterchangeCore.EReimportStrategyFlags GetReimportStrategyFlags()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetReimportStrategyFlags_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetReimportStrategyFlags_NativeFunction, ParamsBuffer);
            
            UnrealSharp.InterchangeCore.EReimportStrategyFlags returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.InterchangeCore.EReimportStrategyFlags>.FromNative(IntPtr.Add(ParamsBuffer, GetReimportStrategyFlags_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeCore.InterchangeFactoryBaseNode:GetFactoryDependency
    static readonly IntPtr GetFactoryDependency_NativeFunction;
    static readonly int GetFactoryDependency_ParamsSize;
    static readonly int GetFactoryDependency_Index_Offset;
    static readonly int GetFactoryDependency_OutDependency_Offset;
    
    public void GetFactoryDependency(int index, out string outDependency)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetFactoryDependency_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetFactoryDependency_Index_Offset), 0, null, index);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetFactoryDependency_NativeFunction, ParamsBuffer);
            
            IntPtr OutDependency_NativePtr = IntPtr.Add(ParamsBuffer,GetFactoryDependency_OutDependency_Offset);
            outDependency = StringMarshaller.FromNative(OutDependency_NativePtr,0,null);
            StringMarshaller.DestructInstance(OutDependency_NativePtr, 0);
            
        }
    }
    
    // Function /Script/InterchangeCore.InterchangeFactoryBaseNode:GetFactoryDependenciesCount
    static readonly IntPtr GetFactoryDependenciesCount_NativeFunction;
    static readonly int GetFactoryDependenciesCount_ParamsSize;
    static readonly int GetFactoryDependenciesCount_ReturnValue_Offset;
    
    public int GetFactoryDependenciesCount()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetFactoryDependenciesCount_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetFactoryDependenciesCount_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetFactoryDependenciesCount_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeCore.InterchangeFactoryBaseNode:GetCustomSubPath
    static readonly IntPtr GetCustomSubPath_NativeFunction;
    static readonly int GetCustomSubPath_ParamsSize;
    static readonly int GetCustomSubPath_AttributeValue_Offset;
    static readonly int GetCustomSubPath_ReturnValue_Offset;
    
    public bool GetCustomSubPath(out string attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomSubPath_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomSubPath_NativeFunction, ParamsBuffer);
            
            IntPtr AttributeValue_NativePtr = IntPtr.Add(ParamsBuffer,GetCustomSubPath_AttributeValue_Offset);
            attributeValue = StringMarshaller.FromNative(AttributeValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(AttributeValue_NativePtr, 0);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomSubPath_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeCore.InterchangeFactoryBaseNode:GetCustomReferenceObject
    static readonly IntPtr GetCustomReferenceObject_NativeFunction;
    static readonly int GetCustomReferenceObject_ParamsSize;
    static readonly int GetCustomReferenceObject_AttributeValue_Offset;
    static readonly int GetCustomReferenceObject_ReturnValue_Offset;
    
    public bool GetCustomReferenceObject(out UnrealSharp.CoreUObject.SoftObjectPath attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomReferenceObject_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomReferenceObject_NativeFunction, ParamsBuffer);
            
            attributeValue = UnrealSharp.CoreUObject.SoftObjectPathMarshaler.FromNative(IntPtr.Add(ParamsBuffer, GetCustomReferenceObject_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomReferenceObject_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeCore.InterchangeFactoryBaseNode:AddFactoryDependencyUid
    static readonly IntPtr AddFactoryDependencyUid_NativeFunction;
    static readonly int AddFactoryDependencyUid_ParamsSize;
    static readonly int AddFactoryDependencyUid_DependencyUid_Offset;
    static readonly int AddFactoryDependencyUid_ReturnValue_Offset;
    
    public bool AddFactoryDependencyUid(string dependencyUid)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddFactoryDependencyUid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr DependencyUid_NativePtr = IntPtr.Add(ParamsBuffer,AddFactoryDependencyUid_DependencyUid_Offset);
            StringMarshaller.ToNative(DependencyUid_NativePtr,0,null,dependencyUid);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddFactoryDependencyUid_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, AddFactoryDependencyUid_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(DependencyUid_NativePtr, 0);
            return returnValue;
        }
    }
    
    
}
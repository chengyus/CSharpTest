// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.InterchangeFactoryNodes;

[UClass]
public partial class InterchangeAnimationTrackSetFactoryNode : UnrealSharp.InterchangeCore.InterchangeFactoryBaseNode
{
    
    static InterchangeAnimationTrackSetFactoryNode()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("InterchangeAnimationTrackSetFactoryNode");
        
        
        SetCustomFrameRate_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomFrameRate");
        SetCustomFrameRate_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomFrameRate_NativeFunction);
        SetCustomFrameRate_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomFrameRate_NativeFunction, "AttributeValue");
        SetCustomFrameRate_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomFrameRate_NativeFunction, "ReturnValue");
        RemoveCustomAnimationTrackUid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveCustomAnimationTrackUid");
        RemoveCustomAnimationTrackUid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveCustomAnimationTrackUid_NativeFunction);
        RemoveCustomAnimationTrackUid_AnimationTrackUid_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveCustomAnimationTrackUid_NativeFunction, "AnimationTrackUid");
        RemoveCustomAnimationTrackUid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveCustomAnimationTrackUid_NativeFunction, "ReturnValue");
        GetObjectClass_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetObjectClass");
        GetObjectClass_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetObjectClass_NativeFunction);
        GetObjectClass_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetObjectClass_NativeFunction, "ReturnValue");
        GetCustomFrameRate_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomFrameRate");
        GetCustomFrameRate_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomFrameRate_NativeFunction);
        GetCustomFrameRate_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomFrameRate_NativeFunction, "AttributeValue");
        GetCustomFrameRate_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomFrameRate_NativeFunction, "ReturnValue");
        GetCustomAnimationTrackUidCount_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomAnimationTrackUidCount");
        GetCustomAnimationTrackUidCount_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomAnimationTrackUidCount_NativeFunction);
        GetCustomAnimationTrackUidCount_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomAnimationTrackUidCount_NativeFunction, "ReturnValue");
        GetCustomAnimationTrackUid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomAnimationTrackUid");
        GetCustomAnimationTrackUid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomAnimationTrackUid_NativeFunction);
        GetCustomAnimationTrackUid_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomAnimationTrackUid_NativeFunction, "Index");
        GetCustomAnimationTrackUid_OutAnimationTrackUid_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomAnimationTrackUid_NativeFunction, "OutAnimationTrackUid");
        AddCustomAnimationTrackUid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddCustomAnimationTrackUid");
        AddCustomAnimationTrackUid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddCustomAnimationTrackUid_NativeFunction);
        AddCustomAnimationTrackUid_AnimationTrackUid_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddCustomAnimationTrackUid_NativeFunction, "AnimationTrackUid");
        AddCustomAnimationTrackUid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddCustomAnimationTrackUid_NativeFunction, "ReturnValue");
        
        
    }
    
    protected InterchangeAnimationTrackSetFactoryNode(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/InterchangeFactoryNodes.InterchangeAnimationTrackSetFactoryNode:SetCustomFrameRate
    static readonly IntPtr SetCustomFrameRate_NativeFunction;
    static readonly int SetCustomFrameRate_ParamsSize;
    static readonly int SetCustomFrameRate_AttributeValue_Offset;
    static readonly int SetCustomFrameRate_ReturnValue_Offset;
    
    public bool SetCustomFrameRate(float attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomFrameRate_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetCustomFrameRate_AttributeValue_Offset), 0, null, attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomFrameRate_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomFrameRate_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeAnimationTrackSetFactoryNode:RemoveCustomAnimationTrackUid
    static readonly IntPtr RemoveCustomAnimationTrackUid_NativeFunction;
    static readonly int RemoveCustomAnimationTrackUid_ParamsSize;
    static readonly int RemoveCustomAnimationTrackUid_AnimationTrackUid_Offset;
    static readonly int RemoveCustomAnimationTrackUid_ReturnValue_Offset;
    
    public bool RemoveCustomAnimationTrackUid(string animationTrackUid)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveCustomAnimationTrackUid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr AnimationTrackUid_NativePtr = IntPtr.Add(ParamsBuffer,RemoveCustomAnimationTrackUid_AnimationTrackUid_Offset);
            StringMarshaller.ToNative(AnimationTrackUid_NativePtr,0,null,animationTrackUid);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveCustomAnimationTrackUid_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveCustomAnimationTrackUid_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(AnimationTrackUid_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeAnimationTrackSetFactoryNode:GetObjectClass
    static readonly IntPtr GetObjectClass_NativeFunction;
    static readonly int GetObjectClass_ParamsSize;
    static readonly int GetObjectClass_ReturnValue_Offset;
    
    public SubclassOf<UnrealSharp.CoreUObject.Object> GetObjectClass()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetObjectClass_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetObjectClass_NativeFunction, ParamsBuffer);
            
            SubclassOf<UnrealSharp.CoreUObject.Object> returnValue;
            returnValue = SubclassOfMarshaller<UnrealSharp.CoreUObject.Object>.FromNative(IntPtr.Add(ParamsBuffer, GetObjectClass_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeAnimationTrackSetFactoryNode:GetCustomFrameRate
    static readonly IntPtr GetCustomFrameRate_NativeFunction;
    static readonly int GetCustomFrameRate_ParamsSize;
    static readonly int GetCustomFrameRate_AttributeValue_Offset;
    static readonly int GetCustomFrameRate_ReturnValue_Offset;
    
    public bool GetCustomFrameRate(out float attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomFrameRate_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomFrameRate_NativeFunction, ParamsBuffer);
            
            attributeValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetCustomFrameRate_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomFrameRate_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeAnimationTrackSetFactoryNode:GetCustomAnimationTrackUidCount
    static readonly IntPtr GetCustomAnimationTrackUidCount_NativeFunction;
    static readonly int GetCustomAnimationTrackUidCount_ParamsSize;
    static readonly int GetCustomAnimationTrackUidCount_ReturnValue_Offset;
    
    public int GetCustomAnimationTrackUidCount()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomAnimationTrackUidCount_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomAnimationTrackUidCount_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetCustomAnimationTrackUidCount_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeAnimationTrackSetFactoryNode:GetCustomAnimationTrackUid
    static readonly IntPtr GetCustomAnimationTrackUid_NativeFunction;
    static readonly int GetCustomAnimationTrackUid_ParamsSize;
    static readonly int GetCustomAnimationTrackUid_Index_Offset;
    static readonly int GetCustomAnimationTrackUid_OutAnimationTrackUid_Offset;
    
    public void GetCustomAnimationTrackUid(int index, out string outAnimationTrackUid)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomAnimationTrackUid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetCustomAnimationTrackUid_Index_Offset), 0, null, index);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomAnimationTrackUid_NativeFunction, ParamsBuffer);
            
            IntPtr OutAnimationTrackUid_NativePtr = IntPtr.Add(ParamsBuffer,GetCustomAnimationTrackUid_OutAnimationTrackUid_Offset);
            outAnimationTrackUid = StringMarshaller.FromNative(OutAnimationTrackUid_NativePtr,0,null);
            StringMarshaller.DestructInstance(OutAnimationTrackUid_NativePtr, 0);
            
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeAnimationTrackSetFactoryNode:AddCustomAnimationTrackUid
    static readonly IntPtr AddCustomAnimationTrackUid_NativeFunction;
    static readonly int AddCustomAnimationTrackUid_ParamsSize;
    static readonly int AddCustomAnimationTrackUid_AnimationTrackUid_Offset;
    static readonly int AddCustomAnimationTrackUid_ReturnValue_Offset;
    
    public bool AddCustomAnimationTrackUid(string animationTrackUid)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddCustomAnimationTrackUid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr AnimationTrackUid_NativePtr = IntPtr.Add(ParamsBuffer,AddCustomAnimationTrackUid_AnimationTrackUid_Offset);
            StringMarshaller.ToNative(AnimationTrackUid_NativePtr,0,null,animationTrackUid);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddCustomAnimationTrackUid_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, AddCustomAnimationTrackUid_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(AnimationTrackUid_NativePtr, 0);
            return returnValue;
        }
    }
    
    
}
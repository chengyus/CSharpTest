// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.InterchangeFactoryNodes;

[UClass]
public partial class InterchangeMaterialExpressionFactoryNode : UnrealSharp.InterchangeCore.InterchangeFactoryBaseNode
{
    
    static InterchangeMaterialExpressionFactoryNode()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("InterchangeMaterialExpressionFactoryNode");
        
        
        SetCustomExpressionClassName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomExpressionClassName");
        SetCustomExpressionClassName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomExpressionClassName_NativeFunction);
        SetCustomExpressionClassName_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomExpressionClassName_NativeFunction, "AttributeValue");
        SetCustomExpressionClassName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomExpressionClassName_NativeFunction, "ReturnValue");
        GetCustomExpressionClassName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomExpressionClassName");
        GetCustomExpressionClassName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomExpressionClassName_NativeFunction);
        GetCustomExpressionClassName_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomExpressionClassName_NativeFunction, "AttributeValue");
        GetCustomExpressionClassName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomExpressionClassName_NativeFunction, "ReturnValue");
        
        
    }
    
    protected InterchangeMaterialExpressionFactoryNode(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/InterchangeFactoryNodes.InterchangeMaterialExpressionFactoryNode:SetCustomExpressionClassName
    static readonly IntPtr SetCustomExpressionClassName_NativeFunction;
    static readonly int SetCustomExpressionClassName_ParamsSize;
    static readonly int SetCustomExpressionClassName_AttributeValue_Offset;
    static readonly int SetCustomExpressionClassName_ReturnValue_Offset;
    
    public bool SetCustomExpressionClassName(string attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomExpressionClassName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr AttributeValue_NativePtr = IntPtr.Add(ParamsBuffer,SetCustomExpressionClassName_AttributeValue_Offset);
            StringMarshaller.ToNative(AttributeValue_NativePtr,0,null,attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomExpressionClassName_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomExpressionClassName_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(AttributeValue_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMaterialExpressionFactoryNode:GetCustomExpressionClassName
    static readonly IntPtr GetCustomExpressionClassName_NativeFunction;
    static readonly int GetCustomExpressionClassName_ParamsSize;
    static readonly int GetCustomExpressionClassName_AttributeValue_Offset;
    static readonly int GetCustomExpressionClassName_ReturnValue_Offset;
    
    public bool GetCustomExpressionClassName(out string attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomExpressionClassName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomExpressionClassName_NativeFunction, ParamsBuffer);
            
            IntPtr AttributeValue_NativePtr = IntPtr.Add(ParamsBuffer,GetCustomExpressionClassName_AttributeValue_Offset);
            attributeValue = StringMarshaller.FromNative(AttributeValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(AttributeValue_NativePtr, 0);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomExpressionClassName_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
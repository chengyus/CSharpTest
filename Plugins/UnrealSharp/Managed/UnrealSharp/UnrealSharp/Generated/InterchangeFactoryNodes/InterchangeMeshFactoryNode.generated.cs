// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.InterchangeFactoryNodes;

[UClass]
abstract public partial class InterchangeMeshFactoryNode : UnrealSharp.InterchangeCore.InterchangeFactoryBaseNode
{
    
    static InterchangeMeshFactoryNode()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("InterchangeMeshFactoryNode");
        
        
        SetSlotMaterialDependencyUid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSlotMaterialDependencyUid");
        SetSlotMaterialDependencyUid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSlotMaterialDependencyUid_NativeFunction);
        SetSlotMaterialDependencyUid_SlotName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSlotMaterialDependencyUid_NativeFunction, "SlotName");
        SetSlotMaterialDependencyUid_MaterialDependencyUid_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSlotMaterialDependencyUid_NativeFunction, "MaterialDependencyUid");
        SetSlotMaterialDependencyUid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSlotMaterialDependencyUid_NativeFunction, "ReturnValue");
        SetCustomVertexColorReplace_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomVertexColorReplace");
        SetCustomVertexColorReplace_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomVertexColorReplace_NativeFunction);
        SetCustomVertexColorReplace_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomVertexColorReplace_NativeFunction, "AttributeValue");
        SetCustomVertexColorReplace_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomVertexColorReplace_NativeFunction, "ReturnValue");
        SetCustomVertexColorOverride_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomVertexColorOverride");
        SetCustomVertexColorOverride_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomVertexColorOverride_NativeFunction);
        SetCustomVertexColorOverride_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomVertexColorOverride_NativeFunction, "AttributeValue");
        SetCustomVertexColorOverride_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomVertexColorOverride_NativeFunction, "ReturnValue");
        SetCustomVertexColorIgnore_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomVertexColorIgnore");
        SetCustomVertexColorIgnore_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomVertexColorIgnore_NativeFunction);
        SetCustomVertexColorIgnore_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomVertexColorIgnore_NativeFunction, "AttributeValue");
        SetCustomVertexColorIgnore_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomVertexColorIgnore_NativeFunction, "ReturnValue");
        SetCustomUseMikkTSpace_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomUseMikkTSpace");
        SetCustomUseMikkTSpace_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomUseMikkTSpace_NativeFunction);
        SetCustomUseMikkTSpace_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomUseMikkTSpace_NativeFunction, "AttributeValue");
        SetCustomUseMikkTSpace_bAddApplyDelegate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomUseMikkTSpace_NativeFunction, "bAddApplyDelegate");
        SetCustomUseMikkTSpace_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomUseMikkTSpace_NativeFunction, "ReturnValue");
        SetCustomUseHighPrecisionTangentBasis_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomUseHighPrecisionTangentBasis");
        SetCustomUseHighPrecisionTangentBasis_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomUseHighPrecisionTangentBasis_NativeFunction);
        SetCustomUseHighPrecisionTangentBasis_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomUseHighPrecisionTangentBasis_NativeFunction, "AttributeValue");
        SetCustomUseHighPrecisionTangentBasis_bAddApplyDelegate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomUseHighPrecisionTangentBasis_NativeFunction, "bAddApplyDelegate");
        SetCustomUseHighPrecisionTangentBasis_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomUseHighPrecisionTangentBasis_NativeFunction, "ReturnValue");
        SetCustomUseFullPrecisionUVs_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomUseFullPrecisionUVs");
        SetCustomUseFullPrecisionUVs_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomUseFullPrecisionUVs_NativeFunction);
        SetCustomUseFullPrecisionUVs_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomUseFullPrecisionUVs_NativeFunction, "AttributeValue");
        SetCustomUseFullPrecisionUVs_bAddApplyDelegate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomUseFullPrecisionUVs_NativeFunction, "bAddApplyDelegate");
        SetCustomUseFullPrecisionUVs_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomUseFullPrecisionUVs_NativeFunction, "ReturnValue");
        SetCustomUseBackwardsCompatibleF16TruncUVs_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomUseBackwardsCompatibleF16TruncUVs");
        SetCustomUseBackwardsCompatibleF16TruncUVs_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomUseBackwardsCompatibleF16TruncUVs_NativeFunction);
        SetCustomUseBackwardsCompatibleF16TruncUVs_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomUseBackwardsCompatibleF16TruncUVs_NativeFunction, "AttributeValue");
        SetCustomUseBackwardsCompatibleF16TruncUVs_bAddApplyDelegate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomUseBackwardsCompatibleF16TruncUVs_NativeFunction, "bAddApplyDelegate");
        SetCustomUseBackwardsCompatibleF16TruncUVs_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomUseBackwardsCompatibleF16TruncUVs_NativeFunction, "ReturnValue");
        SetCustomRemoveDegenerates_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomRemoveDegenerates");
        SetCustomRemoveDegenerates_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomRemoveDegenerates_NativeFunction);
        SetCustomRemoveDegenerates_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomRemoveDegenerates_NativeFunction, "AttributeValue");
        SetCustomRemoveDegenerates_bAddApplyDelegate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomRemoveDegenerates_NativeFunction, "bAddApplyDelegate");
        SetCustomRemoveDegenerates_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomRemoveDegenerates_NativeFunction, "ReturnValue");
        SetCustomRecomputeTangents_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomRecomputeTangents");
        SetCustomRecomputeTangents_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomRecomputeTangents_NativeFunction);
        SetCustomRecomputeTangents_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomRecomputeTangents_NativeFunction, "AttributeValue");
        SetCustomRecomputeTangents_bAddApplyDelegate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomRecomputeTangents_NativeFunction, "bAddApplyDelegate");
        SetCustomRecomputeTangents_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomRecomputeTangents_NativeFunction, "ReturnValue");
        SetCustomRecomputeNormals_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomRecomputeNormals");
        SetCustomRecomputeNormals_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomRecomputeNormals_NativeFunction);
        SetCustomRecomputeNormals_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomRecomputeNormals_NativeFunction, "AttributeValue");
        SetCustomRecomputeNormals_bAddApplyDelegate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomRecomputeNormals_NativeFunction, "bAddApplyDelegate");
        SetCustomRecomputeNormals_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomRecomputeNormals_NativeFunction, "ReturnValue");
        SetCustomLODGroup_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomLODGroup");
        SetCustomLODGroup_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomLODGroup_NativeFunction);
        SetCustomLODGroup_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomLODGroup_NativeFunction, "AttributeValue");
        SetCustomLODGroup_bAddApplyDelegate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomLODGroup_NativeFunction, "bAddApplyDelegate");
        SetCustomLODGroup_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomLODGroup_NativeFunction, "ReturnValue");
        SetCustomComputeWeightedNormals_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomComputeWeightedNormals");
        SetCustomComputeWeightedNormals_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomComputeWeightedNormals_NativeFunction);
        SetCustomComputeWeightedNormals_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomComputeWeightedNormals_NativeFunction, "AttributeValue");
        SetCustomComputeWeightedNormals_bAddApplyDelegate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomComputeWeightedNormals_NativeFunction, "bAddApplyDelegate");
        SetCustomComputeWeightedNormals_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomComputeWeightedNormals_NativeFunction, "ReturnValue");
        RemoveSlotMaterialDependencyUid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveSlotMaterialDependencyUid");
        RemoveSlotMaterialDependencyUid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveSlotMaterialDependencyUid_NativeFunction);
        RemoveSlotMaterialDependencyUid_SlotName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveSlotMaterialDependencyUid_NativeFunction, "SlotName");
        RemoveSlotMaterialDependencyUid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveSlotMaterialDependencyUid_NativeFunction, "ReturnValue");
        RemoveLodDataUniqueId_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveLodDataUniqueId");
        RemoveLodDataUniqueId_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveLodDataUniqueId_NativeFunction);
        RemoveLodDataUniqueId_LodDataUniqueId_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveLodDataUniqueId_NativeFunction, "LodDataUniqueId");
        RemoveLodDataUniqueId_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveLodDataUniqueId_NativeFunction, "ReturnValue");
        GetSlotMaterialDependencyUid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSlotMaterialDependencyUid");
        GetSlotMaterialDependencyUid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSlotMaterialDependencyUid_NativeFunction);
        GetSlotMaterialDependencyUid_SlotName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSlotMaterialDependencyUid_NativeFunction, "SlotName");
        GetSlotMaterialDependencyUid_OutMaterialDependency_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSlotMaterialDependencyUid_NativeFunction, "OutMaterialDependency");
        GetSlotMaterialDependencyUid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSlotMaterialDependencyUid_NativeFunction, "ReturnValue");
        GetLodDataCount_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetLodDataCount");
        GetLodDataCount_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetLodDataCount_NativeFunction);
        GetLodDataCount_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLodDataCount_NativeFunction, "ReturnValue");
        GetCustomVertexColorReplace_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomVertexColorReplace");
        GetCustomVertexColorReplace_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomVertexColorReplace_NativeFunction);
        GetCustomVertexColorReplace_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomVertexColorReplace_NativeFunction, "AttributeValue");
        GetCustomVertexColorReplace_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomVertexColorReplace_NativeFunction, "ReturnValue");
        GetCustomVertexColorOverride_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomVertexColorOverride");
        GetCustomVertexColorOverride_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomVertexColorOverride_NativeFunction);
        GetCustomVertexColorOverride_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomVertexColorOverride_NativeFunction, "AttributeValue");
        GetCustomVertexColorOverride_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomVertexColorOverride_NativeFunction, "ReturnValue");
        GetCustomVertexColorIgnore_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomVertexColorIgnore");
        GetCustomVertexColorIgnore_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomVertexColorIgnore_NativeFunction);
        GetCustomVertexColorIgnore_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomVertexColorIgnore_NativeFunction, "AttributeValue");
        GetCustomVertexColorIgnore_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomVertexColorIgnore_NativeFunction, "ReturnValue");
        GetCustomUseMikkTSpace_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomUseMikkTSpace");
        GetCustomUseMikkTSpace_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomUseMikkTSpace_NativeFunction);
        GetCustomUseMikkTSpace_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomUseMikkTSpace_NativeFunction, "AttributeValue");
        GetCustomUseMikkTSpace_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomUseMikkTSpace_NativeFunction, "ReturnValue");
        GetCustomUseHighPrecisionTangentBasis_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomUseHighPrecisionTangentBasis");
        GetCustomUseHighPrecisionTangentBasis_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomUseHighPrecisionTangentBasis_NativeFunction);
        GetCustomUseHighPrecisionTangentBasis_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomUseHighPrecisionTangentBasis_NativeFunction, "AttributeValue");
        GetCustomUseHighPrecisionTangentBasis_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomUseHighPrecisionTangentBasis_NativeFunction, "ReturnValue");
        GetCustomUseFullPrecisionUVs_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomUseFullPrecisionUVs");
        GetCustomUseFullPrecisionUVs_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomUseFullPrecisionUVs_NativeFunction);
        GetCustomUseFullPrecisionUVs_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomUseFullPrecisionUVs_NativeFunction, "AttributeValue");
        GetCustomUseFullPrecisionUVs_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomUseFullPrecisionUVs_NativeFunction, "ReturnValue");
        GetCustomUseBackwardsCompatibleF16TruncUVs_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomUseBackwardsCompatibleF16TruncUVs");
        GetCustomUseBackwardsCompatibleF16TruncUVs_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomUseBackwardsCompatibleF16TruncUVs_NativeFunction);
        GetCustomUseBackwardsCompatibleF16TruncUVs_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomUseBackwardsCompatibleF16TruncUVs_NativeFunction, "AttributeValue");
        GetCustomUseBackwardsCompatibleF16TruncUVs_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomUseBackwardsCompatibleF16TruncUVs_NativeFunction, "ReturnValue");
        GetCustomRemoveDegenerates_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomRemoveDegenerates");
        GetCustomRemoveDegenerates_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomRemoveDegenerates_NativeFunction);
        GetCustomRemoveDegenerates_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomRemoveDegenerates_NativeFunction, "AttributeValue");
        GetCustomRemoveDegenerates_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomRemoveDegenerates_NativeFunction, "ReturnValue");
        GetCustomRecomputeTangents_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomRecomputeTangents");
        GetCustomRecomputeTangents_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomRecomputeTangents_NativeFunction);
        GetCustomRecomputeTangents_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomRecomputeTangents_NativeFunction, "AttributeValue");
        GetCustomRecomputeTangents_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomRecomputeTangents_NativeFunction, "ReturnValue");
        GetCustomRecomputeNormals_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomRecomputeNormals");
        GetCustomRecomputeNormals_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomRecomputeNormals_NativeFunction);
        GetCustomRecomputeNormals_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomRecomputeNormals_NativeFunction, "AttributeValue");
        GetCustomRecomputeNormals_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomRecomputeNormals_NativeFunction, "ReturnValue");
        GetCustomLODGroup_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomLODGroup");
        GetCustomLODGroup_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomLODGroup_NativeFunction);
        GetCustomLODGroup_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomLODGroup_NativeFunction, "AttributeValue");
        GetCustomLODGroup_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomLODGroup_NativeFunction, "ReturnValue");
        GetCustomComputeWeightedNormals_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomComputeWeightedNormals");
        GetCustomComputeWeightedNormals_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomComputeWeightedNormals_NativeFunction);
        GetCustomComputeWeightedNormals_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomComputeWeightedNormals_NativeFunction, "AttributeValue");
        GetCustomComputeWeightedNormals_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomComputeWeightedNormals_NativeFunction, "ReturnValue");
        AddLodDataUniqueId_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddLodDataUniqueId");
        AddLodDataUniqueId_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddLodDataUniqueId_NativeFunction);
        AddLodDataUniqueId_LodDataUniqueId_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddLodDataUniqueId_NativeFunction, "LodDataUniqueId");
        AddLodDataUniqueId_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddLodDataUniqueId_NativeFunction, "ReturnValue");
        
        
    }
    
    protected InterchangeMeshFactoryNode(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:SetSlotMaterialDependencyUid
    static readonly IntPtr SetSlotMaterialDependencyUid_NativeFunction;
    static readonly int SetSlotMaterialDependencyUid_ParamsSize;
    static readonly int SetSlotMaterialDependencyUid_SlotName_Offset;
    static readonly int SetSlotMaterialDependencyUid_MaterialDependencyUid_Offset;
    static readonly int SetSlotMaterialDependencyUid_ReturnValue_Offset;
    
    public bool SetSlotMaterialDependencyUid(string slotName, string materialDependencyUid)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSlotMaterialDependencyUid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr SlotName_NativePtr = IntPtr.Add(ParamsBuffer,SetSlotMaterialDependencyUid_SlotName_Offset);
            StringMarshaller.ToNative(SlotName_NativePtr,0,null,slotName);
            IntPtr MaterialDependencyUid_NativePtr = IntPtr.Add(ParamsBuffer,SetSlotMaterialDependencyUid_MaterialDependencyUid_Offset);
            StringMarshaller.ToNative(MaterialDependencyUid_NativePtr,0,null,materialDependencyUid);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSlotMaterialDependencyUid_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetSlotMaterialDependencyUid_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(SlotName_NativePtr, 0);
            StringMarshaller.DestructInstance(MaterialDependencyUid_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:SetCustomVertexColorReplace
    static readonly IntPtr SetCustomVertexColorReplace_NativeFunction;
    static readonly int SetCustomVertexColorReplace_ParamsSize;
    static readonly int SetCustomVertexColorReplace_AttributeValue_Offset;
    static readonly int SetCustomVertexColorReplace_ReturnValue_Offset;
    
    public bool SetCustomVertexColorReplace(bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomVertexColorReplace_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomVertexColorReplace_AttributeValue_Offset), 0, null, attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomVertexColorReplace_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomVertexColorReplace_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:SetCustomVertexColorOverride
    static readonly IntPtr SetCustomVertexColorOverride_NativeFunction;
    static readonly int SetCustomVertexColorOverride_ParamsSize;
    static readonly int SetCustomVertexColorOverride_AttributeValue_Offset;
    static readonly int SetCustomVertexColorOverride_ReturnValue_Offset;
    
    public bool SetCustomVertexColorOverride(UnrealSharp.CoreUObject.Color attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomVertexColorOverride_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.CoreUObject.Color>.ToNative(IntPtr.Add(ParamsBuffer, SetCustomVertexColorOverride_AttributeValue_Offset), 0, null, attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomVertexColorOverride_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomVertexColorOverride_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:SetCustomVertexColorIgnore
    static readonly IntPtr SetCustomVertexColorIgnore_NativeFunction;
    static readonly int SetCustomVertexColorIgnore_ParamsSize;
    static readonly int SetCustomVertexColorIgnore_AttributeValue_Offset;
    static readonly int SetCustomVertexColorIgnore_ReturnValue_Offset;
    
    public bool SetCustomVertexColorIgnore(bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomVertexColorIgnore_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomVertexColorIgnore_AttributeValue_Offset), 0, null, attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomVertexColorIgnore_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomVertexColorIgnore_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:SetCustomUseMikkTSpace
    static readonly IntPtr SetCustomUseMikkTSpace_NativeFunction;
    static readonly int SetCustomUseMikkTSpace_ParamsSize;
    static readonly int SetCustomUseMikkTSpace_AttributeValue_Offset;
    static readonly int SetCustomUseMikkTSpace_bAddApplyDelegate_Offset;
    static readonly int SetCustomUseMikkTSpace_ReturnValue_Offset;
    
    public bool SetCustomUseMikkTSpace(bool attributeValue, bool bAddApplyDelegate = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomUseMikkTSpace_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomUseMikkTSpace_AttributeValue_Offset), 0, null, attributeValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomUseMikkTSpace_bAddApplyDelegate_Offset), 0, null, bAddApplyDelegate);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomUseMikkTSpace_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomUseMikkTSpace_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:SetCustomUseHighPrecisionTangentBasis
    static readonly IntPtr SetCustomUseHighPrecisionTangentBasis_NativeFunction;
    static readonly int SetCustomUseHighPrecisionTangentBasis_ParamsSize;
    static readonly int SetCustomUseHighPrecisionTangentBasis_AttributeValue_Offset;
    static readonly int SetCustomUseHighPrecisionTangentBasis_bAddApplyDelegate_Offset;
    static readonly int SetCustomUseHighPrecisionTangentBasis_ReturnValue_Offset;
    
    public bool SetCustomUseHighPrecisionTangentBasis(bool attributeValue, bool bAddApplyDelegate = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomUseHighPrecisionTangentBasis_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomUseHighPrecisionTangentBasis_AttributeValue_Offset), 0, null, attributeValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomUseHighPrecisionTangentBasis_bAddApplyDelegate_Offset), 0, null, bAddApplyDelegate);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomUseHighPrecisionTangentBasis_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomUseHighPrecisionTangentBasis_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:SetCustomUseFullPrecisionUVs
    static readonly IntPtr SetCustomUseFullPrecisionUVs_NativeFunction;
    static readonly int SetCustomUseFullPrecisionUVs_ParamsSize;
    static readonly int SetCustomUseFullPrecisionUVs_AttributeValue_Offset;
    static readonly int SetCustomUseFullPrecisionUVs_bAddApplyDelegate_Offset;
    static readonly int SetCustomUseFullPrecisionUVs_ReturnValue_Offset;
    
    public bool SetCustomUseFullPrecisionUVs(bool attributeValue, bool bAddApplyDelegate = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomUseFullPrecisionUVs_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomUseFullPrecisionUVs_AttributeValue_Offset), 0, null, attributeValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomUseFullPrecisionUVs_bAddApplyDelegate_Offset), 0, null, bAddApplyDelegate);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomUseFullPrecisionUVs_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomUseFullPrecisionUVs_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:SetCustomUseBackwardsCompatibleF16TruncUVs
    static readonly IntPtr SetCustomUseBackwardsCompatibleF16TruncUVs_NativeFunction;
    static readonly int SetCustomUseBackwardsCompatibleF16TruncUVs_ParamsSize;
    static readonly int SetCustomUseBackwardsCompatibleF16TruncUVs_AttributeValue_Offset;
    static readonly int SetCustomUseBackwardsCompatibleF16TruncUVs_bAddApplyDelegate_Offset;
    static readonly int SetCustomUseBackwardsCompatibleF16TruncUVs_ReturnValue_Offset;
    
    public bool SetCustomUseBackwardsCompatibleF16TruncUVs(bool attributeValue, bool bAddApplyDelegate = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomUseBackwardsCompatibleF16TruncUVs_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomUseBackwardsCompatibleF16TruncUVs_AttributeValue_Offset), 0, null, attributeValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomUseBackwardsCompatibleF16TruncUVs_bAddApplyDelegate_Offset), 0, null, bAddApplyDelegate);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomUseBackwardsCompatibleF16TruncUVs_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomUseBackwardsCompatibleF16TruncUVs_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:SetCustomRemoveDegenerates
    static readonly IntPtr SetCustomRemoveDegenerates_NativeFunction;
    static readonly int SetCustomRemoveDegenerates_ParamsSize;
    static readonly int SetCustomRemoveDegenerates_AttributeValue_Offset;
    static readonly int SetCustomRemoveDegenerates_bAddApplyDelegate_Offset;
    static readonly int SetCustomRemoveDegenerates_ReturnValue_Offset;
    
    public bool SetCustomRemoveDegenerates(bool attributeValue, bool bAddApplyDelegate = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomRemoveDegenerates_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomRemoveDegenerates_AttributeValue_Offset), 0, null, attributeValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomRemoveDegenerates_bAddApplyDelegate_Offset), 0, null, bAddApplyDelegate);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomRemoveDegenerates_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomRemoveDegenerates_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:SetCustomRecomputeTangents
    static readonly IntPtr SetCustomRecomputeTangents_NativeFunction;
    static readonly int SetCustomRecomputeTangents_ParamsSize;
    static readonly int SetCustomRecomputeTangents_AttributeValue_Offset;
    static readonly int SetCustomRecomputeTangents_bAddApplyDelegate_Offset;
    static readonly int SetCustomRecomputeTangents_ReturnValue_Offset;
    
    public bool SetCustomRecomputeTangents(bool attributeValue, bool bAddApplyDelegate = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomRecomputeTangents_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomRecomputeTangents_AttributeValue_Offset), 0, null, attributeValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomRecomputeTangents_bAddApplyDelegate_Offset), 0, null, bAddApplyDelegate);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomRecomputeTangents_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomRecomputeTangents_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:SetCustomRecomputeNormals
    static readonly IntPtr SetCustomRecomputeNormals_NativeFunction;
    static readonly int SetCustomRecomputeNormals_ParamsSize;
    static readonly int SetCustomRecomputeNormals_AttributeValue_Offset;
    static readonly int SetCustomRecomputeNormals_bAddApplyDelegate_Offset;
    static readonly int SetCustomRecomputeNormals_ReturnValue_Offset;
    
    public bool SetCustomRecomputeNormals(bool attributeValue, bool bAddApplyDelegate = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomRecomputeNormals_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomRecomputeNormals_AttributeValue_Offset), 0, null, attributeValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomRecomputeNormals_bAddApplyDelegate_Offset), 0, null, bAddApplyDelegate);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomRecomputeNormals_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomRecomputeNormals_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:SetCustomLODGroup
    static readonly IntPtr SetCustomLODGroup_NativeFunction;
    static readonly int SetCustomLODGroup_ParamsSize;
    static readonly int SetCustomLODGroup_AttributeValue_Offset;
    static readonly int SetCustomLODGroup_bAddApplyDelegate_Offset;
    static readonly int SetCustomLODGroup_ReturnValue_Offset;
    
    public bool SetCustomLODGroup(Name attributeValue, bool bAddApplyDelegate = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomLODGroup_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetCustomLODGroup_AttributeValue_Offset), 0, null, attributeValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomLODGroup_bAddApplyDelegate_Offset), 0, null, bAddApplyDelegate);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomLODGroup_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomLODGroup_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:SetCustomComputeWeightedNormals
    static readonly IntPtr SetCustomComputeWeightedNormals_NativeFunction;
    static readonly int SetCustomComputeWeightedNormals_ParamsSize;
    static readonly int SetCustomComputeWeightedNormals_AttributeValue_Offset;
    static readonly int SetCustomComputeWeightedNormals_bAddApplyDelegate_Offset;
    static readonly int SetCustomComputeWeightedNormals_ReturnValue_Offset;
    
    public bool SetCustomComputeWeightedNormals(bool attributeValue, bool bAddApplyDelegate = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomComputeWeightedNormals_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomComputeWeightedNormals_AttributeValue_Offset), 0, null, attributeValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomComputeWeightedNormals_bAddApplyDelegate_Offset), 0, null, bAddApplyDelegate);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomComputeWeightedNormals_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomComputeWeightedNormals_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:RemoveSlotMaterialDependencyUid
    static readonly IntPtr RemoveSlotMaterialDependencyUid_NativeFunction;
    static readonly int RemoveSlotMaterialDependencyUid_ParamsSize;
    static readonly int RemoveSlotMaterialDependencyUid_SlotName_Offset;
    static readonly int RemoveSlotMaterialDependencyUid_ReturnValue_Offset;
    
    public bool RemoveSlotMaterialDependencyUid(string slotName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveSlotMaterialDependencyUid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr SlotName_NativePtr = IntPtr.Add(ParamsBuffer,RemoveSlotMaterialDependencyUid_SlotName_Offset);
            StringMarshaller.ToNative(SlotName_NativePtr,0,null,slotName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveSlotMaterialDependencyUid_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveSlotMaterialDependencyUid_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(SlotName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:RemoveLodDataUniqueId
    static readonly IntPtr RemoveLodDataUniqueId_NativeFunction;
    static readonly int RemoveLodDataUniqueId_ParamsSize;
    static readonly int RemoveLodDataUniqueId_LodDataUniqueId_Offset;
    static readonly int RemoveLodDataUniqueId_ReturnValue_Offset;
    
    public bool RemoveLodDataUniqueId(string lodDataUniqueId)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveLodDataUniqueId_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr LodDataUniqueId_NativePtr = IntPtr.Add(ParamsBuffer,RemoveLodDataUniqueId_LodDataUniqueId_Offset);
            StringMarshaller.ToNative(LodDataUniqueId_NativePtr,0,null,lodDataUniqueId);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveLodDataUniqueId_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveLodDataUniqueId_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(LodDataUniqueId_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:GetSlotMaterialDependencyUid
    static readonly IntPtr GetSlotMaterialDependencyUid_NativeFunction;
    static readonly int GetSlotMaterialDependencyUid_ParamsSize;
    static readonly int GetSlotMaterialDependencyUid_SlotName_Offset;
    static readonly int GetSlotMaterialDependencyUid_OutMaterialDependency_Offset;
    static readonly int GetSlotMaterialDependencyUid_ReturnValue_Offset;
    
    public bool GetSlotMaterialDependencyUid(string slotName, out string outMaterialDependency)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSlotMaterialDependencyUid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr SlotName_NativePtr = IntPtr.Add(ParamsBuffer,GetSlotMaterialDependencyUid_SlotName_Offset);
            StringMarshaller.ToNative(SlotName_NativePtr,0,null,slotName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSlotMaterialDependencyUid_NativeFunction, ParamsBuffer);
            
            IntPtr OutMaterialDependency_NativePtr = IntPtr.Add(ParamsBuffer,GetSlotMaterialDependencyUid_OutMaterialDependency_Offset);
            outMaterialDependency = StringMarshaller.FromNative(OutMaterialDependency_NativePtr,0,null);
            StringMarshaller.DestructInstance(OutMaterialDependency_NativePtr, 0);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetSlotMaterialDependencyUid_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(SlotName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:GetLodDataCount
    static readonly IntPtr GetLodDataCount_NativeFunction;
    static readonly int GetLodDataCount_ParamsSize;
    static readonly int GetLodDataCount_ReturnValue_Offset;
    
    public int GetLodDataCount()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetLodDataCount_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetLodDataCount_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetLodDataCount_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:GetCustomVertexColorReplace
    static readonly IntPtr GetCustomVertexColorReplace_NativeFunction;
    static readonly int GetCustomVertexColorReplace_ParamsSize;
    static readonly int GetCustomVertexColorReplace_AttributeValue_Offset;
    static readonly int GetCustomVertexColorReplace_ReturnValue_Offset;
    
    public bool GetCustomVertexColorReplace(out bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomVertexColorReplace_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomVertexColorReplace_NativeFunction, ParamsBuffer);
            
            attributeValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomVertexColorReplace_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomVertexColorReplace_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:GetCustomVertexColorOverride
    static readonly IntPtr GetCustomVertexColorOverride_NativeFunction;
    static readonly int GetCustomVertexColorOverride_ParamsSize;
    static readonly int GetCustomVertexColorOverride_AttributeValue_Offset;
    static readonly int GetCustomVertexColorOverride_ReturnValue_Offset;
    
    public bool GetCustomVertexColorOverride(out UnrealSharp.CoreUObject.Color attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomVertexColorOverride_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomVertexColorOverride_NativeFunction, ParamsBuffer);
            
            attributeValue = BlittableMarshaller<UnrealSharp.CoreUObject.Color>.FromNative(IntPtr.Add(ParamsBuffer, GetCustomVertexColorOverride_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomVertexColorOverride_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:GetCustomVertexColorIgnore
    static readonly IntPtr GetCustomVertexColorIgnore_NativeFunction;
    static readonly int GetCustomVertexColorIgnore_ParamsSize;
    static readonly int GetCustomVertexColorIgnore_AttributeValue_Offset;
    static readonly int GetCustomVertexColorIgnore_ReturnValue_Offset;
    
    public bool GetCustomVertexColorIgnore(out bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomVertexColorIgnore_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomVertexColorIgnore_NativeFunction, ParamsBuffer);
            
            attributeValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomVertexColorIgnore_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomVertexColorIgnore_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:GetCustomUseMikkTSpace
    static readonly IntPtr GetCustomUseMikkTSpace_NativeFunction;
    static readonly int GetCustomUseMikkTSpace_ParamsSize;
    static readonly int GetCustomUseMikkTSpace_AttributeValue_Offset;
    static readonly int GetCustomUseMikkTSpace_ReturnValue_Offset;
    
    public bool GetCustomUseMikkTSpace(out bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomUseMikkTSpace_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomUseMikkTSpace_NativeFunction, ParamsBuffer);
            
            attributeValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomUseMikkTSpace_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomUseMikkTSpace_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:GetCustomUseHighPrecisionTangentBasis
    static readonly IntPtr GetCustomUseHighPrecisionTangentBasis_NativeFunction;
    static readonly int GetCustomUseHighPrecisionTangentBasis_ParamsSize;
    static readonly int GetCustomUseHighPrecisionTangentBasis_AttributeValue_Offset;
    static readonly int GetCustomUseHighPrecisionTangentBasis_ReturnValue_Offset;
    
    public bool GetCustomUseHighPrecisionTangentBasis(out bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomUseHighPrecisionTangentBasis_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomUseHighPrecisionTangentBasis_NativeFunction, ParamsBuffer);
            
            attributeValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomUseHighPrecisionTangentBasis_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomUseHighPrecisionTangentBasis_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:GetCustomUseFullPrecisionUVs
    static readonly IntPtr GetCustomUseFullPrecisionUVs_NativeFunction;
    static readonly int GetCustomUseFullPrecisionUVs_ParamsSize;
    static readonly int GetCustomUseFullPrecisionUVs_AttributeValue_Offset;
    static readonly int GetCustomUseFullPrecisionUVs_ReturnValue_Offset;
    
    public bool GetCustomUseFullPrecisionUVs(out bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomUseFullPrecisionUVs_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomUseFullPrecisionUVs_NativeFunction, ParamsBuffer);
            
            attributeValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomUseFullPrecisionUVs_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomUseFullPrecisionUVs_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:GetCustomUseBackwardsCompatibleF16TruncUVs
    static readonly IntPtr GetCustomUseBackwardsCompatibleF16TruncUVs_NativeFunction;
    static readonly int GetCustomUseBackwardsCompatibleF16TruncUVs_ParamsSize;
    static readonly int GetCustomUseBackwardsCompatibleF16TruncUVs_AttributeValue_Offset;
    static readonly int GetCustomUseBackwardsCompatibleF16TruncUVs_ReturnValue_Offset;
    
    public bool GetCustomUseBackwardsCompatibleF16TruncUVs(out bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomUseBackwardsCompatibleF16TruncUVs_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomUseBackwardsCompatibleF16TruncUVs_NativeFunction, ParamsBuffer);
            
            attributeValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomUseBackwardsCompatibleF16TruncUVs_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomUseBackwardsCompatibleF16TruncUVs_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:GetCustomRemoveDegenerates
    static readonly IntPtr GetCustomRemoveDegenerates_NativeFunction;
    static readonly int GetCustomRemoveDegenerates_ParamsSize;
    static readonly int GetCustomRemoveDegenerates_AttributeValue_Offset;
    static readonly int GetCustomRemoveDegenerates_ReturnValue_Offset;
    
    public bool GetCustomRemoveDegenerates(out bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomRemoveDegenerates_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomRemoveDegenerates_NativeFunction, ParamsBuffer);
            
            attributeValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomRemoveDegenerates_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomRemoveDegenerates_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:GetCustomRecomputeTangents
    static readonly IntPtr GetCustomRecomputeTangents_NativeFunction;
    static readonly int GetCustomRecomputeTangents_ParamsSize;
    static readonly int GetCustomRecomputeTangents_AttributeValue_Offset;
    static readonly int GetCustomRecomputeTangents_ReturnValue_Offset;
    
    public bool GetCustomRecomputeTangents(out bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomRecomputeTangents_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomRecomputeTangents_NativeFunction, ParamsBuffer);
            
            attributeValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomRecomputeTangents_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomRecomputeTangents_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:GetCustomRecomputeNormals
    static readonly IntPtr GetCustomRecomputeNormals_NativeFunction;
    static readonly int GetCustomRecomputeNormals_ParamsSize;
    static readonly int GetCustomRecomputeNormals_AttributeValue_Offset;
    static readonly int GetCustomRecomputeNormals_ReturnValue_Offset;
    
    public bool GetCustomRecomputeNormals(out bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomRecomputeNormals_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomRecomputeNormals_NativeFunction, ParamsBuffer);
            
            attributeValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomRecomputeNormals_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomRecomputeNormals_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:GetCustomLODGroup
    static readonly IntPtr GetCustomLODGroup_NativeFunction;
    static readonly int GetCustomLODGroup_ParamsSize;
    static readonly int GetCustomLODGroup_AttributeValue_Offset;
    static readonly int GetCustomLODGroup_ReturnValue_Offset;
    
    public bool GetCustomLODGroup(out Name attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomLODGroup_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomLODGroup_NativeFunction, ParamsBuffer);
            
            attributeValue = BlittableMarshaller<Name>.FromNative(IntPtr.Add(ParamsBuffer, GetCustomLODGroup_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomLODGroup_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:GetCustomComputeWeightedNormals
    static readonly IntPtr GetCustomComputeWeightedNormals_NativeFunction;
    static readonly int GetCustomComputeWeightedNormals_ParamsSize;
    static readonly int GetCustomComputeWeightedNormals_AttributeValue_Offset;
    static readonly int GetCustomComputeWeightedNormals_ReturnValue_Offset;
    
    public bool GetCustomComputeWeightedNormals(out bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomComputeWeightedNormals_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomComputeWeightedNormals_NativeFunction, ParamsBuffer);
            
            attributeValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomComputeWeightedNormals_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomComputeWeightedNormals_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeMeshFactoryNode:AddLodDataUniqueId
    static readonly IntPtr AddLodDataUniqueId_NativeFunction;
    static readonly int AddLodDataUniqueId_ParamsSize;
    static readonly int AddLodDataUniqueId_LodDataUniqueId_Offset;
    static readonly int AddLodDataUniqueId_ReturnValue_Offset;
    
    public bool AddLodDataUniqueId(string lodDataUniqueId)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddLodDataUniqueId_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr LodDataUniqueId_NativePtr = IntPtr.Add(ParamsBuffer,AddLodDataUniqueId_LodDataUniqueId_Offset);
            StringMarshaller.ToNative(LodDataUniqueId_NativePtr,0,null,lodDataUniqueId);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddLodDataUniqueId_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, AddLodDataUniqueId_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(LodDataUniqueId_NativePtr, 0);
            return returnValue;
        }
    }
    
    
}
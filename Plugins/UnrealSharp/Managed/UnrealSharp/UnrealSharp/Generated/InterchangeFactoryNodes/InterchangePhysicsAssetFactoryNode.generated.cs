// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.InterchangeFactoryNodes;

[UClass]
public partial class InterchangePhysicsAssetFactoryNode : UnrealSharp.InterchangeCore.InterchangeFactoryBaseNode
{
    
    static InterchangePhysicsAssetFactoryNode()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("InterchangePhysicsAssetFactoryNode");
        
        
        SetCustomSkeletalMeshUid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomSkeletalMeshUid");
        SetCustomSkeletalMeshUid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomSkeletalMeshUid_NativeFunction);
        SetCustomSkeletalMeshUid_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomSkeletalMeshUid_NativeFunction, "AttributeValue");
        SetCustomSkeletalMeshUid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomSkeletalMeshUid_NativeFunction, "ReturnValue");
        InitializePhysicsAssetNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "InitializePhysicsAssetNode");
        InitializePhysicsAssetNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(InitializePhysicsAssetNode_NativeFunction);
        InitializePhysicsAssetNode_UniqueID_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InitializePhysicsAssetNode_NativeFunction, "UniqueID");
        InitializePhysicsAssetNode_DisplayLabel_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InitializePhysicsAssetNode_NativeFunction, "DisplayLabel");
        InitializePhysicsAssetNode_InAssetClass_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InitializePhysicsAssetNode_NativeFunction, "InAssetClass");
        GetObjectClass_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetObjectClass");
        GetObjectClass_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetObjectClass_NativeFunction);
        GetObjectClass_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetObjectClass_NativeFunction, "ReturnValue");
        GetCustomSkeletalMeshUid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomSkeletalMeshUid");
        GetCustomSkeletalMeshUid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomSkeletalMeshUid_NativeFunction);
        GetCustomSkeletalMeshUid_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomSkeletalMeshUid_NativeFunction, "AttributeValue");
        GetCustomSkeletalMeshUid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomSkeletalMeshUid_NativeFunction, "ReturnValue");
        
        
    }
    
    protected InterchangePhysicsAssetFactoryNode(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/InterchangeFactoryNodes.InterchangePhysicsAssetFactoryNode:SetCustomSkeletalMeshUid
    static readonly IntPtr SetCustomSkeletalMeshUid_NativeFunction;
    static readonly int SetCustomSkeletalMeshUid_ParamsSize;
    static readonly int SetCustomSkeletalMeshUid_AttributeValue_Offset;
    static readonly int SetCustomSkeletalMeshUid_ReturnValue_Offset;
    
    public bool SetCustomSkeletalMeshUid(string attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomSkeletalMeshUid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr AttributeValue_NativePtr = IntPtr.Add(ParamsBuffer,SetCustomSkeletalMeshUid_AttributeValue_Offset);
            StringMarshaller.ToNative(AttributeValue_NativePtr,0,null,attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomSkeletalMeshUid_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomSkeletalMeshUid_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(AttributeValue_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangePhysicsAssetFactoryNode:InitializePhysicsAssetNode
    static readonly IntPtr InitializePhysicsAssetNode_NativeFunction;
    static readonly int InitializePhysicsAssetNode_ParamsSize;
    static readonly int InitializePhysicsAssetNode_UniqueID_Offset;
    static readonly int InitializePhysicsAssetNode_DisplayLabel_Offset;
    static readonly int InitializePhysicsAssetNode_InAssetClass_Offset;
    
    public void InitializePhysicsAssetNode(string uniqueID, string displayLabel, string inAssetClass)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[InitializePhysicsAssetNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr UniqueID_NativePtr = IntPtr.Add(ParamsBuffer,InitializePhysicsAssetNode_UniqueID_Offset);
            StringMarshaller.ToNative(UniqueID_NativePtr,0,null,uniqueID);
            IntPtr DisplayLabel_NativePtr = IntPtr.Add(ParamsBuffer,InitializePhysicsAssetNode_DisplayLabel_Offset);
            StringMarshaller.ToNative(DisplayLabel_NativePtr,0,null,displayLabel);
            IntPtr InAssetClass_NativePtr = IntPtr.Add(ParamsBuffer,InitializePhysicsAssetNode_InAssetClass_Offset);
            StringMarshaller.ToNative(InAssetClass_NativePtr,0,null,inAssetClass);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, InitializePhysicsAssetNode_NativeFunction, ParamsBuffer);
            
            StringMarshaller.DestructInstance(UniqueID_NativePtr, 0);
            StringMarshaller.DestructInstance(DisplayLabel_NativePtr, 0);
            StringMarshaller.DestructInstance(InAssetClass_NativePtr, 0);
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangePhysicsAssetFactoryNode:GetObjectClass
    static readonly IntPtr GetObjectClass_NativeFunction;
    static readonly int GetObjectClass_ParamsSize;
    static readonly int GetObjectClass_ReturnValue_Offset;
    
    public SubclassOf<UnrealSharp.CoreUObject.Object> GetObjectClass()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetObjectClass_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetObjectClass_NativeFunction, ParamsBuffer);
            
            SubclassOf<UnrealSharp.CoreUObject.Object> returnValue;
            returnValue = SubclassOfMarshaller<UnrealSharp.CoreUObject.Object>.FromNative(IntPtr.Add(ParamsBuffer, GetObjectClass_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangePhysicsAssetFactoryNode:GetCustomSkeletalMeshUid
    static readonly IntPtr GetCustomSkeletalMeshUid_NativeFunction;
    static readonly int GetCustomSkeletalMeshUid_ParamsSize;
    static readonly int GetCustomSkeletalMeshUid_AttributeValue_Offset;
    static readonly int GetCustomSkeletalMeshUid_ReturnValue_Offset;
    
    public bool GetCustomSkeletalMeshUid(out string attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomSkeletalMeshUid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomSkeletalMeshUid_NativeFunction, ParamsBuffer);
            
            IntPtr AttributeValue_NativePtr = IntPtr.Add(ParamsBuffer,GetCustomSkeletalMeshUid_AttributeValue_Offset);
            attributeValue = StringMarshaller.FromNative(AttributeValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(AttributeValue_NativePtr, 0);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomSkeletalMeshUid_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
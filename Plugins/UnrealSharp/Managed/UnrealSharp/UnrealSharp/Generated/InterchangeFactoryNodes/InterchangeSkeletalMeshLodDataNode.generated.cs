// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.InterchangeFactoryNodes;

[UClass]
public partial class InterchangeSkeletalMeshLodDataNode : UnrealSharp.InterchangeCore.InterchangeFactoryBaseNode
{
    
    static InterchangeSkeletalMeshLodDataNode()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("InterchangeSkeletalMeshLodDataNode");
        
        
        SetCustomSkeletonUid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomSkeletonUid");
        SetCustomSkeletonUid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomSkeletonUid_NativeFunction);
        SetCustomSkeletonUid_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomSkeletonUid_NativeFunction, "AttributeValue");
        SetCustomSkeletonUid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomSkeletonUid_NativeFunction, "ReturnValue");
        RemoveMeshUid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveMeshUid");
        RemoveMeshUid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveMeshUid_NativeFunction);
        RemoveMeshUid_MeshName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveMeshUid_NativeFunction, "MeshName");
        RemoveMeshUid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveMeshUid_NativeFunction, "ReturnValue");
        RemoveAllMeshes_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveAllMeshes");
        RemoveAllMeshes_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveAllMeshes_NativeFunction);
        RemoveAllMeshes_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveAllMeshes_NativeFunction, "ReturnValue");
        GetMeshUidsCount_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetMeshUidsCount");
        GetMeshUidsCount_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetMeshUidsCount_NativeFunction);
        GetMeshUidsCount_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMeshUidsCount_NativeFunction, "ReturnValue");
        GetCustomSkeletonUid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomSkeletonUid");
        GetCustomSkeletonUid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomSkeletonUid_NativeFunction);
        GetCustomSkeletonUid_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomSkeletonUid_NativeFunction, "AttributeValue");
        GetCustomSkeletonUid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomSkeletonUid_NativeFunction, "ReturnValue");
        AddMeshUid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddMeshUid");
        AddMeshUid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddMeshUid_NativeFunction);
        AddMeshUid_MeshName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddMeshUid_NativeFunction, "MeshName");
        AddMeshUid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddMeshUid_NativeFunction, "ReturnValue");
        
        
    }
    
    protected InterchangeSkeletalMeshLodDataNode(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/InterchangeFactoryNodes.InterchangeSkeletalMeshLodDataNode:SetCustomSkeletonUid
    static readonly IntPtr SetCustomSkeletonUid_NativeFunction;
    static readonly int SetCustomSkeletonUid_ParamsSize;
    static readonly int SetCustomSkeletonUid_AttributeValue_Offset;
    static readonly int SetCustomSkeletonUid_ReturnValue_Offset;
    
    public bool SetCustomSkeletonUid(string attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomSkeletonUid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr AttributeValue_NativePtr = IntPtr.Add(ParamsBuffer,SetCustomSkeletonUid_AttributeValue_Offset);
            StringMarshaller.ToNative(AttributeValue_NativePtr,0,null,attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomSkeletonUid_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomSkeletonUid_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(AttributeValue_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeSkeletalMeshLodDataNode:RemoveMeshUid
    static readonly IntPtr RemoveMeshUid_NativeFunction;
    static readonly int RemoveMeshUid_ParamsSize;
    static readonly int RemoveMeshUid_MeshName_Offset;
    static readonly int RemoveMeshUid_ReturnValue_Offset;
    
    public bool RemoveMeshUid(string meshName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveMeshUid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr MeshName_NativePtr = IntPtr.Add(ParamsBuffer,RemoveMeshUid_MeshName_Offset);
            StringMarshaller.ToNative(MeshName_NativePtr,0,null,meshName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveMeshUid_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveMeshUid_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(MeshName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeSkeletalMeshLodDataNode:RemoveAllMeshes
    static readonly IntPtr RemoveAllMeshes_NativeFunction;
    static readonly int RemoveAllMeshes_ParamsSize;
    static readonly int RemoveAllMeshes_ReturnValue_Offset;
    
    public bool RemoveAllMeshes()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveAllMeshes_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveAllMeshes_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveAllMeshes_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeSkeletalMeshLodDataNode:GetMeshUidsCount
    static readonly IntPtr GetMeshUidsCount_NativeFunction;
    static readonly int GetMeshUidsCount_ParamsSize;
    static readonly int GetMeshUidsCount_ReturnValue_Offset;
    
    public int GetMeshUidsCount()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetMeshUidsCount_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetMeshUidsCount_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetMeshUidsCount_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeSkeletalMeshLodDataNode:GetCustomSkeletonUid
    static readonly IntPtr GetCustomSkeletonUid_NativeFunction;
    static readonly int GetCustomSkeletonUid_ParamsSize;
    static readonly int GetCustomSkeletonUid_AttributeValue_Offset;
    static readonly int GetCustomSkeletonUid_ReturnValue_Offset;
    
    public bool GetCustomSkeletonUid(out string attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomSkeletonUid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomSkeletonUid_NativeFunction, ParamsBuffer);
            
            IntPtr AttributeValue_NativePtr = IntPtr.Add(ParamsBuffer,GetCustomSkeletonUid_AttributeValue_Offset);
            attributeValue = StringMarshaller.FromNative(AttributeValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(AttributeValue_NativePtr, 0);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomSkeletonUid_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeSkeletalMeshLodDataNode:AddMeshUid
    static readonly IntPtr AddMeshUid_NativeFunction;
    static readonly int AddMeshUid_ParamsSize;
    static readonly int AddMeshUid_MeshName_Offset;
    static readonly int AddMeshUid_ReturnValue_Offset;
    
    public bool AddMeshUid(string meshName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddMeshUid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr MeshName_NativePtr = IntPtr.Add(ParamsBuffer,AddMeshUid_MeshName_Offset);
            StringMarshaller.ToNative(MeshName_NativePtr,0,null,meshName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddMeshUid_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, AddMeshUid_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(MeshName_NativePtr, 0);
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.InterchangeFactoryNodes;

[UClass]
public partial class InterchangeStandardCameraFactoryNode : UnrealSharp.InterchangeFactoryNodes.InterchangeActorFactoryNode
{
    
    static InterchangeStandardCameraFactoryNode()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("InterchangeStandardCameraFactoryNode");
        
        
        SetCustomWidth_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomWidth");
        SetCustomWidth_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomWidth_NativeFunction);
        SetCustomWidth_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomWidth_NativeFunction, "AttributeValue");
        SetCustomWidth_bAddApplyDelegate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomWidth_NativeFunction, "bAddApplyDelegate");
        SetCustomWidth_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomWidth_NativeFunction, "ReturnValue");
        SetCustomProjectionMode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomProjectionMode");
        SetCustomProjectionMode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomProjectionMode_NativeFunction);
        SetCustomProjectionMode_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomProjectionMode_NativeFunction, "AttributeValue");
        SetCustomProjectionMode_bAddApplyDelegate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomProjectionMode_NativeFunction, "bAddApplyDelegate");
        SetCustomProjectionMode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomProjectionMode_NativeFunction, "ReturnValue");
        SetCustomNearClipPlane_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomNearClipPlane");
        SetCustomNearClipPlane_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomNearClipPlane_NativeFunction);
        SetCustomNearClipPlane_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomNearClipPlane_NativeFunction, "AttributeValue");
        SetCustomNearClipPlane_bAddApplyDelegate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomNearClipPlane_NativeFunction, "bAddApplyDelegate");
        SetCustomNearClipPlane_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomNearClipPlane_NativeFunction, "ReturnValue");
        SetCustomFieldOfView_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomFieldOfView");
        SetCustomFieldOfView_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomFieldOfView_NativeFunction);
        SetCustomFieldOfView_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomFieldOfView_NativeFunction, "AttributeValue");
        SetCustomFieldOfView_bAddApplyDelegate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomFieldOfView_NativeFunction, "bAddApplyDelegate");
        SetCustomFieldOfView_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomFieldOfView_NativeFunction, "ReturnValue");
        SetCustomFarClipPlane_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomFarClipPlane");
        SetCustomFarClipPlane_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomFarClipPlane_NativeFunction);
        SetCustomFarClipPlane_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomFarClipPlane_NativeFunction, "AttributeValue");
        SetCustomFarClipPlane_bAddApplyDelegate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomFarClipPlane_NativeFunction, "bAddApplyDelegate");
        SetCustomFarClipPlane_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomFarClipPlane_NativeFunction, "ReturnValue");
        SetCustomAspectRatio_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomAspectRatio");
        SetCustomAspectRatio_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomAspectRatio_NativeFunction);
        SetCustomAspectRatio_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomAspectRatio_NativeFunction, "AttributeValue");
        SetCustomAspectRatio_bAddApplyDelegate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomAspectRatio_NativeFunction, "bAddApplyDelegate");
        SetCustomAspectRatio_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomAspectRatio_NativeFunction, "ReturnValue");
        GetCustomWidth_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomWidth");
        GetCustomWidth_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomWidth_NativeFunction);
        GetCustomWidth_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomWidth_NativeFunction, "AttributeValue");
        GetCustomWidth_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomWidth_NativeFunction, "ReturnValue");
        GetCustomProjectionMode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomProjectionMode");
        GetCustomProjectionMode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomProjectionMode_NativeFunction);
        GetCustomProjectionMode_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomProjectionMode_NativeFunction, "AttributeValue");
        GetCustomProjectionMode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomProjectionMode_NativeFunction, "ReturnValue");
        GetCustomNearClipPlane_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomNearClipPlane");
        GetCustomNearClipPlane_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomNearClipPlane_NativeFunction);
        GetCustomNearClipPlane_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomNearClipPlane_NativeFunction, "AttributeValue");
        GetCustomNearClipPlane_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomNearClipPlane_NativeFunction, "ReturnValue");
        GetCustomFieldOfView_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomFieldOfView");
        GetCustomFieldOfView_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomFieldOfView_NativeFunction);
        GetCustomFieldOfView_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomFieldOfView_NativeFunction, "AttributeValue");
        GetCustomFieldOfView_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomFieldOfView_NativeFunction, "ReturnValue");
        GetCustomFarClipPlane_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomFarClipPlane");
        GetCustomFarClipPlane_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomFarClipPlane_NativeFunction);
        GetCustomFarClipPlane_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomFarClipPlane_NativeFunction, "AttributeValue");
        GetCustomFarClipPlane_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomFarClipPlane_NativeFunction, "ReturnValue");
        GetCustomAspectRatio_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomAspectRatio");
        GetCustomAspectRatio_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomAspectRatio_NativeFunction);
        GetCustomAspectRatio_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomAspectRatio_NativeFunction, "AttributeValue");
        GetCustomAspectRatio_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomAspectRatio_NativeFunction, "ReturnValue");
        
        
    }
    
    protected InterchangeStandardCameraFactoryNode(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/InterchangeFactoryNodes.InterchangeStandardCameraFactoryNode:SetCustomWidth
    static readonly IntPtr SetCustomWidth_NativeFunction;
    static readonly int SetCustomWidth_ParamsSize;
    static readonly int SetCustomWidth_AttributeValue_Offset;
    static readonly int SetCustomWidth_bAddApplyDelegate_Offset;
    static readonly int SetCustomWidth_ReturnValue_Offset;
    
    public bool SetCustomWidth(float attributeValue, bool bAddApplyDelegate = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomWidth_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetCustomWidth_AttributeValue_Offset), 0, null, attributeValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomWidth_bAddApplyDelegate_Offset), 0, null, bAddApplyDelegate);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomWidth_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomWidth_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeStandardCameraFactoryNode:SetCustomProjectionMode
    static readonly IntPtr SetCustomProjectionMode_NativeFunction;
    static readonly int SetCustomProjectionMode_ParamsSize;
    static readonly int SetCustomProjectionMode_AttributeValue_Offset;
    static readonly int SetCustomProjectionMode_bAddApplyDelegate_Offset;
    static readonly int SetCustomProjectionMode_ReturnValue_Offset;
    
    public bool SetCustomProjectionMode(UnrealSharp.Engine.ECameraProjectionMode attributeValue, bool bAddApplyDelegate = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomProjectionMode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.Engine.ECameraProjectionMode>.ToNative(IntPtr.Add(ParamsBuffer, SetCustomProjectionMode_AttributeValue_Offset), 0, null, attributeValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomProjectionMode_bAddApplyDelegate_Offset), 0, null, bAddApplyDelegate);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomProjectionMode_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomProjectionMode_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeStandardCameraFactoryNode:SetCustomNearClipPlane
    static readonly IntPtr SetCustomNearClipPlane_NativeFunction;
    static readonly int SetCustomNearClipPlane_ParamsSize;
    static readonly int SetCustomNearClipPlane_AttributeValue_Offset;
    static readonly int SetCustomNearClipPlane_bAddApplyDelegate_Offset;
    static readonly int SetCustomNearClipPlane_ReturnValue_Offset;
    
    public bool SetCustomNearClipPlane(float attributeValue, bool bAddApplyDelegate = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomNearClipPlane_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetCustomNearClipPlane_AttributeValue_Offset), 0, null, attributeValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomNearClipPlane_bAddApplyDelegate_Offset), 0, null, bAddApplyDelegate);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomNearClipPlane_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomNearClipPlane_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeStandardCameraFactoryNode:SetCustomFieldOfView
    static readonly IntPtr SetCustomFieldOfView_NativeFunction;
    static readonly int SetCustomFieldOfView_ParamsSize;
    static readonly int SetCustomFieldOfView_AttributeValue_Offset;
    static readonly int SetCustomFieldOfView_bAddApplyDelegate_Offset;
    static readonly int SetCustomFieldOfView_ReturnValue_Offset;
    
    public bool SetCustomFieldOfView(float attributeValue, bool bAddApplyDelegate = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomFieldOfView_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetCustomFieldOfView_AttributeValue_Offset), 0, null, attributeValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomFieldOfView_bAddApplyDelegate_Offset), 0, null, bAddApplyDelegate);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomFieldOfView_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomFieldOfView_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeStandardCameraFactoryNode:SetCustomFarClipPlane
    static readonly IntPtr SetCustomFarClipPlane_NativeFunction;
    static readonly int SetCustomFarClipPlane_ParamsSize;
    static readonly int SetCustomFarClipPlane_AttributeValue_Offset;
    static readonly int SetCustomFarClipPlane_bAddApplyDelegate_Offset;
    static readonly int SetCustomFarClipPlane_ReturnValue_Offset;
    
    public bool SetCustomFarClipPlane(float attributeValue, bool bAddApplyDelegate = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomFarClipPlane_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetCustomFarClipPlane_AttributeValue_Offset), 0, null, attributeValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomFarClipPlane_bAddApplyDelegate_Offset), 0, null, bAddApplyDelegate);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomFarClipPlane_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomFarClipPlane_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeStandardCameraFactoryNode:SetCustomAspectRatio
    static readonly IntPtr SetCustomAspectRatio_NativeFunction;
    static readonly int SetCustomAspectRatio_ParamsSize;
    static readonly int SetCustomAspectRatio_AttributeValue_Offset;
    static readonly int SetCustomAspectRatio_bAddApplyDelegate_Offset;
    static readonly int SetCustomAspectRatio_ReturnValue_Offset;
    
    public bool SetCustomAspectRatio(float attributeValue, bool bAddApplyDelegate = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomAspectRatio_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetCustomAspectRatio_AttributeValue_Offset), 0, null, attributeValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomAspectRatio_bAddApplyDelegate_Offset), 0, null, bAddApplyDelegate);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomAspectRatio_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomAspectRatio_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeStandardCameraFactoryNode:GetCustomWidth
    static readonly IntPtr GetCustomWidth_NativeFunction;
    static readonly int GetCustomWidth_ParamsSize;
    static readonly int GetCustomWidth_AttributeValue_Offset;
    static readonly int GetCustomWidth_ReturnValue_Offset;
    
    public bool GetCustomWidth(out float attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomWidth_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomWidth_NativeFunction, ParamsBuffer);
            
            attributeValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetCustomWidth_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomWidth_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeStandardCameraFactoryNode:GetCustomProjectionMode
    static readonly IntPtr GetCustomProjectionMode_NativeFunction;
    static readonly int GetCustomProjectionMode_ParamsSize;
    static readonly int GetCustomProjectionMode_AttributeValue_Offset;
    static readonly int GetCustomProjectionMode_ReturnValue_Offset;
    
    public bool GetCustomProjectionMode(out UnrealSharp.Engine.ECameraProjectionMode attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomProjectionMode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomProjectionMode_NativeFunction, ParamsBuffer);
            
            attributeValue = BlittableMarshaller<UnrealSharp.Engine.ECameraProjectionMode>.FromNative(IntPtr.Add(ParamsBuffer, GetCustomProjectionMode_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomProjectionMode_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeStandardCameraFactoryNode:GetCustomNearClipPlane
    static readonly IntPtr GetCustomNearClipPlane_NativeFunction;
    static readonly int GetCustomNearClipPlane_ParamsSize;
    static readonly int GetCustomNearClipPlane_AttributeValue_Offset;
    static readonly int GetCustomNearClipPlane_ReturnValue_Offset;
    
    public bool GetCustomNearClipPlane(out float attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomNearClipPlane_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomNearClipPlane_NativeFunction, ParamsBuffer);
            
            attributeValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetCustomNearClipPlane_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomNearClipPlane_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeStandardCameraFactoryNode:GetCustomFieldOfView
    static readonly IntPtr GetCustomFieldOfView_NativeFunction;
    static readonly int GetCustomFieldOfView_ParamsSize;
    static readonly int GetCustomFieldOfView_AttributeValue_Offset;
    static readonly int GetCustomFieldOfView_ReturnValue_Offset;
    
    public bool GetCustomFieldOfView(out float attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomFieldOfView_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomFieldOfView_NativeFunction, ParamsBuffer);
            
            attributeValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetCustomFieldOfView_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomFieldOfView_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeStandardCameraFactoryNode:GetCustomFarClipPlane
    static readonly IntPtr GetCustomFarClipPlane_NativeFunction;
    static readonly int GetCustomFarClipPlane_ParamsSize;
    static readonly int GetCustomFarClipPlane_AttributeValue_Offset;
    static readonly int GetCustomFarClipPlane_ReturnValue_Offset;
    
    public bool GetCustomFarClipPlane(out float attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomFarClipPlane_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomFarClipPlane_NativeFunction, ParamsBuffer);
            
            attributeValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetCustomFarClipPlane_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomFarClipPlane_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeStandardCameraFactoryNode:GetCustomAspectRatio
    static readonly IntPtr GetCustomAspectRatio_NativeFunction;
    static readonly int GetCustomAspectRatio_ParamsSize;
    static readonly int GetCustomAspectRatio_AttributeValue_Offset;
    static readonly int GetCustomAspectRatio_ReturnValue_Offset;
    
    public bool GetCustomAspectRatio(out float attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomAspectRatio_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomAspectRatio_NativeFunction, ParamsBuffer);
            
            attributeValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetCustomAspectRatio_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomAspectRatio_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
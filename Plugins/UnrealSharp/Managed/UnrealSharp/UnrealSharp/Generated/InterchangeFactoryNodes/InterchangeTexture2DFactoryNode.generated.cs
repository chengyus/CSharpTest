// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.InterchangeFactoryNodes;

[UClass]
public partial class InterchangeTexture2DFactoryNode : UnrealSharp.InterchangeFactoryNodes.InterchangeTextureFactoryNode
{
    
    static InterchangeTexture2DFactoryNode()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("InterchangeTexture2DFactoryNode");
        
        
        SetSourceBlockByCoordinates_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSourceBlockByCoordinates");
        SetSourceBlockByCoordinates_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSourceBlockByCoordinates_NativeFunction);
        SetSourceBlockByCoordinates_X_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSourceBlockByCoordinates_NativeFunction, "X");
        SetSourceBlockByCoordinates_Y_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSourceBlockByCoordinates_NativeFunction, "Y");
        SetSourceBlockByCoordinates_InSourceFile_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSourceBlockByCoordinates_NativeFunction, "InSourceFile");
        SetSourceBlock_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSourceBlock");
        SetSourceBlock_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSourceBlock_NativeFunction);
        SetSourceBlock_BlockIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSourceBlock_NativeFunction, "BlockIndex");
        SetSourceBlock_InSourceFile_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSourceBlock_NativeFunction, "InSourceFile");
        SetCustomAddressY_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomAddressY");
        SetCustomAddressY_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomAddressY_NativeFunction);
        SetCustomAddressY_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomAddressY_NativeFunction, "AttributeValue");
        SetCustomAddressY_bAddApplyDelegate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomAddressY_NativeFunction, "bAddApplyDelegate");
        SetCustomAddressY_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomAddressY_NativeFunction, "ReturnValue");
        SetCustomAddressX_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomAddressX");
        SetCustomAddressX_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomAddressX_NativeFunction);
        SetCustomAddressX_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomAddressX_NativeFunction, "AttributeValue");
        SetCustomAddressX_bAddApplyDelegate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomAddressX_NativeFunction, "bAddApplyDelegate");
        SetCustomAddressX_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomAddressX_NativeFunction, "ReturnValue");
        GetSourceBlockByCoordinates_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSourceBlockByCoordinates");
        GetSourceBlockByCoordinates_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSourceBlockByCoordinates_NativeFunction);
        GetSourceBlockByCoordinates_X_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSourceBlockByCoordinates_NativeFunction, "X");
        GetSourceBlockByCoordinates_Y_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSourceBlockByCoordinates_NativeFunction, "Y");
        GetSourceBlockByCoordinates_OutSourceFile_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSourceBlockByCoordinates_NativeFunction, "OutSourceFile");
        GetSourceBlockByCoordinates_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSourceBlockByCoordinates_NativeFunction, "ReturnValue");
        GetSourceBlock_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSourceBlock");
        GetSourceBlock_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSourceBlock_NativeFunction);
        GetSourceBlock_BlockIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSourceBlock_NativeFunction, "BlockIndex");
        GetSourceBlock_OutSourceFile_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSourceBlock_NativeFunction, "OutSourceFile");
        GetSourceBlock_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSourceBlock_NativeFunction, "ReturnValue");
        GetCustomAddressY_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomAddressY");
        GetCustomAddressY_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomAddressY_NativeFunction);
        GetCustomAddressY_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomAddressY_NativeFunction, "AttributeValue");
        GetCustomAddressY_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomAddressY_NativeFunction, "ReturnValue");
        GetCustomAddressX_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomAddressX");
        GetCustomAddressX_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomAddressX_NativeFunction);
        GetCustomAddressX_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomAddressX_NativeFunction, "AttributeValue");
        GetCustomAddressX_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomAddressX_NativeFunction, "ReturnValue");
        
        
    }
    
    protected InterchangeTexture2DFactoryNode(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/InterchangeFactoryNodes.InterchangeTexture2DFactoryNode:SetSourceBlockByCoordinates
    static readonly IntPtr SetSourceBlockByCoordinates_NativeFunction;
    static readonly int SetSourceBlockByCoordinates_ParamsSize;
    static readonly int SetSourceBlockByCoordinates_X_Offset;
    static readonly int SetSourceBlockByCoordinates_Y_Offset;
    static readonly int SetSourceBlockByCoordinates_InSourceFile_Offset;
    
    public void SetSourceBlockByCoordinates(int x, int y, string inSourceFile)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSourceBlockByCoordinates_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetSourceBlockByCoordinates_X_Offset), 0, null, x);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetSourceBlockByCoordinates_Y_Offset), 0, null, y);
            IntPtr InSourceFile_NativePtr = IntPtr.Add(ParamsBuffer,SetSourceBlockByCoordinates_InSourceFile_Offset);
            StringMarshaller.ToNative(InSourceFile_NativePtr,0,null,inSourceFile);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSourceBlockByCoordinates_NativeFunction, ParamsBuffer);
            
            StringMarshaller.DestructInstance(InSourceFile_NativePtr, 0);
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeTexture2DFactoryNode:SetSourceBlock
    static readonly IntPtr SetSourceBlock_NativeFunction;
    static readonly int SetSourceBlock_ParamsSize;
    static readonly int SetSourceBlock_BlockIndex_Offset;
    static readonly int SetSourceBlock_InSourceFile_Offset;
    
    public void SetSourceBlock(int blockIndex, string inSourceFile)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSourceBlock_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetSourceBlock_BlockIndex_Offset), 0, null, blockIndex);
            IntPtr InSourceFile_NativePtr = IntPtr.Add(ParamsBuffer,SetSourceBlock_InSourceFile_Offset);
            StringMarshaller.ToNative(InSourceFile_NativePtr,0,null,inSourceFile);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSourceBlock_NativeFunction, ParamsBuffer);
            
            StringMarshaller.DestructInstance(InSourceFile_NativePtr, 0);
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeTexture2DFactoryNode:SetCustomAddressY
    static readonly IntPtr SetCustomAddressY_NativeFunction;
    static readonly int SetCustomAddressY_ParamsSize;
    static readonly int SetCustomAddressY_AttributeValue_Offset;
    static readonly int SetCustomAddressY_bAddApplyDelegate_Offset;
    static readonly int SetCustomAddressY_ReturnValue_Offset;
    
    public bool SetCustomAddressY(UnrealSharp.Engine.TextureAddress attributeValue, bool bAddApplyDelegate = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomAddressY_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.Engine.TextureAddress>.ToNative(IntPtr.Add(ParamsBuffer, SetCustomAddressY_AttributeValue_Offset), 0, null, attributeValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomAddressY_bAddApplyDelegate_Offset), 0, null, bAddApplyDelegate);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomAddressY_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomAddressY_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeTexture2DFactoryNode:SetCustomAddressX
    static readonly IntPtr SetCustomAddressX_NativeFunction;
    static readonly int SetCustomAddressX_ParamsSize;
    static readonly int SetCustomAddressX_AttributeValue_Offset;
    static readonly int SetCustomAddressX_bAddApplyDelegate_Offset;
    static readonly int SetCustomAddressX_ReturnValue_Offset;
    
    public bool SetCustomAddressX(UnrealSharp.Engine.TextureAddress attributeValue, bool bAddApplyDelegate = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomAddressX_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.Engine.TextureAddress>.ToNative(IntPtr.Add(ParamsBuffer, SetCustomAddressX_AttributeValue_Offset), 0, null, attributeValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomAddressX_bAddApplyDelegate_Offset), 0, null, bAddApplyDelegate);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomAddressX_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomAddressX_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeTexture2DFactoryNode:GetSourceBlockByCoordinates
    static readonly IntPtr GetSourceBlockByCoordinates_NativeFunction;
    static readonly int GetSourceBlockByCoordinates_ParamsSize;
    static readonly int GetSourceBlockByCoordinates_X_Offset;
    static readonly int GetSourceBlockByCoordinates_Y_Offset;
    static readonly int GetSourceBlockByCoordinates_OutSourceFile_Offset;
    static readonly int GetSourceBlockByCoordinates_ReturnValue_Offset;
    
    public bool GetSourceBlockByCoordinates(int x, int y, out string outSourceFile)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSourceBlockByCoordinates_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetSourceBlockByCoordinates_X_Offset), 0, null, x);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetSourceBlockByCoordinates_Y_Offset), 0, null, y);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSourceBlockByCoordinates_NativeFunction, ParamsBuffer);
            
            IntPtr OutSourceFile_NativePtr = IntPtr.Add(ParamsBuffer,GetSourceBlockByCoordinates_OutSourceFile_Offset);
            outSourceFile = StringMarshaller.FromNative(OutSourceFile_NativePtr,0,null);
            StringMarshaller.DestructInstance(OutSourceFile_NativePtr, 0);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetSourceBlockByCoordinates_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeTexture2DFactoryNode:GetSourceBlock
    static readonly IntPtr GetSourceBlock_NativeFunction;
    static readonly int GetSourceBlock_ParamsSize;
    static readonly int GetSourceBlock_BlockIndex_Offset;
    static readonly int GetSourceBlock_OutSourceFile_Offset;
    static readonly int GetSourceBlock_ReturnValue_Offset;
    
    public bool GetSourceBlock(int blockIndex, out string outSourceFile)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSourceBlock_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetSourceBlock_BlockIndex_Offset), 0, null, blockIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSourceBlock_NativeFunction, ParamsBuffer);
            
            IntPtr OutSourceFile_NativePtr = IntPtr.Add(ParamsBuffer,GetSourceBlock_OutSourceFile_Offset);
            outSourceFile = StringMarshaller.FromNative(OutSourceFile_NativePtr,0,null);
            StringMarshaller.DestructInstance(OutSourceFile_NativePtr, 0);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetSourceBlock_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeTexture2DFactoryNode:GetCustomAddressY
    static readonly IntPtr GetCustomAddressY_NativeFunction;
    static readonly int GetCustomAddressY_ParamsSize;
    static readonly int GetCustomAddressY_AttributeValue_Offset;
    static readonly int GetCustomAddressY_ReturnValue_Offset;
    
    public bool GetCustomAddressY(out UnrealSharp.Engine.TextureAddress attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomAddressY_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomAddressY_NativeFunction, ParamsBuffer);
            
            attributeValue = BlittableMarshaller<UnrealSharp.Engine.TextureAddress>.FromNative(IntPtr.Add(ParamsBuffer, GetCustomAddressY_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomAddressY_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeTexture2DFactoryNode:GetCustomAddressX
    static readonly IntPtr GetCustomAddressX_NativeFunction;
    static readonly int GetCustomAddressX_ParamsSize;
    static readonly int GetCustomAddressX_AttributeValue_Offset;
    static readonly int GetCustomAddressX_ReturnValue_Offset;
    
    public bool GetCustomAddressX(out UnrealSharp.Engine.TextureAddress attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomAddressX_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomAddressX_NativeFunction, ParamsBuffer);
            
            attributeValue = BlittableMarshaller<UnrealSharp.Engine.TextureAddress>.FromNative(IntPtr.Add(ParamsBuffer, GetCustomAddressX_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomAddressX_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.InterchangeFactoryNodes;

[UClass]
public partial class InterchangeTextureLightProfileFactoryNode : UnrealSharp.InterchangeFactoryNodes.InterchangeTexture2DFactoryNode
{
    
    static InterchangeTextureLightProfileFactoryNode()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("InterchangeTextureLightProfileFactoryNode");
        
        
        SetCustomTextureMultiplier_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomTextureMultiplier");
        SetCustomTextureMultiplier_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomTextureMultiplier_NativeFunction);
        SetCustomTextureMultiplier_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomTextureMultiplier_NativeFunction, "AttributeValue");
        SetCustomTextureMultiplier_bAddApplyDelegate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomTextureMultiplier_NativeFunction, "bAddApplyDelegate");
        SetCustomTextureMultiplier_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomTextureMultiplier_NativeFunction, "ReturnValue");
        SetCustomBrightness_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomBrightness");
        SetCustomBrightness_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomBrightness_NativeFunction);
        SetCustomBrightness_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomBrightness_NativeFunction, "AttributeValue");
        SetCustomBrightness_bAddApplyDelegate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomBrightness_NativeFunction, "bAddApplyDelegate");
        SetCustomBrightness_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomBrightness_NativeFunction, "ReturnValue");
        GetCustomTextureMultiplier_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomTextureMultiplier");
        GetCustomTextureMultiplier_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomTextureMultiplier_NativeFunction);
        GetCustomTextureMultiplier_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomTextureMultiplier_NativeFunction, "AttributeValue");
        GetCustomTextureMultiplier_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomTextureMultiplier_NativeFunction, "ReturnValue");
        GetCustomBrightness_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomBrightness");
        GetCustomBrightness_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomBrightness_NativeFunction);
        GetCustomBrightness_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomBrightness_NativeFunction, "AttributeValue");
        GetCustomBrightness_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomBrightness_NativeFunction, "ReturnValue");
        
        
    }
    
    protected InterchangeTextureLightProfileFactoryNode(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/InterchangeFactoryNodes.InterchangeTextureLightProfileFactoryNode:SetCustomTextureMultiplier
    static readonly IntPtr SetCustomTextureMultiplier_NativeFunction;
    static readonly int SetCustomTextureMultiplier_ParamsSize;
    static readonly int SetCustomTextureMultiplier_AttributeValue_Offset;
    static readonly int SetCustomTextureMultiplier_bAddApplyDelegate_Offset;
    static readonly int SetCustomTextureMultiplier_ReturnValue_Offset;
    
    public bool SetCustomTextureMultiplier(float attributeValue, bool bAddApplyDelegate = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomTextureMultiplier_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetCustomTextureMultiplier_AttributeValue_Offset), 0, null, attributeValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomTextureMultiplier_bAddApplyDelegate_Offset), 0, null, bAddApplyDelegate);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomTextureMultiplier_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomTextureMultiplier_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeTextureLightProfileFactoryNode:SetCustomBrightness
    static readonly IntPtr SetCustomBrightness_NativeFunction;
    static readonly int SetCustomBrightness_ParamsSize;
    static readonly int SetCustomBrightness_AttributeValue_Offset;
    static readonly int SetCustomBrightness_bAddApplyDelegate_Offset;
    static readonly int SetCustomBrightness_ReturnValue_Offset;
    
    public bool SetCustomBrightness(float attributeValue, bool bAddApplyDelegate = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomBrightness_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetCustomBrightness_AttributeValue_Offset), 0, null, attributeValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomBrightness_bAddApplyDelegate_Offset), 0, null, bAddApplyDelegate);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomBrightness_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomBrightness_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeTextureLightProfileFactoryNode:GetCustomTextureMultiplier
    static readonly IntPtr GetCustomTextureMultiplier_NativeFunction;
    static readonly int GetCustomTextureMultiplier_ParamsSize;
    static readonly int GetCustomTextureMultiplier_AttributeValue_Offset;
    static readonly int GetCustomTextureMultiplier_ReturnValue_Offset;
    
    public bool GetCustomTextureMultiplier(out float attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomTextureMultiplier_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomTextureMultiplier_NativeFunction, ParamsBuffer);
            
            attributeValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetCustomTextureMultiplier_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomTextureMultiplier_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeFactoryNodes.InterchangeTextureLightProfileFactoryNode:GetCustomBrightness
    static readonly IntPtr GetCustomBrightness_NativeFunction;
    static readonly int GetCustomBrightness_ParamsSize;
    static readonly int GetCustomBrightness_AttributeValue_Offset;
    static readonly int GetCustomBrightness_ReturnValue_Offset;
    
    public bool GetCustomBrightness(out float attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomBrightness_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomBrightness_NativeFunction, ParamsBuffer);
            
            attributeValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetCustomBrightness_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomBrightness_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.InterchangeNodes;

[UClass]
public partial class InterchangeLightNode : UnrealSharp.InterchangeNodes.InterchangeBaseLightNode
{
    
    static InterchangeLightNode()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("InterchangeLightNode");
        
        
        SetCustomIntensityUnits_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomIntensityUnits");
        SetCustomIntensityUnits_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomIntensityUnits_NativeFunction);
        SetCustomIntensityUnits_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomIntensityUnits_NativeFunction, "AttributeValue");
        SetCustomIntensityUnits_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomIntensityUnits_NativeFunction, "ReturnValue");
        SetCustomIESTexture_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomIESTexture");
        SetCustomIESTexture_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomIESTexture_NativeFunction);
        SetCustomIESTexture_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomIESTexture_NativeFunction, "AttributeValue");
        SetCustomIESTexture_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomIESTexture_NativeFunction, "ReturnValue");
        SetCustomAttenuationRadius_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomAttenuationRadius");
        SetCustomAttenuationRadius_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomAttenuationRadius_NativeFunction);
        SetCustomAttenuationRadius_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomAttenuationRadius_NativeFunction, "AttributeValue");
        SetCustomAttenuationRadius_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomAttenuationRadius_NativeFunction, "ReturnValue");
        GetCustomIntensityUnits_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomIntensityUnits");
        GetCustomIntensityUnits_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomIntensityUnits_NativeFunction);
        GetCustomIntensityUnits_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomIntensityUnits_NativeFunction, "AttributeValue");
        GetCustomIntensityUnits_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomIntensityUnits_NativeFunction, "ReturnValue");
        GetCustomIESTexture_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomIESTexture");
        GetCustomIESTexture_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomIESTexture_NativeFunction);
        GetCustomIESTexture_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomIESTexture_NativeFunction, "AttributeValue");
        GetCustomIESTexture_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomIESTexture_NativeFunction, "ReturnValue");
        GetCustomAttenuationRadius_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomAttenuationRadius");
        GetCustomAttenuationRadius_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomAttenuationRadius_NativeFunction);
        GetCustomAttenuationRadius_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomAttenuationRadius_NativeFunction, "AttributeValue");
        GetCustomAttenuationRadius_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomAttenuationRadius_NativeFunction, "ReturnValue");
        
        
    }
    
    protected InterchangeLightNode(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/InterchangeNodes.InterchangeLightNode:SetCustomIntensityUnits
    static readonly IntPtr SetCustomIntensityUnits_NativeFunction;
    static readonly int SetCustomIntensityUnits_ParamsSize;
    static readonly int SetCustomIntensityUnits_AttributeValue_Offset;
    static readonly int SetCustomIntensityUnits_ReturnValue_Offset;
    
    public bool SetCustomIntensityUnits(UnrealSharp.InterchangeNodes.EInterchangeLightUnits attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomIntensityUnits_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.InterchangeNodes.EInterchangeLightUnits>.ToNative(IntPtr.Add(ParamsBuffer, SetCustomIntensityUnits_AttributeValue_Offset), 0, null, attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomIntensityUnits_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomIntensityUnits_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeLightNode:SetCustomIESTexture
    static readonly IntPtr SetCustomIESTexture_NativeFunction;
    static readonly int SetCustomIESTexture_ParamsSize;
    static readonly int SetCustomIESTexture_AttributeValue_Offset;
    static readonly int SetCustomIESTexture_ReturnValue_Offset;
    
    public bool SetCustomIESTexture(string attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomIESTexture_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr AttributeValue_NativePtr = IntPtr.Add(ParamsBuffer,SetCustomIESTexture_AttributeValue_Offset);
            StringMarshaller.ToNative(AttributeValue_NativePtr,0,null,attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomIESTexture_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomIESTexture_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(AttributeValue_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeLightNode:SetCustomAttenuationRadius
    static readonly IntPtr SetCustomAttenuationRadius_NativeFunction;
    static readonly int SetCustomAttenuationRadius_ParamsSize;
    static readonly int SetCustomAttenuationRadius_AttributeValue_Offset;
    static readonly int SetCustomAttenuationRadius_ReturnValue_Offset;
    
    public bool SetCustomAttenuationRadius(float attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomAttenuationRadius_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetCustomAttenuationRadius_AttributeValue_Offset), 0, null, attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomAttenuationRadius_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomAttenuationRadius_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeLightNode:GetCustomIntensityUnits
    static readonly IntPtr GetCustomIntensityUnits_NativeFunction;
    static readonly int GetCustomIntensityUnits_ParamsSize;
    static readonly int GetCustomIntensityUnits_AttributeValue_Offset;
    static readonly int GetCustomIntensityUnits_ReturnValue_Offset;
    
    public bool GetCustomIntensityUnits(out UnrealSharp.InterchangeNodes.EInterchangeLightUnits attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomIntensityUnits_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomIntensityUnits_NativeFunction, ParamsBuffer);
            
            attributeValue = BlittableMarshaller<UnrealSharp.InterchangeNodes.EInterchangeLightUnits>.FromNative(IntPtr.Add(ParamsBuffer, GetCustomIntensityUnits_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomIntensityUnits_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeLightNode:GetCustomIESTexture
    static readonly IntPtr GetCustomIESTexture_NativeFunction;
    static readonly int GetCustomIESTexture_ParamsSize;
    static readonly int GetCustomIESTexture_AttributeValue_Offset;
    static readonly int GetCustomIESTexture_ReturnValue_Offset;
    
    public bool GetCustomIESTexture(out string attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomIESTexture_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomIESTexture_NativeFunction, ParamsBuffer);
            
            IntPtr AttributeValue_NativePtr = IntPtr.Add(ParamsBuffer,GetCustomIESTexture_AttributeValue_Offset);
            attributeValue = StringMarshaller.FromNative(AttributeValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(AttributeValue_NativePtr, 0);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomIESTexture_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeLightNode:GetCustomAttenuationRadius
    static readonly IntPtr GetCustomAttenuationRadius_NativeFunction;
    static readonly int GetCustomAttenuationRadius_ParamsSize;
    static readonly int GetCustomAttenuationRadius_AttributeValue_Offset;
    static readonly int GetCustomAttenuationRadius_ReturnValue_Offset;
    
    public bool GetCustomAttenuationRadius(out float attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomAttenuationRadius_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomAttenuationRadius_NativeFunction, ParamsBuffer);
            
            attributeValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetCustomAttenuationRadius_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomAttenuationRadius_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
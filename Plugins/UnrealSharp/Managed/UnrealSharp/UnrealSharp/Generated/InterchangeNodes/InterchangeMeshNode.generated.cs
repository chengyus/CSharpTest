// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.InterchangeNodes;

[UClass]
public partial class InterchangeMeshNode : UnrealSharp.InterchangeCore.InterchangeBaseNode
{
    
    static InterchangeMeshNode()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("InterchangeMeshNode");
        
        
        SetSlotMaterialDependencyUid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSlotMaterialDependencyUid");
        SetSlotMaterialDependencyUid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSlotMaterialDependencyUid_NativeFunction);
        SetSlotMaterialDependencyUid_SlotName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSlotMaterialDependencyUid_NativeFunction, "SlotName");
        SetSlotMaterialDependencyUid_MaterialDependencyUid_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSlotMaterialDependencyUid_NativeFunction, "MaterialDependencyUid");
        SetSlotMaterialDependencyUid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSlotMaterialDependencyUid_NativeFunction, "ReturnValue");
        SetSkinnedMesh_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSkinnedMesh");
        SetSkinnedMesh_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSkinnedMesh_NativeFunction);
        SetSkinnedMesh_bIsSkinnedMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSkinnedMesh_NativeFunction, "bIsSkinnedMesh");
        SetSkinnedMesh_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSkinnedMesh_NativeFunction, "ReturnValue");
        SetSkeletonDependencyUid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSkeletonDependencyUid");
        SetSkeletonDependencyUid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSkeletonDependencyUid_NativeFunction);
        SetSkeletonDependencyUid_DependencyUid_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSkeletonDependencyUid_NativeFunction, "DependencyUid");
        SetSkeletonDependencyUid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSkeletonDependencyUid_NativeFunction, "ReturnValue");
        SetSceneInstanceUid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSceneInstanceUid");
        SetSceneInstanceUid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSceneInstanceUid_NativeFunction);
        SetSceneInstanceUid_DependencyUid_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSceneInstanceUid_NativeFunction, "DependencyUid");
        SetSceneInstanceUid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSceneInstanceUid_NativeFunction, "ReturnValue");
        SetPayLoadKey_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPayLoadKey");
        SetPayLoadKey_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPayLoadKey_NativeFunction);
        SetPayLoadKey_PayLoadKey_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPayLoadKey_NativeFunction, "PayLoadKey");
        SetPayLoadKey_PayLoadType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPayLoadKey_NativeFunction, "PayLoadType");
        SetMorphTargetName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetMorphTargetName");
        SetMorphTargetName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetMorphTargetName_NativeFunction);
        SetMorphTargetName_MorphTargetName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetMorphTargetName_NativeFunction, "MorphTargetName");
        SetMorphTargetName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetMorphTargetName_NativeFunction, "ReturnValue");
        SetMorphTargetDependencyUid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetMorphTargetDependencyUid");
        SetMorphTargetDependencyUid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetMorphTargetDependencyUid_NativeFunction);
        SetMorphTargetDependencyUid_DependencyUid_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetMorphTargetDependencyUid_NativeFunction, "DependencyUid");
        SetMorphTargetDependencyUid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetMorphTargetDependencyUid_NativeFunction, "ReturnValue");
        SetMorphTarget_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetMorphTarget");
        SetMorphTarget_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetMorphTarget_NativeFunction);
        SetMorphTarget_bIsMorphTarget_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetMorphTarget_NativeFunction, "bIsMorphTarget");
        SetMorphTarget_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetMorphTarget_NativeFunction, "ReturnValue");
        SetCustomVertexCount_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomVertexCount");
        SetCustomVertexCount_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomVertexCount_NativeFunction);
        SetCustomVertexCount_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomVertexCount_NativeFunction, "AttributeValue");
        SetCustomVertexCount_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomVertexCount_NativeFunction, "ReturnValue");
        SetCustomUVCount_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomUVCount");
        SetCustomUVCount_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomUVCount_NativeFunction);
        SetCustomUVCount_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomUVCount_NativeFunction, "AttributeValue");
        SetCustomUVCount_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomUVCount_NativeFunction, "ReturnValue");
        SetCustomPolygonCount_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomPolygonCount");
        SetCustomPolygonCount_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomPolygonCount_NativeFunction);
        SetCustomPolygonCount_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomPolygonCount_NativeFunction, "AttributeValue");
        SetCustomPolygonCount_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomPolygonCount_NativeFunction, "ReturnValue");
        SetCustomHasVertexTangent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomHasVertexTangent");
        SetCustomHasVertexTangent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomHasVertexTangent_NativeFunction);
        SetCustomHasVertexTangent_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomHasVertexTangent_NativeFunction, "AttributeValue");
        SetCustomHasVertexTangent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomHasVertexTangent_NativeFunction, "ReturnValue");
        SetCustomHasVertexNormal_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomHasVertexNormal");
        SetCustomHasVertexNormal_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomHasVertexNormal_NativeFunction);
        SetCustomHasVertexNormal_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomHasVertexNormal_NativeFunction, "AttributeValue");
        SetCustomHasVertexNormal_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomHasVertexNormal_NativeFunction, "ReturnValue");
        SetCustomHasVertexColor_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomHasVertexColor");
        SetCustomHasVertexColor_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomHasVertexColor_NativeFunction);
        SetCustomHasVertexColor_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomHasVertexColor_NativeFunction, "AttributeValue");
        SetCustomHasVertexColor_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomHasVertexColor_NativeFunction, "ReturnValue");
        SetCustomHasVertexBinormal_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomHasVertexBinormal");
        SetCustomHasVertexBinormal_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomHasVertexBinormal_NativeFunction);
        SetCustomHasVertexBinormal_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomHasVertexBinormal_NativeFunction, "AttributeValue");
        SetCustomHasVertexBinormal_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomHasVertexBinormal_NativeFunction, "ReturnValue");
        SetCustomHasSmoothGroup_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomHasSmoothGroup");
        SetCustomHasSmoothGroup_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomHasSmoothGroup_NativeFunction);
        SetCustomHasSmoothGroup_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomHasSmoothGroup_NativeFunction, "AttributeValue");
        SetCustomHasSmoothGroup_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomHasSmoothGroup_NativeFunction, "ReturnValue");
        SetCustomBoundingBox_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomBoundingBox");
        SetCustomBoundingBox_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomBoundingBox_NativeFunction);
        SetCustomBoundingBox_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomBoundingBox_NativeFunction, "AttributeValue");
        SetCustomBoundingBox_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomBoundingBox_NativeFunction, "ReturnValue");
        RemoveSlotMaterialDependencyUid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveSlotMaterialDependencyUid");
        RemoveSlotMaterialDependencyUid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveSlotMaterialDependencyUid_NativeFunction);
        RemoveSlotMaterialDependencyUid_SlotName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveSlotMaterialDependencyUid_NativeFunction, "SlotName");
        RemoveSlotMaterialDependencyUid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveSlotMaterialDependencyUid_NativeFunction, "ReturnValue");
        RemoveSkeletonDependencyUid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveSkeletonDependencyUid");
        RemoveSkeletonDependencyUid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveSkeletonDependencyUid_NativeFunction);
        RemoveSkeletonDependencyUid_DependencyUid_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveSkeletonDependencyUid_NativeFunction, "DependencyUid");
        RemoveSkeletonDependencyUid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveSkeletonDependencyUid_NativeFunction, "ReturnValue");
        RemoveSceneInstanceUid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveSceneInstanceUid");
        RemoveSceneInstanceUid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveSceneInstanceUid_NativeFunction);
        RemoveSceneInstanceUid_DependencyUid_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveSceneInstanceUid_NativeFunction, "DependencyUid");
        RemoveSceneInstanceUid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveSceneInstanceUid_NativeFunction, "ReturnValue");
        RemoveMorphTargetDependencyUid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveMorphTargetDependencyUid");
        RemoveMorphTargetDependencyUid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveMorphTargetDependencyUid_NativeFunction);
        RemoveMorphTargetDependencyUid_DependencyUid_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveMorphTargetDependencyUid_NativeFunction, "DependencyUid");
        RemoveMorphTargetDependencyUid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveMorphTargetDependencyUid_NativeFunction, "ReturnValue");
        IsSkinnedMesh_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsSkinnedMesh");
        IsSkinnedMesh_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsSkinnedMesh_NativeFunction);
        IsSkinnedMesh_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsSkinnedMesh_NativeFunction, "ReturnValue");
        IsMorphTarget_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsMorphTarget");
        IsMorphTarget_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsMorphTarget_NativeFunction);
        IsMorphTarget_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsMorphTarget_NativeFunction, "ReturnValue");
        GetSlotMaterialDependencyUid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSlotMaterialDependencyUid");
        GetSlotMaterialDependencyUid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSlotMaterialDependencyUid_NativeFunction);
        GetSlotMaterialDependencyUid_SlotName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSlotMaterialDependencyUid_NativeFunction, "SlotName");
        GetSlotMaterialDependencyUid_OutMaterialDependency_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSlotMaterialDependencyUid_NativeFunction, "OutMaterialDependency");
        GetSlotMaterialDependencyUid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSlotMaterialDependencyUid_NativeFunction, "ReturnValue");
        GetSkeletonDependency_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSkeletonDependency");
        GetSkeletonDependency_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSkeletonDependency_NativeFunction);
        GetSkeletonDependency_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSkeletonDependency_NativeFunction, "Index");
        GetSkeletonDependency_OutDependency_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSkeletonDependency_NativeFunction, "OutDependency");
        GetSkeletonDependeciesCount_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSkeletonDependeciesCount");
        GetSkeletonDependeciesCount_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSkeletonDependeciesCount_NativeFunction);
        GetSkeletonDependeciesCount_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSkeletonDependeciesCount_NativeFunction, "ReturnValue");
        GetSceneInstanceUidsCount_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSceneInstanceUidsCount");
        GetSceneInstanceUidsCount_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSceneInstanceUidsCount_NativeFunction);
        GetSceneInstanceUidsCount_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSceneInstanceUidsCount_NativeFunction, "ReturnValue");
        GetSceneInstanceUid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSceneInstanceUid");
        GetSceneInstanceUid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSceneInstanceUid_NativeFunction);
        GetSceneInstanceUid_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSceneInstanceUid_NativeFunction, "Index");
        GetSceneInstanceUid_OutDependency_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSceneInstanceUid_NativeFunction, "OutDependency");
        GetMorphTargetName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetMorphTargetName");
        GetMorphTargetName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetMorphTargetName_NativeFunction);
        GetMorphTargetName_OutMorphTargetName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMorphTargetName_NativeFunction, "OutMorphTargetName");
        GetMorphTargetName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMorphTargetName_NativeFunction, "ReturnValue");
        GetMorphTargetDependency_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetMorphTargetDependency");
        GetMorphTargetDependency_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetMorphTargetDependency_NativeFunction);
        GetMorphTargetDependency_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMorphTargetDependency_NativeFunction, "Index");
        GetMorphTargetDependency_OutDependency_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMorphTargetDependency_NativeFunction, "OutDependency");
        GetMorphTargetDependeciesCount_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetMorphTargetDependeciesCount");
        GetMorphTargetDependeciesCount_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetMorphTargetDependeciesCount_NativeFunction);
        GetMorphTargetDependeciesCount_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMorphTargetDependeciesCount_NativeFunction, "ReturnValue");
        GetCustomVertexCount_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomVertexCount");
        GetCustomVertexCount_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomVertexCount_NativeFunction);
        GetCustomVertexCount_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomVertexCount_NativeFunction, "AttributeValue");
        GetCustomVertexCount_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomVertexCount_NativeFunction, "ReturnValue");
        GetCustomUVCount_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomUVCount");
        GetCustomUVCount_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomUVCount_NativeFunction);
        GetCustomUVCount_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomUVCount_NativeFunction, "AttributeValue");
        GetCustomUVCount_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomUVCount_NativeFunction, "ReturnValue");
        GetCustomPolygonCount_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomPolygonCount");
        GetCustomPolygonCount_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomPolygonCount_NativeFunction);
        GetCustomPolygonCount_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomPolygonCount_NativeFunction, "AttributeValue");
        GetCustomPolygonCount_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomPolygonCount_NativeFunction, "ReturnValue");
        GetCustomHasVertexTangent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomHasVertexTangent");
        GetCustomHasVertexTangent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomHasVertexTangent_NativeFunction);
        GetCustomHasVertexTangent_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomHasVertexTangent_NativeFunction, "AttributeValue");
        GetCustomHasVertexTangent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomHasVertexTangent_NativeFunction, "ReturnValue");
        GetCustomHasVertexNormal_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomHasVertexNormal");
        GetCustomHasVertexNormal_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomHasVertexNormal_NativeFunction);
        GetCustomHasVertexNormal_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomHasVertexNormal_NativeFunction, "AttributeValue");
        GetCustomHasVertexNormal_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomHasVertexNormal_NativeFunction, "ReturnValue");
        GetCustomHasVertexColor_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomHasVertexColor");
        GetCustomHasVertexColor_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomHasVertexColor_NativeFunction);
        GetCustomHasVertexColor_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomHasVertexColor_NativeFunction, "AttributeValue");
        GetCustomHasVertexColor_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomHasVertexColor_NativeFunction, "ReturnValue");
        GetCustomHasVertexBinormal_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomHasVertexBinormal");
        GetCustomHasVertexBinormal_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomHasVertexBinormal_NativeFunction);
        GetCustomHasVertexBinormal_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomHasVertexBinormal_NativeFunction, "AttributeValue");
        GetCustomHasVertexBinormal_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomHasVertexBinormal_NativeFunction, "ReturnValue");
        GetCustomHasSmoothGroup_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomHasSmoothGroup");
        GetCustomHasSmoothGroup_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomHasSmoothGroup_NativeFunction);
        GetCustomHasSmoothGroup_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomHasSmoothGroup_NativeFunction, "AttributeValue");
        GetCustomHasSmoothGroup_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomHasSmoothGroup_NativeFunction, "ReturnValue");
        GetCustomBoundingBox_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomBoundingBox");
        GetCustomBoundingBox_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomBoundingBox_NativeFunction);
        GetCustomBoundingBox_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomBoundingBox_NativeFunction, "AttributeValue");
        GetCustomBoundingBox_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomBoundingBox_NativeFunction, "ReturnValue");
        
        
    }
    
    protected InterchangeMeshNode(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/InterchangeNodes.InterchangeMeshNode:SetSlotMaterialDependencyUid
    static readonly IntPtr SetSlotMaterialDependencyUid_NativeFunction;
    static readonly int SetSlotMaterialDependencyUid_ParamsSize;
    static readonly int SetSlotMaterialDependencyUid_SlotName_Offset;
    static readonly int SetSlotMaterialDependencyUid_MaterialDependencyUid_Offset;
    static readonly int SetSlotMaterialDependencyUid_ReturnValue_Offset;
    
    public bool SetSlotMaterialDependencyUid(string slotName, string materialDependencyUid)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSlotMaterialDependencyUid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr SlotName_NativePtr = IntPtr.Add(ParamsBuffer,SetSlotMaterialDependencyUid_SlotName_Offset);
            StringMarshaller.ToNative(SlotName_NativePtr,0,null,slotName);
            IntPtr MaterialDependencyUid_NativePtr = IntPtr.Add(ParamsBuffer,SetSlotMaterialDependencyUid_MaterialDependencyUid_Offset);
            StringMarshaller.ToNative(MaterialDependencyUid_NativePtr,0,null,materialDependencyUid);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSlotMaterialDependencyUid_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetSlotMaterialDependencyUid_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(SlotName_NativePtr, 0);
            StringMarshaller.DestructInstance(MaterialDependencyUid_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:SetSkinnedMesh
    static readonly IntPtr SetSkinnedMesh_NativeFunction;
    static readonly int SetSkinnedMesh_ParamsSize;
    static readonly int SetSkinnedMesh_bIsSkinnedMesh_Offset;
    static readonly int SetSkinnedMesh_ReturnValue_Offset;
    
    public bool SetSkinnedMesh(bool bIsSkinnedMesh)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSkinnedMesh_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetSkinnedMesh_bIsSkinnedMesh_Offset), 0, null, bIsSkinnedMesh);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSkinnedMesh_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetSkinnedMesh_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:SetSkeletonDependencyUid
    static readonly IntPtr SetSkeletonDependencyUid_NativeFunction;
    static readonly int SetSkeletonDependencyUid_ParamsSize;
    static readonly int SetSkeletonDependencyUid_DependencyUid_Offset;
    static readonly int SetSkeletonDependencyUid_ReturnValue_Offset;
    
    public bool SetSkeletonDependencyUid(string dependencyUid)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSkeletonDependencyUid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr DependencyUid_NativePtr = IntPtr.Add(ParamsBuffer,SetSkeletonDependencyUid_DependencyUid_Offset);
            StringMarshaller.ToNative(DependencyUid_NativePtr,0,null,dependencyUid);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSkeletonDependencyUid_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetSkeletonDependencyUid_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(DependencyUid_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:SetSceneInstanceUid
    static readonly IntPtr SetSceneInstanceUid_NativeFunction;
    static readonly int SetSceneInstanceUid_ParamsSize;
    static readonly int SetSceneInstanceUid_DependencyUid_Offset;
    static readonly int SetSceneInstanceUid_ReturnValue_Offset;
    
    public bool SetSceneInstanceUid(string dependencyUid)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSceneInstanceUid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr DependencyUid_NativePtr = IntPtr.Add(ParamsBuffer,SetSceneInstanceUid_DependencyUid_Offset);
            StringMarshaller.ToNative(DependencyUid_NativePtr,0,null,dependencyUid);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSceneInstanceUid_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetSceneInstanceUid_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(DependencyUid_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:SetPayLoadKey
    static readonly IntPtr SetPayLoadKey_NativeFunction;
    static readonly int SetPayLoadKey_ParamsSize;
    static readonly int SetPayLoadKey_PayLoadKey_Offset;
    static readonly int SetPayLoadKey_PayLoadType_Offset;
    
    public void SetPayLoadKey(string payLoadKey, UnrealSharp.InterchangeNodes.EInterchangeMeshPayLoadType payLoadType)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPayLoadKey_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr PayLoadKey_NativePtr = IntPtr.Add(ParamsBuffer,SetPayLoadKey_PayLoadKey_Offset);
            StringMarshaller.ToNative(PayLoadKey_NativePtr,0,null,payLoadKey);
            BlittableMarshaller<UnrealSharp.InterchangeNodes.EInterchangeMeshPayLoadType>.ToNative(IntPtr.Add(ParamsBuffer, SetPayLoadKey_PayLoadType_Offset), 0, null, payLoadType);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPayLoadKey_NativeFunction, ParamsBuffer);
            
            
            StringMarshaller.DestructInstance(PayLoadKey_NativePtr, 0);
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:SetMorphTargetName
    static readonly IntPtr SetMorphTargetName_NativeFunction;
    static readonly int SetMorphTargetName_ParamsSize;
    static readonly int SetMorphTargetName_MorphTargetName_Offset;
    static readonly int SetMorphTargetName_ReturnValue_Offset;
    
    public bool SetMorphTargetName(string morphTargetName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetMorphTargetName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr MorphTargetName_NativePtr = IntPtr.Add(ParamsBuffer,SetMorphTargetName_MorphTargetName_Offset);
            StringMarshaller.ToNative(MorphTargetName_NativePtr,0,null,morphTargetName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetMorphTargetName_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetMorphTargetName_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(MorphTargetName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:SetMorphTargetDependencyUid
    static readonly IntPtr SetMorphTargetDependencyUid_NativeFunction;
    static readonly int SetMorphTargetDependencyUid_ParamsSize;
    static readonly int SetMorphTargetDependencyUid_DependencyUid_Offset;
    static readonly int SetMorphTargetDependencyUid_ReturnValue_Offset;
    
    public bool SetMorphTargetDependencyUid(string dependencyUid)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetMorphTargetDependencyUid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr DependencyUid_NativePtr = IntPtr.Add(ParamsBuffer,SetMorphTargetDependencyUid_DependencyUid_Offset);
            StringMarshaller.ToNative(DependencyUid_NativePtr,0,null,dependencyUid);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetMorphTargetDependencyUid_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetMorphTargetDependencyUid_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(DependencyUid_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:SetMorphTarget
    static readonly IntPtr SetMorphTarget_NativeFunction;
    static readonly int SetMorphTarget_ParamsSize;
    static readonly int SetMorphTarget_bIsMorphTarget_Offset;
    static readonly int SetMorphTarget_ReturnValue_Offset;
    
    public bool SetMorphTarget(bool bIsMorphTarget)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetMorphTarget_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetMorphTarget_bIsMorphTarget_Offset), 0, null, bIsMorphTarget);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetMorphTarget_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetMorphTarget_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:SetCustomVertexCount
    static readonly IntPtr SetCustomVertexCount_NativeFunction;
    static readonly int SetCustomVertexCount_ParamsSize;
    static readonly int SetCustomVertexCount_AttributeValue_Offset;
    static readonly int SetCustomVertexCount_ReturnValue_Offset;
    
    public bool SetCustomVertexCount(int attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomVertexCount_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetCustomVertexCount_AttributeValue_Offset), 0, null, attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomVertexCount_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomVertexCount_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:SetCustomUVCount
    static readonly IntPtr SetCustomUVCount_NativeFunction;
    static readonly int SetCustomUVCount_ParamsSize;
    static readonly int SetCustomUVCount_AttributeValue_Offset;
    static readonly int SetCustomUVCount_ReturnValue_Offset;
    
    public bool SetCustomUVCount(int attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomUVCount_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetCustomUVCount_AttributeValue_Offset), 0, null, attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomUVCount_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomUVCount_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:SetCustomPolygonCount
    static readonly IntPtr SetCustomPolygonCount_NativeFunction;
    static readonly int SetCustomPolygonCount_ParamsSize;
    static readonly int SetCustomPolygonCount_AttributeValue_Offset;
    static readonly int SetCustomPolygonCount_ReturnValue_Offset;
    
    public bool SetCustomPolygonCount(int attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomPolygonCount_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetCustomPolygonCount_AttributeValue_Offset), 0, null, attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomPolygonCount_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomPolygonCount_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:SetCustomHasVertexTangent
    static readonly IntPtr SetCustomHasVertexTangent_NativeFunction;
    static readonly int SetCustomHasVertexTangent_ParamsSize;
    static readonly int SetCustomHasVertexTangent_AttributeValue_Offset;
    static readonly int SetCustomHasVertexTangent_ReturnValue_Offset;
    
    public bool SetCustomHasVertexTangent(bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomHasVertexTangent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomHasVertexTangent_AttributeValue_Offset), 0, null, attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomHasVertexTangent_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomHasVertexTangent_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:SetCustomHasVertexNormal
    static readonly IntPtr SetCustomHasVertexNormal_NativeFunction;
    static readonly int SetCustomHasVertexNormal_ParamsSize;
    static readonly int SetCustomHasVertexNormal_AttributeValue_Offset;
    static readonly int SetCustomHasVertexNormal_ReturnValue_Offset;
    
    public bool SetCustomHasVertexNormal(bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomHasVertexNormal_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomHasVertexNormal_AttributeValue_Offset), 0, null, attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomHasVertexNormal_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomHasVertexNormal_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:SetCustomHasVertexColor
    static readonly IntPtr SetCustomHasVertexColor_NativeFunction;
    static readonly int SetCustomHasVertexColor_ParamsSize;
    static readonly int SetCustomHasVertexColor_AttributeValue_Offset;
    static readonly int SetCustomHasVertexColor_ReturnValue_Offset;
    
    public bool SetCustomHasVertexColor(bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomHasVertexColor_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomHasVertexColor_AttributeValue_Offset), 0, null, attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomHasVertexColor_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomHasVertexColor_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:SetCustomHasVertexBinormal
    static readonly IntPtr SetCustomHasVertexBinormal_NativeFunction;
    static readonly int SetCustomHasVertexBinormal_ParamsSize;
    static readonly int SetCustomHasVertexBinormal_AttributeValue_Offset;
    static readonly int SetCustomHasVertexBinormal_ReturnValue_Offset;
    
    public bool SetCustomHasVertexBinormal(bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomHasVertexBinormal_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomHasVertexBinormal_AttributeValue_Offset), 0, null, attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomHasVertexBinormal_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomHasVertexBinormal_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:SetCustomHasSmoothGroup
    static readonly IntPtr SetCustomHasSmoothGroup_NativeFunction;
    static readonly int SetCustomHasSmoothGroup_ParamsSize;
    static readonly int SetCustomHasSmoothGroup_AttributeValue_Offset;
    static readonly int SetCustomHasSmoothGroup_ReturnValue_Offset;
    
    public bool SetCustomHasSmoothGroup(bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomHasSmoothGroup_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomHasSmoothGroup_AttributeValue_Offset), 0, null, attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomHasSmoothGroup_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomHasSmoothGroup_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:SetCustomBoundingBox
    static readonly IntPtr SetCustomBoundingBox_NativeFunction;
    static readonly int SetCustomBoundingBox_ParamsSize;
    static readonly int SetCustomBoundingBox_AttributeValue_Offset;
    static readonly int SetCustomBoundingBox_ReturnValue_Offset;
    
    public bool SetCustomBoundingBox(UnrealSharp.CoreUObject.Box attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomBoundingBox_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.CoreUObject.BoxMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetCustomBoundingBox_AttributeValue_Offset), 0, null, attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomBoundingBox_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomBoundingBox_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:RemoveSlotMaterialDependencyUid
    static readonly IntPtr RemoveSlotMaterialDependencyUid_NativeFunction;
    static readonly int RemoveSlotMaterialDependencyUid_ParamsSize;
    static readonly int RemoveSlotMaterialDependencyUid_SlotName_Offset;
    static readonly int RemoveSlotMaterialDependencyUid_ReturnValue_Offset;
    
    public bool RemoveSlotMaterialDependencyUid(string slotName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveSlotMaterialDependencyUid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr SlotName_NativePtr = IntPtr.Add(ParamsBuffer,RemoveSlotMaterialDependencyUid_SlotName_Offset);
            StringMarshaller.ToNative(SlotName_NativePtr,0,null,slotName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveSlotMaterialDependencyUid_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveSlotMaterialDependencyUid_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(SlotName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:RemoveSkeletonDependencyUid
    static readonly IntPtr RemoveSkeletonDependencyUid_NativeFunction;
    static readonly int RemoveSkeletonDependencyUid_ParamsSize;
    static readonly int RemoveSkeletonDependencyUid_DependencyUid_Offset;
    static readonly int RemoveSkeletonDependencyUid_ReturnValue_Offset;
    
    public bool RemoveSkeletonDependencyUid(string dependencyUid)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveSkeletonDependencyUid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr DependencyUid_NativePtr = IntPtr.Add(ParamsBuffer,RemoveSkeletonDependencyUid_DependencyUid_Offset);
            StringMarshaller.ToNative(DependencyUid_NativePtr,0,null,dependencyUid);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveSkeletonDependencyUid_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveSkeletonDependencyUid_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(DependencyUid_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:RemoveSceneInstanceUid
    static readonly IntPtr RemoveSceneInstanceUid_NativeFunction;
    static readonly int RemoveSceneInstanceUid_ParamsSize;
    static readonly int RemoveSceneInstanceUid_DependencyUid_Offset;
    static readonly int RemoveSceneInstanceUid_ReturnValue_Offset;
    
    public bool RemoveSceneInstanceUid(string dependencyUid)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveSceneInstanceUid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr DependencyUid_NativePtr = IntPtr.Add(ParamsBuffer,RemoveSceneInstanceUid_DependencyUid_Offset);
            StringMarshaller.ToNative(DependencyUid_NativePtr,0,null,dependencyUid);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveSceneInstanceUid_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveSceneInstanceUid_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(DependencyUid_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:RemoveMorphTargetDependencyUid
    static readonly IntPtr RemoveMorphTargetDependencyUid_NativeFunction;
    static readonly int RemoveMorphTargetDependencyUid_ParamsSize;
    static readonly int RemoveMorphTargetDependencyUid_DependencyUid_Offset;
    static readonly int RemoveMorphTargetDependencyUid_ReturnValue_Offset;
    
    public bool RemoveMorphTargetDependencyUid(string dependencyUid)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveMorphTargetDependencyUid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr DependencyUid_NativePtr = IntPtr.Add(ParamsBuffer,RemoveMorphTargetDependencyUid_DependencyUid_Offset);
            StringMarshaller.ToNative(DependencyUid_NativePtr,0,null,dependencyUid);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveMorphTargetDependencyUid_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveMorphTargetDependencyUid_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(DependencyUid_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:IsSkinnedMesh
    static readonly IntPtr IsSkinnedMesh_NativeFunction;
    static readonly int IsSkinnedMesh_ParamsSize;
    static readonly int IsSkinnedMesh_ReturnValue_Offset;
    
    public bool IsSkinnedMesh()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsSkinnedMesh_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsSkinnedMesh_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsSkinnedMesh_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:IsMorphTarget
    static readonly IntPtr IsMorphTarget_NativeFunction;
    static readonly int IsMorphTarget_ParamsSize;
    static readonly int IsMorphTarget_ReturnValue_Offset;
    
    public bool IsMorphTarget()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsMorphTarget_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsMorphTarget_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsMorphTarget_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:GetSlotMaterialDependencyUid
    static readonly IntPtr GetSlotMaterialDependencyUid_NativeFunction;
    static readonly int GetSlotMaterialDependencyUid_ParamsSize;
    static readonly int GetSlotMaterialDependencyUid_SlotName_Offset;
    static readonly int GetSlotMaterialDependencyUid_OutMaterialDependency_Offset;
    static readonly int GetSlotMaterialDependencyUid_ReturnValue_Offset;
    
    public bool GetSlotMaterialDependencyUid(string slotName, out string outMaterialDependency)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSlotMaterialDependencyUid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr SlotName_NativePtr = IntPtr.Add(ParamsBuffer,GetSlotMaterialDependencyUid_SlotName_Offset);
            StringMarshaller.ToNative(SlotName_NativePtr,0,null,slotName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSlotMaterialDependencyUid_NativeFunction, ParamsBuffer);
            
            IntPtr OutMaterialDependency_NativePtr = IntPtr.Add(ParamsBuffer,GetSlotMaterialDependencyUid_OutMaterialDependency_Offset);
            outMaterialDependency = StringMarshaller.FromNative(OutMaterialDependency_NativePtr,0,null);
            StringMarshaller.DestructInstance(OutMaterialDependency_NativePtr, 0);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetSlotMaterialDependencyUid_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(SlotName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:GetSkeletonDependency
    static readonly IntPtr GetSkeletonDependency_NativeFunction;
    static readonly int GetSkeletonDependency_ParamsSize;
    static readonly int GetSkeletonDependency_Index_Offset;
    static readonly int GetSkeletonDependency_OutDependency_Offset;
    
    public void GetSkeletonDependency(int index, out string outDependency)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSkeletonDependency_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetSkeletonDependency_Index_Offset), 0, null, index);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSkeletonDependency_NativeFunction, ParamsBuffer);
            
            IntPtr OutDependency_NativePtr = IntPtr.Add(ParamsBuffer,GetSkeletonDependency_OutDependency_Offset);
            outDependency = StringMarshaller.FromNative(OutDependency_NativePtr,0,null);
            StringMarshaller.DestructInstance(OutDependency_NativePtr, 0);
            
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:GetSkeletonDependeciesCount
    static readonly IntPtr GetSkeletonDependeciesCount_NativeFunction;
    static readonly int GetSkeletonDependeciesCount_ParamsSize;
    static readonly int GetSkeletonDependeciesCount_ReturnValue_Offset;
    
    public int GetSkeletonDependeciesCount()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSkeletonDependeciesCount_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSkeletonDependeciesCount_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetSkeletonDependeciesCount_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:GetSceneInstanceUidsCount
    static readonly IntPtr GetSceneInstanceUidsCount_NativeFunction;
    static readonly int GetSceneInstanceUidsCount_ParamsSize;
    static readonly int GetSceneInstanceUidsCount_ReturnValue_Offset;
    
    public int GetSceneInstanceUidsCount()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSceneInstanceUidsCount_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSceneInstanceUidsCount_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetSceneInstanceUidsCount_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:GetSceneInstanceUid
    static readonly IntPtr GetSceneInstanceUid_NativeFunction;
    static readonly int GetSceneInstanceUid_ParamsSize;
    static readonly int GetSceneInstanceUid_Index_Offset;
    static readonly int GetSceneInstanceUid_OutDependency_Offset;
    
    public void GetSceneInstanceUid(int index, out string outDependency)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSceneInstanceUid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetSceneInstanceUid_Index_Offset), 0, null, index);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSceneInstanceUid_NativeFunction, ParamsBuffer);
            
            IntPtr OutDependency_NativePtr = IntPtr.Add(ParamsBuffer,GetSceneInstanceUid_OutDependency_Offset);
            outDependency = StringMarshaller.FromNative(OutDependency_NativePtr,0,null);
            StringMarshaller.DestructInstance(OutDependency_NativePtr, 0);
            
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:GetMorphTargetName
    static readonly IntPtr GetMorphTargetName_NativeFunction;
    static readonly int GetMorphTargetName_ParamsSize;
    static readonly int GetMorphTargetName_OutMorphTargetName_Offset;
    static readonly int GetMorphTargetName_ReturnValue_Offset;
    
    public bool GetMorphTargetName(out string outMorphTargetName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetMorphTargetName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetMorphTargetName_NativeFunction, ParamsBuffer);
            
            IntPtr OutMorphTargetName_NativePtr = IntPtr.Add(ParamsBuffer,GetMorphTargetName_OutMorphTargetName_Offset);
            outMorphTargetName = StringMarshaller.FromNative(OutMorphTargetName_NativePtr,0,null);
            StringMarshaller.DestructInstance(OutMorphTargetName_NativePtr, 0);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetMorphTargetName_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:GetMorphTargetDependency
    static readonly IntPtr GetMorphTargetDependency_NativeFunction;
    static readonly int GetMorphTargetDependency_ParamsSize;
    static readonly int GetMorphTargetDependency_Index_Offset;
    static readonly int GetMorphTargetDependency_OutDependency_Offset;
    
    public void GetMorphTargetDependency(int index, out string outDependency)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetMorphTargetDependency_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetMorphTargetDependency_Index_Offset), 0, null, index);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetMorphTargetDependency_NativeFunction, ParamsBuffer);
            
            IntPtr OutDependency_NativePtr = IntPtr.Add(ParamsBuffer,GetMorphTargetDependency_OutDependency_Offset);
            outDependency = StringMarshaller.FromNative(OutDependency_NativePtr,0,null);
            StringMarshaller.DestructInstance(OutDependency_NativePtr, 0);
            
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:GetMorphTargetDependeciesCount
    static readonly IntPtr GetMorphTargetDependeciesCount_NativeFunction;
    static readonly int GetMorphTargetDependeciesCount_ParamsSize;
    static readonly int GetMorphTargetDependeciesCount_ReturnValue_Offset;
    
    public int GetMorphTargetDependeciesCount()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetMorphTargetDependeciesCount_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetMorphTargetDependeciesCount_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetMorphTargetDependeciesCount_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:GetCustomVertexCount
    static readonly IntPtr GetCustomVertexCount_NativeFunction;
    static readonly int GetCustomVertexCount_ParamsSize;
    static readonly int GetCustomVertexCount_AttributeValue_Offset;
    static readonly int GetCustomVertexCount_ReturnValue_Offset;
    
    public bool GetCustomVertexCount(out int attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomVertexCount_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomVertexCount_NativeFunction, ParamsBuffer);
            
            attributeValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetCustomVertexCount_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomVertexCount_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:GetCustomUVCount
    static readonly IntPtr GetCustomUVCount_NativeFunction;
    static readonly int GetCustomUVCount_ParamsSize;
    static readonly int GetCustomUVCount_AttributeValue_Offset;
    static readonly int GetCustomUVCount_ReturnValue_Offset;
    
    public bool GetCustomUVCount(out int attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomUVCount_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomUVCount_NativeFunction, ParamsBuffer);
            
            attributeValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetCustomUVCount_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomUVCount_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:GetCustomPolygonCount
    static readonly IntPtr GetCustomPolygonCount_NativeFunction;
    static readonly int GetCustomPolygonCount_ParamsSize;
    static readonly int GetCustomPolygonCount_AttributeValue_Offset;
    static readonly int GetCustomPolygonCount_ReturnValue_Offset;
    
    public bool GetCustomPolygonCount(out int attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomPolygonCount_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomPolygonCount_NativeFunction, ParamsBuffer);
            
            attributeValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetCustomPolygonCount_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomPolygonCount_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:GetCustomHasVertexTangent
    static readonly IntPtr GetCustomHasVertexTangent_NativeFunction;
    static readonly int GetCustomHasVertexTangent_ParamsSize;
    static readonly int GetCustomHasVertexTangent_AttributeValue_Offset;
    static readonly int GetCustomHasVertexTangent_ReturnValue_Offset;
    
    public bool GetCustomHasVertexTangent(out bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomHasVertexTangent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomHasVertexTangent_NativeFunction, ParamsBuffer);
            
            attributeValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomHasVertexTangent_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomHasVertexTangent_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:GetCustomHasVertexNormal
    static readonly IntPtr GetCustomHasVertexNormal_NativeFunction;
    static readonly int GetCustomHasVertexNormal_ParamsSize;
    static readonly int GetCustomHasVertexNormal_AttributeValue_Offset;
    static readonly int GetCustomHasVertexNormal_ReturnValue_Offset;
    
    public bool GetCustomHasVertexNormal(out bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomHasVertexNormal_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomHasVertexNormal_NativeFunction, ParamsBuffer);
            
            attributeValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomHasVertexNormal_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomHasVertexNormal_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:GetCustomHasVertexColor
    static readonly IntPtr GetCustomHasVertexColor_NativeFunction;
    static readonly int GetCustomHasVertexColor_ParamsSize;
    static readonly int GetCustomHasVertexColor_AttributeValue_Offset;
    static readonly int GetCustomHasVertexColor_ReturnValue_Offset;
    
    public bool GetCustomHasVertexColor(out bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomHasVertexColor_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomHasVertexColor_NativeFunction, ParamsBuffer);
            
            attributeValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomHasVertexColor_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomHasVertexColor_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:GetCustomHasVertexBinormal
    static readonly IntPtr GetCustomHasVertexBinormal_NativeFunction;
    static readonly int GetCustomHasVertexBinormal_ParamsSize;
    static readonly int GetCustomHasVertexBinormal_AttributeValue_Offset;
    static readonly int GetCustomHasVertexBinormal_ReturnValue_Offset;
    
    public bool GetCustomHasVertexBinormal(out bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomHasVertexBinormal_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomHasVertexBinormal_NativeFunction, ParamsBuffer);
            
            attributeValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomHasVertexBinormal_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomHasVertexBinormal_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:GetCustomHasSmoothGroup
    static readonly IntPtr GetCustomHasSmoothGroup_NativeFunction;
    static readonly int GetCustomHasSmoothGroup_ParamsSize;
    static readonly int GetCustomHasSmoothGroup_AttributeValue_Offset;
    static readonly int GetCustomHasSmoothGroup_ReturnValue_Offset;
    
    public bool GetCustomHasSmoothGroup(out bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomHasSmoothGroup_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomHasSmoothGroup_NativeFunction, ParamsBuffer);
            
            attributeValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomHasSmoothGroup_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomHasSmoothGroup_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeMeshNode:GetCustomBoundingBox
    static readonly IntPtr GetCustomBoundingBox_NativeFunction;
    static readonly int GetCustomBoundingBox_ParamsSize;
    static readonly int GetCustomBoundingBox_AttributeValue_Offset;
    static readonly int GetCustomBoundingBox_ReturnValue_Offset;
    
    public bool GetCustomBoundingBox(out UnrealSharp.CoreUObject.Box attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomBoundingBox_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomBoundingBox_NativeFunction, ParamsBuffer);
            
            attributeValue = UnrealSharp.CoreUObject.BoxMarshaler.FromNative(IntPtr.Add(ParamsBuffer, GetCustomBoundingBox_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomBoundingBox_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
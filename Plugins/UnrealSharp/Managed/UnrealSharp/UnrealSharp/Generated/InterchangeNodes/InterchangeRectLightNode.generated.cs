// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.InterchangeNodes;

[UClass]
public partial class InterchangeRectLightNode : UnrealSharp.InterchangeNodes.InterchangeLightNode
{
    
    static InterchangeRectLightNode()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("InterchangeRectLightNode");
        
        
        SetCustomSourceWidth_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomSourceWidth");
        SetCustomSourceWidth_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomSourceWidth_NativeFunction);
        SetCustomSourceWidth_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomSourceWidth_NativeFunction, "AttributeValue");
        SetCustomSourceWidth_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomSourceWidth_NativeFunction, "ReturnValue");
        SetCustomSourceHeight_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomSourceHeight");
        SetCustomSourceHeight_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomSourceHeight_NativeFunction);
        SetCustomSourceHeight_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomSourceHeight_NativeFunction, "AttributeValue");
        SetCustomSourceHeight_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomSourceHeight_NativeFunction, "ReturnValue");
        GetCustomSourceWidth_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomSourceWidth");
        GetCustomSourceWidth_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomSourceWidth_NativeFunction);
        GetCustomSourceWidth_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomSourceWidth_NativeFunction, "AttributeValue");
        GetCustomSourceWidth_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomSourceWidth_NativeFunction, "ReturnValue");
        GetCustomSourceHeight_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomSourceHeight");
        GetCustomSourceHeight_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomSourceHeight_NativeFunction);
        GetCustomSourceHeight_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomSourceHeight_NativeFunction, "AttributeValue");
        GetCustomSourceHeight_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomSourceHeight_NativeFunction, "ReturnValue");
        
        
    }
    
    protected InterchangeRectLightNode(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/InterchangeNodes.InterchangeRectLightNode:SetCustomSourceWidth
    static readonly IntPtr SetCustomSourceWidth_NativeFunction;
    static readonly int SetCustomSourceWidth_ParamsSize;
    static readonly int SetCustomSourceWidth_AttributeValue_Offset;
    static readonly int SetCustomSourceWidth_ReturnValue_Offset;
    
    public bool SetCustomSourceWidth(float attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomSourceWidth_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetCustomSourceWidth_AttributeValue_Offset), 0, null, attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomSourceWidth_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomSourceWidth_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeRectLightNode:SetCustomSourceHeight
    static readonly IntPtr SetCustomSourceHeight_NativeFunction;
    static readonly int SetCustomSourceHeight_ParamsSize;
    static readonly int SetCustomSourceHeight_AttributeValue_Offset;
    static readonly int SetCustomSourceHeight_ReturnValue_Offset;
    
    public bool SetCustomSourceHeight(float attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomSourceHeight_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetCustomSourceHeight_AttributeValue_Offset), 0, null, attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomSourceHeight_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomSourceHeight_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeRectLightNode:GetCustomSourceWidth
    static readonly IntPtr GetCustomSourceWidth_NativeFunction;
    static readonly int GetCustomSourceWidth_ParamsSize;
    static readonly int GetCustomSourceWidth_AttributeValue_Offset;
    static readonly int GetCustomSourceWidth_ReturnValue_Offset;
    
    public bool GetCustomSourceWidth(out float attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomSourceWidth_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomSourceWidth_NativeFunction, ParamsBuffer);
            
            attributeValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetCustomSourceWidth_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomSourceWidth_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeRectLightNode:GetCustomSourceHeight
    static readonly IntPtr GetCustomSourceHeight_NativeFunction;
    static readonly int GetCustomSourceHeight_ParamsSize;
    static readonly int GetCustomSourceHeight_AttributeValue_Offset;
    static readonly int GetCustomSourceHeight_ReturnValue_Offset;
    
    public bool GetCustomSourceHeight(out float attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomSourceHeight_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomSourceHeight_NativeFunction, ParamsBuffer);
            
            attributeValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetCustomSourceHeight_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomSourceHeight_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.InterchangeNodes;

[UClass]
public partial class InterchangeShaderGraphNode : UnrealSharp.InterchangeNodes.InterchangeShaderNode
{
    
    static InterchangeShaderGraphNode()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("InterchangeShaderGraphNode");
        
        
        SetCustomTwoSidedTransmission_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomTwoSidedTransmission");
        SetCustomTwoSidedTransmission_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomTwoSidedTransmission_NativeFunction);
        SetCustomTwoSidedTransmission_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomTwoSidedTransmission_NativeFunction, "AttributeValue");
        SetCustomTwoSidedTransmission_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomTwoSidedTransmission_NativeFunction, "ReturnValue");
        SetCustomTwoSided_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomTwoSided");
        SetCustomTwoSided_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomTwoSided_NativeFunction);
        SetCustomTwoSided_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomTwoSided_NativeFunction, "AttributeValue");
        SetCustomTwoSided_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomTwoSided_NativeFunction, "ReturnValue");
        SetCustomScreenSpaceReflections_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomScreenSpaceReflections");
        SetCustomScreenSpaceReflections_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomScreenSpaceReflections_NativeFunction);
        SetCustomScreenSpaceReflections_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomScreenSpaceReflections_NativeFunction, "AttributeValue");
        SetCustomScreenSpaceReflections_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomScreenSpaceReflections_NativeFunction, "ReturnValue");
        SetCustomOpacityMaskClipValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomOpacityMaskClipValue");
        SetCustomOpacityMaskClipValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomOpacityMaskClipValue_NativeFunction);
        SetCustomOpacityMaskClipValue_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomOpacityMaskClipValue_NativeFunction, "AttributeValue");
        SetCustomOpacityMaskClipValue_bAddApplyDelegate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomOpacityMaskClipValue_NativeFunction, "bAddApplyDelegate");
        SetCustomOpacityMaskClipValue_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomOpacityMaskClipValue_NativeFunction, "ReturnValue");
        SetCustomIsAShaderFunction_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomIsAShaderFunction");
        SetCustomIsAShaderFunction_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomIsAShaderFunction_NativeFunction);
        SetCustomIsAShaderFunction_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomIsAShaderFunction_NativeFunction, "AttributeValue");
        SetCustomIsAShaderFunction_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomIsAShaderFunction_NativeFunction, "ReturnValue");
        GetCustomTwoSidedTransmission_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomTwoSidedTransmission");
        GetCustomTwoSidedTransmission_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomTwoSidedTransmission_NativeFunction);
        GetCustomTwoSidedTransmission_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomTwoSidedTransmission_NativeFunction, "AttributeValue");
        GetCustomTwoSidedTransmission_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomTwoSidedTransmission_NativeFunction, "ReturnValue");
        GetCustomTwoSided_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomTwoSided");
        GetCustomTwoSided_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomTwoSided_NativeFunction);
        GetCustomTwoSided_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomTwoSided_NativeFunction, "AttributeValue");
        GetCustomTwoSided_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomTwoSided_NativeFunction, "ReturnValue");
        GetCustomScreenSpaceReflections_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomScreenSpaceReflections");
        GetCustomScreenSpaceReflections_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomScreenSpaceReflections_NativeFunction);
        GetCustomScreenSpaceReflections_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomScreenSpaceReflections_NativeFunction, "AttributeValue");
        GetCustomScreenSpaceReflections_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomScreenSpaceReflections_NativeFunction, "ReturnValue");
        GetCustomOpacityMaskClipValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomOpacityMaskClipValue");
        GetCustomOpacityMaskClipValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomOpacityMaskClipValue_NativeFunction);
        GetCustomOpacityMaskClipValue_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomOpacityMaskClipValue_NativeFunction, "AttributeValue");
        GetCustomOpacityMaskClipValue_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomOpacityMaskClipValue_NativeFunction, "ReturnValue");
        GetCustomIsAShaderFunction_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomIsAShaderFunction");
        GetCustomIsAShaderFunction_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomIsAShaderFunction_NativeFunction);
        GetCustomIsAShaderFunction_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomIsAShaderFunction_NativeFunction, "AttributeValue");
        GetCustomIsAShaderFunction_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomIsAShaderFunction_NativeFunction, "ReturnValue");
        
        
    }
    
    protected InterchangeShaderGraphNode(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/InterchangeNodes.InterchangeShaderGraphNode:SetCustomTwoSidedTransmission
    static readonly IntPtr SetCustomTwoSidedTransmission_NativeFunction;
    static readonly int SetCustomTwoSidedTransmission_ParamsSize;
    static readonly int SetCustomTwoSidedTransmission_AttributeValue_Offset;
    static readonly int SetCustomTwoSidedTransmission_ReturnValue_Offset;
    
    public bool SetCustomTwoSidedTransmission(bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomTwoSidedTransmission_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomTwoSidedTransmission_AttributeValue_Offset), 0, null, attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomTwoSidedTransmission_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomTwoSidedTransmission_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeShaderGraphNode:SetCustomTwoSided
    static readonly IntPtr SetCustomTwoSided_NativeFunction;
    static readonly int SetCustomTwoSided_ParamsSize;
    static readonly int SetCustomTwoSided_AttributeValue_Offset;
    static readonly int SetCustomTwoSided_ReturnValue_Offset;
    
    public bool SetCustomTwoSided(bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomTwoSided_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomTwoSided_AttributeValue_Offset), 0, null, attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomTwoSided_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomTwoSided_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeShaderGraphNode:SetCustomScreenSpaceReflections
    static readonly IntPtr SetCustomScreenSpaceReflections_NativeFunction;
    static readonly int SetCustomScreenSpaceReflections_ParamsSize;
    static readonly int SetCustomScreenSpaceReflections_AttributeValue_Offset;
    static readonly int SetCustomScreenSpaceReflections_ReturnValue_Offset;
    
    public bool SetCustomScreenSpaceReflections(bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomScreenSpaceReflections_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomScreenSpaceReflections_AttributeValue_Offset), 0, null, attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomScreenSpaceReflections_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomScreenSpaceReflections_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeShaderGraphNode:SetCustomOpacityMaskClipValue
    static readonly IntPtr SetCustomOpacityMaskClipValue_NativeFunction;
    static readonly int SetCustomOpacityMaskClipValue_ParamsSize;
    static readonly int SetCustomOpacityMaskClipValue_AttributeValue_Offset;
    static readonly int SetCustomOpacityMaskClipValue_bAddApplyDelegate_Offset;
    static readonly int SetCustomOpacityMaskClipValue_ReturnValue_Offset;
    
    public bool SetCustomOpacityMaskClipValue(float attributeValue, bool bAddApplyDelegate = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomOpacityMaskClipValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetCustomOpacityMaskClipValue_AttributeValue_Offset), 0, null, attributeValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomOpacityMaskClipValue_bAddApplyDelegate_Offset), 0, null, bAddApplyDelegate);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomOpacityMaskClipValue_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomOpacityMaskClipValue_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeShaderGraphNode:SetCustomIsAShaderFunction
    static readonly IntPtr SetCustomIsAShaderFunction_NativeFunction;
    static readonly int SetCustomIsAShaderFunction_ParamsSize;
    static readonly int SetCustomIsAShaderFunction_AttributeValue_Offset;
    static readonly int SetCustomIsAShaderFunction_ReturnValue_Offset;
    
    public bool SetCustomIsAShaderFunction(bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomIsAShaderFunction_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomIsAShaderFunction_AttributeValue_Offset), 0, null, attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomIsAShaderFunction_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomIsAShaderFunction_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeShaderGraphNode:GetCustomTwoSidedTransmission
    static readonly IntPtr GetCustomTwoSidedTransmission_NativeFunction;
    static readonly int GetCustomTwoSidedTransmission_ParamsSize;
    static readonly int GetCustomTwoSidedTransmission_AttributeValue_Offset;
    static readonly int GetCustomTwoSidedTransmission_ReturnValue_Offset;
    
    public bool GetCustomTwoSidedTransmission(out bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomTwoSidedTransmission_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomTwoSidedTransmission_NativeFunction, ParamsBuffer);
            
            attributeValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomTwoSidedTransmission_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomTwoSidedTransmission_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeShaderGraphNode:GetCustomTwoSided
    static readonly IntPtr GetCustomTwoSided_NativeFunction;
    static readonly int GetCustomTwoSided_ParamsSize;
    static readonly int GetCustomTwoSided_AttributeValue_Offset;
    static readonly int GetCustomTwoSided_ReturnValue_Offset;
    
    public bool GetCustomTwoSided(out bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomTwoSided_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomTwoSided_NativeFunction, ParamsBuffer);
            
            attributeValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomTwoSided_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomTwoSided_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeShaderGraphNode:GetCustomScreenSpaceReflections
    static readonly IntPtr GetCustomScreenSpaceReflections_NativeFunction;
    static readonly int GetCustomScreenSpaceReflections_ParamsSize;
    static readonly int GetCustomScreenSpaceReflections_AttributeValue_Offset;
    static readonly int GetCustomScreenSpaceReflections_ReturnValue_Offset;
    
    public bool GetCustomScreenSpaceReflections(out bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomScreenSpaceReflections_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomScreenSpaceReflections_NativeFunction, ParamsBuffer);
            
            attributeValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomScreenSpaceReflections_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomScreenSpaceReflections_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeShaderGraphNode:GetCustomOpacityMaskClipValue
    static readonly IntPtr GetCustomOpacityMaskClipValue_NativeFunction;
    static readonly int GetCustomOpacityMaskClipValue_ParamsSize;
    static readonly int GetCustomOpacityMaskClipValue_AttributeValue_Offset;
    static readonly int GetCustomOpacityMaskClipValue_ReturnValue_Offset;
    
    public bool GetCustomOpacityMaskClipValue(out float attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomOpacityMaskClipValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomOpacityMaskClipValue_NativeFunction, ParamsBuffer);
            
            attributeValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetCustomOpacityMaskClipValue_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomOpacityMaskClipValue_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeShaderGraphNode:GetCustomIsAShaderFunction
    static readonly IntPtr GetCustomIsAShaderFunction_NativeFunction;
    static readonly int GetCustomIsAShaderFunction_ParamsSize;
    static readonly int GetCustomIsAShaderFunction_AttributeValue_Offset;
    static readonly int GetCustomIsAShaderFunction_ReturnValue_Offset;
    
    public bool GetCustomIsAShaderFunction(out bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomIsAShaderFunction_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomIsAShaderFunction_NativeFunction, ParamsBuffer);
            
            attributeValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomIsAShaderFunction_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomIsAShaderFunction_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
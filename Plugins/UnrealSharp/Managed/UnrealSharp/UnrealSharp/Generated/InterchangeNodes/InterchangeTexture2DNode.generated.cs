// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.InterchangeNodes;

[UClass]
public partial class InterchangeTexture2DNode : UnrealSharp.InterchangeNodes.InterchangeTextureNode
{
    
    static InterchangeTexture2DNode()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("InterchangeTexture2DNode");
        
        
        SetCustomWrapV_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomWrapV");
        SetCustomWrapV_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomWrapV_NativeFunction);
        SetCustomWrapV_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomWrapV_NativeFunction, "AttributeValue");
        SetCustomWrapV_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomWrapV_NativeFunction, "ReturnValue");
        SetCustomWrapU_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomWrapU");
        SetCustomWrapU_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomWrapU_NativeFunction);
        SetCustomWrapU_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomWrapU_NativeFunction, "AttributeValue");
        SetCustomWrapU_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomWrapU_NativeFunction, "ReturnValue");
        GetCustomWrapV_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomWrapV");
        GetCustomWrapV_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomWrapV_NativeFunction);
        GetCustomWrapV_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomWrapV_NativeFunction, "AttributeValue");
        GetCustomWrapV_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomWrapV_NativeFunction, "ReturnValue");
        GetCustomWrapU_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomWrapU");
        GetCustomWrapU_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomWrapU_NativeFunction);
        GetCustomWrapU_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomWrapU_NativeFunction, "AttributeValue");
        GetCustomWrapU_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomWrapU_NativeFunction, "ReturnValue");
        
        
    }
    
    protected InterchangeTexture2DNode(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/InterchangeNodes.InterchangeTexture2DNode:SetCustomWrapV
    static readonly IntPtr SetCustomWrapV_NativeFunction;
    static readonly int SetCustomWrapV_ParamsSize;
    static readonly int SetCustomWrapV_AttributeValue_Offset;
    static readonly int SetCustomWrapV_ReturnValue_Offset;
    
    public bool SetCustomWrapV(UnrealSharp.InterchangeNodes.EInterchangeTextureWrapMode attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomWrapV_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.InterchangeNodes.EInterchangeTextureWrapMode>.ToNative(IntPtr.Add(ParamsBuffer, SetCustomWrapV_AttributeValue_Offset), 0, null, attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomWrapV_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomWrapV_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeTexture2DNode:SetCustomWrapU
    static readonly IntPtr SetCustomWrapU_NativeFunction;
    static readonly int SetCustomWrapU_ParamsSize;
    static readonly int SetCustomWrapU_AttributeValue_Offset;
    static readonly int SetCustomWrapU_ReturnValue_Offset;
    
    public bool SetCustomWrapU(UnrealSharp.InterchangeNodes.EInterchangeTextureWrapMode attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomWrapU_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.InterchangeNodes.EInterchangeTextureWrapMode>.ToNative(IntPtr.Add(ParamsBuffer, SetCustomWrapU_AttributeValue_Offset), 0, null, attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomWrapU_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomWrapU_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeTexture2DNode:GetCustomWrapV
    static readonly IntPtr GetCustomWrapV_NativeFunction;
    static readonly int GetCustomWrapV_ParamsSize;
    static readonly int GetCustomWrapV_AttributeValue_Offset;
    static readonly int GetCustomWrapV_ReturnValue_Offset;
    
    public bool GetCustomWrapV(out UnrealSharp.InterchangeNodes.EInterchangeTextureWrapMode attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomWrapV_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomWrapV_NativeFunction, ParamsBuffer);
            
            attributeValue = BlittableMarshaller<UnrealSharp.InterchangeNodes.EInterchangeTextureWrapMode>.FromNative(IntPtr.Add(ParamsBuffer, GetCustomWrapV_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomWrapV_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeTexture2DNode:GetCustomWrapU
    static readonly IntPtr GetCustomWrapU_NativeFunction;
    static readonly int GetCustomWrapU_ParamsSize;
    static readonly int GetCustomWrapU_AttributeValue_Offset;
    static readonly int GetCustomWrapU_ReturnValue_Offset;
    
    public bool GetCustomWrapU(out UnrealSharp.InterchangeNodes.EInterchangeTextureWrapMode attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomWrapU_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomWrapU_NativeFunction, ParamsBuffer);
            
            attributeValue = BlittableMarshaller<UnrealSharp.InterchangeNodes.EInterchangeTextureWrapMode>.FromNative(IntPtr.Add(ParamsBuffer, GetCustomWrapU_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomWrapU_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.InterchangeNodes;

[UClass]
abstract public partial class InterchangeTextureNode : UnrealSharp.InterchangeCore.InterchangeBaseNode
{
    
    static InterchangeTextureNode()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("InterchangeTextureNode");
        
        
        SetPayLoadKey_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPayLoadKey");
        SetPayLoadKey_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPayLoadKey_NativeFunction);
        SetPayLoadKey_PayloadKey_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPayLoadKey_NativeFunction, "PayloadKey");
        SetCustomSRGB_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomSRGB");
        SetCustomSRGB_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomSRGB_NativeFunction);
        SetCustomSRGB_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomSRGB_NativeFunction, "AttributeValue");
        SetCustomSRGB_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomSRGB_NativeFunction, "ReturnValue");
        SetCustomFilter_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomFilter");
        SetCustomFilter_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomFilter_NativeFunction);
        SetCustomFilter_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomFilter_NativeFunction, "AttributeValue");
        SetCustomFilter_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomFilter_NativeFunction, "ReturnValue");
        SetCustombFlipGreenChannel_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustombFlipGreenChannel");
        SetCustombFlipGreenChannel_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustombFlipGreenChannel_NativeFunction);
        SetCustombFlipGreenChannel_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustombFlipGreenChannel_NativeFunction, "AttributeValue");
        SetCustombFlipGreenChannel_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustombFlipGreenChannel_NativeFunction, "ReturnValue");
        GetCustomSRGB_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomSRGB");
        GetCustomSRGB_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomSRGB_NativeFunction);
        GetCustomSRGB_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomSRGB_NativeFunction, "AttributeValue");
        GetCustomSRGB_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomSRGB_NativeFunction, "ReturnValue");
        GetCustomFilter_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomFilter");
        GetCustomFilter_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomFilter_NativeFunction);
        GetCustomFilter_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomFilter_NativeFunction, "AttributeValue");
        GetCustomFilter_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomFilter_NativeFunction, "ReturnValue");
        GetCustombFlipGreenChannel_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustombFlipGreenChannel");
        GetCustombFlipGreenChannel_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustombFlipGreenChannel_NativeFunction);
        GetCustombFlipGreenChannel_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustombFlipGreenChannel_NativeFunction, "AttributeValue");
        GetCustombFlipGreenChannel_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustombFlipGreenChannel_NativeFunction, "ReturnValue");
        
        
    }
    
    protected InterchangeTextureNode(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/InterchangeNodes.InterchangeTextureNode:SetPayLoadKey
    static readonly IntPtr SetPayLoadKey_NativeFunction;
    static readonly int SetPayLoadKey_ParamsSize;
    static readonly int SetPayLoadKey_PayloadKey_Offset;
    
    public void SetPayLoadKey(string payloadKey)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPayLoadKey_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr PayloadKey_NativePtr = IntPtr.Add(ParamsBuffer,SetPayLoadKey_PayloadKey_Offset);
            StringMarshaller.ToNative(PayloadKey_NativePtr,0,null,payloadKey);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPayLoadKey_NativeFunction, ParamsBuffer);
            
            StringMarshaller.DestructInstance(PayloadKey_NativePtr, 0);
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeTextureNode:SetCustomSRGB
    static readonly IntPtr SetCustomSRGB_NativeFunction;
    static readonly int SetCustomSRGB_ParamsSize;
    static readonly int SetCustomSRGB_AttributeValue_Offset;
    static readonly int SetCustomSRGB_ReturnValue_Offset;
    
    public bool SetCustomSRGB(bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomSRGB_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustomSRGB_AttributeValue_Offset), 0, null, attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomSRGB_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomSRGB_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeTextureNode:SetCustomFilter
    static readonly IntPtr SetCustomFilter_NativeFunction;
    static readonly int SetCustomFilter_ParamsSize;
    static readonly int SetCustomFilter_AttributeValue_Offset;
    static readonly int SetCustomFilter_ReturnValue_Offset;
    
    public bool SetCustomFilter(UnrealSharp.InterchangeNodes.EInterchangeTextureFilterMode attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomFilter_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.InterchangeNodes.EInterchangeTextureFilterMode>.ToNative(IntPtr.Add(ParamsBuffer, SetCustomFilter_AttributeValue_Offset), 0, null, attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomFilter_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomFilter_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeTextureNode:SetCustombFlipGreenChannel
    static readonly IntPtr SetCustombFlipGreenChannel_NativeFunction;
    static readonly int SetCustombFlipGreenChannel_ParamsSize;
    static readonly int SetCustombFlipGreenChannel_AttributeValue_Offset;
    static readonly int SetCustombFlipGreenChannel_ReturnValue_Offset;
    
    public bool SetCustombFlipGreenChannel(bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustombFlipGreenChannel_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCustombFlipGreenChannel_AttributeValue_Offset), 0, null, attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustombFlipGreenChannel_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustombFlipGreenChannel_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeTextureNode:GetCustomSRGB
    static readonly IntPtr GetCustomSRGB_NativeFunction;
    static readonly int GetCustomSRGB_ParamsSize;
    static readonly int GetCustomSRGB_AttributeValue_Offset;
    static readonly int GetCustomSRGB_ReturnValue_Offset;
    
    public bool GetCustomSRGB(out bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomSRGB_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomSRGB_NativeFunction, ParamsBuffer);
            
            attributeValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomSRGB_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomSRGB_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeTextureNode:GetCustomFilter
    static readonly IntPtr GetCustomFilter_NativeFunction;
    static readonly int GetCustomFilter_ParamsSize;
    static readonly int GetCustomFilter_AttributeValue_Offset;
    static readonly int GetCustomFilter_ReturnValue_Offset;
    
    public bool GetCustomFilter(out UnrealSharp.InterchangeNodes.EInterchangeTextureFilterMode attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomFilter_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomFilter_NativeFunction, ParamsBuffer);
            
            attributeValue = BlittableMarshaller<UnrealSharp.InterchangeNodes.EInterchangeTextureFilterMode>.FromNative(IntPtr.Add(ParamsBuffer, GetCustomFilter_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomFilter_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeTextureNode:GetCustombFlipGreenChannel
    static readonly IntPtr GetCustombFlipGreenChannel_NativeFunction;
    static readonly int GetCustombFlipGreenChannel_ParamsSize;
    static readonly int GetCustombFlipGreenChannel_AttributeValue_Offset;
    static readonly int GetCustombFlipGreenChannel_ReturnValue_Offset;
    
    public bool GetCustombFlipGreenChannel(out bool attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustombFlipGreenChannel_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustombFlipGreenChannel_NativeFunction, ParamsBuffer);
            
            attributeValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustombFlipGreenChannel_AttributeValue_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustombFlipGreenChannel_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
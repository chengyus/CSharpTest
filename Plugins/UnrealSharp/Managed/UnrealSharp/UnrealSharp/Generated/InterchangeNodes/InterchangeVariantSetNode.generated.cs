// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.InterchangeNodes;

[UClass]
public partial class InterchangeVariantSetNode : UnrealSharp.InterchangeCore.InterchangeBaseNode
{
    
    static InterchangeVariantSetNode()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("InterchangeVariantSetNode");
        
        
        SetCustomVariantsPayloadKey_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomVariantsPayloadKey");
        SetCustomVariantsPayloadKey_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomVariantsPayloadKey_NativeFunction);
        SetCustomVariantsPayloadKey_PayloadKey_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomVariantsPayloadKey_NativeFunction, "PayloadKey");
        SetCustomVariantsPayloadKey_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomVariantsPayloadKey_NativeFunction, "ReturnValue");
        SetCustomDisplayText_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCustomDisplayText");
        SetCustomDisplayText_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCustomDisplayText_NativeFunction);
        SetCustomDisplayText_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomDisplayText_NativeFunction, "AttributeValue");
        SetCustomDisplayText_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCustomDisplayText_NativeFunction, "ReturnValue");
        RemoveCustomDependencyUid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveCustomDependencyUid");
        RemoveCustomDependencyUid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveCustomDependencyUid_NativeFunction);
        RemoveCustomDependencyUid_DependencyUid_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveCustomDependencyUid_NativeFunction, "DependencyUid");
        RemoveCustomDependencyUid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveCustomDependencyUid_NativeFunction, "ReturnValue");
        GetCustomVariantsPayloadKey_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomVariantsPayloadKey");
        GetCustomVariantsPayloadKey_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomVariantsPayloadKey_NativeFunction);
        GetCustomVariantsPayloadKey_PayloadKey_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomVariantsPayloadKey_NativeFunction, "PayloadKey");
        GetCustomVariantsPayloadKey_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomVariantsPayloadKey_NativeFunction, "ReturnValue");
        GetCustomDisplayText_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomDisplayText");
        GetCustomDisplayText_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomDisplayText_NativeFunction);
        GetCustomDisplayText_AttributeValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomDisplayText_NativeFunction, "AttributeValue");
        GetCustomDisplayText_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomDisplayText_NativeFunction, "ReturnValue");
        GetCustomDependencyUidCount_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomDependencyUidCount");
        GetCustomDependencyUidCount_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomDependencyUidCount_NativeFunction);
        GetCustomDependencyUidCount_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomDependencyUidCount_NativeFunction, "ReturnValue");
        GetCustomDependencyUid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCustomDependencyUid");
        GetCustomDependencyUid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCustomDependencyUid_NativeFunction);
        GetCustomDependencyUid_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomDependencyUid_NativeFunction, "Index");
        GetCustomDependencyUid_OutDependencyUid_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCustomDependencyUid_NativeFunction, "OutDependencyUid");
        AddCustomDependencyUid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddCustomDependencyUid");
        AddCustomDependencyUid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddCustomDependencyUid_NativeFunction);
        AddCustomDependencyUid_DependencyUid_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddCustomDependencyUid_NativeFunction, "DependencyUid");
        AddCustomDependencyUid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddCustomDependencyUid_NativeFunction, "ReturnValue");
        
        
    }
    
    protected InterchangeVariantSetNode(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/InterchangeNodes.InterchangeVariantSetNode:SetCustomVariantsPayloadKey
    static readonly IntPtr SetCustomVariantsPayloadKey_NativeFunction;
    static readonly int SetCustomVariantsPayloadKey_ParamsSize;
    static readonly int SetCustomVariantsPayloadKey_PayloadKey_Offset;
    static readonly int SetCustomVariantsPayloadKey_ReturnValue_Offset;
    
    public bool SetCustomVariantsPayloadKey(string payloadKey)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomVariantsPayloadKey_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr PayloadKey_NativePtr = IntPtr.Add(ParamsBuffer,SetCustomVariantsPayloadKey_PayloadKey_Offset);
            StringMarshaller.ToNative(PayloadKey_NativePtr,0,null,payloadKey);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomVariantsPayloadKey_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomVariantsPayloadKey_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(PayloadKey_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeVariantSetNode:SetCustomDisplayText
    static readonly IntPtr SetCustomDisplayText_NativeFunction;
    static readonly int SetCustomDisplayText_ParamsSize;
    static readonly int SetCustomDisplayText_AttributeValue_Offset;
    static readonly int SetCustomDisplayText_ReturnValue_Offset;
    
    public bool SetCustomDisplayText(string attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCustomDisplayText_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr AttributeValue_NativePtr = IntPtr.Add(ParamsBuffer,SetCustomDisplayText_AttributeValue_Offset);
            StringMarshaller.ToNative(AttributeValue_NativePtr,0,null,attributeValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCustomDisplayText_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCustomDisplayText_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(AttributeValue_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeVariantSetNode:RemoveCustomDependencyUid
    static readonly IntPtr RemoveCustomDependencyUid_NativeFunction;
    static readonly int RemoveCustomDependencyUid_ParamsSize;
    static readonly int RemoveCustomDependencyUid_DependencyUid_Offset;
    static readonly int RemoveCustomDependencyUid_ReturnValue_Offset;
    
    public bool RemoveCustomDependencyUid(string dependencyUid)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveCustomDependencyUid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr DependencyUid_NativePtr = IntPtr.Add(ParamsBuffer,RemoveCustomDependencyUid_DependencyUid_Offset);
            StringMarshaller.ToNative(DependencyUid_NativePtr,0,null,dependencyUid);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveCustomDependencyUid_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveCustomDependencyUid_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(DependencyUid_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeVariantSetNode:GetCustomVariantsPayloadKey
    static readonly IntPtr GetCustomVariantsPayloadKey_NativeFunction;
    static readonly int GetCustomVariantsPayloadKey_ParamsSize;
    static readonly int GetCustomVariantsPayloadKey_PayloadKey_Offset;
    static readonly int GetCustomVariantsPayloadKey_ReturnValue_Offset;
    
    public bool GetCustomVariantsPayloadKey(out string payloadKey)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomVariantsPayloadKey_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomVariantsPayloadKey_NativeFunction, ParamsBuffer);
            
            IntPtr PayloadKey_NativePtr = IntPtr.Add(ParamsBuffer,GetCustomVariantsPayloadKey_PayloadKey_Offset);
            payloadKey = StringMarshaller.FromNative(PayloadKey_NativePtr,0,null);
            StringMarshaller.DestructInstance(PayloadKey_NativePtr, 0);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomVariantsPayloadKey_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeVariantSetNode:GetCustomDisplayText
    static readonly IntPtr GetCustomDisplayText_NativeFunction;
    static readonly int GetCustomDisplayText_ParamsSize;
    static readonly int GetCustomDisplayText_AttributeValue_Offset;
    static readonly int GetCustomDisplayText_ReturnValue_Offset;
    
    public bool GetCustomDisplayText(out string attributeValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomDisplayText_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomDisplayText_NativeFunction, ParamsBuffer);
            
            IntPtr AttributeValue_NativePtr = IntPtr.Add(ParamsBuffer,GetCustomDisplayText_AttributeValue_Offset);
            attributeValue = StringMarshaller.FromNative(AttributeValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(AttributeValue_NativePtr, 0);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetCustomDisplayText_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeVariantSetNode:GetCustomDependencyUidCount
    static readonly IntPtr GetCustomDependencyUidCount_NativeFunction;
    static readonly int GetCustomDependencyUidCount_ParamsSize;
    static readonly int GetCustomDependencyUidCount_ReturnValue_Offset;
    
    public int GetCustomDependencyUidCount()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomDependencyUidCount_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomDependencyUidCount_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetCustomDependencyUidCount_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeVariantSetNode:GetCustomDependencyUid
    static readonly IntPtr GetCustomDependencyUid_NativeFunction;
    static readonly int GetCustomDependencyUid_ParamsSize;
    static readonly int GetCustomDependencyUid_Index_Offset;
    static readonly int GetCustomDependencyUid_OutDependencyUid_Offset;
    
    public void GetCustomDependencyUid(int index, out string outDependencyUid)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCustomDependencyUid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetCustomDependencyUid_Index_Offset), 0, null, index);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCustomDependencyUid_NativeFunction, ParamsBuffer);
            
            IntPtr OutDependencyUid_NativePtr = IntPtr.Add(ParamsBuffer,GetCustomDependencyUid_OutDependencyUid_Offset);
            outDependencyUid = StringMarshaller.FromNative(OutDependencyUid_NativePtr,0,null);
            StringMarshaller.DestructInstance(OutDependencyUid_NativePtr, 0);
            
        }
    }
    
    // Function /Script/InterchangeNodes.InterchangeVariantSetNode:AddCustomDependencyUid
    static readonly IntPtr AddCustomDependencyUid_NativeFunction;
    static readonly int AddCustomDependencyUid_ParamsSize;
    static readonly int AddCustomDependencyUid_DependencyUid_Offset;
    static readonly int AddCustomDependencyUid_ReturnValue_Offset;
    
    public bool AddCustomDependencyUid(string dependencyUid)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddCustomDependencyUid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr DependencyUid_NativePtr = IntPtr.Add(ParamsBuffer,AddCustomDependencyUid_DependencyUid_Offset);
            StringMarshaller.ToNative(DependencyUid_NativePtr,0,null,dependencyUid);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddCustomDependencyUid_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, AddCustomDependencyUid_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(DependencyUid_NativePtr, 0);
            return returnValue;
        }
    }
    
    
}
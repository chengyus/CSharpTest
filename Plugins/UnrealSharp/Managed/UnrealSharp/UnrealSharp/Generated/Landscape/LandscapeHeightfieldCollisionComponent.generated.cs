// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Landscape;

[UClass]
public partial class LandscapeHeightfieldCollisionComponent : UnrealSharp.Engine.PrimitiveComponent
{
    
    static LandscapeHeightfieldCollisionComponent()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("LandscapeHeightfieldCollisionComponent");
        
        
        GetRenderComponent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetRenderComponent");
        GetRenderComponent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetRenderComponent_NativeFunction);
        GetRenderComponent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetRenderComponent_NativeFunction, "ReturnValue");
        
        
    }
    
    protected LandscapeHeightfieldCollisionComponent(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Landscape.LandscapeHeightfieldCollisionComponent:GetRenderComponent
    static readonly IntPtr GetRenderComponent_NativeFunction;
    static readonly int GetRenderComponent_ParamsSize;
    static readonly int GetRenderComponent_ReturnValue_Offset;
    
    public UnrealSharp.Landscape.LandscapeComponent GetRenderComponent()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetRenderComponent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetRenderComponent_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Landscape.LandscapeComponent returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Landscape.LandscapeComponent>.FromNative(IntPtr.Add(ParamsBuffer, GetRenderComponent_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.MovieSceneTracks;
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.LevelSequence;

[UClass]
public partial class DefaultLevelSequenceInstanceData : UnrealSharp.CoreUObject.Object, IMovieSceneTransformOrigin
{
    
    static DefaultLevelSequenceInstanceData()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("DefaultLevelSequenceInstanceData");
        
        TransformOriginActor_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "TransformOriginActor");
        TransformOrigin_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "TransformOrigin");
        
        
        IntPtr BP_GetTransformOrigin_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "BP_GetTransformOrigin");
        BP_GetTransformOrigin_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(BP_GetTransformOrigin_NativeFunction);
        BP_GetTransformOrigin_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BP_GetTransformOrigin_NativeFunction, "ReturnValue");
        
        
    }
    
    protected DefaultLevelSequenceInstanceData(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ObjectProperty /Script/LevelSequence.DefaultLevelSequenceInstanceData:TransformOriginActor
    static readonly int TransformOriginActor_Offset;
    
    public UnrealSharp.Engine.Actor TransformOriginActor
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.Engine.Actor>.FromNative(IntPtr.Add(NativeObject, TransformOriginActor_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            ObjectMarshaller<UnrealSharp.Engine.Actor>.ToNative(IntPtr.Add(NativeObject, TransformOriginActor_Offset), 0, this, value);
        }
    }
    
    // StructProperty /Script/LevelSequence.DefaultLevelSequenceInstanceData:TransformOrigin
    static readonly int TransformOrigin_Offset;
    
    public UnrealSharp.Transform TransformOrigin
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Transform>.FromNative(IntPtr.Add(NativeObject, TransformOrigin_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.Transform>.ToNative(IntPtr.Add(NativeObject, TransformOrigin_Offset), 0, this, value);
        }
    }
    
    // Function /Script/MovieSceneTracks.MovieSceneTransformOrigin:BP_GetTransformOrigin
    IntPtr BP_GetTransformOrigin_NativeFunction;
    static readonly int BP_GetTransformOrigin_ParamsSize;
    static readonly int BP_GetTransformOrigin_ReturnValue_Offset;
    
    [UFunction(FunctionFlags.BlueprintEvent)]
    public UnrealSharp.Transform BP_GetTransformOrigin()
    {
        unsafe
        {
            if (BP_GetTransformOrigin_NativeFunction == IntPtr.Zero)
            {
                BP_GetTransformOrigin_NativeFunction = UClassExporter.CallGetNativeFunctionFromInstanceAndName(NativeObject, "BP_GetTransformOrigin");
            }
            byte* ParamsBufferAllocation = stackalloc byte[BP_GetTransformOrigin_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, BP_GetTransformOrigin_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Transform returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.Transform>.FromNative(IntPtr.Add(ParamsBuffer, BP_GetTransformOrigin_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    //Hide implementation function from Intellisense/ReSharper
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    protected virtual UnrealSharp.Transform BP_GetTransformOrigin_Implementation()
    {
        return default(UnrealSharp.Transform);
    }
    void Invoke_BP_GetTransformOrigin(IntPtr buffer, IntPtr returnBuffer)
    {
        unsafe
        {
            UnrealSharp.Transform returnValue = BP_GetTransformOrigin_Implementation();
            BlittableMarshaller<UnrealSharp.Transform>.ToNative(IntPtr.Add(returnBuffer, 0), 0, null, returnValue);
        }
    }
    
    
}
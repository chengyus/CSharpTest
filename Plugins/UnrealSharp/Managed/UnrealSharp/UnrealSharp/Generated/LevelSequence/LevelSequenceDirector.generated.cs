// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.LevelSequence;

[UClass]
public partial class LevelSequenceDirector : UnrealSharp.CoreUObject.Object
{
    
    static LevelSequenceDirector()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("LevelSequenceDirector");
        
        Player_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Player");
        
        GetSequence_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSequence");
        GetSequence_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSequence_NativeFunction);
        GetSequence_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSequence_NativeFunction, "ReturnValue");
        GetRootSequenceTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetRootSequenceTime");
        GetRootSequenceTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetRootSequenceTime_NativeFunction);
        GetRootSequenceTime_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetRootSequenceTime_NativeFunction, "ReturnValue");
        GetMasterSequenceTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetMasterSequenceTime");
        GetMasterSequenceTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetMasterSequenceTime_NativeFunction);
        GetMasterSequenceTime_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMasterSequenceTime_NativeFunction, "ReturnValue");
        GetCurrentTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCurrentTime");
        GetCurrentTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCurrentTime_NativeFunction);
        GetCurrentTime_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCurrentTime_NativeFunction, "ReturnValue");
        GetBoundObjects_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBoundObjects");
        GetBoundObjects_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBoundObjects_NativeFunction);
        GetBoundObjects_ObjectBinding_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBoundObjects_NativeFunction, "ObjectBinding");
        GetBoundObjects_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBoundObjects_NativeFunction, "ReturnValue");
        GetBoundObjects_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetBoundObjects_NativeFunction, "ReturnValue");
        GetBoundObject_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBoundObject");
        GetBoundObject_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBoundObject_NativeFunction);
        GetBoundObject_ObjectBinding_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBoundObject_NativeFunction, "ObjectBinding");
        GetBoundObject_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBoundObject_NativeFunction, "ReturnValue");
        GetBoundActors_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBoundActors");
        GetBoundActors_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBoundActors_NativeFunction);
        GetBoundActors_ObjectBinding_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBoundActors_NativeFunction, "ObjectBinding");
        GetBoundActors_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBoundActors_NativeFunction, "ReturnValue");
        GetBoundActors_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetBoundActors_NativeFunction, "ReturnValue");
        GetBoundActor_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBoundActor");
        GetBoundActor_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBoundActor_NativeFunction);
        GetBoundActor_ObjectBinding_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBoundActor_NativeFunction, "ObjectBinding");
        GetBoundActor_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBoundActor_NativeFunction, "ReturnValue");
        
        
    }
    
    protected LevelSequenceDirector(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ObjectProperty /Script/LevelSequence.LevelSequenceDirector:Player
    static readonly int Player_Offset;
    
    public UnrealSharp.LevelSequence.LevelSequencePlayer Player
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.LevelSequence.LevelSequencePlayer>.FromNative(IntPtr.Add(NativeObject, Player_Offset), 0, this);
        }
    }
    
    // Function /Script/LevelSequence.LevelSequenceDirector:GetSequence
    static readonly IntPtr GetSequence_NativeFunction;
    static readonly int GetSequence_ParamsSize;
    static readonly int GetSequence_ReturnValue_Offset;
    
    public UnrealSharp.MovieScene.MovieSceneSequence GetSequence()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSequence_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSequence_NativeFunction, ParamsBuffer);
            
            UnrealSharp.MovieScene.MovieSceneSequence returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSequence>.FromNative(IntPtr.Add(ParamsBuffer, GetSequence_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/LevelSequence.LevelSequenceDirector:GetRootSequenceTime
    static readonly IntPtr GetRootSequenceTime_NativeFunction;
    static readonly int GetRootSequenceTime_ParamsSize;
    static readonly int GetRootSequenceTime_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.QualifiedTime GetRootSequenceTime()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetRootSequenceTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetRootSequenceTime_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.QualifiedTime returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.CoreUObject.QualifiedTime>.FromNative(IntPtr.Add(ParamsBuffer, GetRootSequenceTime_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/LevelSequence.LevelSequenceDirector:GetMasterSequenceTime
    static readonly IntPtr GetMasterSequenceTime_NativeFunction;
    static readonly int GetMasterSequenceTime_ParamsSize;
    static readonly int GetMasterSequenceTime_ReturnValue_Offset;
    
    [Obsolete("Use GetRootSequenceTime")]
    public UnrealSharp.CoreUObject.QualifiedTime GetMasterSequenceTime()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetMasterSequenceTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetMasterSequenceTime_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.QualifiedTime returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.CoreUObject.QualifiedTime>.FromNative(IntPtr.Add(ParamsBuffer, GetMasterSequenceTime_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/LevelSequence.LevelSequenceDirector:GetCurrentTime
    static readonly IntPtr GetCurrentTime_NativeFunction;
    static readonly int GetCurrentTime_ParamsSize;
    static readonly int GetCurrentTime_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.QualifiedTime GetCurrentTime()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCurrentTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCurrentTime_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.QualifiedTime returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.CoreUObject.QualifiedTime>.FromNative(IntPtr.Add(ParamsBuffer, GetCurrentTime_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/LevelSequence.LevelSequenceDirector:GetBoundObjects
    static readonly IntPtr GetBoundObjects_NativeFunction;
    static readonly int GetBoundObjects_ParamsSize;
    static readonly int GetBoundObjects_ObjectBinding_Offset;
    static readonly int GetBoundObjects_ReturnValue_Offset;
    static readonly int GetBoundObjects_ReturnValue_ElementSize;
    
    public System.Collections.Generic.IList<UnrealSharp.CoreUObject.Object> GetBoundObjects(UnrealSharp.MovieScene.MovieSceneObjectBindingID objectBinding)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBoundObjects_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.MovieScene.MovieSceneObjectBindingIDMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetBoundObjects_ObjectBinding_Offset), 0, null, objectBinding);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetBoundObjects_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.CoreUObject.Object> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, GetBoundObjects_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Object> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Object> (1, ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative, ObjectMarshaller<UnrealSharp.CoreUObject.Object>.FromNative, GetBoundObjects_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Object>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/LevelSequence.LevelSequenceDirector:GetBoundObject
    static readonly IntPtr GetBoundObject_NativeFunction;
    static readonly int GetBoundObject_ParamsSize;
    static readonly int GetBoundObject_ObjectBinding_Offset;
    static readonly int GetBoundObject_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.Object GetBoundObject(UnrealSharp.MovieScene.MovieSceneObjectBindingID objectBinding)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBoundObject_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.MovieScene.MovieSceneObjectBindingIDMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetBoundObject_ObjectBinding_Offset), 0, null, objectBinding);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetBoundObject_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.Object returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.CoreUObject.Object>.FromNative(IntPtr.Add(ParamsBuffer, GetBoundObject_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/LevelSequence.LevelSequenceDirector:GetBoundActors
    static readonly IntPtr GetBoundActors_NativeFunction;
    static readonly int GetBoundActors_ParamsSize;
    static readonly int GetBoundActors_ObjectBinding_Offset;
    static readonly int GetBoundActors_ReturnValue_Offset;
    static readonly int GetBoundActors_ReturnValue_ElementSize;
    
    public System.Collections.Generic.IList<UnrealSharp.Engine.Actor> GetBoundActors(UnrealSharp.MovieScene.MovieSceneObjectBindingID objectBinding)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBoundActors_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.MovieScene.MovieSceneObjectBindingIDMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetBoundActors_ObjectBinding_Offset), 0, null, objectBinding);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetBoundActors_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.Engine.Actor> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, GetBoundActors_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor> (1, ObjectMarshaller<UnrealSharp.Engine.Actor>.ToNative, ObjectMarshaller<UnrealSharp.Engine.Actor>.FromNative, GetBoundActors_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/LevelSequence.LevelSequenceDirector:GetBoundActor
    static readonly IntPtr GetBoundActor_NativeFunction;
    static readonly int GetBoundActor_ParamsSize;
    static readonly int GetBoundActor_ObjectBinding_Offset;
    static readonly int GetBoundActor_ReturnValue_Offset;
    
    public UnrealSharp.Engine.Actor GetBoundActor(UnrealSharp.MovieScene.MovieSceneObjectBindingID objectBinding)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBoundActor_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.MovieScene.MovieSceneObjectBindingIDMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetBoundActor_ObjectBinding_Offset), 0, null, objectBinding);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetBoundActor_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.Actor returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.Actor>.FromNative(IntPtr.Add(ParamsBuffer, GetBoundActor_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/LevelSequence.LevelSequenceDirector:OnCreated
    IntPtr OnCreated_NativeFunction;
    
    [UFunction(FunctionFlags.BlueprintEvent)]
    public virtual void OnCreated()
    {
        unsafe
        {
            if (OnCreated_NativeFunction == IntPtr.Zero)
            {
                OnCreated_NativeFunction = UClassExporter.CallGetNativeFunctionFromInstanceAndName(NativeObject, "OnCreated");
            }
            UObjectExporter.CallInvokeNativeFunction(NativeObject, OnCreated_NativeFunction, IntPtr.Zero);
        }
    }
    
    //Hide implementation function from Intellisense/ReSharper
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    protected virtual void OnCreated_Implementation()
    {
    }
    void Invoke_OnCreated(IntPtr buffer, IntPtr returnBuffer)
    {
        unsafe
        {
            OnCreated_Implementation();
        }
    }
    
    
}
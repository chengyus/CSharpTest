// This file is automatically generated
using UnrealSharp.MovieScene;
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.LevelSequence;

[UClass]
public partial class LevelSequenceMediaController : UnrealSharp.Engine.Actor, IMovieSceneCustomClockSource
{
    
    static LevelSequenceMediaController()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("LevelSequenceMediaController");
        
        Sequence_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Sequence");
        MediaComponent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "MediaComponent");
        ServerStartTimeSeconds_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ServerStartTimeSeconds");
        
        SynchronizeToServer_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SynchronizeToServer");
        SynchronizeToServer_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SynchronizeToServer_NativeFunction);
        SynchronizeToServer_DesyncThresholdSeconds_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SynchronizeToServer_NativeFunction, "DesyncThresholdSeconds");
        Play_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Play");
        GetSequence_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSequence");
        GetSequence_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSequence_NativeFunction);
        GetSequence_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSequence_NativeFunction, "ReturnValue");
        GetMediaComponent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetMediaComponent");
        GetMediaComponent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetMediaComponent_NativeFunction);
        GetMediaComponent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMediaComponent_NativeFunction, "ReturnValue");
        
        
    }
    
    protected LevelSequenceMediaController(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ObjectProperty /Script/LevelSequence.LevelSequenceMediaController:Sequence
    static readonly int Sequence_Offset;
    
    public UnrealSharp.LevelSequence.LevelSequenceActor Sequence
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.LevelSequence.LevelSequenceActor>.FromNative(IntPtr.Add(NativeObject, Sequence_Offset), 0, this);
        }
    }
    
    // ObjectProperty /Script/LevelSequence.LevelSequenceMediaController:MediaComponent
    static readonly int MediaComponent_Offset;
    
    public UnrealSharp.MediaAssets.MediaComponent MediaComponent
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.MediaAssets.MediaComponent>.FromNative(IntPtr.Add(NativeObject, MediaComponent_Offset), 0, this);
        }
    }
    
    // FloatProperty /Script/LevelSequence.LevelSequenceMediaController:ServerStartTimeSeconds
    static readonly int ServerStartTimeSeconds_Offset;
    
    public float ServerStartTimeSeconds
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, ServerStartTimeSeconds_Offset), 0, this);
        }
    }
    
    // Function /Script/LevelSequence.LevelSequenceMediaController:SynchronizeToServer
    static readonly IntPtr SynchronizeToServer_NativeFunction;
    static readonly int SynchronizeToServer_ParamsSize;
    static readonly int SynchronizeToServer_DesyncThresholdSeconds_Offset;
    
    public void SynchronizeToServer(float desyncThresholdSeconds = 2.000000f)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SynchronizeToServer_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SynchronizeToServer_DesyncThresholdSeconds_Offset), 0, null, desyncThresholdSeconds);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SynchronizeToServer_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/LevelSequence.LevelSequenceMediaController:Play
    static readonly IntPtr Play_NativeFunction;
    
    public void Play()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, Play_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/LevelSequence.LevelSequenceMediaController:GetSequence
    static readonly IntPtr GetSequence_NativeFunction;
    static readonly int GetSequence_ParamsSize;
    static readonly int GetSequence_ReturnValue_Offset;
    
    public UnrealSharp.LevelSequence.LevelSequenceActor GetSequence()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSequence_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSequence_NativeFunction, ParamsBuffer);
            
            UnrealSharp.LevelSequence.LevelSequenceActor returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.LevelSequence.LevelSequenceActor>.FromNative(IntPtr.Add(ParamsBuffer, GetSequence_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/LevelSequence.LevelSequenceMediaController:GetMediaComponent
    static readonly IntPtr GetMediaComponent_NativeFunction;
    static readonly int GetMediaComponent_ParamsSize;
    static readonly int GetMediaComponent_ReturnValue_Offset;
    
    public UnrealSharp.MediaAssets.MediaComponent GetMediaComponent()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetMediaComponent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetMediaComponent_NativeFunction, ParamsBuffer);
            
            UnrealSharp.MediaAssets.MediaComponent returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.MediaAssets.MediaComponent>.FromNative(IntPtr.Add(ParamsBuffer, GetMediaComponent_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
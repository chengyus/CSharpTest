// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.LevelSequence;

[UClass]
public partial class LevelSequencePlayer : UnrealSharp.MovieScene.MovieSceneSequencePlayer
{
    
    static readonly IntPtr NativeClassPtr;
    static LevelSequencePlayer()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("LevelSequencePlayer");
        
        
        GetActiveCameraComponent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetActiveCameraComponent");
        GetActiveCameraComponent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetActiveCameraComponent_NativeFunction);
        GetActiveCameraComponent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetActiveCameraComponent_NativeFunction, "ReturnValue");
        CreateLevelSequencePlayer_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CreateLevelSequencePlayer");
        CreateLevelSequencePlayer_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(CreateLevelSequencePlayer_NativeFunction);
        CreateLevelSequencePlayer_WorldContextObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CreateLevelSequencePlayer_NativeFunction, "WorldContextObject");
        CreateLevelSequencePlayer_LevelSequence_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CreateLevelSequencePlayer_NativeFunction, "LevelSequence");
        CreateLevelSequencePlayer_Settings_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CreateLevelSequencePlayer_NativeFunction, "Settings");
        CreateLevelSequencePlayer_OutActor_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CreateLevelSequencePlayer_NativeFunction, "OutActor");
        CreateLevelSequencePlayer_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CreateLevelSequencePlayer_NativeFunction, "ReturnValue");
        
        
    }
    
    protected LevelSequencePlayer(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/LevelSequence.LevelSequencePlayer:GetActiveCameraComponent
    static readonly IntPtr GetActiveCameraComponent_NativeFunction;
    static readonly int GetActiveCameraComponent_ParamsSize;
    static readonly int GetActiveCameraComponent_ReturnValue_Offset;
    
    public UnrealSharp.Engine.CameraComponent GetActiveCameraComponent()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetActiveCameraComponent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetActiveCameraComponent_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.CameraComponent returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.CameraComponent>.FromNative(IntPtr.Add(ParamsBuffer, GetActiveCameraComponent_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/LevelSequence.LevelSequencePlayer:CreateLevelSequencePlayer
    static readonly IntPtr CreateLevelSequencePlayer_NativeFunction;
    static readonly int CreateLevelSequencePlayer_ParamsSize;
    static readonly int CreateLevelSequencePlayer_WorldContextObject_Offset;
    static readonly int CreateLevelSequencePlayer_LevelSequence_Offset;
    static readonly int CreateLevelSequencePlayer_Settings_Offset;
    static readonly int CreateLevelSequencePlayer_OutActor_Offset;
    static readonly int CreateLevelSequencePlayer_ReturnValue_Offset;
    
    public static UnrealSharp.LevelSequence.LevelSequencePlayer CreateLevelSequencePlayer(UnrealSharp.CoreUObject.Object worldContextObject, UnrealSharp.LevelSequence.LevelSequence levelSequence, UnrealSharp.MovieScene.MovieSceneSequencePlaybackSettings settings, out UnrealSharp.LevelSequence.LevelSequenceActor outActor)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[CreateLevelSequencePlayer_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, CreateLevelSequencePlayer_WorldContextObject_Offset), 0, null, worldContextObject);
            ObjectMarshaller<UnrealSharp.LevelSequence.LevelSequence>.ToNative(IntPtr.Add(ParamsBuffer, CreateLevelSequencePlayer_LevelSequence_Offset), 0, null, levelSequence);
            UnrealSharp.MovieScene.MovieSceneSequencePlaybackSettingsMarshaler.ToNative(IntPtr.Add(ParamsBuffer, CreateLevelSequencePlayer_Settings_Offset), 0, null, settings);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, CreateLevelSequencePlayer_NativeFunction, ParamsBuffer);
            
            outActor = ObjectMarshaller<UnrealSharp.LevelSequence.LevelSequenceActor>.FromNative(IntPtr.Add(ParamsBuffer, CreateLevelSequencePlayer_OutActor_Offset), 0, null);
            UnrealSharp.LevelSequence.LevelSequencePlayer returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.LevelSequence.LevelSequencePlayer>.FromNative(IntPtr.Add(ParamsBuffer, CreateLevelSequencePlayer_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
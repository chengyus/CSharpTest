// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.MRMesh;

[UClass]
public partial class MRMeshComponent : UnrealSharp.Engine.PrimitiveComponent
{
    
    static MRMeshComponent()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("MRMeshComponent");
        
        
        SetWireframeMaterial_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetWireframeMaterial");
        SetWireframeMaterial_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetWireframeMaterial_NativeFunction);
        SetWireframeMaterial_InMaterial_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetWireframeMaterial_NativeFunction, "InMaterial");
        SetWireframeColor_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetWireframeColor");
        SetWireframeColor_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetWireframeColor_NativeFunction);
        SetWireframeColor_InColor_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetWireframeColor_NativeFunction, "InColor");
        SetUseWireframe_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetUseWireframe");
        SetUseWireframe_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetUseWireframe_NativeFunction);
        SetUseWireframe_bUseWireframe_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetUseWireframe_NativeFunction, "bUseWireframe");
        SetEnableMeshOcclusion_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetEnableMeshOcclusion");
        SetEnableMeshOcclusion_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetEnableMeshOcclusion_NativeFunction);
        SetEnableMeshOcclusion_bEnable_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEnableMeshOcclusion_NativeFunction, "bEnable");
        RequestNavMeshUpdate_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RequestNavMeshUpdate");
        IsConnected_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsConnected");
        IsConnected_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsConnected_NativeFunction);
        IsConnected_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsConnected_NativeFunction, "ReturnValue");
        GetWireframeColor_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetWireframeColor");
        GetWireframeColor_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetWireframeColor_NativeFunction);
        GetWireframeColor_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetWireframeColor_NativeFunction, "ReturnValue");
        GetUseWireframe_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetUseWireframe");
        GetUseWireframe_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetUseWireframe_NativeFunction);
        GetUseWireframe_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetUseWireframe_NativeFunction, "ReturnValue");
        GetEnableMeshOcclusion_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetEnableMeshOcclusion");
        GetEnableMeshOcclusion_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetEnableMeshOcclusion_NativeFunction);
        GetEnableMeshOcclusion_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetEnableMeshOcclusion_NativeFunction, "ReturnValue");
        ForceNavMeshUpdate_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ForceNavMeshUpdate");
        Clear_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Clear");
        
        
    }
    
    protected MRMeshComponent(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/MRMesh.MRMeshComponent:SetWireframeMaterial
    static readonly IntPtr SetWireframeMaterial_NativeFunction;
    static readonly int SetWireframeMaterial_ParamsSize;
    static readonly int SetWireframeMaterial_InMaterial_Offset;
    
    public void SetWireframeMaterial(UnrealSharp.Engine.MaterialInterface inMaterial)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetWireframeMaterial_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.MaterialInterface>.ToNative(IntPtr.Add(ParamsBuffer, SetWireframeMaterial_InMaterial_Offset), 0, null, inMaterial);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetWireframeMaterial_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/MRMesh.MRMeshComponent:SetWireframeColor
    static readonly IntPtr SetWireframeColor_NativeFunction;
    static readonly int SetWireframeColor_ParamsSize;
    static readonly int SetWireframeColor_InColor_Offset;
    
    public void SetWireframeColor(UnrealSharp.CoreUObject.LinearColor inColor)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetWireframeColor_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.ToNative(IntPtr.Add(ParamsBuffer, SetWireframeColor_InColor_Offset), 0, null, inColor);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetWireframeColor_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/MRMesh.MRMeshComponent:SetUseWireframe
    static readonly IntPtr SetUseWireframe_NativeFunction;
    static readonly int SetUseWireframe_ParamsSize;
    static readonly int SetUseWireframe_bUseWireframe_Offset;
    
    public void SetUseWireframe(bool bUseWireframe)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetUseWireframe_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetUseWireframe_bUseWireframe_Offset), 0, null, bUseWireframe);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetUseWireframe_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/MRMesh.MRMeshComponent:SetEnableMeshOcclusion
    static readonly IntPtr SetEnableMeshOcclusion_NativeFunction;
    static readonly int SetEnableMeshOcclusion_ParamsSize;
    static readonly int SetEnableMeshOcclusion_bEnable_Offset;
    
    public void SetEnableMeshOcclusion(bool bEnable)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetEnableMeshOcclusion_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetEnableMeshOcclusion_bEnable_Offset), 0, null, bEnable);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetEnableMeshOcclusion_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/MRMesh.MRMeshComponent:RequestNavMeshUpdate
    static readonly IntPtr RequestNavMeshUpdate_NativeFunction;
    
    public void RequestNavMeshUpdate()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RequestNavMeshUpdate_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/MRMesh.MRMeshComponent:IsConnected
    static readonly IntPtr IsConnected_NativeFunction;
    static readonly int IsConnected_ParamsSize;
    static readonly int IsConnected_ReturnValue_Offset;
    
    public bool IsConnected()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsConnected_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsConnected_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsConnected_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MRMesh.MRMeshComponent:GetWireframeColor
    static readonly IntPtr GetWireframeColor_NativeFunction;
    static readonly int GetWireframeColor_ParamsSize;
    static readonly int GetWireframeColor_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.LinearColor GetWireframeColor()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetWireframeColor_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetWireframeColor_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.LinearColor returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.FromNative(IntPtr.Add(ParamsBuffer, GetWireframeColor_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MRMesh.MRMeshComponent:GetUseWireframe
    static readonly IntPtr GetUseWireframe_NativeFunction;
    static readonly int GetUseWireframe_ParamsSize;
    static readonly int GetUseWireframe_ReturnValue_Offset;
    
    public bool GetUseWireframe()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetUseWireframe_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetUseWireframe_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetUseWireframe_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MRMesh.MRMeshComponent:GetEnableMeshOcclusion
    static readonly IntPtr GetEnableMeshOcclusion_NativeFunction;
    static readonly int GetEnableMeshOcclusion_ParamsSize;
    static readonly int GetEnableMeshOcclusion_ReturnValue_Offset;
    
    public bool GetEnableMeshOcclusion()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetEnableMeshOcclusion_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetEnableMeshOcclusion_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetEnableMeshOcclusion_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MRMesh.MRMeshComponent:ForceNavMeshUpdate
    static readonly IntPtr ForceNavMeshUpdate_NativeFunction;
    
    public void ForceNavMeshUpdate()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ForceNavMeshUpdate_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/MRMesh.MRMeshComponent:Clear
    static readonly IntPtr Clear_NativeFunction;
    
    public void Clear()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, Clear_NativeFunction, IntPtr.Zero);
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.MetasoundFrontend;

[UClass]
public partial class MetasoundParameterPack : UnrealSharp.CoreUObject.Object
{
    
    static readonly IntPtr NativeClassPtr;
    static MetasoundParameterPack()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("MetasoundParameterPack");
        
        
        SetTrigger_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetTrigger");
        SetTrigger_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetTrigger_NativeFunction);
        SetTrigger_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetTrigger_NativeFunction, "ParameterName");
        SetTrigger_OnlyIfExists_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetTrigger_NativeFunction, "OnlyIfExists");
        SetTrigger_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetTrigger_NativeFunction, "ReturnValue");
        SetString_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetString");
        SetString_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetString_NativeFunction);
        SetString_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetString_NativeFunction, "ParameterName");
        SetString_InValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetString_NativeFunction, "InValue");
        SetString_OnlyIfExists_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetString_NativeFunction, "OnlyIfExists");
        SetString_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetString_NativeFunction, "ReturnValue");
        SetInt_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetInt");
        SetInt_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetInt_NativeFunction);
        SetInt_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetInt_NativeFunction, "ParameterName");
        SetInt_InValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetInt_NativeFunction, "InValue");
        SetInt_OnlyIfExists_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetInt_NativeFunction, "OnlyIfExists");
        SetInt_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetInt_NativeFunction, "ReturnValue");
        SetFloat_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetFloat");
        SetFloat_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetFloat_NativeFunction);
        SetFloat_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetFloat_NativeFunction, "ParameterName");
        SetFloat_InValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetFloat_NativeFunction, "InValue");
        SetFloat_OnlyIfExists_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetFloat_NativeFunction, "OnlyIfExists");
        SetFloat_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetFloat_NativeFunction, "ReturnValue");
        SetBool_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetBool");
        SetBool_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetBool_NativeFunction);
        SetBool_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBool_NativeFunction, "ParameterName");
        SetBool_InValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBool_NativeFunction, "InValue");
        SetBool_OnlyIfExists_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBool_NativeFunction, "OnlyIfExists");
        SetBool_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBool_NativeFunction, "ReturnValue");
        MakeMetasoundParameterPack_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "MakeMetasoundParameterPack");
        MakeMetasoundParameterPack_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(MakeMetasoundParameterPack_NativeFunction);
        MakeMetasoundParameterPack_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeMetasoundParameterPack_NativeFunction, "ReturnValue");
        HasTrigger_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "HasTrigger");
        HasTrigger_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(HasTrigger_NativeFunction);
        HasTrigger_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasTrigger_NativeFunction, "ParameterName");
        HasTrigger_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasTrigger_NativeFunction, "ReturnValue");
        HasString_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "HasString");
        HasString_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(HasString_NativeFunction);
        HasString_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasString_NativeFunction, "ParameterName");
        HasString_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasString_NativeFunction, "ReturnValue");
        HasInt_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "HasInt");
        HasInt_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(HasInt_NativeFunction);
        HasInt_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasInt_NativeFunction, "ParameterName");
        HasInt_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasInt_NativeFunction, "ReturnValue");
        HasFloat_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "HasFloat");
        HasFloat_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(HasFloat_NativeFunction);
        HasFloat_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasFloat_NativeFunction, "ParameterName");
        HasFloat_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasFloat_NativeFunction, "ReturnValue");
        HasBool_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "HasBool");
        HasBool_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(HasBool_NativeFunction);
        HasBool_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasBool_NativeFunction, "ParameterName");
        HasBool_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasBool_NativeFunction, "ReturnValue");
        GetTrigger_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetTrigger");
        GetTrigger_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetTrigger_NativeFunction);
        GetTrigger_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTrigger_NativeFunction, "ParameterName");
        GetTrigger_Result_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTrigger_NativeFunction, "Result");
        GetTrigger_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTrigger_NativeFunction, "ReturnValue");
        GetString_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetString");
        GetString_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetString_NativeFunction);
        GetString_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetString_NativeFunction, "ParameterName");
        GetString_Result_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetString_NativeFunction, "Result");
        GetString_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetString_NativeFunction, "ReturnValue");
        GetInt_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetInt");
        GetInt_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetInt_NativeFunction);
        GetInt_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetInt_NativeFunction, "ParameterName");
        GetInt_Result_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetInt_NativeFunction, "Result");
        GetInt_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetInt_NativeFunction, "ReturnValue");
        GetFloat_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetFloat");
        GetFloat_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetFloat_NativeFunction);
        GetFloat_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetFloat_NativeFunction, "ParameterName");
        GetFloat_Result_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetFloat_NativeFunction, "Result");
        GetFloat_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetFloat_NativeFunction, "ReturnValue");
        GetBool_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBool");
        GetBool_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBool_NativeFunction);
        GetBool_ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBool_NativeFunction, "ParameterName");
        GetBool_Result_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBool_NativeFunction, "Result");
        GetBool_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBool_NativeFunction, "ReturnValue");
        
        
    }
    
    protected MetasoundParameterPack(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/MetasoundFrontend.MetasoundParameterPack:SetTrigger
    static readonly IntPtr SetTrigger_NativeFunction;
    static readonly int SetTrigger_ParamsSize;
    static readonly int SetTrigger_ParameterName_Offset;
    static readonly int SetTrigger_OnlyIfExists_Offset;
    static readonly int SetTrigger_ReturnValue_Offset;
    
    public UnrealSharp.MetasoundFrontend.ESetParamResult SetTrigger(Name parameterName, bool onlyIfExists = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetTrigger_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetTrigger_ParameterName_Offset), 0, null, parameterName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetTrigger_OnlyIfExists_Offset), 0, null, onlyIfExists);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetTrigger_NativeFunction, ParamsBuffer);
            
            UnrealSharp.MetasoundFrontend.ESetParamResult returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.MetasoundFrontend.ESetParamResult>.FromNative(IntPtr.Add(ParamsBuffer, SetTrigger_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MetasoundFrontend.MetasoundParameterPack:SetString
    static readonly IntPtr SetString_NativeFunction;
    static readonly int SetString_ParamsSize;
    static readonly int SetString_ParameterName_Offset;
    static readonly int SetString_InValue_Offset;
    static readonly int SetString_OnlyIfExists_Offset;
    static readonly int SetString_ReturnValue_Offset;
    
    public UnrealSharp.MetasoundFrontend.ESetParamResult SetString(Name parameterName, string inValue, bool onlyIfExists = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetString_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetString_ParameterName_Offset), 0, null, parameterName);
            IntPtr InValue_NativePtr = IntPtr.Add(ParamsBuffer,SetString_InValue_Offset);
            StringMarshaller.ToNative(InValue_NativePtr,0,null,inValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetString_OnlyIfExists_Offset), 0, null, onlyIfExists);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetString_NativeFunction, ParamsBuffer);
            
            UnrealSharp.MetasoundFrontend.ESetParamResult returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.MetasoundFrontend.ESetParamResult>.FromNative(IntPtr.Add(ParamsBuffer, SetString_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InValue_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/MetasoundFrontend.MetasoundParameterPack:SetInt
    static readonly IntPtr SetInt_NativeFunction;
    static readonly int SetInt_ParamsSize;
    static readonly int SetInt_ParameterName_Offset;
    static readonly int SetInt_InValue_Offset;
    static readonly int SetInt_OnlyIfExists_Offset;
    static readonly int SetInt_ReturnValue_Offset;
    
    public UnrealSharp.MetasoundFrontend.ESetParamResult SetInt(Name parameterName, int inValue, bool onlyIfExists = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetInt_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetInt_ParameterName_Offset), 0, null, parameterName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetInt_InValue_Offset), 0, null, inValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetInt_OnlyIfExists_Offset), 0, null, onlyIfExists);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetInt_NativeFunction, ParamsBuffer);
            
            UnrealSharp.MetasoundFrontend.ESetParamResult returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.MetasoundFrontend.ESetParamResult>.FromNative(IntPtr.Add(ParamsBuffer, SetInt_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MetasoundFrontend.MetasoundParameterPack:SetFloat
    static readonly IntPtr SetFloat_NativeFunction;
    static readonly int SetFloat_ParamsSize;
    static readonly int SetFloat_ParameterName_Offset;
    static readonly int SetFloat_InValue_Offset;
    static readonly int SetFloat_OnlyIfExists_Offset;
    static readonly int SetFloat_ReturnValue_Offset;
    
    public UnrealSharp.MetasoundFrontend.ESetParamResult SetFloat(Name parameterName, float inValue, bool onlyIfExists = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetFloat_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetFloat_ParameterName_Offset), 0, null, parameterName);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetFloat_InValue_Offset), 0, null, inValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetFloat_OnlyIfExists_Offset), 0, null, onlyIfExists);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetFloat_NativeFunction, ParamsBuffer);
            
            UnrealSharp.MetasoundFrontend.ESetParamResult returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.MetasoundFrontend.ESetParamResult>.FromNative(IntPtr.Add(ParamsBuffer, SetFloat_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MetasoundFrontend.MetasoundParameterPack:SetBool
    static readonly IntPtr SetBool_NativeFunction;
    static readonly int SetBool_ParamsSize;
    static readonly int SetBool_ParameterName_Offset;
    static readonly int SetBool_InValue_Offset;
    static readonly int SetBool_OnlyIfExists_Offset;
    static readonly int SetBool_ReturnValue_Offset;
    
    public UnrealSharp.MetasoundFrontend.ESetParamResult SetBool(Name parameterName, bool inValue, bool onlyIfExists = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetBool_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetBool_ParameterName_Offset), 0, null, parameterName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetBool_InValue_Offset), 0, null, inValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetBool_OnlyIfExists_Offset), 0, null, onlyIfExists);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetBool_NativeFunction, ParamsBuffer);
            
            UnrealSharp.MetasoundFrontend.ESetParamResult returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.MetasoundFrontend.ESetParamResult>.FromNative(IntPtr.Add(ParamsBuffer, SetBool_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MetasoundFrontend.MetasoundParameterPack:MakeMetasoundParameterPack
    static readonly IntPtr MakeMetasoundParameterPack_NativeFunction;
    static readonly int MakeMetasoundParameterPack_ParamsSize;
    static readonly int MakeMetasoundParameterPack_ReturnValue_Offset;
    
    public static UnrealSharp.MetasoundFrontend.MetasoundParameterPack MakeMetasoundParameterPack()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[MakeMetasoundParameterPack_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, MakeMetasoundParameterPack_NativeFunction, ParamsBuffer);
            
            UnrealSharp.MetasoundFrontend.MetasoundParameterPack returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.MetasoundFrontend.MetasoundParameterPack>.FromNative(IntPtr.Add(ParamsBuffer, MakeMetasoundParameterPack_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MetasoundFrontend.MetasoundParameterPack:HasTrigger
    static readonly IntPtr HasTrigger_NativeFunction;
    static readonly int HasTrigger_ParamsSize;
    static readonly int HasTrigger_ParameterName_Offset;
    static readonly int HasTrigger_ReturnValue_Offset;
    
    public bool HasTrigger(Name parameterName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[HasTrigger_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, HasTrigger_ParameterName_Offset), 0, null, parameterName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, HasTrigger_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, HasTrigger_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MetasoundFrontend.MetasoundParameterPack:HasString
    static readonly IntPtr HasString_NativeFunction;
    static readonly int HasString_ParamsSize;
    static readonly int HasString_ParameterName_Offset;
    static readonly int HasString_ReturnValue_Offset;
    
    public bool HasString(Name parameterName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[HasString_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, HasString_ParameterName_Offset), 0, null, parameterName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, HasString_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, HasString_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MetasoundFrontend.MetasoundParameterPack:HasInt
    static readonly IntPtr HasInt_NativeFunction;
    static readonly int HasInt_ParamsSize;
    static readonly int HasInt_ParameterName_Offset;
    static readonly int HasInt_ReturnValue_Offset;
    
    public bool HasInt(Name parameterName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[HasInt_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, HasInt_ParameterName_Offset), 0, null, parameterName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, HasInt_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, HasInt_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MetasoundFrontend.MetasoundParameterPack:HasFloat
    static readonly IntPtr HasFloat_NativeFunction;
    static readonly int HasFloat_ParamsSize;
    static readonly int HasFloat_ParameterName_Offset;
    static readonly int HasFloat_ReturnValue_Offset;
    
    public bool HasFloat(Name parameterName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[HasFloat_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, HasFloat_ParameterName_Offset), 0, null, parameterName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, HasFloat_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, HasFloat_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MetasoundFrontend.MetasoundParameterPack:HasBool
    static readonly IntPtr HasBool_NativeFunction;
    static readonly int HasBool_ParamsSize;
    static readonly int HasBool_ParameterName_Offset;
    static readonly int HasBool_ReturnValue_Offset;
    
    public bool HasBool(Name parameterName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[HasBool_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, HasBool_ParameterName_Offset), 0, null, parameterName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, HasBool_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, HasBool_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MetasoundFrontend.MetasoundParameterPack:GetTrigger
    static readonly IntPtr GetTrigger_NativeFunction;
    static readonly int GetTrigger_ParamsSize;
    static readonly int GetTrigger_ParameterName_Offset;
    static readonly int GetTrigger_Result_Offset;
    static readonly int GetTrigger_ReturnValue_Offset;
    
    public bool GetTrigger(Name parameterName, out UnrealSharp.MetasoundFrontend.ESetParamResult result)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetTrigger_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetTrigger_ParameterName_Offset), 0, null, parameterName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetTrigger_NativeFunction, ParamsBuffer);
            
            result = BlittableMarshaller<UnrealSharp.MetasoundFrontend.ESetParamResult>.FromNative(IntPtr.Add(ParamsBuffer, GetTrigger_Result_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetTrigger_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MetasoundFrontend.MetasoundParameterPack:GetString
    static readonly IntPtr GetString_NativeFunction;
    static readonly int GetString_ParamsSize;
    static readonly int GetString_ParameterName_Offset;
    static readonly int GetString_Result_Offset;
    static readonly int GetString_ReturnValue_Offset;
    
    public string GetString(Name parameterName, out UnrealSharp.MetasoundFrontend.ESetParamResult result)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetString_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetString_ParameterName_Offset), 0, null, parameterName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetString_NativeFunction, ParamsBuffer);
            
            result = BlittableMarshaller<UnrealSharp.MetasoundFrontend.ESetParamResult>.FromNative(IntPtr.Add(ParamsBuffer, GetString_Result_Offset), 0, null);
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetString_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/MetasoundFrontend.MetasoundParameterPack:GetInt
    static readonly IntPtr GetInt_NativeFunction;
    static readonly int GetInt_ParamsSize;
    static readonly int GetInt_ParameterName_Offset;
    static readonly int GetInt_Result_Offset;
    static readonly int GetInt_ReturnValue_Offset;
    
    public int GetInt(Name parameterName, out UnrealSharp.MetasoundFrontend.ESetParamResult result)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetInt_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetInt_ParameterName_Offset), 0, null, parameterName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetInt_NativeFunction, ParamsBuffer);
            
            result = BlittableMarshaller<UnrealSharp.MetasoundFrontend.ESetParamResult>.FromNative(IntPtr.Add(ParamsBuffer, GetInt_Result_Offset), 0, null);
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetInt_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MetasoundFrontend.MetasoundParameterPack:GetFloat
    static readonly IntPtr GetFloat_NativeFunction;
    static readonly int GetFloat_ParamsSize;
    static readonly int GetFloat_ParameterName_Offset;
    static readonly int GetFloat_Result_Offset;
    static readonly int GetFloat_ReturnValue_Offset;
    
    public float GetFloat(Name parameterName, out UnrealSharp.MetasoundFrontend.ESetParamResult result)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetFloat_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetFloat_ParameterName_Offset), 0, null, parameterName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetFloat_NativeFunction, ParamsBuffer);
            
            result = BlittableMarshaller<UnrealSharp.MetasoundFrontend.ESetParamResult>.FromNative(IntPtr.Add(ParamsBuffer, GetFloat_Result_Offset), 0, null);
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetFloat_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MetasoundFrontend.MetasoundParameterPack:GetBool
    static readonly IntPtr GetBool_NativeFunction;
    static readonly int GetBool_ParamsSize;
    static readonly int GetBool_ParameterName_Offset;
    static readonly int GetBool_Result_Offset;
    static readonly int GetBool_ReturnValue_Offset;
    
    public bool GetBool(Name parameterName, out UnrealSharp.MetasoundFrontend.ESetParamResult result)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBool_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetBool_ParameterName_Offset), 0, null, parameterName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetBool_NativeFunction, ParamsBuffer);
            
            result = BlittableMarshaller<UnrealSharp.MetasoundFrontend.ESetParamResult>.FromNative(IntPtr.Add(ParamsBuffer, GetBool_Result_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetBool_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
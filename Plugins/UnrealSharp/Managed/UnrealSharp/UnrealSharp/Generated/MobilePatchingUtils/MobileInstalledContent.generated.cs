// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.MobilePatchingUtils;

[UClass]
public partial class MobileInstalledContent : UnrealSharp.CoreUObject.Object
{
    
    static MobileInstalledContent()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("MobileInstalledContent");
        
        
        Mount_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Mount");
        Mount_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Mount_NativeFunction);
        Mount_PakOrder_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Mount_NativeFunction, "PakOrder");
        Mount_MountPoint_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Mount_NativeFunction, "MountPoint");
        Mount_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Mount_NativeFunction, "ReturnValue");
        GetInstalledContentSize_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetInstalledContentSize");
        GetInstalledContentSize_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetInstalledContentSize_NativeFunction);
        GetInstalledContentSize_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetInstalledContentSize_NativeFunction, "ReturnValue");
        GetDiskFreeSpace_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetDiskFreeSpace");
        GetDiskFreeSpace_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetDiskFreeSpace_NativeFunction);
        GetDiskFreeSpace_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDiskFreeSpace_NativeFunction, "ReturnValue");
        
        
    }
    
    protected MobileInstalledContent(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/MobilePatchingUtils.MobileInstalledContent:Mount
    static readonly IntPtr Mount_NativeFunction;
    static readonly int Mount_ParamsSize;
    static readonly int Mount_PakOrder_Offset;
    static readonly int Mount_MountPoint_Offset;
    static readonly int Mount_ReturnValue_Offset;
    
    public bool Mount(int pakOrder, string mountPoint)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Mount_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, Mount_PakOrder_Offset), 0, null, pakOrder);
            IntPtr MountPoint_NativePtr = IntPtr.Add(ParamsBuffer,Mount_MountPoint_Offset);
            StringMarshaller.ToNative(MountPoint_NativePtr,0,null,mountPoint);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, Mount_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, Mount_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(MountPoint_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/MobilePatchingUtils.MobileInstalledContent:GetInstalledContentSize
    static readonly IntPtr GetInstalledContentSize_NativeFunction;
    static readonly int GetInstalledContentSize_ParamsSize;
    static readonly int GetInstalledContentSize_ReturnValue_Offset;
    
    public float GetInstalledContentSize()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetInstalledContentSize_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetInstalledContentSize_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetInstalledContentSize_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MobilePatchingUtils.MobileInstalledContent:GetDiskFreeSpace
    static readonly IntPtr GetDiskFreeSpace_NativeFunction;
    static readonly int GetDiskFreeSpace_ParamsSize;
    static readonly int GetDiskFreeSpace_ReturnValue_Offset;
    
    public float GetDiskFreeSpace()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetDiskFreeSpace_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetDiskFreeSpace_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetDiskFreeSpace_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
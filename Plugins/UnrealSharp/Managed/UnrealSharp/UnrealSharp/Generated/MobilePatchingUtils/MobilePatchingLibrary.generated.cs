// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.MobilePatchingUtils;

[UClass]
public partial class MobilePatchingLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static MobilePatchingLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("MobilePatchingLibrary");
        
        
        HasActiveWiFiConnection_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "HasActiveWiFiConnection");
        HasActiveWiFiConnection_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(HasActiveWiFiConnection_NativeFunction);
        HasActiveWiFiConnection_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasActiveWiFiConnection_NativeFunction, "ReturnValue");
        GetInstalledContent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetInstalledContent");
        GetInstalledContent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetInstalledContent_NativeFunction);
        GetInstalledContent_InstallDirectory_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetInstalledContent_NativeFunction, "InstallDirectory");
        GetInstalledContent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetInstalledContent_NativeFunction, "ReturnValue");
        GetActiveDeviceProfileName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetActiveDeviceProfileName");
        GetActiveDeviceProfileName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetActiveDeviceProfileName_NativeFunction);
        GetActiveDeviceProfileName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetActiveDeviceProfileName_NativeFunction, "ReturnValue");
        
        
    }
    
    protected MobilePatchingLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/MobilePatchingUtils.MobilePatchingLibrary:HasActiveWiFiConnection
    static readonly IntPtr HasActiveWiFiConnection_NativeFunction;
    static readonly int HasActiveWiFiConnection_ParamsSize;
    static readonly int HasActiveWiFiConnection_ReturnValue_Offset;
    
    public static bool HasActiveWiFiConnection()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[HasActiveWiFiConnection_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, HasActiveWiFiConnection_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, HasActiveWiFiConnection_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MobilePatchingUtils.MobilePatchingLibrary:GetInstalledContent
    static readonly IntPtr GetInstalledContent_NativeFunction;
    static readonly int GetInstalledContent_ParamsSize;
    static readonly int GetInstalledContent_InstallDirectory_Offset;
    static readonly int GetInstalledContent_ReturnValue_Offset;
    
    public static UnrealSharp.MobilePatchingUtils.MobileInstalledContent GetInstalledContent(string installDirectory)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetInstalledContent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InstallDirectory_NativePtr = IntPtr.Add(ParamsBuffer,GetInstalledContent_InstallDirectory_Offset);
            StringMarshaller.ToNative(InstallDirectory_NativePtr,0,null,installDirectory);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetInstalledContent_NativeFunction, ParamsBuffer);
            
            UnrealSharp.MobilePatchingUtils.MobileInstalledContent returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.MobilePatchingUtils.MobileInstalledContent>.FromNative(IntPtr.Add(ParamsBuffer, GetInstalledContent_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InstallDirectory_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/MobilePatchingUtils.MobilePatchingLibrary:GetActiveDeviceProfileName
    static readonly IntPtr GetActiveDeviceProfileName_NativeFunction;
    static readonly int GetActiveDeviceProfileName_ParamsSize;
    static readonly int GetActiveDeviceProfileName_ReturnValue_Offset;
    
    public static string GetActiveDeviceProfileName()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetActiveDeviceProfileName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetActiveDeviceProfileName_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetActiveDeviceProfileName_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.MovieScene;
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.MovieScene;

[UClass]
abstract public partial class MovieSceneSequencePlayer : UnrealSharp.CoreUObject.Object, IMovieSceneSequenceTickManagerClient
{
    
    static MovieSceneSequencePlayer()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("MovieSceneSequencePlayer");
        
        
        StopAtCurrentTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "StopAtCurrentTime");
        Stop_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Stop");
        SetWeight_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetWeight");
        SetWeight_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetWeight_NativeFunction);
        SetWeight_InWeight_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetWeight_NativeFunction, "InWeight");
        SetTimeRange_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetTimeRange");
        SetTimeRange_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetTimeRange_NativeFunction);
        SetTimeRange_StartTime_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetTimeRange_NativeFunction, "StartTime");
        SetTimeRange_Duration_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetTimeRange_NativeFunction, "Duration");
        SetPlayRate_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPlayRate");
        SetPlayRate_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPlayRate_NativeFunction);
        SetPlayRate_PlayRate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPlayRate_NativeFunction, "PlayRate");
        SetPlaybackPosition_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPlaybackPosition");
        SetPlaybackPosition_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPlaybackPosition_NativeFunction);
        SetPlaybackPosition_PlaybackParams_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPlaybackPosition_NativeFunction, "PlaybackParams");
        SetFrameRate_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetFrameRate");
        SetFrameRate_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetFrameRate_NativeFunction);
        SetFrameRate_FrameRate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetFrameRate_NativeFunction, "FrameRate");
        SetFrameRange_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetFrameRange");
        SetFrameRange_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetFrameRange_NativeFunction);
        SetFrameRange_StartFrame_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetFrameRange_NativeFunction, "StartFrame");
        SetFrameRange_Duration_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetFrameRange_NativeFunction, "Duration");
        SetFrameRange_SubFrames_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetFrameRange_NativeFunction, "SubFrames");
        SetDisableCameraCuts_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetDisableCameraCuts");
        SetDisableCameraCuts_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetDisableCameraCuts_NativeFunction);
        SetDisableCameraCuts_bInDisableCameraCuts_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetDisableCameraCuts_NativeFunction, "bInDisableCameraCuts");
        Scrub_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Scrub");
        RestoreState_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RestoreState");
        RemoveWeight_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveWeight");
        PlayTo_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "PlayTo");
        PlayTo_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(PlayTo_NativeFunction);
        PlayTo_PlaybackParams_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PlayTo_NativeFunction, "PlaybackParams");
        PlayTo_PlayToParams_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PlayTo_NativeFunction, "PlayToParams");
        PlayReverse_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "PlayReverse");
        PlayLooping_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "PlayLooping");
        PlayLooping_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(PlayLooping_NativeFunction);
        PlayLooping_NumLoops_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PlayLooping_NativeFunction, "NumLoops");
        Play_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Play");
        Pause_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Pause");
        IsReversed_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsReversed");
        IsReversed_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsReversed_NativeFunction);
        IsReversed_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsReversed_NativeFunction, "ReturnValue");
        IsPlaying_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsPlaying");
        IsPlaying_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsPlaying_NativeFunction);
        IsPlaying_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsPlaying_NativeFunction, "ReturnValue");
        IsPaused_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsPaused");
        IsPaused_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsPaused_NativeFunction);
        IsPaused_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsPaused_NativeFunction, "ReturnValue");
        GoToEndAndStop_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GoToEndAndStop");
        GetStartTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetStartTime");
        GetStartTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetStartTime_NativeFunction);
        GetStartTime_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetStartTime_NativeFunction, "ReturnValue");
        GetSequenceName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSequenceName");
        GetSequenceName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSequenceName_NativeFunction);
        GetSequenceName_bAddClientInfo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSequenceName_NativeFunction, "bAddClientInfo");
        GetSequenceName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSequenceName_NativeFunction, "ReturnValue");
        GetSequence_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSequence");
        GetSequence_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSequence_NativeFunction);
        GetSequence_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSequence_NativeFunction, "ReturnValue");
        GetPlayRate_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetPlayRate");
        GetPlayRate_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetPlayRate_NativeFunction);
        GetPlayRate_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetPlayRate_NativeFunction, "ReturnValue");
        GetObjectBindings_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetObjectBindings");
        GetObjectBindings_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetObjectBindings_NativeFunction);
        GetObjectBindings_InObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetObjectBindings_NativeFunction, "InObject");
        GetObjectBindings_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetObjectBindings_NativeFunction, "ReturnValue");
        GetObjectBindings_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetObjectBindings_NativeFunction, "ReturnValue");
        GetFrameRate_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetFrameRate");
        GetFrameRate_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetFrameRate_NativeFunction);
        GetFrameRate_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetFrameRate_NativeFunction, "ReturnValue");
        GetFrameDuration_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetFrameDuration");
        GetFrameDuration_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetFrameDuration_NativeFunction);
        GetFrameDuration_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetFrameDuration_NativeFunction, "ReturnValue");
        GetEndTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetEndTime");
        GetEndTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetEndTime_NativeFunction);
        GetEndTime_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetEndTime_NativeFunction, "ReturnValue");
        GetDuration_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetDuration");
        GetDuration_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetDuration_NativeFunction);
        GetDuration_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDuration_NativeFunction, "ReturnValue");
        GetDisableCameraCuts_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetDisableCameraCuts");
        GetDisableCameraCuts_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetDisableCameraCuts_NativeFunction);
        GetDisableCameraCuts_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDisableCameraCuts_NativeFunction, "ReturnValue");
        GetCurrentTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCurrentTime");
        GetCurrentTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCurrentTime_NativeFunction);
        GetCurrentTime_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCurrentTime_NativeFunction, "ReturnValue");
        GetBoundObjects_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBoundObjects");
        GetBoundObjects_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBoundObjects_NativeFunction);
        GetBoundObjects_ObjectBinding_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBoundObjects_NativeFunction, "ObjectBinding");
        GetBoundObjects_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBoundObjects_NativeFunction, "ReturnValue");
        GetBoundObjects_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetBoundObjects_NativeFunction, "ReturnValue");
        ChangePlaybackDirection_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ChangePlaybackDirection");
        
        
    }
    
    protected MovieSceneSequencePlayer(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/MovieScene.MovieSceneSequencePlayer:StopAtCurrentTime
    static readonly IntPtr StopAtCurrentTime_NativeFunction;
    
    public void StopAtCurrentTime()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, StopAtCurrentTime_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:Stop
    static readonly IntPtr Stop_NativeFunction;
    
    public void Stop()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, Stop_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:SetWeight
    static readonly IntPtr SetWeight_NativeFunction;
    static readonly int SetWeight_ParamsSize;
    static readonly int SetWeight_InWeight_Offset;
    
    public void SetWeight(double inWeight)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetWeight_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<double>.ToNative(IntPtr.Add(ParamsBuffer, SetWeight_InWeight_Offset), 0, null, inWeight);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetWeight_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:SetTimeRange
    static readonly IntPtr SetTimeRange_NativeFunction;
    static readonly int SetTimeRange_ParamsSize;
    static readonly int SetTimeRange_StartTime_Offset;
    static readonly int SetTimeRange_Duration_Offset;
    
    public void SetTimeRange(float startTime, float duration)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetTimeRange_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetTimeRange_StartTime_Offset), 0, null, startTime);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetTimeRange_Duration_Offset), 0, null, duration);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetTimeRange_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:SetPlayRate
    static readonly IntPtr SetPlayRate_NativeFunction;
    static readonly int SetPlayRate_ParamsSize;
    static readonly int SetPlayRate_PlayRate_Offset;
    
    public void SetPlayRate(float playRate)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPlayRate_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetPlayRate_PlayRate_Offset), 0, null, playRate);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPlayRate_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:SetPlaybackPosition
    static readonly IntPtr SetPlaybackPosition_NativeFunction;
    static readonly int SetPlaybackPosition_ParamsSize;
    static readonly int SetPlaybackPosition_PlaybackParams_Offset;
    
    public void SetPlaybackPosition(UnrealSharp.MovieScene.MovieSceneSequencePlaybackParams playbackParams)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPlaybackPosition_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.MovieScene.MovieSceneSequencePlaybackParamsMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetPlaybackPosition_PlaybackParams_Offset), 0, null, playbackParams);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPlaybackPosition_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:SetFrameRate
    static readonly IntPtr SetFrameRate_NativeFunction;
    static readonly int SetFrameRate_ParamsSize;
    static readonly int SetFrameRate_FrameRate_Offset;
    
    public void SetFrameRate(UnrealSharp.CoreUObject.FrameRate frameRate)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetFrameRate_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.CoreUObject.FrameRate>.ToNative(IntPtr.Add(ParamsBuffer, SetFrameRate_FrameRate_Offset), 0, null, frameRate);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetFrameRate_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:SetFrameRange
    static readonly IntPtr SetFrameRange_NativeFunction;
    static readonly int SetFrameRange_ParamsSize;
    static readonly int SetFrameRange_StartFrame_Offset;
    static readonly int SetFrameRange_Duration_Offset;
    static readonly int SetFrameRange_SubFrames_Offset;
    
    public void SetFrameRange(int startFrame, int duration, float subFrames = 0.000000f)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetFrameRange_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetFrameRange_StartFrame_Offset), 0, null, startFrame);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetFrameRange_Duration_Offset), 0, null, duration);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetFrameRange_SubFrames_Offset), 0, null, subFrames);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetFrameRange_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:SetDisableCameraCuts
    static readonly IntPtr SetDisableCameraCuts_NativeFunction;
    static readonly int SetDisableCameraCuts_ParamsSize;
    static readonly int SetDisableCameraCuts_bInDisableCameraCuts_Offset;
    
    public void SetDisableCameraCuts(bool bInDisableCameraCuts)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetDisableCameraCuts_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetDisableCameraCuts_bInDisableCameraCuts_Offset), 0, null, bInDisableCameraCuts);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetDisableCameraCuts_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:Scrub
    static readonly IntPtr Scrub_NativeFunction;
    
    public void Scrub()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, Scrub_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:RestoreState
    static readonly IntPtr RestoreState_NativeFunction;
    
    public void RestoreState()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RestoreState_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:RemoveWeight
    static readonly IntPtr RemoveWeight_NativeFunction;
    
    public void RemoveWeight()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveWeight_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:PlayTo
    static readonly IntPtr PlayTo_NativeFunction;
    static readonly int PlayTo_ParamsSize;
    static readonly int PlayTo_PlaybackParams_Offset;
    static readonly int PlayTo_PlayToParams_Offset;
    
    public void PlayTo(UnrealSharp.MovieScene.MovieSceneSequencePlaybackParams playbackParams, UnrealSharp.MovieScene.MovieSceneSequencePlayToParams playToParams)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[PlayTo_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.MovieScene.MovieSceneSequencePlaybackParamsMarshaler.ToNative(IntPtr.Add(ParamsBuffer, PlayTo_PlaybackParams_Offset), 0, null, playbackParams);
            UnrealSharp.MovieScene.MovieSceneSequencePlayToParamsMarshaler.ToNative(IntPtr.Add(ParamsBuffer, PlayTo_PlayToParams_Offset), 0, null, playToParams);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, PlayTo_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:PlayReverse
    static readonly IntPtr PlayReverse_NativeFunction;
    
    public void PlayReverse()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, PlayReverse_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:PlayLooping
    static readonly IntPtr PlayLooping_NativeFunction;
    static readonly int PlayLooping_ParamsSize;
    static readonly int PlayLooping_NumLoops_Offset;
    
    public void PlayLooping(int numLoops = -1)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[PlayLooping_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, PlayLooping_NumLoops_Offset), 0, null, numLoops);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, PlayLooping_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:Play
    static readonly IntPtr Play_NativeFunction;
    
    public void Play()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, Play_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:Pause
    static readonly IntPtr Pause_NativeFunction;
    
    public void Pause()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, Pause_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:IsReversed
    static readonly IntPtr IsReversed_NativeFunction;
    static readonly int IsReversed_ParamsSize;
    static readonly int IsReversed_ReturnValue_Offset;
    
    public bool IsReversed()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsReversed_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsReversed_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsReversed_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:IsPlaying
    static readonly IntPtr IsPlaying_NativeFunction;
    static readonly int IsPlaying_ParamsSize;
    static readonly int IsPlaying_ReturnValue_Offset;
    
    public bool IsPlaying()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsPlaying_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsPlaying_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsPlaying_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:IsPaused
    static readonly IntPtr IsPaused_NativeFunction;
    static readonly int IsPaused_ParamsSize;
    static readonly int IsPaused_ReturnValue_Offset;
    
    public bool IsPaused()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsPaused_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsPaused_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsPaused_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:GoToEndAndStop
    static readonly IntPtr GoToEndAndStop_NativeFunction;
    
    public void GoToEndAndStop()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GoToEndAndStop_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:GetStartTime
    static readonly IntPtr GetStartTime_NativeFunction;
    static readonly int GetStartTime_ParamsSize;
    static readonly int GetStartTime_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.QualifiedTime GetStartTime()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetStartTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetStartTime_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.QualifiedTime returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.CoreUObject.QualifiedTime>.FromNative(IntPtr.Add(ParamsBuffer, GetStartTime_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:GetSequenceName
    static readonly IntPtr GetSequenceName_NativeFunction;
    static readonly int GetSequenceName_ParamsSize;
    static readonly int GetSequenceName_bAddClientInfo_Offset;
    static readonly int GetSequenceName_ReturnValue_Offset;
    
    public string GetSequenceName(bool bAddClientInfo = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSequenceName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, GetSequenceName_bAddClientInfo_Offset), 0, null, bAddClientInfo);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSequenceName_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetSequenceName_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:GetSequence
    static readonly IntPtr GetSequence_NativeFunction;
    static readonly int GetSequence_ParamsSize;
    static readonly int GetSequence_ReturnValue_Offset;
    
    public UnrealSharp.MovieScene.MovieSceneSequence GetSequence()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSequence_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSequence_NativeFunction, ParamsBuffer);
            
            UnrealSharp.MovieScene.MovieSceneSequence returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSequence>.FromNative(IntPtr.Add(ParamsBuffer, GetSequence_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:GetPlayRate
    static readonly IntPtr GetPlayRate_NativeFunction;
    static readonly int GetPlayRate_ParamsSize;
    static readonly int GetPlayRate_ReturnValue_Offset;
    
    public float GetPlayRate()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetPlayRate_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetPlayRate_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetPlayRate_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:GetObjectBindings
    static readonly IntPtr GetObjectBindings_NativeFunction;
    static readonly int GetObjectBindings_ParamsSize;
    static readonly int GetObjectBindings_InObject_Offset;
    static readonly int GetObjectBindings_ReturnValue_Offset;
    static readonly int GetObjectBindings_ReturnValue_ElementSize;
    
    public System.Collections.Generic.IList<UnrealSharp.MovieScene.MovieSceneObjectBindingID> GetObjectBindings(UnrealSharp.CoreUObject.Object inObject)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetObjectBindings_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, GetObjectBindings_InObject_Offset), 0, null, inObject);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetObjectBindings_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.MovieScene.MovieSceneObjectBindingID> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, GetObjectBindings_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.MovieScene.MovieSceneObjectBindingID> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.MovieScene.MovieSceneObjectBindingID> (1, UnrealSharp.MovieScene.MovieSceneObjectBindingIDMarshaler.ToNative, UnrealSharp.MovieScene.MovieSceneObjectBindingIDMarshaler.FromNative, GetObjectBindings_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.MovieScene.MovieSceneObjectBindingID>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:GetFrameRate
    static readonly IntPtr GetFrameRate_NativeFunction;
    static readonly int GetFrameRate_ParamsSize;
    static readonly int GetFrameRate_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.FrameRate GetFrameRate()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetFrameRate_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetFrameRate_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.FrameRate returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.CoreUObject.FrameRate>.FromNative(IntPtr.Add(ParamsBuffer, GetFrameRate_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:GetFrameDuration
    static readonly IntPtr GetFrameDuration_NativeFunction;
    static readonly int GetFrameDuration_ParamsSize;
    static readonly int GetFrameDuration_ReturnValue_Offset;
    
    public int GetFrameDuration()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetFrameDuration_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetFrameDuration_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetFrameDuration_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:GetEndTime
    static readonly IntPtr GetEndTime_NativeFunction;
    static readonly int GetEndTime_ParamsSize;
    static readonly int GetEndTime_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.QualifiedTime GetEndTime()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetEndTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetEndTime_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.QualifiedTime returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.CoreUObject.QualifiedTime>.FromNative(IntPtr.Add(ParamsBuffer, GetEndTime_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:GetDuration
    static readonly IntPtr GetDuration_NativeFunction;
    static readonly int GetDuration_ParamsSize;
    static readonly int GetDuration_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.QualifiedTime GetDuration()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetDuration_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetDuration_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.QualifiedTime returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.CoreUObject.QualifiedTime>.FromNative(IntPtr.Add(ParamsBuffer, GetDuration_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:GetDisableCameraCuts
    static readonly IntPtr GetDisableCameraCuts_NativeFunction;
    static readonly int GetDisableCameraCuts_ParamsSize;
    static readonly int GetDisableCameraCuts_ReturnValue_Offset;
    
    public bool GetDisableCameraCuts()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetDisableCameraCuts_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetDisableCameraCuts_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetDisableCameraCuts_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:GetCurrentTime
    static readonly IntPtr GetCurrentTime_NativeFunction;
    static readonly int GetCurrentTime_ParamsSize;
    static readonly int GetCurrentTime_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.QualifiedTime GetCurrentTime()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCurrentTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCurrentTime_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.QualifiedTime returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.CoreUObject.QualifiedTime>.FromNative(IntPtr.Add(ParamsBuffer, GetCurrentTime_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:GetBoundObjects
    static readonly IntPtr GetBoundObjects_NativeFunction;
    static readonly int GetBoundObjects_ParamsSize;
    static readonly int GetBoundObjects_ObjectBinding_Offset;
    static readonly int GetBoundObjects_ReturnValue_Offset;
    static readonly int GetBoundObjects_ReturnValue_ElementSize;
    
    public System.Collections.Generic.IList<UnrealSharp.CoreUObject.Object> GetBoundObjects(UnrealSharp.MovieScene.MovieSceneObjectBindingID objectBinding)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBoundObjects_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.MovieScene.MovieSceneObjectBindingIDMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetBoundObjects_ObjectBinding_Offset), 0, null, objectBinding);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetBoundObjects_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.CoreUObject.Object> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, GetBoundObjects_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Object> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Object> (1, ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative, ObjectMarshaller<UnrealSharp.CoreUObject.Object>.FromNative, GetBoundObjects_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Object>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSequencePlayer:ChangePlaybackDirection
    static readonly IntPtr ChangePlaybackDirection_NativeFunction;
    
    public void ChangePlaybackDirection()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ChangePlaybackDirection_NativeFunction, IntPtr.Zero);
        }
    }
    
    
}
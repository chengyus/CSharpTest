// This file is automatically generated
using UnrealSharp.MovieScene;
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.MovieScene;

[UClass]
public partial class MovieSceneSubSection : UnrealSharp.MovieScene.MovieSceneSection, IMovieSceneEntityProvider
{
    
    static MovieSceneSubSection()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("MovieSceneSubSection");
        
        Parameters_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Parameters");
        
        SetSequence_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSequence");
        SetSequence_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSequence_NativeFunction);
        SetSequence_Sequence_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSequence_NativeFunction, "Sequence");
        GetSequence_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSequence");
        GetSequence_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSequence_NativeFunction);
        GetSequence_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSequence_NativeFunction, "ReturnValue");
        
        
    }
    
    protected MovieSceneSubSection(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // StructProperty /Script/MovieScene.MovieSceneSubSection:Parameters
    static readonly int Parameters_Offset;
    
    public UnrealSharp.MovieScene.MovieSceneSectionParameters Parameters
    {
        get
        {
            CheckObjectForValidity();
            return UnrealSharp.MovieScene.MovieSceneSectionParametersMarshaler.FromNative(IntPtr.Add(NativeObject, Parameters_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            UnrealSharp.MovieScene.MovieSceneSectionParametersMarshaler.ToNative(IntPtr.Add(NativeObject, Parameters_Offset), 0, this, value);
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSubSection:SetSequence
    static readonly IntPtr SetSequence_NativeFunction;
    static readonly int SetSequence_ParamsSize;
    static readonly int SetSequence_Sequence_Offset;
    
    public void SetSequence(UnrealSharp.MovieScene.MovieSceneSequence sequence)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSequence_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSequence>.ToNative(IntPtr.Add(ParamsBuffer, SetSequence_Sequence_Offset), 0, null, sequence);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSequence_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/MovieScene.MovieSceneSubSection:GetSequence
    static readonly IntPtr GetSequence_NativeFunction;
    static readonly int GetSequence_ParamsSize;
    static readonly int GetSequence_ReturnValue_Offset;
    
    public UnrealSharp.MovieScene.MovieSceneSequence GetSequence()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSequence_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSequence_NativeFunction, ParamsBuffer);
            
            UnrealSharp.MovieScene.MovieSceneSequence returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSequence>.FromNative(IntPtr.Add(ParamsBuffer, GetSequence_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.MovieSceneCapture;

[UClass]
public partial class MovieSceneCapture : UnrealSharp.CoreUObject.Object
{
    
    static MovieSceneCapture()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("MovieSceneCapture");
        
        Settings_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Settings");
        bUseSeparateProcess_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bUseSeparateProcess");
        bCloseEditorWhenCaptureStarts_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bCloseEditorWhenCaptureStarts");
        AdditionalCommandLineArguments_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "AdditionalCommandLineArguments");
        AdditionalCommandLineArguments_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "AdditionalCommandLineArguments");
        InheritedCommandLineArguments_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "InheritedCommandLineArguments");
        InheritedCommandLineArguments_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "InheritedCommandLineArguments");
        
        SetImageCaptureProtocolType_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetImageCaptureProtocolType");
        SetImageCaptureProtocolType_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetImageCaptureProtocolType_NativeFunction);
        SetImageCaptureProtocolType_ProtocolType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetImageCaptureProtocolType_NativeFunction, "ProtocolType");
        SetAudioCaptureProtocolType_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAudioCaptureProtocolType");
        SetAudioCaptureProtocolType_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAudioCaptureProtocolType_NativeFunction);
        SetAudioCaptureProtocolType_ProtocolType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAudioCaptureProtocolType_NativeFunction, "ProtocolType");
        GetImageCaptureProtocol_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetImageCaptureProtocol");
        GetImageCaptureProtocol_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetImageCaptureProtocol_NativeFunction);
        GetImageCaptureProtocol_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetImageCaptureProtocol_NativeFunction, "ReturnValue");
        GetAudioCaptureProtocol_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetAudioCaptureProtocol");
        GetAudioCaptureProtocol_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetAudioCaptureProtocol_NativeFunction);
        GetAudioCaptureProtocol_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAudioCaptureProtocol_NativeFunction, "ReturnValue");
        
        
    }
    
    protected MovieSceneCapture(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // StructProperty /Script/MovieSceneCapture.MovieSceneCapture:Settings
    static readonly int Settings_Offset;
    
    public UnrealSharp.MovieSceneCapture.MovieSceneCaptureSettings Settings
    {
        get
        {
            CheckObjectForValidity();
            return UnrealSharp.MovieSceneCapture.MovieSceneCaptureSettingsMarshaler.FromNative(IntPtr.Add(NativeObject, Settings_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            UnrealSharp.MovieSceneCapture.MovieSceneCaptureSettingsMarshaler.ToNative(IntPtr.Add(NativeObject, Settings_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/MovieSceneCapture.MovieSceneCapture:bUseSeparateProcess
    static readonly int bUseSeparateProcess_Offset;
    
    public bool bUseSeparateProcess
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bUseSeparateProcess_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, bUseSeparateProcess_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/MovieSceneCapture.MovieSceneCapture:bCloseEditorWhenCaptureStarts
    static readonly int bCloseEditorWhenCaptureStarts_Offset;
    
    public bool bCloseEditorWhenCaptureStarts
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bCloseEditorWhenCaptureStarts_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, bCloseEditorWhenCaptureStarts_Offset), 0, this, value);
        }
    }
    
    // StrProperty /Script/MovieSceneCapture.MovieSceneCapture:AdditionalCommandLineArguments
    static readonly int AdditionalCommandLineArguments_Offset;
    static readonly IntPtr AdditionalCommandLineArguments_NativeProperty;
    
    public string AdditionalCommandLineArguments
    {
        get
        {
            CheckObjectForValidity();
            return StringMarshaller.FromNative(IntPtr.Add(NativeObject,AdditionalCommandLineArguments_Offset),0,this);
        }
        set
        {
            CheckObjectForValidity();
            StringMarshaller.ToNative(IntPtr.Add(NativeObject,AdditionalCommandLineArguments_Offset),0,this,value);
        }
    }
    
    // StrProperty /Script/MovieSceneCapture.MovieSceneCapture:InheritedCommandLineArguments
    static readonly int InheritedCommandLineArguments_Offset;
    static readonly IntPtr InheritedCommandLineArguments_NativeProperty;
    
    public string InheritedCommandLineArguments
    {
        get
        {
            CheckObjectForValidity();
            return StringMarshaller.FromNative(IntPtr.Add(NativeObject,InheritedCommandLineArguments_Offset),0,this);
        }
        set
        {
            CheckObjectForValidity();
            StringMarshaller.ToNative(IntPtr.Add(NativeObject,InheritedCommandLineArguments_Offset),0,this,value);
        }
    }
    
    // Function /Script/MovieSceneCapture.MovieSceneCapture:SetImageCaptureProtocolType
    static readonly IntPtr SetImageCaptureProtocolType_NativeFunction;
    static readonly int SetImageCaptureProtocolType_ParamsSize;
    static readonly int SetImageCaptureProtocolType_ProtocolType_Offset;
    
    public void SetImageCaptureProtocolType(SubclassOf<UnrealSharp.MovieSceneCapture.MovieSceneCaptureProtocolBase> protocolType)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetImageCaptureProtocolType_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            SubclassOfMarshaller<UnrealSharp.MovieSceneCapture.MovieSceneCaptureProtocolBase>.ToNative(IntPtr.Add(ParamsBuffer, SetImageCaptureProtocolType_ProtocolType_Offset), 0, null, protocolType);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetImageCaptureProtocolType_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/MovieSceneCapture.MovieSceneCapture:SetAudioCaptureProtocolType
    static readonly IntPtr SetAudioCaptureProtocolType_NativeFunction;
    static readonly int SetAudioCaptureProtocolType_ParamsSize;
    static readonly int SetAudioCaptureProtocolType_ProtocolType_Offset;
    
    public void SetAudioCaptureProtocolType(SubclassOf<UnrealSharp.MovieSceneCapture.MovieSceneCaptureProtocolBase> protocolType)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAudioCaptureProtocolType_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            SubclassOfMarshaller<UnrealSharp.MovieSceneCapture.MovieSceneCaptureProtocolBase>.ToNative(IntPtr.Add(ParamsBuffer, SetAudioCaptureProtocolType_ProtocolType_Offset), 0, null, protocolType);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAudioCaptureProtocolType_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/MovieSceneCapture.MovieSceneCapture:GetImageCaptureProtocol
    static readonly IntPtr GetImageCaptureProtocol_NativeFunction;
    static readonly int GetImageCaptureProtocol_ParamsSize;
    static readonly int GetImageCaptureProtocol_ReturnValue_Offset;
    
    public UnrealSharp.MovieSceneCapture.MovieSceneCaptureProtocolBase GetImageCaptureProtocol()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetImageCaptureProtocol_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetImageCaptureProtocol_NativeFunction, ParamsBuffer);
            
            UnrealSharp.MovieSceneCapture.MovieSceneCaptureProtocolBase returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.MovieSceneCapture.MovieSceneCaptureProtocolBase>.FromNative(IntPtr.Add(ParamsBuffer, GetImageCaptureProtocol_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MovieSceneCapture.MovieSceneCapture:GetAudioCaptureProtocol
    static readonly IntPtr GetAudioCaptureProtocol_NativeFunction;
    static readonly int GetAudioCaptureProtocol_ParamsSize;
    static readonly int GetAudioCaptureProtocol_ReturnValue_Offset;
    
    public UnrealSharp.MovieSceneCapture.MovieSceneCaptureProtocolBase GetAudioCaptureProtocol()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetAudioCaptureProtocol_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetAudioCaptureProtocol_NativeFunction, ParamsBuffer);
            
            UnrealSharp.MovieSceneCapture.MovieSceneCaptureProtocolBase returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.MovieSceneCapture.MovieSceneCaptureProtocolBase>.FromNative(IntPtr.Add(ParamsBuffer, GetAudioCaptureProtocol_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
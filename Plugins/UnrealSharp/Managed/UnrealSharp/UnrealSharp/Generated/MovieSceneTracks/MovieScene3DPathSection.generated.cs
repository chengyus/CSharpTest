// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.MovieSceneTracks;

[UClass]
public partial class MovieScene3DPathSection : UnrealSharp.MovieSceneTracks.MovieScene3DConstraintSection
{
    
    static MovieScene3DPathSection()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("MovieScene3DPathSection");
        
        FrontAxisEnum_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "FrontAxisEnum");
        UpAxisEnum_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "UpAxisEnum");
        bFollow_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bFollow");
        bFollow_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bFollow");
        bReverse_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bReverse");
        bReverse_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bReverse");
        bForceUpright_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bForceUpright");
        bForceUpright_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "bForceUpright");
        
        
        
    }
    
    protected MovieScene3DPathSection(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // EnumProperty /Script/MovieSceneTracks.MovieScene3DPathSection:FrontAxisEnum
    static readonly int FrontAxisEnum_Offset;
    
    public UnrealSharp.MovieSceneTracks.MovieScene3DPathSection_Axis FrontAxisEnum
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.MovieSceneTracks.MovieScene3DPathSection_Axis>.FromNative(IntPtr.Add(NativeObject, FrontAxisEnum_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.MovieSceneTracks.MovieScene3DPathSection_Axis>.ToNative(IntPtr.Add(NativeObject, FrontAxisEnum_Offset), 0, this, value);
        }
    }
    
    // EnumProperty /Script/MovieSceneTracks.MovieScene3DPathSection:UpAxisEnum
    static readonly int UpAxisEnum_Offset;
    
    public UnrealSharp.MovieSceneTracks.MovieScene3DPathSection_Axis UpAxisEnum
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.MovieSceneTracks.MovieScene3DPathSection_Axis>.FromNative(IntPtr.Add(NativeObject, UpAxisEnum_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.MovieSceneTracks.MovieScene3DPathSection_Axis>.ToNative(IntPtr.Add(NativeObject, UpAxisEnum_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/MovieSceneTracks.MovieScene3DPathSection:bFollow
    static readonly int bFollow_Offset;
    static readonly IntPtr bFollow_NativeProperty;
    
    public bool bFollow
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bFollow_NativeProperty, bFollow_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bFollow_NativeProperty, bFollow_Offset, value);
        }
    }
    
    // BoolProperty /Script/MovieSceneTracks.MovieScene3DPathSection:bReverse
    static readonly int bReverse_Offset;
    static readonly IntPtr bReverse_NativeProperty;
    
    public bool bReverse
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bReverse_NativeProperty, bReverse_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bReverse_NativeProperty, bReverse_Offset, value);
        }
    }
    
    // BoolProperty /Script/MovieSceneTracks.MovieScene3DPathSection:bForceUpright
    static readonly int bForceUpright_Offset;
    static readonly IntPtr bForceUpright_NativeProperty;
    
    public bool bForceUpright
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, bForceUpright_NativeProperty, bForceUpright_Offset);
        }
        set
        {
            CheckObjectForValidity();
            FBoolPropertyExporter.CallSetBitfieldValueForProperty(NativeObject, bForceUpright_NativeProperty, bForceUpright_Offset, value);
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.MovieSceneTracks;

[UClass]
public partial class MovieSceneAsyncAction_SequencePrediction : UnrealSharp.Engine.BlueprintAsyncActionBase
{
    
    static readonly IntPtr NativeClassPtr;
    static MovieSceneAsyncAction_SequencePrediction()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("MovieSceneAsyncAction_SequencePrediction");
        
        
        PredictWorldTransformAtTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "PredictWorldTransformAtTime");
        PredictWorldTransformAtTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(PredictWorldTransformAtTime_NativeFunction);
        PredictWorldTransformAtTime_Player_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PredictWorldTransformAtTime_NativeFunction, "Player");
        PredictWorldTransformAtTime_TargetComponent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PredictWorldTransformAtTime_NativeFunction, "TargetComponent");
        PredictWorldTransformAtTime_TimeInSeconds_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PredictWorldTransformAtTime_NativeFunction, "TimeInSeconds");
        PredictWorldTransformAtTime_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PredictWorldTransformAtTime_NativeFunction, "ReturnValue");
        PredictWorldTransformAtFrame_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "PredictWorldTransformAtFrame");
        PredictWorldTransformAtFrame_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(PredictWorldTransformAtFrame_NativeFunction);
        PredictWorldTransformAtFrame_Player_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PredictWorldTransformAtFrame_NativeFunction, "Player");
        PredictWorldTransformAtFrame_TargetComponent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PredictWorldTransformAtFrame_NativeFunction, "TargetComponent");
        PredictWorldTransformAtFrame_FrameTime_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PredictWorldTransformAtFrame_NativeFunction, "FrameTime");
        PredictWorldTransformAtFrame_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PredictWorldTransformAtFrame_NativeFunction, "ReturnValue");
        PredictLocalTransformAtTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "PredictLocalTransformAtTime");
        PredictLocalTransformAtTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(PredictLocalTransformAtTime_NativeFunction);
        PredictLocalTransformAtTime_Player_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PredictLocalTransformAtTime_NativeFunction, "Player");
        PredictLocalTransformAtTime_TargetComponent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PredictLocalTransformAtTime_NativeFunction, "TargetComponent");
        PredictLocalTransformAtTime_TimeInSeconds_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PredictLocalTransformAtTime_NativeFunction, "TimeInSeconds");
        PredictLocalTransformAtTime_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PredictLocalTransformAtTime_NativeFunction, "ReturnValue");
        PredictLocalTransformAtFrame_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "PredictLocalTransformAtFrame");
        PredictLocalTransformAtFrame_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(PredictLocalTransformAtFrame_NativeFunction);
        PredictLocalTransformAtFrame_Player_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PredictLocalTransformAtFrame_NativeFunction, "Player");
        PredictLocalTransformAtFrame_TargetComponent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PredictLocalTransformAtFrame_NativeFunction, "TargetComponent");
        PredictLocalTransformAtFrame_FrameTime_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PredictLocalTransformAtFrame_NativeFunction, "FrameTime");
        PredictLocalTransformAtFrame_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PredictLocalTransformAtFrame_NativeFunction, "ReturnValue");
        
        
    }
    
    protected MovieSceneAsyncAction_SequencePrediction(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/MovieSceneTracks.MovieSceneAsyncAction_SequencePrediction:PredictWorldTransformAtTime
    static readonly IntPtr PredictWorldTransformAtTime_NativeFunction;
    static readonly int PredictWorldTransformAtTime_ParamsSize;
    static readonly int PredictWorldTransformAtTime_Player_Offset;
    static readonly int PredictWorldTransformAtTime_TargetComponent_Offset;
    static readonly int PredictWorldTransformAtTime_TimeInSeconds_Offset;
    static readonly int PredictWorldTransformAtTime_ReturnValue_Offset;
    
    public static UnrealSharp.MovieSceneTracks.MovieSceneAsyncAction_SequencePrediction PredictWorldTransformAtTime(UnrealSharp.MovieScene.MovieSceneSequencePlayer player, UnrealSharp.Engine.SceneComponent targetComponent, float timeInSeconds)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[PredictWorldTransformAtTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSequencePlayer>.ToNative(IntPtr.Add(ParamsBuffer, PredictWorldTransformAtTime_Player_Offset), 0, null, player);
            ObjectMarshaller<UnrealSharp.Engine.SceneComponent>.ToNative(IntPtr.Add(ParamsBuffer, PredictWorldTransformAtTime_TargetComponent_Offset), 0, null, targetComponent);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, PredictWorldTransformAtTime_TimeInSeconds_Offset), 0, null, timeInSeconds);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, PredictWorldTransformAtTime_NativeFunction, ParamsBuffer);
            
            UnrealSharp.MovieSceneTracks.MovieSceneAsyncAction_SequencePrediction returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.MovieSceneTracks.MovieSceneAsyncAction_SequencePrediction>.FromNative(IntPtr.Add(ParamsBuffer, PredictWorldTransformAtTime_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MovieSceneTracks.MovieSceneAsyncAction_SequencePrediction:PredictWorldTransformAtFrame
    static readonly IntPtr PredictWorldTransformAtFrame_NativeFunction;
    static readonly int PredictWorldTransformAtFrame_ParamsSize;
    static readonly int PredictWorldTransformAtFrame_Player_Offset;
    static readonly int PredictWorldTransformAtFrame_TargetComponent_Offset;
    static readonly int PredictWorldTransformAtFrame_FrameTime_Offset;
    static readonly int PredictWorldTransformAtFrame_ReturnValue_Offset;
    
    public static UnrealSharp.MovieSceneTracks.MovieSceneAsyncAction_SequencePrediction PredictWorldTransformAtFrame(UnrealSharp.MovieScene.MovieSceneSequencePlayer player, UnrealSharp.Engine.SceneComponent targetComponent, UnrealSharp.CoreUObject.FrameTime frameTime)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[PredictWorldTransformAtFrame_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSequencePlayer>.ToNative(IntPtr.Add(ParamsBuffer, PredictWorldTransformAtFrame_Player_Offset), 0, null, player);
            ObjectMarshaller<UnrealSharp.Engine.SceneComponent>.ToNative(IntPtr.Add(ParamsBuffer, PredictWorldTransformAtFrame_TargetComponent_Offset), 0, null, targetComponent);
            BlittableMarshaller<UnrealSharp.CoreUObject.FrameTime>.ToNative(IntPtr.Add(ParamsBuffer, PredictWorldTransformAtFrame_FrameTime_Offset), 0, null, frameTime);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, PredictWorldTransformAtFrame_NativeFunction, ParamsBuffer);
            
            UnrealSharp.MovieSceneTracks.MovieSceneAsyncAction_SequencePrediction returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.MovieSceneTracks.MovieSceneAsyncAction_SequencePrediction>.FromNative(IntPtr.Add(ParamsBuffer, PredictWorldTransformAtFrame_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MovieSceneTracks.MovieSceneAsyncAction_SequencePrediction:PredictLocalTransformAtTime
    static readonly IntPtr PredictLocalTransformAtTime_NativeFunction;
    static readonly int PredictLocalTransformAtTime_ParamsSize;
    static readonly int PredictLocalTransformAtTime_Player_Offset;
    static readonly int PredictLocalTransformAtTime_TargetComponent_Offset;
    static readonly int PredictLocalTransformAtTime_TimeInSeconds_Offset;
    static readonly int PredictLocalTransformAtTime_ReturnValue_Offset;
    
    public static UnrealSharp.MovieSceneTracks.MovieSceneAsyncAction_SequencePrediction PredictLocalTransformAtTime(UnrealSharp.MovieScene.MovieSceneSequencePlayer player, UnrealSharp.Engine.SceneComponent targetComponent, float timeInSeconds)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[PredictLocalTransformAtTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSequencePlayer>.ToNative(IntPtr.Add(ParamsBuffer, PredictLocalTransformAtTime_Player_Offset), 0, null, player);
            ObjectMarshaller<UnrealSharp.Engine.SceneComponent>.ToNative(IntPtr.Add(ParamsBuffer, PredictLocalTransformAtTime_TargetComponent_Offset), 0, null, targetComponent);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, PredictLocalTransformAtTime_TimeInSeconds_Offset), 0, null, timeInSeconds);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, PredictLocalTransformAtTime_NativeFunction, ParamsBuffer);
            
            UnrealSharp.MovieSceneTracks.MovieSceneAsyncAction_SequencePrediction returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.MovieSceneTracks.MovieSceneAsyncAction_SequencePrediction>.FromNative(IntPtr.Add(ParamsBuffer, PredictLocalTransformAtTime_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MovieSceneTracks.MovieSceneAsyncAction_SequencePrediction:PredictLocalTransformAtFrame
    static readonly IntPtr PredictLocalTransformAtFrame_NativeFunction;
    static readonly int PredictLocalTransformAtFrame_ParamsSize;
    static readonly int PredictLocalTransformAtFrame_Player_Offset;
    static readonly int PredictLocalTransformAtFrame_TargetComponent_Offset;
    static readonly int PredictLocalTransformAtFrame_FrameTime_Offset;
    static readonly int PredictLocalTransformAtFrame_ReturnValue_Offset;
    
    public static UnrealSharp.MovieSceneTracks.MovieSceneAsyncAction_SequencePrediction PredictLocalTransformAtFrame(UnrealSharp.MovieScene.MovieSceneSequencePlayer player, UnrealSharp.Engine.SceneComponent targetComponent, UnrealSharp.CoreUObject.FrameTime frameTime)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[PredictLocalTransformAtFrame_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSequencePlayer>.ToNative(IntPtr.Add(ParamsBuffer, PredictLocalTransformAtFrame_Player_Offset), 0, null, player);
            ObjectMarshaller<UnrealSharp.Engine.SceneComponent>.ToNative(IntPtr.Add(ParamsBuffer, PredictLocalTransformAtFrame_TargetComponent_Offset), 0, null, targetComponent);
            BlittableMarshaller<UnrealSharp.CoreUObject.FrameTime>.ToNative(IntPtr.Add(ParamsBuffer, PredictLocalTransformAtFrame_FrameTime_Offset), 0, null, frameTime);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, PredictLocalTransformAtFrame_NativeFunction, ParamsBuffer);
            
            UnrealSharp.MovieSceneTracks.MovieSceneAsyncAction_SequencePrediction returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.MovieSceneTracks.MovieSceneAsyncAction_SequencePrediction>.FromNative(IntPtr.Add(ParamsBuffer, PredictLocalTransformAtFrame_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
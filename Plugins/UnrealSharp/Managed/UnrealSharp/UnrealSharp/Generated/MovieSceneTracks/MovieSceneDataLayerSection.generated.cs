// This file is automatically generated
using UnrealSharp.MovieScene;
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.MovieSceneTracks;

[UClass]
public partial class MovieSceneDataLayerSection : UnrealSharp.MovieScene.MovieSceneSection, IMovieSceneEntityProvider
{
    
    static MovieSceneDataLayerSection()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("MovieSceneDataLayerSection");
        
        DataLayers_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "DataLayers");
        DataLayers_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "DataLayers");
        
        SetPrerollState_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPrerollState");
        SetPrerollState_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPrerollState_NativeFunction);
        SetPrerollState_InPrerollState_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPrerollState_NativeFunction, "InPrerollState");
        SetFlushOnUnload_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetFlushOnUnload");
        SetFlushOnUnload_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetFlushOnUnload_NativeFunction);
        SetFlushOnUnload_bFlushOnUnload_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetFlushOnUnload_NativeFunction, "bFlushOnUnload");
        SetDesiredState_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetDesiredState");
        SetDesiredState_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetDesiredState_NativeFunction);
        SetDesiredState_InDesiredState_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetDesiredState_NativeFunction, "InDesiredState");
        SetDataLayers_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetDataLayers");
        SetDataLayers_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetDataLayers_NativeFunction);
        SetDataLayers_InDataLayers_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetDataLayers_NativeFunction, "InDataLayers");
        SetDataLayers_InDataLayers_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(SetDataLayers_NativeFunction, "InDataLayers");
        SetDataLayerAssets_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetDataLayerAssets");
        SetDataLayerAssets_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetDataLayerAssets_NativeFunction);
        SetDataLayerAssets_InDataLayerAssets_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetDataLayerAssets_NativeFunction, "InDataLayerAssets");
        SetDataLayerAssets_InDataLayerAssets_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(SetDataLayerAssets_NativeFunction, "InDataLayerAssets");
        GetPrerollState_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetPrerollState");
        GetPrerollState_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetPrerollState_NativeFunction);
        GetPrerollState_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetPrerollState_NativeFunction, "ReturnValue");
        GetFlushOnUnload_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetFlushOnUnload");
        GetFlushOnUnload_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetFlushOnUnload_NativeFunction);
        GetFlushOnUnload_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetFlushOnUnload_NativeFunction, "ReturnValue");
        GetDesiredState_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetDesiredState");
        GetDesiredState_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetDesiredState_NativeFunction);
        GetDesiredState_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDesiredState_NativeFunction, "ReturnValue");
        GetDataLayers_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetDataLayers");
        GetDataLayers_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetDataLayers_NativeFunction);
        GetDataLayers_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDataLayers_NativeFunction, "ReturnValue");
        GetDataLayers_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetDataLayers_NativeFunction, "ReturnValue");
        GetDataLayerAssets_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetDataLayerAssets");
        GetDataLayerAssets_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetDataLayerAssets_NativeFunction);
        GetDataLayerAssets_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDataLayerAssets_NativeFunction, "ReturnValue");
        GetDataLayerAssets_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetDataLayerAssets_NativeFunction, "ReturnValue");
        
        
    }
    
    protected MovieSceneDataLayerSection(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ArrayProperty /Script/MovieSceneTracks.MovieSceneDataLayerSection:DataLayers
    static readonly int DataLayers_Offset;
    static readonly IntPtr DataLayers_NativeProperty;
    UnrealArrayReadWriteMarshaler<UnrealSharp.Engine.ActorDataLayer> DataLayers_Wrapper = null;
    
    public System.Collections.Generic.IList<UnrealSharp.Engine.ActorDataLayer> DataLayers
    {
        get
        {
            if(DataLayers_Wrapper == null)
            {
                DataLayers_Wrapper = new UnrealArrayReadWriteMarshaler<UnrealSharp.Engine.ActorDataLayer>(1, DataLayers_NativeProperty, BlittableMarshaller<UnrealSharp.Engine.ActorDataLayer>.ToNative, BlittableMarshaller<UnrealSharp.Engine.ActorDataLayer>.FromNative);
            }
            
            return DataLayers_Wrapper.FromNative(IntPtr.Add(NativeObject,DataLayers_Offset),0,this);
        }
    }
    
    // Function /Script/MovieSceneTracks.MovieSceneDataLayerSection:SetPrerollState
    static readonly IntPtr SetPrerollState_NativeFunction;
    static readonly int SetPrerollState_ParamsSize;
    static readonly int SetPrerollState_InPrerollState_Offset;
    
    public void SetPrerollState(UnrealSharp.Engine.EDataLayerRuntimeState inPrerollState)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPrerollState_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.Engine.EDataLayerRuntimeState>.ToNative(IntPtr.Add(ParamsBuffer, SetPrerollState_InPrerollState_Offset), 0, null, inPrerollState);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPrerollState_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/MovieSceneTracks.MovieSceneDataLayerSection:SetFlushOnUnload
    static readonly IntPtr SetFlushOnUnload_NativeFunction;
    static readonly int SetFlushOnUnload_ParamsSize;
    static readonly int SetFlushOnUnload_bFlushOnUnload_Offset;
    
    public void SetFlushOnUnload(bool bFlushOnUnload)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetFlushOnUnload_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetFlushOnUnload_bFlushOnUnload_Offset), 0, null, bFlushOnUnload);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetFlushOnUnload_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/MovieSceneTracks.MovieSceneDataLayerSection:SetDesiredState
    static readonly IntPtr SetDesiredState_NativeFunction;
    static readonly int SetDesiredState_ParamsSize;
    static readonly int SetDesiredState_InDesiredState_Offset;
    
    public void SetDesiredState(UnrealSharp.Engine.EDataLayerRuntimeState inDesiredState)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetDesiredState_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.Engine.EDataLayerRuntimeState>.ToNative(IntPtr.Add(ParamsBuffer, SetDesiredState_InDesiredState_Offset), 0, null, inDesiredState);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetDesiredState_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/MovieSceneTracks.MovieSceneDataLayerSection:SetDataLayers
    static readonly IntPtr SetDataLayers_NativeFunction;
    static readonly int SetDataLayers_ParamsSize;
    static readonly int SetDataLayers_InDataLayers_Offset;
    static readonly int SetDataLayers_InDataLayers_ElementSize;
    
    public void SetDataLayers(System.Collections.Generic.IList<UnrealSharp.Engine.ActorDataLayer> inDataLayers)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetDataLayers_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InDataLayers_NativeBuffer = IntPtr.Add(ParamsBuffer, SetDataLayers_InDataLayers_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.ActorDataLayer> InDataLayers_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Engine.ActorDataLayer>(1, BlittableMarshaller<UnrealSharp.Engine.ActorDataLayer>.ToNative, BlittableMarshaller<UnrealSharp.Engine.ActorDataLayer>.FromNative, SetDataLayers_InDataLayers_ElementSize);
            InDataLayers_Marshaler.ToNative(InDataLayers_NativeBuffer, 0, null, inDataLayers);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetDataLayers_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/MovieSceneTracks.MovieSceneDataLayerSection:SetDataLayerAssets
    static readonly IntPtr SetDataLayerAssets_NativeFunction;
    static readonly int SetDataLayerAssets_ParamsSize;
    static readonly int SetDataLayerAssets_InDataLayerAssets_Offset;
    static readonly int SetDataLayerAssets_InDataLayerAssets_ElementSize;
    
    public void SetDataLayerAssets(System.Collections.Generic.IList<UnrealSharp.Engine.DataLayerAsset> inDataLayerAssets)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetDataLayerAssets_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InDataLayerAssets_NativeBuffer = IntPtr.Add(ParamsBuffer, SetDataLayerAssets_InDataLayerAssets_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.DataLayerAsset> InDataLayerAssets_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Engine.DataLayerAsset>(1, ObjectMarshaller<UnrealSharp.Engine.DataLayerAsset>.ToNative, ObjectMarshaller<UnrealSharp.Engine.DataLayerAsset>.FromNative, SetDataLayerAssets_InDataLayerAssets_ElementSize);
            InDataLayerAssets_Marshaler.ToNative(InDataLayerAssets_NativeBuffer, 0, null, inDataLayerAssets);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetDataLayerAssets_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/MovieSceneTracks.MovieSceneDataLayerSection:GetPrerollState
    static readonly IntPtr GetPrerollState_NativeFunction;
    static readonly int GetPrerollState_ParamsSize;
    static readonly int GetPrerollState_ReturnValue_Offset;
    
    public UnrealSharp.Engine.EDataLayerRuntimeState GetPrerollState()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetPrerollState_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetPrerollState_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.EDataLayerRuntimeState returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.Engine.EDataLayerRuntimeState>.FromNative(IntPtr.Add(ParamsBuffer, GetPrerollState_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MovieSceneTracks.MovieSceneDataLayerSection:GetFlushOnUnload
    static readonly IntPtr GetFlushOnUnload_NativeFunction;
    static readonly int GetFlushOnUnload_ParamsSize;
    static readonly int GetFlushOnUnload_ReturnValue_Offset;
    
    public bool GetFlushOnUnload()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetFlushOnUnload_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetFlushOnUnload_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetFlushOnUnload_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MovieSceneTracks.MovieSceneDataLayerSection:GetDesiredState
    static readonly IntPtr GetDesiredState_NativeFunction;
    static readonly int GetDesiredState_ParamsSize;
    static readonly int GetDesiredState_ReturnValue_Offset;
    
    public UnrealSharp.Engine.EDataLayerRuntimeState GetDesiredState()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetDesiredState_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetDesiredState_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.EDataLayerRuntimeState returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.Engine.EDataLayerRuntimeState>.FromNative(IntPtr.Add(ParamsBuffer, GetDesiredState_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/MovieSceneTracks.MovieSceneDataLayerSection:GetDataLayers
    static readonly IntPtr GetDataLayers_NativeFunction;
    static readonly int GetDataLayers_ParamsSize;
    static readonly int GetDataLayers_ReturnValue_Offset;
    static readonly int GetDataLayers_ReturnValue_ElementSize;
    
    public System.Collections.Generic.IList<UnrealSharp.Engine.ActorDataLayer> GetDataLayers()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetDataLayers_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetDataLayers_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.Engine.ActorDataLayer> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, GetDataLayers_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.ActorDataLayer> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Engine.ActorDataLayer> (1, BlittableMarshaller<UnrealSharp.Engine.ActorDataLayer>.ToNative, BlittableMarshaller<UnrealSharp.Engine.ActorDataLayer>.FromNative, GetDataLayers_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.ActorDataLayer>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/MovieSceneTracks.MovieSceneDataLayerSection:GetDataLayerAssets
    static readonly IntPtr GetDataLayerAssets_NativeFunction;
    static readonly int GetDataLayerAssets_ParamsSize;
    static readonly int GetDataLayerAssets_ReturnValue_Offset;
    static readonly int GetDataLayerAssets_ReturnValue_ElementSize;
    
    public System.Collections.Generic.IList<UnrealSharp.Engine.DataLayerAsset> GetDataLayerAssets()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetDataLayerAssets_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetDataLayerAssets_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.Engine.DataLayerAsset> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, GetDataLayerAssets_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.DataLayerAsset> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Engine.DataLayerAsset> (1, ObjectMarshaller<UnrealSharp.Engine.DataLayerAsset>.ToNative, ObjectMarshaller<UnrealSharp.Engine.DataLayerAsset>.FromNative, GetDataLayerAssets_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.DataLayerAsset>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    
}
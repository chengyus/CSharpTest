// This file is automatically generated
using UnrealSharp.MovieScene;
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.MovieSceneTracks;

[UClass]
public partial class MovieSceneSkeletalAnimationSection : UnrealSharp.MovieScene.MovieSceneSection, IMovieSceneEntityProvider
{
    
    static MovieSceneSkeletalAnimationSection()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("MovieSceneSkeletalAnimationSection");
        
        Params_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Params");
        StartLocationOffset_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "StartLocationOffset");
        StartRotationOffset_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "StartRotationOffset");
        MatchedLocationOffset_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "MatchedLocationOffset");
        MatchedRotationOffset_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "MatchedRotationOffset");
        bShowSkeleton_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bShowSkeleton");
        
        
        
    }
    
    protected MovieSceneSkeletalAnimationSection(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // StructProperty /Script/MovieSceneTracks.MovieSceneSkeletalAnimationSection:Params
    static readonly int Params_Offset;
    
    public UnrealSharp.MovieSceneTracks.MovieSceneSkeletalAnimationParams Params
    {
        get
        {
            CheckObjectForValidity();
            return UnrealSharp.MovieSceneTracks.MovieSceneSkeletalAnimationParamsMarshaler.FromNative(IntPtr.Add(NativeObject, Params_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            UnrealSharp.MovieSceneTracks.MovieSceneSkeletalAnimationParamsMarshaler.ToNative(IntPtr.Add(NativeObject, Params_Offset), 0, this, value);
        }
    }
    
    // StructProperty /Script/MovieSceneTracks.MovieSceneSkeletalAnimationSection:StartLocationOffset
    static readonly int StartLocationOffset_Offset;
    
    public System.DoubleNumerics.Vector3 StartLocationOffset
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(NativeObject, StartLocationOffset_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(NativeObject, StartLocationOffset_Offset), 0, this, value);
        }
    }
    
    // StructProperty /Script/MovieSceneTracks.MovieSceneSkeletalAnimationSection:StartRotationOffset
    static readonly int StartRotationOffset_Offset;
    
    public UnrealSharp.Rotator StartRotationOffset
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Rotator>.FromNative(IntPtr.Add(NativeObject, StartRotationOffset_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.Rotator>.ToNative(IntPtr.Add(NativeObject, StartRotationOffset_Offset), 0, this, value);
        }
    }
    
    // StructProperty /Script/MovieSceneTracks.MovieSceneSkeletalAnimationSection:MatchedLocationOffset
    static readonly int MatchedLocationOffset_Offset;
    
    public System.DoubleNumerics.Vector3 MatchedLocationOffset
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(NativeObject, MatchedLocationOffset_Offset), 0, this);
        }
    }
    
    // StructProperty /Script/MovieSceneTracks.MovieSceneSkeletalAnimationSection:MatchedRotationOffset
    static readonly int MatchedRotationOffset_Offset;
    
    public UnrealSharp.Rotator MatchedRotationOffset
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Rotator>.FromNative(IntPtr.Add(NativeObject, MatchedRotationOffset_Offset), 0, this);
        }
    }
    
    // BoolProperty /Script/MovieSceneTracks.MovieSceneSkeletalAnimationSection:bShowSkeleton
    static readonly int bShowSkeleton_Offset;
    
    public bool bShowSkeleton
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bShowSkeleton_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, bShowSkeleton_Offset), 0, this, value);
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Niagara;

[UClass]
abstract public partial class NiagaraBaselineController : UnrealSharp.CoreUObject.Object
{
    
    static NiagaraBaselineController()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("NiagaraBaselineController");
        
        TestDuration_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "TestDuration");
        EffectType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "EffectType");
        Owner_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Owner");
        
        GetSystem_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSystem");
        GetSystem_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSystem_NativeFunction);
        GetSystem_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSystem_NativeFunction, "ReturnValue");
        
        IntPtr OnTickTest_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "OnTickTest");
        OnTickTest_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(OnTickTest_NativeFunction);
        OnTickTest_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(OnTickTest_NativeFunction, "ReturnValue");
        
        IntPtr OnOwnerTick_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "OnOwnerTick");
        OnOwnerTick_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(OnOwnerTick_NativeFunction);
        OnOwnerTick_DeltaTime_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(OnOwnerTick_NativeFunction, "DeltaTime");
        
        IntPtr OnEndTest_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "OnEndTest");
        OnEndTest_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(OnEndTest_NativeFunction);
        OnEndTest_Stats_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(OnEndTest_NativeFunction, "Stats");
        
        
    }
    
    protected NiagaraBaselineController(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // FloatProperty /Script/Niagara.NiagaraBaselineController:TestDuration
    static readonly int TestDuration_Offset;
    
    public float TestDuration
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, TestDuration_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, TestDuration_Offset), 0, this, value);
        }
    }
    
    // ObjectProperty /Script/Niagara.NiagaraBaselineController:EffectType
    static readonly int EffectType_Offset;
    
    public UnrealSharp.Niagara.NiagaraEffectType EffectType
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.Niagara.NiagaraEffectType>.FromNative(IntPtr.Add(NativeObject, EffectType_Offset), 0, this);
        }
    }
    
    // ObjectProperty /Script/Niagara.NiagaraBaselineController:Owner
    static readonly int Owner_Offset;
    
    public UnrealSharp.Niagara.NiagaraPerfBaselineActor Owner
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.Niagara.NiagaraPerfBaselineActor>.FromNative(IntPtr.Add(NativeObject, Owner_Offset), 0, this);
        }
    }
    
    // Function /Script/Niagara.NiagaraBaselineController:GetSystem
    static readonly IntPtr GetSystem_NativeFunction;
    static readonly int GetSystem_ParamsSize;
    static readonly int GetSystem_ReturnValue_Offset;
    
    public UnrealSharp.Niagara.NiagaraSystem GetSystem()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSystem_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSystem_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Niagara.NiagaraSystem returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Niagara.NiagaraSystem>.FromNative(IntPtr.Add(ParamsBuffer, GetSystem_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Niagara.NiagaraBaselineController:OnTickTest
    IntPtr OnTickTest_NativeFunction;
    static readonly int OnTickTest_ParamsSize;
    static readonly int OnTickTest_ReturnValue_Offset;
    
    [UFunction(FunctionFlags.BlueprintEvent)]
    public virtual bool OnTickTest()
    {
        unsafe
        {
            if (OnTickTest_NativeFunction == IntPtr.Zero)
            {
                OnTickTest_NativeFunction = UClassExporter.CallGetNativeFunctionFromInstanceAndName(NativeObject, "OnTickTest");
            }
            byte* ParamsBufferAllocation = stackalloc byte[OnTickTest_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, OnTickTest_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, OnTickTest_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    //Hide implementation function from Intellisense/ReSharper
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    protected virtual bool OnTickTest_Implementation()
    {
        return default(bool);
    }
    void Invoke_OnTickTest(IntPtr buffer, IntPtr returnBuffer)
    {
        unsafe
        {
            bool returnValue = OnTickTest_Implementation();
            BoolMarshaller.ToNative(IntPtr.Add(returnBuffer, 0), 0, null, returnValue);
        }
    }
    
    // Function /Script/Niagara.NiagaraBaselineController:OnOwnerTick
    IntPtr OnOwnerTick_NativeFunction;
    static readonly int OnOwnerTick_ParamsSize;
    static readonly int OnOwnerTick_DeltaTime_Offset;
    
    [UFunction(FunctionFlags.BlueprintEvent)]
    public virtual void OnOwnerTick(float deltaTime)
    {
        unsafe
        {
            if (OnOwnerTick_NativeFunction == IntPtr.Zero)
            {
                OnOwnerTick_NativeFunction = UClassExporter.CallGetNativeFunctionFromInstanceAndName(NativeObject, "OnOwnerTick");
            }
            byte* ParamsBufferAllocation = stackalloc byte[OnOwnerTick_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, OnOwnerTick_DeltaTime_Offset), 0, null, deltaTime);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, OnOwnerTick_NativeFunction, ParamsBuffer);
            
        }
    }
    
    //Hide implementation function from Intellisense/ReSharper
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    protected virtual void OnOwnerTick_Implementation(float deltaTime)
    {
    }
    void Invoke_OnOwnerTick(IntPtr buffer, IntPtr returnBuffer)
    {
        unsafe
        {
            float deltaTime = BlittableMarshaller<float>.FromNative(IntPtr.Add(buffer, OnOwnerTick_DeltaTime_Offset), 0, null);
            OnOwnerTick_Implementation(deltaTime);
        }
    }
    
    // Function /Script/Niagara.NiagaraBaselineController:OnEndTest
    IntPtr OnEndTest_NativeFunction;
    static readonly int OnEndTest_ParamsSize;
    static readonly int OnEndTest_Stats_Offset;
    
    [UFunction(FunctionFlags.BlueprintEvent)]
    public virtual void OnEndTest(UnrealSharp.Niagara.NiagaraPerfBaselineStats stats)
    {
        unsafe
        {
            if (OnEndTest_NativeFunction == IntPtr.Zero)
            {
                OnEndTest_NativeFunction = UClassExporter.CallGetNativeFunctionFromInstanceAndName(NativeObject, "OnEndTest");
            }
            byte* ParamsBufferAllocation = stackalloc byte[OnEndTest_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.Niagara.NiagaraPerfBaselineStats>.ToNative(IntPtr.Add(ParamsBuffer, OnEndTest_Stats_Offset), 0, null, stats);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, OnEndTest_NativeFunction, ParamsBuffer);
            
        }
    }
    
    //Hide implementation function from Intellisense/ReSharper
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    protected virtual void OnEndTest_Implementation(UnrealSharp.Niagara.NiagaraPerfBaselineStats stats)
    {
    }
    void Invoke_OnEndTest(IntPtr buffer, IntPtr returnBuffer)
    {
        unsafe
        {
            UnrealSharp.Niagara.NiagaraPerfBaselineStats stats = BlittableMarshaller<UnrealSharp.Niagara.NiagaraPerfBaselineStats>.FromNative(IntPtr.Add(buffer, OnEndTest_Stats_Offset), 0, null);
            OnEndTest_Implementation(stats);
        }
    }
    
    // Function /Script/Niagara.NiagaraBaselineController:OnBeginTest
    IntPtr OnBeginTest_NativeFunction;
    
    [UFunction(FunctionFlags.BlueprintEvent)]
    public virtual void OnBeginTest()
    {
        unsafe
        {
            if (OnBeginTest_NativeFunction == IntPtr.Zero)
            {
                OnBeginTest_NativeFunction = UClassExporter.CallGetNativeFunctionFromInstanceAndName(NativeObject, "OnBeginTest");
            }
            UObjectExporter.CallInvokeNativeFunction(NativeObject, OnBeginTest_NativeFunction, IntPtr.Zero);
        }
    }
    
    //Hide implementation function from Intellisense/ReSharper
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    protected virtual void OnBeginTest_Implementation()
    {
    }
    void Invoke_OnBeginTest(IntPtr buffer, IntPtr returnBuffer)
    {
        unsafe
        {
            OnBeginTest_Implementation();
        }
    }
    
    
}
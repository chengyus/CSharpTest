// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Niagara;

[UClass]
public partial class NiagaraDataChannelReader : UnrealSharp.CoreUObject.Object
{
    
    static NiagaraDataChannelReader()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("NiagaraDataChannelReader");
        
        
        ReadVector4_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ReadVector4");
        ReadVector4_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ReadVector4_NativeFunction);
        ReadVector4_VarName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReadVector4_NativeFunction, "VarName");
        ReadVector4_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReadVector4_NativeFunction, "Index");
        ReadVector4_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReadVector4_NativeFunction, "ReturnValue");
        ReadVector2D_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ReadVector2D");
        ReadVector2D_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ReadVector2D_NativeFunction);
        ReadVector2D_VarName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReadVector2D_NativeFunction, "VarName");
        ReadVector2D_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReadVector2D_NativeFunction, "Index");
        ReadVector2D_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReadVector2D_NativeFunction, "ReturnValue");
        ReadVector_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ReadVector");
        ReadVector_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ReadVector_NativeFunction);
        ReadVector_VarName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReadVector_NativeFunction, "VarName");
        ReadVector_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReadVector_NativeFunction, "Index");
        ReadVector_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReadVector_NativeFunction, "ReturnValue");
        ReadQuat_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ReadQuat");
        ReadQuat_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ReadQuat_NativeFunction);
        ReadQuat_VarName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReadQuat_NativeFunction, "VarName");
        ReadQuat_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReadQuat_NativeFunction, "Index");
        ReadQuat_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReadQuat_NativeFunction, "ReturnValue");
        ReadPosition_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ReadPosition");
        ReadPosition_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ReadPosition_NativeFunction);
        ReadPosition_VarName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReadPosition_NativeFunction, "VarName");
        ReadPosition_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReadPosition_NativeFunction, "Index");
        ReadPosition_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReadPosition_NativeFunction, "ReturnValue");
        ReadLinearColor_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ReadLinearColor");
        ReadLinearColor_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ReadLinearColor_NativeFunction);
        ReadLinearColor_VarName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReadLinearColor_NativeFunction, "VarName");
        ReadLinearColor_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReadLinearColor_NativeFunction, "Index");
        ReadLinearColor_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReadLinearColor_NativeFunction, "ReturnValue");
        ReadInt_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ReadInt");
        ReadInt_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ReadInt_NativeFunction);
        ReadInt_VarName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReadInt_NativeFunction, "VarName");
        ReadInt_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReadInt_NativeFunction, "Index");
        ReadInt_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReadInt_NativeFunction, "ReturnValue");
        ReadFloat_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ReadFloat");
        ReadFloat_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ReadFloat_NativeFunction);
        ReadFloat_VarName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReadFloat_NativeFunction, "VarName");
        ReadFloat_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReadFloat_NativeFunction, "Index");
        ReadFloat_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReadFloat_NativeFunction, "ReturnValue");
        ReadBool_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ReadBool");
        ReadBool_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ReadBool_NativeFunction);
        ReadBool_VarName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReadBool_NativeFunction, "VarName");
        ReadBool_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReadBool_NativeFunction, "Index");
        ReadBool_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReadBool_NativeFunction, "ReturnValue");
        Num_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Num");
        Num_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Num_NativeFunction);
        Num_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Num_NativeFunction, "ReturnValue");
        InitAccess_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "InitAccess");
        InitAccess_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(InitAccess_NativeFunction);
        InitAccess_SearchParams_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InitAccess_NativeFunction, "SearchParams");
        InitAccess_bReadPrevFrameData_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InitAccess_NativeFunction, "bReadPrevFrameData");
        InitAccess_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InitAccess_NativeFunction, "ReturnValue");
        
        
    }
    
    protected NiagaraDataChannelReader(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Niagara.NiagaraDataChannelReader:ReadVector4
    static readonly IntPtr ReadVector4_NativeFunction;
    static readonly int ReadVector4_ParamsSize;
    static readonly int ReadVector4_VarName_Offset;
    static readonly int ReadVector4_Index_Offset;
    static readonly int ReadVector4_ReturnValue_Offset;
    
    public System.DoubleNumerics.Vector4 ReadVector4(Name varName, int index)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ReadVector4_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, ReadVector4_VarName_Offset), 0, null, varName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, ReadVector4_Index_Offset), 0, null, index);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ReadVector4_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector4 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector4>.FromNative(IntPtr.Add(ParamsBuffer, ReadVector4_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Niagara.NiagaraDataChannelReader:ReadVector2D
    static readonly IntPtr ReadVector2D_NativeFunction;
    static readonly int ReadVector2D_ParamsSize;
    static readonly int ReadVector2D_VarName_Offset;
    static readonly int ReadVector2D_Index_Offset;
    static readonly int ReadVector2D_ReturnValue_Offset;
    
    public System.DoubleNumerics.Vector2 ReadVector2D(Name varName, int index)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ReadVector2D_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, ReadVector2D_VarName_Offset), 0, null, varName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, ReadVector2D_Index_Offset), 0, null, index);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ReadVector2D_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector2 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(ParamsBuffer, ReadVector2D_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Niagara.NiagaraDataChannelReader:ReadVector
    static readonly IntPtr ReadVector_NativeFunction;
    static readonly int ReadVector_ParamsSize;
    static readonly int ReadVector_VarName_Offset;
    static readonly int ReadVector_Index_Offset;
    static readonly int ReadVector_ReturnValue_Offset;
    
    public System.DoubleNumerics.Vector3 ReadVector(Name varName, int index)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ReadVector_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, ReadVector_VarName_Offset), 0, null, varName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, ReadVector_Index_Offset), 0, null, index);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ReadVector_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector3 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, ReadVector_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Niagara.NiagaraDataChannelReader:ReadQuat
    static readonly IntPtr ReadQuat_NativeFunction;
    static readonly int ReadQuat_ParamsSize;
    static readonly int ReadQuat_VarName_Offset;
    static readonly int ReadQuat_Index_Offset;
    static readonly int ReadQuat_ReturnValue_Offset;
    
    public System.DoubleNumerics.Quaternion ReadQuat(Name varName, int index)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ReadQuat_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, ReadQuat_VarName_Offset), 0, null, varName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, ReadQuat_Index_Offset), 0, null, index);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ReadQuat_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Quaternion returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Quaternion>.FromNative(IntPtr.Add(ParamsBuffer, ReadQuat_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Niagara.NiagaraDataChannelReader:ReadPosition
    static readonly IntPtr ReadPosition_NativeFunction;
    static readonly int ReadPosition_ParamsSize;
    static readonly int ReadPosition_VarName_Offset;
    static readonly int ReadPosition_Index_Offset;
    static readonly int ReadPosition_ReturnValue_Offset;
    
    public System.DoubleNumerics.Vector3 ReadPosition(Name varName, int index)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ReadPosition_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, ReadPosition_VarName_Offset), 0, null, varName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, ReadPosition_Index_Offset), 0, null, index);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ReadPosition_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector3 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, ReadPosition_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Niagara.NiagaraDataChannelReader:ReadLinearColor
    static readonly IntPtr ReadLinearColor_NativeFunction;
    static readonly int ReadLinearColor_ParamsSize;
    static readonly int ReadLinearColor_VarName_Offset;
    static readonly int ReadLinearColor_Index_Offset;
    static readonly int ReadLinearColor_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.LinearColor ReadLinearColor(Name varName, int index)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ReadLinearColor_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, ReadLinearColor_VarName_Offset), 0, null, varName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, ReadLinearColor_Index_Offset), 0, null, index);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ReadLinearColor_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.LinearColor returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.FromNative(IntPtr.Add(ParamsBuffer, ReadLinearColor_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Niagara.NiagaraDataChannelReader:ReadInt
    static readonly IntPtr ReadInt_NativeFunction;
    static readonly int ReadInt_ParamsSize;
    static readonly int ReadInt_VarName_Offset;
    static readonly int ReadInt_Index_Offset;
    static readonly int ReadInt_ReturnValue_Offset;
    
    public int ReadInt(Name varName, int index)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ReadInt_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, ReadInt_VarName_Offset), 0, null, varName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, ReadInt_Index_Offset), 0, null, index);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ReadInt_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, ReadInt_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Niagara.NiagaraDataChannelReader:ReadFloat
    static readonly IntPtr ReadFloat_NativeFunction;
    static readonly int ReadFloat_ParamsSize;
    static readonly int ReadFloat_VarName_Offset;
    static readonly int ReadFloat_Index_Offset;
    static readonly int ReadFloat_ReturnValue_Offset;
    
    public double ReadFloat(Name varName, int index)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ReadFloat_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, ReadFloat_VarName_Offset), 0, null, varName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, ReadFloat_Index_Offset), 0, null, index);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ReadFloat_NativeFunction, ParamsBuffer);
            
            double returnValue;
            returnValue = BlittableMarshaller<double>.FromNative(IntPtr.Add(ParamsBuffer, ReadFloat_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Niagara.NiagaraDataChannelReader:ReadBool
    static readonly IntPtr ReadBool_NativeFunction;
    static readonly int ReadBool_ParamsSize;
    static readonly int ReadBool_VarName_Offset;
    static readonly int ReadBool_Index_Offset;
    static readonly int ReadBool_ReturnValue_Offset;
    
    public bool ReadBool(Name varName, int index)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ReadBool_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, ReadBool_VarName_Offset), 0, null, varName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, ReadBool_Index_Offset), 0, null, index);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ReadBool_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, ReadBool_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Niagara.NiagaraDataChannelReader:Num
    static readonly IntPtr Num_NativeFunction;
    static readonly int Num_ParamsSize;
    static readonly int Num_ReturnValue_Offset;
    
    public int Num()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Num_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, Num_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, Num_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Niagara.NiagaraDataChannelReader:InitAccess
    static readonly IntPtr InitAccess_NativeFunction;
    static readonly int InitAccess_ParamsSize;
    static readonly int InitAccess_SearchParams_Offset;
    static readonly int InitAccess_bReadPrevFrameData_Offset;
    static readonly int InitAccess_ReturnValue_Offset;
    
    public bool InitAccess(UnrealSharp.Niagara.NiagaraDataChannelSearchParameters searchParams, bool bReadPrevFrameData)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[InitAccess_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.Niagara.NiagaraDataChannelSearchParametersMarshaler.ToNative(IntPtr.Add(ParamsBuffer, InitAccess_SearchParams_Offset), 0, null, searchParams);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, InitAccess_bReadPrevFrameData_Offset), 0, null, bReadPrevFrameData);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, InitAccess_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, InitAccess_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
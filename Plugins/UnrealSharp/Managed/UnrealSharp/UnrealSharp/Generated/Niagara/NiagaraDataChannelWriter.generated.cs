// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Niagara;

[UClass]
public partial class NiagaraDataChannelWriter : UnrealSharp.CoreUObject.Object
{
    
    static NiagaraDataChannelWriter()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("NiagaraDataChannelWriter");
        
        
        WriteVector4_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "WriteVector4");
        WriteVector4_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(WriteVector4_NativeFunction);
        WriteVector4_VarName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WriteVector4_NativeFunction, "VarName");
        WriteVector4_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WriteVector4_NativeFunction, "Index");
        WriteVector4_InData_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WriteVector4_NativeFunction, "InData");
        WriteVector2D_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "WriteVector2D");
        WriteVector2D_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(WriteVector2D_NativeFunction);
        WriteVector2D_VarName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WriteVector2D_NativeFunction, "VarName");
        WriteVector2D_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WriteVector2D_NativeFunction, "Index");
        WriteVector2D_InData_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WriteVector2D_NativeFunction, "InData");
        WriteVector_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "WriteVector");
        WriteVector_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(WriteVector_NativeFunction);
        WriteVector_VarName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WriteVector_NativeFunction, "VarName");
        WriteVector_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WriteVector_NativeFunction, "Index");
        WriteVector_InData_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WriteVector_NativeFunction, "InData");
        WriteSpawnInfo_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "WriteSpawnInfo");
        WriteSpawnInfo_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(WriteSpawnInfo_NativeFunction);
        WriteSpawnInfo_VarName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WriteSpawnInfo_NativeFunction, "VarName");
        WriteSpawnInfo_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WriteSpawnInfo_NativeFunction, "Index");
        WriteSpawnInfo_InData_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WriteSpawnInfo_NativeFunction, "InData");
        WriteQuat_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "WriteQuat");
        WriteQuat_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(WriteQuat_NativeFunction);
        WriteQuat_VarName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WriteQuat_NativeFunction, "VarName");
        WriteQuat_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WriteQuat_NativeFunction, "Index");
        WriteQuat_InData_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WriteQuat_NativeFunction, "InData");
        WritePosition_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "WritePosition");
        WritePosition_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(WritePosition_NativeFunction);
        WritePosition_VarName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WritePosition_NativeFunction, "VarName");
        WritePosition_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WritePosition_NativeFunction, "Index");
        WritePosition_InData_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WritePosition_NativeFunction, "InData");
        WriteLinearColor_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "WriteLinearColor");
        WriteLinearColor_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(WriteLinearColor_NativeFunction);
        WriteLinearColor_VarName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WriteLinearColor_NativeFunction, "VarName");
        WriteLinearColor_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WriteLinearColor_NativeFunction, "Index");
        WriteLinearColor_InData_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WriteLinearColor_NativeFunction, "InData");
        WriteInt_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "WriteInt");
        WriteInt_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(WriteInt_NativeFunction);
        WriteInt_VarName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WriteInt_NativeFunction, "VarName");
        WriteInt_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WriteInt_NativeFunction, "Index");
        WriteInt_InData_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WriteInt_NativeFunction, "InData");
        WriteFloat_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "WriteFloat");
        WriteFloat_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(WriteFloat_NativeFunction);
        WriteFloat_VarName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WriteFloat_NativeFunction, "VarName");
        WriteFloat_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WriteFloat_NativeFunction, "Index");
        WriteFloat_InData_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WriteFloat_NativeFunction, "InData");
        WriteBool_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "WriteBool");
        WriteBool_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(WriteBool_NativeFunction);
        WriteBool_VarName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WriteBool_NativeFunction, "VarName");
        WriteBool_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WriteBool_NativeFunction, "Index");
        WriteBool_InData_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(WriteBool_NativeFunction, "InData");
        Num_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Num");
        Num_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Num_NativeFunction);
        Num_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Num_NativeFunction, "ReturnValue");
        InitWrite_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "InitWrite");
        InitWrite_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(InitWrite_NativeFunction);
        InitWrite_SearchParams_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InitWrite_NativeFunction, "SearchParams");
        InitWrite_Count_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InitWrite_NativeFunction, "Count");
        InitWrite_bVisibleToGame_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InitWrite_NativeFunction, "bVisibleToGame");
        InitWrite_bVisibleToCPU_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InitWrite_NativeFunction, "bVisibleToCPU");
        InitWrite_bVisibleToGPU_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InitWrite_NativeFunction, "bVisibleToGPU");
        InitWrite_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InitWrite_NativeFunction, "ReturnValue");
        
        
    }
    
    protected NiagaraDataChannelWriter(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Niagara.NiagaraDataChannelWriter:WriteVector4
    static readonly IntPtr WriteVector4_NativeFunction;
    static readonly int WriteVector4_ParamsSize;
    static readonly int WriteVector4_VarName_Offset;
    static readonly int WriteVector4_Index_Offset;
    static readonly int WriteVector4_InData_Offset;
    
    public void WriteVector4(Name varName, int index, System.DoubleNumerics.Vector4 inData)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[WriteVector4_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, WriteVector4_VarName_Offset), 0, null, varName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, WriteVector4_Index_Offset), 0, null, index);
            BlittableMarshaller<System.DoubleNumerics.Vector4>.ToNative(IntPtr.Add(ParamsBuffer, WriteVector4_InData_Offset), 0, null, inData);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, WriteVector4_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Niagara.NiagaraDataChannelWriter:WriteVector2D
    static readonly IntPtr WriteVector2D_NativeFunction;
    static readonly int WriteVector2D_ParamsSize;
    static readonly int WriteVector2D_VarName_Offset;
    static readonly int WriteVector2D_Index_Offset;
    static readonly int WriteVector2D_InData_Offset;
    
    public void WriteVector2D(Name varName, int index, System.DoubleNumerics.Vector2 inData)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[WriteVector2D_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, WriteVector2D_VarName_Offset), 0, null, varName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, WriteVector2D_Index_Offset), 0, null, index);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, WriteVector2D_InData_Offset), 0, null, inData);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, WriteVector2D_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Niagara.NiagaraDataChannelWriter:WriteVector
    static readonly IntPtr WriteVector_NativeFunction;
    static readonly int WriteVector_ParamsSize;
    static readonly int WriteVector_VarName_Offset;
    static readonly int WriteVector_Index_Offset;
    static readonly int WriteVector_InData_Offset;
    
    public void WriteVector(Name varName, int index, System.DoubleNumerics.Vector3 inData)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[WriteVector_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, WriteVector_VarName_Offset), 0, null, varName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, WriteVector_Index_Offset), 0, null, index);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, WriteVector_InData_Offset), 0, null, inData);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, WriteVector_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Niagara.NiagaraDataChannelWriter:WriteSpawnInfo
    static readonly IntPtr WriteSpawnInfo_NativeFunction;
    static readonly int WriteSpawnInfo_ParamsSize;
    static readonly int WriteSpawnInfo_VarName_Offset;
    static readonly int WriteSpawnInfo_Index_Offset;
    static readonly int WriteSpawnInfo_InData_Offset;
    
    public void WriteSpawnInfo(Name varName, int index, UnrealSharp.Niagara.NiagaraSpawnInfo inData)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[WriteSpawnInfo_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, WriteSpawnInfo_VarName_Offset), 0, null, varName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, WriteSpawnInfo_Index_Offset), 0, null, index);
            BlittableMarshaller<UnrealSharp.Niagara.NiagaraSpawnInfo>.ToNative(IntPtr.Add(ParamsBuffer, WriteSpawnInfo_InData_Offset), 0, null, inData);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, WriteSpawnInfo_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Niagara.NiagaraDataChannelWriter:WriteQuat
    static readonly IntPtr WriteQuat_NativeFunction;
    static readonly int WriteQuat_ParamsSize;
    static readonly int WriteQuat_VarName_Offset;
    static readonly int WriteQuat_Index_Offset;
    static readonly int WriteQuat_InData_Offset;
    
    public void WriteQuat(Name varName, int index, System.DoubleNumerics.Quaternion inData)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[WriteQuat_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, WriteQuat_VarName_Offset), 0, null, varName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, WriteQuat_Index_Offset), 0, null, index);
            BlittableMarshaller<System.DoubleNumerics.Quaternion>.ToNative(IntPtr.Add(ParamsBuffer, WriteQuat_InData_Offset), 0, null, inData);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, WriteQuat_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Niagara.NiagaraDataChannelWriter:WritePosition
    static readonly IntPtr WritePosition_NativeFunction;
    static readonly int WritePosition_ParamsSize;
    static readonly int WritePosition_VarName_Offset;
    static readonly int WritePosition_Index_Offset;
    static readonly int WritePosition_InData_Offset;
    
    public void WritePosition(Name varName, int index, System.DoubleNumerics.Vector3 inData)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[WritePosition_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, WritePosition_VarName_Offset), 0, null, varName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, WritePosition_Index_Offset), 0, null, index);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, WritePosition_InData_Offset), 0, null, inData);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, WritePosition_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Niagara.NiagaraDataChannelWriter:WriteLinearColor
    static readonly IntPtr WriteLinearColor_NativeFunction;
    static readonly int WriteLinearColor_ParamsSize;
    static readonly int WriteLinearColor_VarName_Offset;
    static readonly int WriteLinearColor_Index_Offset;
    static readonly int WriteLinearColor_InData_Offset;
    
    public void WriteLinearColor(Name varName, int index, UnrealSharp.CoreUObject.LinearColor inData)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[WriteLinearColor_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, WriteLinearColor_VarName_Offset), 0, null, varName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, WriteLinearColor_Index_Offset), 0, null, index);
            BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.ToNative(IntPtr.Add(ParamsBuffer, WriteLinearColor_InData_Offset), 0, null, inData);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, WriteLinearColor_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Niagara.NiagaraDataChannelWriter:WriteInt
    static readonly IntPtr WriteInt_NativeFunction;
    static readonly int WriteInt_ParamsSize;
    static readonly int WriteInt_VarName_Offset;
    static readonly int WriteInt_Index_Offset;
    static readonly int WriteInt_InData_Offset;
    
    public void WriteInt(Name varName, int index, int inData)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[WriteInt_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, WriteInt_VarName_Offset), 0, null, varName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, WriteInt_Index_Offset), 0, null, index);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, WriteInt_InData_Offset), 0, null, inData);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, WriteInt_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Niagara.NiagaraDataChannelWriter:WriteFloat
    static readonly IntPtr WriteFloat_NativeFunction;
    static readonly int WriteFloat_ParamsSize;
    static readonly int WriteFloat_VarName_Offset;
    static readonly int WriteFloat_Index_Offset;
    static readonly int WriteFloat_InData_Offset;
    
    public void WriteFloat(Name varName, int index, double inData)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[WriteFloat_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, WriteFloat_VarName_Offset), 0, null, varName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, WriteFloat_Index_Offset), 0, null, index);
            BlittableMarshaller<double>.ToNative(IntPtr.Add(ParamsBuffer, WriteFloat_InData_Offset), 0, null, inData);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, WriteFloat_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Niagara.NiagaraDataChannelWriter:WriteBool
    static readonly IntPtr WriteBool_NativeFunction;
    static readonly int WriteBool_ParamsSize;
    static readonly int WriteBool_VarName_Offset;
    static readonly int WriteBool_Index_Offset;
    static readonly int WriteBool_InData_Offset;
    
    public void WriteBool(Name varName, int index, bool inData)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[WriteBool_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, WriteBool_VarName_Offset), 0, null, varName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, WriteBool_Index_Offset), 0, null, index);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, WriteBool_InData_Offset), 0, null, inData);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, WriteBool_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Niagara.NiagaraDataChannelWriter:Num
    static readonly IntPtr Num_NativeFunction;
    static readonly int Num_ParamsSize;
    static readonly int Num_ReturnValue_Offset;
    
    public int Num()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Num_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, Num_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, Num_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Niagara.NiagaraDataChannelWriter:InitWrite
    static readonly IntPtr InitWrite_NativeFunction;
    static readonly int InitWrite_ParamsSize;
    static readonly int InitWrite_SearchParams_Offset;
    static readonly int InitWrite_Count_Offset;
    static readonly int InitWrite_bVisibleToGame_Offset;
    static readonly int InitWrite_bVisibleToCPU_Offset;
    static readonly int InitWrite_bVisibleToGPU_Offset;
    static readonly int InitWrite_ReturnValue_Offset;
    
    public bool InitWrite(UnrealSharp.Niagara.NiagaraDataChannelSearchParameters searchParams, int count, bool bVisibleToGame = true, bool bVisibleToCPU = true, bool bVisibleToGPU = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[InitWrite_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.Niagara.NiagaraDataChannelSearchParametersMarshaler.ToNative(IntPtr.Add(ParamsBuffer, InitWrite_SearchParams_Offset), 0, null, searchParams);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, InitWrite_Count_Offset), 0, null, count);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, InitWrite_bVisibleToGame_Offset), 0, null, bVisibleToGame);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, InitWrite_bVisibleToCPU_Offset), 0, null, bVisibleToCPU);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, InitWrite_bVisibleToGPU_Offset), 0, null, bVisibleToGPU);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, InitWrite_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, InitWrite_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Niagara;

[UClass]
public partial class NiagaraDataInterfaceArrayColor : UnrealSharp.Niagara.NiagaraDataInterfaceArray
{
    
    static NiagaraDataInterfaceArrayColor()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("NiagaraDataInterfaceArrayColor");
        
        ColorData_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ColorData");
        ColorData_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "ColorData");
        
        
        
    }
    
    protected NiagaraDataInterfaceArrayColor(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ArrayProperty /Script/Niagara.NiagaraDataInterfaceArrayColor:ColorData
    static readonly int ColorData_Offset;
    static readonly IntPtr ColorData_NativeProperty;
    UnrealArrayReadWriteMarshaler<UnrealSharp.CoreUObject.LinearColor> ColorData_Wrapper = null;
    
    public System.Collections.Generic.IList<UnrealSharp.CoreUObject.LinearColor> ColorData
    {
        get
        {
            if(ColorData_Wrapper == null)
            {
                ColorData_Wrapper = new UnrealArrayReadWriteMarshaler<UnrealSharp.CoreUObject.LinearColor>(1, ColorData_NativeProperty, BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.ToNative, BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.FromNative);
            }
            
            return ColorData_Wrapper.FromNative(IntPtr.Add(NativeObject,ColorData_Offset),0,this);
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Niagara;

[UClass]
abstract public partial class NiagaraPreviewAxis : UnrealSharp.CoreUObject.Object
{
    
    static NiagaraPreviewAxis()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("NiagaraPreviewAxis");
        
        
        
        IntPtr Num_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Num");
        Num_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Num_NativeFunction);
        Num_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Num_NativeFunction, "ReturnValue");
        
        IntPtr ApplyToPreview_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ApplyToPreview");
        ApplyToPreview_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ApplyToPreview_NativeFunction);
        ApplyToPreview_PreviewComponent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ApplyToPreview_NativeFunction, "PreviewComponent");
        ApplyToPreview_PreviewIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ApplyToPreview_NativeFunction, "PreviewIndex");
        ApplyToPreview_bIsXAxis_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ApplyToPreview_NativeFunction, "bIsXAxis");
        ApplyToPreview_OutLabelText_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ApplyToPreview_NativeFunction, "OutLabelText");
        
        
    }
    
    protected NiagaraPreviewAxis(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Niagara.NiagaraPreviewAxis:Num
    IntPtr Num_NativeFunction;
    static readonly int Num_ParamsSize;
    static readonly int Num_ReturnValue_Offset;
    
    [UFunction(FunctionFlags.BlueprintEvent)]
    public virtual int Num()
    {
        unsafe
        {
            if (Num_NativeFunction == IntPtr.Zero)
            {
                Num_NativeFunction = UClassExporter.CallGetNativeFunctionFromInstanceAndName(NativeObject, "Num");
            }
            byte* ParamsBufferAllocation = stackalloc byte[Num_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, Num_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, Num_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    //Hide implementation function from Intellisense/ReSharper
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    protected virtual int Num_Implementation()
    {
        return default(int);
    }
    void Invoke_Num(IntPtr buffer, IntPtr returnBuffer)
    {
        unsafe
        {
            int returnValue = Num_Implementation();
            BlittableMarshaller<int>.ToNative(IntPtr.Add(returnBuffer, 0), 0, null, returnValue);
        }
    }
    
    // Function /Script/Niagara.NiagaraPreviewAxis:ApplyToPreview
    IntPtr ApplyToPreview_NativeFunction;
    static readonly int ApplyToPreview_ParamsSize;
    static readonly int ApplyToPreview_PreviewComponent_Offset;
    static readonly int ApplyToPreview_PreviewIndex_Offset;
    static readonly int ApplyToPreview_bIsXAxis_Offset;
    static readonly int ApplyToPreview_OutLabelText_Offset;
    
    [UFunction(FunctionFlags.BlueprintEvent)]
    public virtual void ApplyToPreview(UnrealSharp.Niagara.NiagaraComponent previewComponent, int previewIndex, bool bIsXAxis, out string outLabelText)
    {
        unsafe
        {
            if (ApplyToPreview_NativeFunction == IntPtr.Zero)
            {
                ApplyToPreview_NativeFunction = UClassExporter.CallGetNativeFunctionFromInstanceAndName(NativeObject, "ApplyToPreview");
            }
            byte* ParamsBufferAllocation = stackalloc byte[ApplyToPreview_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Niagara.NiagaraComponent>.ToNative(IntPtr.Add(ParamsBuffer, ApplyToPreview_PreviewComponent_Offset), 0, null, previewComponent);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, ApplyToPreview_PreviewIndex_Offset), 0, null, previewIndex);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ApplyToPreview_bIsXAxis_Offset), 0, null, bIsXAxis);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ApplyToPreview_NativeFunction, ParamsBuffer);
            
            IntPtr OutLabelText_NativePtr = IntPtr.Add(ParamsBuffer,ApplyToPreview_OutLabelText_Offset);
            outLabelText = StringMarshaller.FromNative(OutLabelText_NativePtr,0,null);
            StringMarshaller.DestructInstance(OutLabelText_NativePtr, 0);
            
        }
    }
    
    //Hide implementation function from Intellisense/ReSharper
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    protected virtual void ApplyToPreview_Implementation(UnrealSharp.Niagara.NiagaraComponent previewComponent, int previewIndex, bool bIsXAxis, out string outLabelText)
    {
        outLabelText = "";
    }
    void Invoke_ApplyToPreview(IntPtr buffer, IntPtr returnBuffer)
    {
        unsafe
        {
            UnrealSharp.Niagara.NiagaraComponent previewComponent = ObjectMarshaller<UnrealSharp.Niagara.NiagaraComponent>.FromNative(IntPtr.Add(buffer, ApplyToPreview_PreviewComponent_Offset), 0, null);
            int previewIndex = BlittableMarshaller<int>.FromNative(IntPtr.Add(buffer, ApplyToPreview_PreviewIndex_Offset), 0, null);
            bool bIsXAxis = BoolMarshaller.FromNative(IntPtr.Add(buffer, ApplyToPreview_bIsXAxis_Offset), 0, null);
            string outLabelText = default;
            ApplyToPreview_Implementation(previewComponent, previewIndex, bIsXAxis, out outLabelText);
            IntPtr OutLabelText_NativePtr = IntPtr.Add(buffer,ApplyToPreview_OutLabelText_Offset);
            StringMarshaller.ToNative(OutLabelText_NativePtr,0,null,outLabelText);
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Niagara;

[UClass]
public partial class NiagaraSettings : UnrealSharp.DeveloperSettings.DeveloperSettings
{
    
    static NiagaraSettings()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("NiagaraSettings");
        
        bLimitDeltaTime_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bLimitDeltaTime");
        MaxDeltaTimePerTick_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "MaxDeltaTimePerTick");
        
        
        
    }
    
    protected NiagaraSettings(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // BoolProperty /Script/Niagara.NiagaraSettings:bLimitDeltaTime
    static readonly int bLimitDeltaTime_Offset;
    
    public bool bLimitDeltaTime
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bLimitDeltaTime_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, bLimitDeltaTime_Offset), 0, this, value);
        }
    }
    
    // FloatProperty /Script/Niagara.NiagaraSettings:MaxDeltaTimePerTick
    static readonly int MaxDeltaTimePerTick_Offset;
    
    public float MaxDeltaTimePerTick
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, MaxDeltaTimePerTick_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, MaxDeltaTimePerTick_Offset), 0, this, value);
        }
    }
    
    
}
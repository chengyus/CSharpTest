// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Paper2D;

[UClass]
public partial class PaperTileSet : UnrealSharp.CoreUObject.Object
{
    
    static PaperTileSet()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("PaperTileSet");
        
        TileSize_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "TileSize");
        TileSheet_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "TileSheet");
        BorderMargin_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "BorderMargin");
        PerTileSpacing_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "PerTileSpacing");
        DrawingOffset_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "DrawingOffset");
        
        
        
    }
    
    protected PaperTileSet(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // StructProperty /Script/Paper2D.PaperTileSet:TileSize
    static readonly int TileSize_Offset;
    
    public UnrealSharp.CoreUObject.IntPoint TileSize
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.CoreUObject.IntPoint>.FromNative(IntPtr.Add(NativeObject, TileSize_Offset), 0, this);
        }
    }
    
    // ObjectProperty /Script/Paper2D.PaperTileSet:TileSheet
    static readonly int TileSheet_Offset;
    
    public UnrealSharp.Engine.Texture2D TileSheet
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.Engine.Texture2D>.FromNative(IntPtr.Add(NativeObject, TileSheet_Offset), 0, this);
        }
    }
    
    // StructProperty /Script/Paper2D.PaperTileSet:BorderMargin
    static readonly int BorderMargin_Offset;
    
    public UnrealSharp.Paper2D.IntMargin BorderMargin
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Paper2D.IntMargin>.FromNative(IntPtr.Add(NativeObject, BorderMargin_Offset), 0, this);
        }
    }
    
    // StructProperty /Script/Paper2D.PaperTileSet:PerTileSpacing
    static readonly int PerTileSpacing_Offset;
    
    public UnrealSharp.CoreUObject.IntPoint PerTileSpacing
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.CoreUObject.IntPoint>.FromNative(IntPtr.Add(NativeObject, PerTileSpacing_Offset), 0, this);
        }
    }
    
    // StructProperty /Script/Paper2D.PaperTileSet:DrawingOffset
    static readonly int DrawingOffset_Offset;
    
    public UnrealSharp.CoreUObject.IntPoint DrawingOffset
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.CoreUObject.IntPoint>.FromNative(IntPtr.Add(NativeObject, DrawingOffset_Offset), 0, this);
        }
    }
    
    
}
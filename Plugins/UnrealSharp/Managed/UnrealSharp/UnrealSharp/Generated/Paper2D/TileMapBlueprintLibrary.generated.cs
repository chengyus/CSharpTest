// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Paper2D;

[UClass]
public partial class TileMapLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static TileMapLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("TileMapBlueprintLibrary");
        
        
        MakeTile_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "MakeTile");
        MakeTile_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(MakeTile_NativeFunction);
        MakeTile_TileIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeTile_NativeFunction, "TileIndex");
        MakeTile_TileSet_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeTile_NativeFunction, "TileSet");
        MakeTile_bFlipH_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeTile_NativeFunction, "bFlipH");
        MakeTile_bFlipV_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeTile_NativeFunction, "bFlipV");
        MakeTile_bFlipD_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeTile_NativeFunction, "bFlipD");
        MakeTile_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeTile_NativeFunction, "ReturnValue");
        GetTileUserData_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetTileUserData");
        GetTileUserData_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetTileUserData_NativeFunction);
        GetTileUserData_Tile_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTileUserData_NativeFunction, "Tile");
        GetTileUserData_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTileUserData_NativeFunction, "ReturnValue");
        GetTileTransform_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetTileTransform");
        GetTileTransform_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetTileTransform_NativeFunction);
        GetTileTransform_Tile_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTileTransform_NativeFunction, "Tile");
        GetTileTransform_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTileTransform_NativeFunction, "ReturnValue");
        BreakTile_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "BreakTile");
        BreakTile_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(BreakTile_NativeFunction);
        BreakTile_Tile_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BreakTile_NativeFunction, "Tile");
        BreakTile_TileIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BreakTile_NativeFunction, "TileIndex");
        BreakTile_TileSet_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BreakTile_NativeFunction, "TileSet");
        BreakTile_bFlipH_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BreakTile_NativeFunction, "bFlipH");
        BreakTile_bFlipV_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BreakTile_NativeFunction, "bFlipV");
        BreakTile_bFlipD_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BreakTile_NativeFunction, "bFlipD");
        
        
    }
    
    protected TileMapLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Paper2D.TileMapBlueprintLibrary:MakeTile
    static readonly IntPtr MakeTile_NativeFunction;
    static readonly int MakeTile_ParamsSize;
    static readonly int MakeTile_TileIndex_Offset;
    static readonly int MakeTile_TileSet_Offset;
    static readonly int MakeTile_bFlipH_Offset;
    static readonly int MakeTile_bFlipV_Offset;
    static readonly int MakeTile_bFlipD_Offset;
    static readonly int MakeTile_ReturnValue_Offset;
    
    public static UnrealSharp.Paper2D.PaperTileInfo MakeTile(int tileIndex, UnrealSharp.Paper2D.PaperTileSet tileSet, bool bFlipH, bool bFlipV, bool bFlipD)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[MakeTile_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, MakeTile_TileIndex_Offset), 0, null, tileIndex);
            ObjectMarshaller<UnrealSharp.Paper2D.PaperTileSet>.ToNative(IntPtr.Add(ParamsBuffer, MakeTile_TileSet_Offset), 0, null, tileSet);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, MakeTile_bFlipH_Offset), 0, null, bFlipH);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, MakeTile_bFlipV_Offset), 0, null, bFlipV);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, MakeTile_bFlipD_Offset), 0, null, bFlipD);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, MakeTile_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Paper2D.PaperTileInfo returnValue;
            returnValue = UnrealSharp.Paper2D.PaperTileInfoMarshaler.FromNative(IntPtr.Add(ParamsBuffer, MakeTile_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Paper2D.TileMapBlueprintLibrary:GetTileUserData
    static readonly IntPtr GetTileUserData_NativeFunction;
    static readonly int GetTileUserData_ParamsSize;
    static readonly int GetTileUserData_Tile_Offset;
    static readonly int GetTileUserData_ReturnValue_Offset;
    
    public static Name GetTileUserData(UnrealSharp.Paper2D.PaperTileInfo tile)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetTileUserData_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.Paper2D.PaperTileInfoMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetTileUserData_Tile_Offset), 0, null, tile);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetTileUserData_NativeFunction, ParamsBuffer);
            
            Name returnValue;
            returnValue = BlittableMarshaller<Name>.FromNative(IntPtr.Add(ParamsBuffer, GetTileUserData_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Paper2D.TileMapBlueprintLibrary:GetTileTransform
    static readonly IntPtr GetTileTransform_NativeFunction;
    static readonly int GetTileTransform_ParamsSize;
    static readonly int GetTileTransform_Tile_Offset;
    static readonly int GetTileTransform_ReturnValue_Offset;
    
    public static UnrealSharp.Transform GetTileTransform(UnrealSharp.Paper2D.PaperTileInfo tile)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetTileTransform_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.Paper2D.PaperTileInfoMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetTileTransform_Tile_Offset), 0, null, tile);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetTileTransform_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Transform returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.Transform>.FromNative(IntPtr.Add(ParamsBuffer, GetTileTransform_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Paper2D.TileMapBlueprintLibrary:BreakTile
    static readonly IntPtr BreakTile_NativeFunction;
    static readonly int BreakTile_ParamsSize;
    static readonly int BreakTile_Tile_Offset;
    static readonly int BreakTile_TileIndex_Offset;
    static readonly int BreakTile_TileSet_Offset;
    static readonly int BreakTile_bFlipH_Offset;
    static readonly int BreakTile_bFlipV_Offset;
    static readonly int BreakTile_bFlipD_Offset;
    
    public static void BreakTile(UnrealSharp.Paper2D.PaperTileInfo tile, out int tileIndex, out UnrealSharp.Paper2D.PaperTileSet tileSet, out bool bFlipH, out bool bFlipV, out bool bFlipD)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[BreakTile_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.Paper2D.PaperTileInfoMarshaler.ToNative(IntPtr.Add(ParamsBuffer, BreakTile_Tile_Offset), 0, null, tile);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, BreakTile_NativeFunction, ParamsBuffer);
            
            tileIndex = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, BreakTile_TileIndex_Offset), 0, null);
            tileSet = ObjectMarshaller<UnrealSharp.Paper2D.PaperTileSet>.FromNative(IntPtr.Add(ParamsBuffer, BreakTile_TileSet_Offset), 0, null);
            bFlipH = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, BreakTile_bFlipH_Offset), 0, null);
            bFlipV = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, BreakTile_bFlipV_Offset), 0, null);
            bFlipD = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, BreakTile_bFlipD_Offset), 0, null);
            
        }
    }
    
    
}
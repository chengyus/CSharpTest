// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.PythonScriptPlugin;

[UClass]
public partial class PyTestObject : UnrealSharp.CoreUObject.Object
{
    
    static readonly IntPtr NativeClassPtr;
    static PyTestObject()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("PyTestObject");
        
        Bool_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Bool");
        Int_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Int");
        Float_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Float");
        Enum_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Enum");
        String_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "String");
        String_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "String");
        Name_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Name");
        Text_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Text");
        Text_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "Text");
        Struct_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Struct");
        StructArray_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "StructArray");
        StructArray_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "StructArray");
        ChildStruct_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ChildStruct");
        
        ReturnArray_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ReturnArray");
        ReturnArray_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ReturnArray_NativeFunction);
        ReturnArray_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReturnArray_NativeFunction, "ReturnValue");
        ReturnArray_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(ReturnArray_NativeFunction, "ReturnValue");
        MulticastDelegatePropertyCallback_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "MulticastDelegatePropertyCallback");
        MulticastDelegatePropertyCallback_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(MulticastDelegatePropertyCallback_NativeFunction);
        MulticastDelegatePropertyCallback_InStr_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MulticastDelegatePropertyCallback_NativeFunction, "InStr");
        LegacyFuncTakingPyTestStruct_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "LegacyFuncTakingPyTestStruct");
        LegacyFuncTakingPyTestStruct_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(LegacyFuncTakingPyTestStruct_NativeFunction);
        LegacyFuncTakingPyTestStruct_InStruct_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LegacyFuncTakingPyTestStruct_NativeFunction, "InStruct");
        GetConstantValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetConstantValue");
        GetConstantValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetConstantValue_NativeFunction);
        GetConstantValue_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetConstantValue_NativeFunction, "ReturnValue");
        FuncTakingPyTestStructDefault_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "FuncTakingPyTestStructDefault");
        FuncTakingPyTestStructDefault_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(FuncTakingPyTestStructDefault_NativeFunction);
        FuncTakingPyTestStructDefault_InStruct_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(FuncTakingPyTestStructDefault_NativeFunction, "InStruct");
        FuncTakingPyTestStruct_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "FuncTakingPyTestStruct");
        FuncTakingPyTestStruct_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(FuncTakingPyTestStruct_NativeFunction);
        FuncTakingPyTestStruct_InStruct_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(FuncTakingPyTestStruct_NativeFunction, "InStruct");
        FuncTakingPyTestChildStruct_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "FuncTakingPyTestChildStruct");
        FuncTakingPyTestChildStruct_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(FuncTakingPyTestChildStruct_NativeFunction);
        FuncTakingPyTestChildStruct_InStruct_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(FuncTakingPyTestChildStruct_NativeFunction, "InStruct");
        EmitScriptWarning_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "EmitScriptWarning");
        EmitScriptError_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "EmitScriptError");
        DelegatePropertyCallback_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "DelegatePropertyCallback");
        DelegatePropertyCallback_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(DelegatePropertyCallback_NativeFunction);
        DelegatePropertyCallback_InValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(DelegatePropertyCallback_NativeFunction, "InValue");
        DelegatePropertyCallback_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(DelegatePropertyCallback_NativeFunction, "ReturnValue");
        CallFuncBlueprintNativeRef_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CallFuncBlueprintNativeRef");
        CallFuncBlueprintNativeRef_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(CallFuncBlueprintNativeRef_NativeFunction);
        CallFuncBlueprintNativeRef_InOutStruct_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CallFuncBlueprintNativeRef_NativeFunction, "InOutStruct");
        CallFuncBlueprintNative_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CallFuncBlueprintNative");
        CallFuncBlueprintNative_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(CallFuncBlueprintNative_NativeFunction);
        CallFuncBlueprintNative_InValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CallFuncBlueprintNative_NativeFunction, "InValue");
        CallFuncBlueprintNative_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CallFuncBlueprintNative_NativeFunction, "ReturnValue");
        CallFuncBlueprintImplementable_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CallFuncBlueprintImplementable");
        CallFuncBlueprintImplementable_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(CallFuncBlueprintImplementable_NativeFunction);
        CallFuncBlueprintImplementable_InValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CallFuncBlueprintImplementable_NativeFunction, "InValue");
        CallFuncBlueprintImplementable_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CallFuncBlueprintImplementable_NativeFunction, "ReturnValue");
        
        IntPtr FuncBlueprintNativeRef_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "FuncBlueprintNativeRef");
        FuncBlueprintNativeRef_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(FuncBlueprintNativeRef_NativeFunction);
        FuncBlueprintNativeRef_InOutStruct_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(FuncBlueprintNativeRef_NativeFunction, "InOutStruct");
        
        IntPtr FuncBlueprintNative_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "FuncBlueprintNative");
        FuncBlueprintNative_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(FuncBlueprintNative_NativeFunction);
        FuncBlueprintNative_InValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(FuncBlueprintNative_NativeFunction, "InValue");
        FuncBlueprintNative_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(FuncBlueprintNative_NativeFunction, "ReturnValue");
        
        IntPtr FuncBlueprintImplementable_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "FuncBlueprintImplementable");
        FuncBlueprintImplementable_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(FuncBlueprintImplementable_NativeFunction);
        FuncBlueprintImplementable_InValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(FuncBlueprintImplementable_NativeFunction, "InValue");
        FuncBlueprintImplementable_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(FuncBlueprintImplementable_NativeFunction, "ReturnValue");
        
        
    }
    
    protected PyTestObject(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // BoolProperty /Script/PythonScriptPlugin.PyTestObject:Bool
    static readonly int Bool_Offset;
    
    public bool Bool
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, Bool_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, Bool_Offset), 0, this, value);
        }
    }
    
    // IntProperty /Script/PythonScriptPlugin.PyTestObject:Int
    static readonly int Int_Offset;
    
    public int Int
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<int>.FromNative(IntPtr.Add(NativeObject, Int_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<int>.ToNative(IntPtr.Add(NativeObject, Int_Offset), 0, this, value);
        }
    }
    
    // FloatProperty /Script/PythonScriptPlugin.PyTestObject:Float
    static readonly int Float_Offset;
    
    public float Float
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, Float_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, Float_Offset), 0, this, value);
        }
    }
    
    // EnumProperty /Script/PythonScriptPlugin.PyTestObject:Enum
    static readonly int Enum_Offset;
    
    public UnrealSharp.PythonScriptPlugin.EPyTestEnum Enum
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.PythonScriptPlugin.EPyTestEnum>.FromNative(IntPtr.Add(NativeObject, Enum_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.PythonScriptPlugin.EPyTestEnum>.ToNative(IntPtr.Add(NativeObject, Enum_Offset), 0, this, value);
        }
    }
    
    // StrProperty /Script/PythonScriptPlugin.PyTestObject:String
    static readonly int String_Offset;
    static readonly IntPtr String_NativeProperty;
    
    public string String
    {
        get
        {
            CheckObjectForValidity();
            return StringMarshaller.FromNative(IntPtr.Add(NativeObject,String_Offset),0,this);
        }
        set
        {
            CheckObjectForValidity();
            StringMarshaller.ToNative(IntPtr.Add(NativeObject,String_Offset),0,this,value);
        }
    }
    
    // NameProperty /Script/PythonScriptPlugin.PyTestObject:Name
    static readonly int Name_Offset;
    
    public Name Name
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<Name>.FromNative(IntPtr.Add(NativeObject, Name_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(NativeObject, Name_Offset), 0, this, value);
        }
    }
    
    // TextProperty /Script/PythonScriptPlugin.PyTestObject:Text
    static readonly int Text_Offset;
    static readonly IntPtr Text_NativeProperty;
    TextMarshaller Text_Wrapper;
    
    public Text Text
    {
        get
        {
            if (Text_Wrapper == null)
            {
                Text_Wrapper  = new TextMarshaller(1);
            }
            return Text_Wrapper.FromNative(this.NativeObject + Text_Offset, 0, this);
        }
    }
    
    // StructProperty /Script/PythonScriptPlugin.PyTestObject:Struct
    static readonly int Struct_Offset;
    
    public UnrealSharp.PythonScriptPlugin.PyTestStruct Struct
    {
        get
        {
            CheckObjectForValidity();
            return UnrealSharp.PythonScriptPlugin.PyTestStructMarshaler.FromNative(IntPtr.Add(NativeObject, Struct_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            UnrealSharp.PythonScriptPlugin.PyTestStructMarshaler.ToNative(IntPtr.Add(NativeObject, Struct_Offset), 0, this, value);
        }
    }
    
    // ArrayProperty /Script/PythonScriptPlugin.PyTestObject:StructArray
    static readonly int StructArray_Offset;
    static readonly IntPtr StructArray_NativeProperty;
    UnrealArrayReadWriteMarshaler<UnrealSharp.PythonScriptPlugin.PyTestStruct> StructArray_Wrapper = null;
    
    public System.Collections.Generic.IList<UnrealSharp.PythonScriptPlugin.PyTestStruct> StructArray
    {
        get
        {
            if(StructArray_Wrapper == null)
            {
                StructArray_Wrapper = new UnrealArrayReadWriteMarshaler<UnrealSharp.PythonScriptPlugin.PyTestStruct>(1, StructArray_NativeProperty, UnrealSharp.PythonScriptPlugin.PyTestStructMarshaler.ToNative, UnrealSharp.PythonScriptPlugin.PyTestStructMarshaler.FromNative);
            }
            
            return StructArray_Wrapper.FromNative(IntPtr.Add(NativeObject,StructArray_Offset),0,this);
        }
    }
    
    // StructProperty /Script/PythonScriptPlugin.PyTestObject:ChildStruct
    static readonly int ChildStruct_Offset;
    
    public UnrealSharp.PythonScriptPlugin.PyTestChildStruct ChildStruct
    {
        get
        {
            CheckObjectForValidity();
            return UnrealSharp.PythonScriptPlugin.PyTestChildStructMarshaler.FromNative(IntPtr.Add(NativeObject, ChildStruct_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            UnrealSharp.PythonScriptPlugin.PyTestChildStructMarshaler.ToNative(IntPtr.Add(NativeObject, ChildStruct_Offset), 0, this, value);
        }
    }
    
    // Function /Script/PythonScriptPlugin.PyTestObject:ReturnArray
    static readonly IntPtr ReturnArray_NativeFunction;
    static readonly int ReturnArray_ParamsSize;
    static readonly int ReturnArray_ReturnValue_Offset;
    static readonly int ReturnArray_ReturnValue_ElementSize;
    
    public static System.Collections.Generic.IList<int> ReturnArray()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ReturnArray_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ReturnArray_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<int> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, ReturnArray_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<int> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<int> (1, BlittableMarshaller<int>.ToNative, BlittableMarshaller<int>.FromNative, ReturnArray_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<int>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/PythonScriptPlugin.PyTestObject:MulticastDelegatePropertyCallback
    static readonly IntPtr MulticastDelegatePropertyCallback_NativeFunction;
    static readonly int MulticastDelegatePropertyCallback_ParamsSize;
    static readonly int MulticastDelegatePropertyCallback_InStr_Offset;
    
    public void MulticastDelegatePropertyCallback(string inStr)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[MulticastDelegatePropertyCallback_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InStr_NativePtr = IntPtr.Add(ParamsBuffer,MulticastDelegatePropertyCallback_InStr_Offset);
            StringMarshaller.ToNative(InStr_NativePtr,0,null,inStr);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, MulticastDelegatePropertyCallback_NativeFunction, ParamsBuffer);
            
            StringMarshaller.DestructInstance(InStr_NativePtr, 0);
        }
    }
    
    // Function /Script/PythonScriptPlugin.PyTestObject:LegacyFuncTakingPyTestStruct
    static readonly IntPtr LegacyFuncTakingPyTestStruct_NativeFunction;
    static readonly int LegacyFuncTakingPyTestStruct_ParamsSize;
    static readonly int LegacyFuncTakingPyTestStruct_InStruct_Offset;
    
    [Obsolete("LegacyFuncTakingPyTestStruct is deprecated. Please use FuncTakingPyTestStruct instead.")]
    public void LegacyFuncTakingPyTestStruct(UnrealSharp.PythonScriptPlugin.PyTestStruct inStruct)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[LegacyFuncTakingPyTestStruct_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.PythonScriptPlugin.PyTestStructMarshaler.ToNative(IntPtr.Add(ParamsBuffer, LegacyFuncTakingPyTestStruct_InStruct_Offset), 0, null, inStruct);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, LegacyFuncTakingPyTestStruct_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/PythonScriptPlugin.PyTestObject:GetConstantValue
    static readonly IntPtr GetConstantValue_NativeFunction;
    static readonly int GetConstantValue_ParamsSize;
    static readonly int GetConstantValue_ReturnValue_Offset;
    
    public static int GetConstantValue()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetConstantValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetConstantValue_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetConstantValue_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/PythonScriptPlugin.PyTestObject:FuncTakingPyTestStructDefault
    static readonly IntPtr FuncTakingPyTestStructDefault_NativeFunction;
    static readonly int FuncTakingPyTestStructDefault_ParamsSize;
    static readonly int FuncTakingPyTestStructDefault_InStruct_Offset;
    
    public void FuncTakingPyTestStructDefault()
    {
        FuncTakingPyTestStructDefault(new PyTestStruct());
    }
    
    public void FuncTakingPyTestStructDefault(UnrealSharp.PythonScriptPlugin.PyTestStruct inStruct)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[FuncTakingPyTestStructDefault_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.PythonScriptPlugin.PyTestStructMarshaler.ToNative(IntPtr.Add(ParamsBuffer, FuncTakingPyTestStructDefault_InStruct_Offset), 0, null, inStruct);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, FuncTakingPyTestStructDefault_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/PythonScriptPlugin.PyTestObject:FuncTakingPyTestStruct
    static readonly IntPtr FuncTakingPyTestStruct_NativeFunction;
    static readonly int FuncTakingPyTestStruct_ParamsSize;
    static readonly int FuncTakingPyTestStruct_InStruct_Offset;
    
    public void FuncTakingPyTestStruct(UnrealSharp.PythonScriptPlugin.PyTestStruct inStruct)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[FuncTakingPyTestStruct_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.PythonScriptPlugin.PyTestStructMarshaler.ToNative(IntPtr.Add(ParamsBuffer, FuncTakingPyTestStruct_InStruct_Offset), 0, null, inStruct);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, FuncTakingPyTestStruct_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/PythonScriptPlugin.PyTestObject:FuncTakingPyTestChildStruct
    static readonly IntPtr FuncTakingPyTestChildStruct_NativeFunction;
    static readonly int FuncTakingPyTestChildStruct_ParamsSize;
    static readonly int FuncTakingPyTestChildStruct_InStruct_Offset;
    
    public void FuncTakingPyTestChildStruct(UnrealSharp.PythonScriptPlugin.PyTestChildStruct inStruct)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[FuncTakingPyTestChildStruct_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.PythonScriptPlugin.PyTestChildStructMarshaler.ToNative(IntPtr.Add(ParamsBuffer, FuncTakingPyTestChildStruct_InStruct_Offset), 0, null, inStruct);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, FuncTakingPyTestChildStruct_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/PythonScriptPlugin.PyTestObject:EmitScriptWarning
    static readonly IntPtr EmitScriptWarning_NativeFunction;
    
    public static void EmitScriptWarning()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, EmitScriptWarning_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/PythonScriptPlugin.PyTestObject:EmitScriptError
    static readonly IntPtr EmitScriptError_NativeFunction;
    
    public static void EmitScriptError()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, EmitScriptError_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/PythonScriptPlugin.PyTestObject:DelegatePropertyCallback
    static readonly IntPtr DelegatePropertyCallback_NativeFunction;
    static readonly int DelegatePropertyCallback_ParamsSize;
    static readonly int DelegatePropertyCallback_InValue_Offset;
    static readonly int DelegatePropertyCallback_ReturnValue_Offset;
    
    public int DelegatePropertyCallback(int inValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[DelegatePropertyCallback_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, DelegatePropertyCallback_InValue_Offset), 0, null, inValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, DelegatePropertyCallback_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, DelegatePropertyCallback_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/PythonScriptPlugin.PyTestObject:CallFuncBlueprintNativeRef
    static readonly IntPtr CallFuncBlueprintNativeRef_NativeFunction;
    static readonly int CallFuncBlueprintNativeRef_ParamsSize;
    static readonly int CallFuncBlueprintNativeRef_InOutStruct_Offset;
    
    public void CallFuncBlueprintNativeRef(ref UnrealSharp.PythonScriptPlugin.PyTestStruct inOutStruct)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[CallFuncBlueprintNativeRef_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.PythonScriptPlugin.PyTestStructMarshaler.ToNative(IntPtr.Add(ParamsBuffer, CallFuncBlueprintNativeRef_InOutStruct_Offset), 0, null, inOutStruct);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, CallFuncBlueprintNativeRef_NativeFunction, ParamsBuffer);
            
            inOutStruct = UnrealSharp.PythonScriptPlugin.PyTestStructMarshaler.FromNative(IntPtr.Add(ParamsBuffer, CallFuncBlueprintNativeRef_InOutStruct_Offset), 0, null);
            
        }
    }
    
    // Function /Script/PythonScriptPlugin.PyTestObject:CallFuncBlueprintNative
    static readonly IntPtr CallFuncBlueprintNative_NativeFunction;
    static readonly int CallFuncBlueprintNative_ParamsSize;
    static readonly int CallFuncBlueprintNative_InValue_Offset;
    static readonly int CallFuncBlueprintNative_ReturnValue_Offset;
    
    public int CallFuncBlueprintNative(int inValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[CallFuncBlueprintNative_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, CallFuncBlueprintNative_InValue_Offset), 0, null, inValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, CallFuncBlueprintNative_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, CallFuncBlueprintNative_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/PythonScriptPlugin.PyTestObject:CallFuncBlueprintImplementable
    static readonly IntPtr CallFuncBlueprintImplementable_NativeFunction;
    static readonly int CallFuncBlueprintImplementable_ParamsSize;
    static readonly int CallFuncBlueprintImplementable_InValue_Offset;
    static readonly int CallFuncBlueprintImplementable_ReturnValue_Offset;
    
    public int CallFuncBlueprintImplementable(int inValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[CallFuncBlueprintImplementable_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, CallFuncBlueprintImplementable_InValue_Offset), 0, null, inValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, CallFuncBlueprintImplementable_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, CallFuncBlueprintImplementable_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/PythonScriptPlugin.PyTestObject:FuncBlueprintNativeRef
    IntPtr FuncBlueprintNativeRef_NativeFunction;
    static readonly int FuncBlueprintNativeRef_ParamsSize;
    static readonly int FuncBlueprintNativeRef_InOutStruct_Offset;
    
    [UFunction(FunctionFlags.BlueprintEvent)]
    public virtual void FuncBlueprintNativeRef(ref UnrealSharp.PythonScriptPlugin.PyTestStruct inOutStruct)
    {
        unsafe
        {
            if (FuncBlueprintNativeRef_NativeFunction == IntPtr.Zero)
            {
                FuncBlueprintNativeRef_NativeFunction = UClassExporter.CallGetNativeFunctionFromInstanceAndName(NativeObject, "FuncBlueprintNativeRef");
            }
            byte* ParamsBufferAllocation = stackalloc byte[FuncBlueprintNativeRef_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.PythonScriptPlugin.PyTestStructMarshaler.ToNative(IntPtr.Add(ParamsBuffer, FuncBlueprintNativeRef_InOutStruct_Offset), 0, null, inOutStruct);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, FuncBlueprintNativeRef_NativeFunction, ParamsBuffer);
            
            inOutStruct = UnrealSharp.PythonScriptPlugin.PyTestStructMarshaler.FromNative(IntPtr.Add(ParamsBuffer, FuncBlueprintNativeRef_InOutStruct_Offset), 0, null);
            
        }
    }
    
    //Hide implementation function from Intellisense/ReSharper
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    protected virtual void FuncBlueprintNativeRef_Implementation(ref UnrealSharp.PythonScriptPlugin.PyTestStruct inOutStruct)
    {
    }
    void Invoke_FuncBlueprintNativeRef(IntPtr buffer, IntPtr returnBuffer)
    {
        unsafe
        {
            UnrealSharp.PythonScriptPlugin.PyTestStruct inOutStruct = default;
            FuncBlueprintNativeRef_Implementation(ref inOutStruct);
            UnrealSharp.PythonScriptPlugin.PyTestStructMarshaler.ToNative(IntPtr.Add(buffer, FuncBlueprintNativeRef_InOutStruct_Offset), 0, null, inOutStruct);
        }
    }
    
    // Function /Script/PythonScriptPlugin.PyTestObject:FuncBlueprintNative
    IntPtr FuncBlueprintNative_NativeFunction;
    static readonly int FuncBlueprintNative_ParamsSize;
    static readonly int FuncBlueprintNative_InValue_Offset;
    static readonly int FuncBlueprintNative_ReturnValue_Offset;
    
    [UFunction(FunctionFlags.BlueprintEvent)]
    public virtual int FuncBlueprintNative(int inValue)
    {
        unsafe
        {
            if (FuncBlueprintNative_NativeFunction == IntPtr.Zero)
            {
                FuncBlueprintNative_NativeFunction = UClassExporter.CallGetNativeFunctionFromInstanceAndName(NativeObject, "FuncBlueprintNative");
            }
            byte* ParamsBufferAllocation = stackalloc byte[FuncBlueprintNative_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, FuncBlueprintNative_InValue_Offset), 0, null, inValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, FuncBlueprintNative_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, FuncBlueprintNative_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    //Hide implementation function from Intellisense/ReSharper
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    protected virtual int FuncBlueprintNative_Implementation(int inValue)
    {
        return default(int);
    }
    void Invoke_FuncBlueprintNative(IntPtr buffer, IntPtr returnBuffer)
    {
        unsafe
        {
            int inValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(buffer, FuncBlueprintNative_InValue_Offset), 0, null);
            int returnValue = FuncBlueprintNative_Implementation(inValue);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(returnBuffer, 0), 0, null, returnValue);
        }
    }
    
    // Function /Script/PythonScriptPlugin.PyTestObject:FuncBlueprintImplementable
    IntPtr FuncBlueprintImplementable_NativeFunction;
    static readonly int FuncBlueprintImplementable_ParamsSize;
    static readonly int FuncBlueprintImplementable_InValue_Offset;
    static readonly int FuncBlueprintImplementable_ReturnValue_Offset;
    
    [UFunction(FunctionFlags.BlueprintEvent)]
    public virtual int FuncBlueprintImplementable(int inValue)
    {
        unsafe
        {
            if (FuncBlueprintImplementable_NativeFunction == IntPtr.Zero)
            {
                FuncBlueprintImplementable_NativeFunction = UClassExporter.CallGetNativeFunctionFromInstanceAndName(NativeObject, "FuncBlueprintImplementable");
            }
            byte* ParamsBufferAllocation = stackalloc byte[FuncBlueprintImplementable_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, FuncBlueprintImplementable_InValue_Offset), 0, null, inValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, FuncBlueprintImplementable_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, FuncBlueprintImplementable_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    //Hide implementation function from Intellisense/ReSharper
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    protected virtual int FuncBlueprintImplementable_Implementation(int inValue)
    {
        return default(int);
    }
    void Invoke_FuncBlueprintImplementable(IntPtr buffer, IntPtr returnBuffer)
    {
        unsafe
        {
            int inValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(buffer, FuncBlueprintImplementable_InValue_Offset), 0, null);
            int returnValue = FuncBlueprintImplementable_Implementation(inValue);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(returnBuffer, 0), 0, null, returnValue);
        }
    }
    
    
}
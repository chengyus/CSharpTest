// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.ResonanceAudio;

[UClass]
public partial class ResonanceAudioBlueprintFunctionLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static ResonanceAudioBlueprintFunctionLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("ResonanceAudioBlueprintFunctionLibrary");
        
        
        SetGlobalReverbPreset_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetGlobalReverbPreset");
        SetGlobalReverbPreset_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetGlobalReverbPreset_NativeFunction);
        SetGlobalReverbPreset_InPreset_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetGlobalReverbPreset_NativeFunction, "InPreset");
        GetGlobalReverbPreset_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetGlobalReverbPreset");
        GetGlobalReverbPreset_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetGlobalReverbPreset_NativeFunction);
        GetGlobalReverbPreset_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetGlobalReverbPreset_NativeFunction, "ReturnValue");
        
        
    }
    
    protected ResonanceAudioBlueprintFunctionLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/ResonanceAudio.ResonanceAudioBlueprintFunctionLibrary:SetGlobalReverbPreset
    static readonly IntPtr SetGlobalReverbPreset_NativeFunction;
    static readonly int SetGlobalReverbPreset_ParamsSize;
    static readonly int SetGlobalReverbPreset_InPreset_Offset;
    
    public static void SetGlobalReverbPreset(UnrealSharp.ResonanceAudio.ResonanceAudioReverbPluginPreset inPreset)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetGlobalReverbPreset_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.ResonanceAudio.ResonanceAudioReverbPluginPreset>.ToNative(IntPtr.Add(ParamsBuffer, SetGlobalReverbPreset_InPreset_Offset), 0, null, inPreset);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetGlobalReverbPreset_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/ResonanceAudio.ResonanceAudioBlueprintFunctionLibrary:GetGlobalReverbPreset
    static readonly IntPtr GetGlobalReverbPreset_NativeFunction;
    static readonly int GetGlobalReverbPreset_ParamsSize;
    static readonly int GetGlobalReverbPreset_ReturnValue_Offset;
    
    public static UnrealSharp.ResonanceAudio.ResonanceAudioReverbPluginPreset GetGlobalReverbPreset()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetGlobalReverbPreset_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetGlobalReverbPreset_NativeFunction, ParamsBuffer);
            
            UnrealSharp.ResonanceAudio.ResonanceAudioReverbPluginPreset returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.ResonanceAudio.ResonanceAudioReverbPluginPreset>.FromNative(IntPtr.Add(ParamsBuffer, GetGlobalReverbPreset_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
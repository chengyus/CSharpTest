// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.ResonanceAudio;

[UClass]
public partial class ResonanceAudioSpatializationSourceSettings : UnrealSharp.AudioExtensions.SpatializationPluginSourceSettingsBase
{
    
    static ResonanceAudioSpatializationSourceSettings()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("ResonanceAudioSpatializationSourceSettings");
        
        
        SetSoundSourceSpread_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSoundSourceSpread");
        SetSoundSourceSpread_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSoundSourceSpread_NativeFunction);
        SetSoundSourceSpread_InSpread_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSoundSourceSpread_NativeFunction, "InSpread");
        SetSoundSourceDirectivity_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSoundSourceDirectivity");
        SetSoundSourceDirectivity_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSoundSourceDirectivity_NativeFunction);
        SetSoundSourceDirectivity_InPattern_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSoundSourceDirectivity_NativeFunction, "InPattern");
        SetSoundSourceDirectivity_InSharpness_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSoundSourceDirectivity_NativeFunction, "InSharpness");
        
        
    }
    
    protected ResonanceAudioSpatializationSourceSettings(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/ResonanceAudio.ResonanceAudioSpatializationSourceSettings:SetSoundSourceSpread
    static readonly IntPtr SetSoundSourceSpread_NativeFunction;
    static readonly int SetSoundSourceSpread_ParamsSize;
    static readonly int SetSoundSourceSpread_InSpread_Offset;
    
    public void SetSoundSourceSpread(float inSpread)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSoundSourceSpread_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetSoundSourceSpread_InSpread_Offset), 0, null, inSpread);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSoundSourceSpread_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/ResonanceAudio.ResonanceAudioSpatializationSourceSettings:SetSoundSourceDirectivity
    static readonly IntPtr SetSoundSourceDirectivity_NativeFunction;
    static readonly int SetSoundSourceDirectivity_ParamsSize;
    static readonly int SetSoundSourceDirectivity_InPattern_Offset;
    static readonly int SetSoundSourceDirectivity_InSharpness_Offset;
    
    public void SetSoundSourceDirectivity(float inPattern, float inSharpness)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSoundSourceDirectivity_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetSoundSourceDirectivity_InPattern_Offset), 0, null, inPattern);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetSoundSourceDirectivity_InSharpness_Offset), 0, null, inSharpness);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSoundSourceDirectivity_NativeFunction, ParamsBuffer);
            
        }
    }
    
    
}
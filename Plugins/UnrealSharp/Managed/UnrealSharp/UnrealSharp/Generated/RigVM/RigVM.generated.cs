// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.RigVM;

[UClass]
public partial class RigVM : UnrealSharp.CoreUObject.Object
{
    
    static RigVM()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("RigVM");
        
        
        SetParameterValueVector2D_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetParameterValueVector2D");
        SetParameterValueVector2D_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetParameterValueVector2D_NativeFunction);
        SetParameterValueVector2D_InParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueVector2D_NativeFunction, "InParameterName");
        SetParameterValueVector2D_InValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueVector2D_NativeFunction, "InValue");
        SetParameterValueVector2D_InArrayIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueVector2D_NativeFunction, "InArrayIndex");
        SetParameterValueVector_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetParameterValueVector");
        SetParameterValueVector_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetParameterValueVector_NativeFunction);
        SetParameterValueVector_InParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueVector_NativeFunction, "InParameterName");
        SetParameterValueVector_InValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueVector_NativeFunction, "InValue");
        SetParameterValueVector_InArrayIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueVector_NativeFunction, "InArrayIndex");
        SetParameterValueTransform_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetParameterValueTransform");
        SetParameterValueTransform_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetParameterValueTransform_NativeFunction);
        SetParameterValueTransform_InParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueTransform_NativeFunction, "InParameterName");
        SetParameterValueTransform_InValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueTransform_NativeFunction, "InValue");
        SetParameterValueTransform_InArrayIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueTransform_NativeFunction, "InArrayIndex");
        SetParameterValueString_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetParameterValueString");
        SetParameterValueString_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetParameterValueString_NativeFunction);
        SetParameterValueString_InParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueString_NativeFunction, "InParameterName");
        SetParameterValueString_InValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueString_NativeFunction, "InValue");
        SetParameterValueString_InArrayIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueString_NativeFunction, "InArrayIndex");
        SetParameterValueQuat_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetParameterValueQuat");
        SetParameterValueQuat_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetParameterValueQuat_NativeFunction);
        SetParameterValueQuat_InParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueQuat_NativeFunction, "InParameterName");
        SetParameterValueQuat_InValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueQuat_NativeFunction, "InValue");
        SetParameterValueQuat_InArrayIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueQuat_NativeFunction, "InArrayIndex");
        SetParameterValueName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetParameterValueName");
        SetParameterValueName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetParameterValueName_NativeFunction);
        SetParameterValueName_InParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueName_NativeFunction, "InParameterName");
        SetParameterValueName_InValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueName_NativeFunction, "InValue");
        SetParameterValueName_InArrayIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueName_NativeFunction, "InArrayIndex");
        SetParameterValueInt_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetParameterValueInt");
        SetParameterValueInt_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetParameterValueInt_NativeFunction);
        SetParameterValueInt_InParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueInt_NativeFunction, "InParameterName");
        SetParameterValueInt_InValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueInt_NativeFunction, "InValue");
        SetParameterValueInt_InArrayIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueInt_NativeFunction, "InArrayIndex");
        SetParameterValueFloat_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetParameterValueFloat");
        SetParameterValueFloat_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetParameterValueFloat_NativeFunction);
        SetParameterValueFloat_InParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueFloat_NativeFunction, "InParameterName");
        SetParameterValueFloat_InValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueFloat_NativeFunction, "InValue");
        SetParameterValueFloat_InArrayIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueFloat_NativeFunction, "InArrayIndex");
        SetParameterValueDouble_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetParameterValueDouble");
        SetParameterValueDouble_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetParameterValueDouble_NativeFunction);
        SetParameterValueDouble_InParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueDouble_NativeFunction, "InParameterName");
        SetParameterValueDouble_InValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueDouble_NativeFunction, "InValue");
        SetParameterValueDouble_InArrayIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueDouble_NativeFunction, "InArrayIndex");
        SetParameterValueBool_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetParameterValueBool");
        SetParameterValueBool_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetParameterValueBool_NativeFunction);
        SetParameterValueBool_InParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueBool_NativeFunction, "InParameterName");
        SetParameterValueBool_InValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueBool_NativeFunction, "InValue");
        SetParameterValueBool_InArrayIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetParameterValueBool_NativeFunction, "InArrayIndex");
        GetStatistics_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetStatistics");
        GetStatistics_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetStatistics_NativeFunction);
        GetStatistics_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetStatistics_NativeFunction, "ReturnValue");
        GetParameterValueVector2D_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetParameterValueVector2D");
        GetParameterValueVector2D_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetParameterValueVector2D_NativeFunction);
        GetParameterValueVector2D_InParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueVector2D_NativeFunction, "InParameterName");
        GetParameterValueVector2D_InArrayIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueVector2D_NativeFunction, "InArrayIndex");
        GetParameterValueVector2D_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueVector2D_NativeFunction, "ReturnValue");
        GetParameterValueVector_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetParameterValueVector");
        GetParameterValueVector_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetParameterValueVector_NativeFunction);
        GetParameterValueVector_InParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueVector_NativeFunction, "InParameterName");
        GetParameterValueVector_InArrayIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueVector_NativeFunction, "InArrayIndex");
        GetParameterValueVector_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueVector_NativeFunction, "ReturnValue");
        GetParameterValueTransform_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetParameterValueTransform");
        GetParameterValueTransform_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetParameterValueTransform_NativeFunction);
        GetParameterValueTransform_InParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueTransform_NativeFunction, "InParameterName");
        GetParameterValueTransform_InArrayIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueTransform_NativeFunction, "InArrayIndex");
        GetParameterValueTransform_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueTransform_NativeFunction, "ReturnValue");
        GetParameterValueString_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetParameterValueString");
        GetParameterValueString_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetParameterValueString_NativeFunction);
        GetParameterValueString_InParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueString_NativeFunction, "InParameterName");
        GetParameterValueString_InArrayIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueString_NativeFunction, "InArrayIndex");
        GetParameterValueString_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueString_NativeFunction, "ReturnValue");
        GetParameterValueQuat_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetParameterValueQuat");
        GetParameterValueQuat_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetParameterValueQuat_NativeFunction);
        GetParameterValueQuat_InParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueQuat_NativeFunction, "InParameterName");
        GetParameterValueQuat_InArrayIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueQuat_NativeFunction, "InArrayIndex");
        GetParameterValueQuat_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueQuat_NativeFunction, "ReturnValue");
        GetParameterValueName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetParameterValueName");
        GetParameterValueName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetParameterValueName_NativeFunction);
        GetParameterValueName_InParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueName_NativeFunction, "InParameterName");
        GetParameterValueName_InArrayIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueName_NativeFunction, "InArrayIndex");
        GetParameterValueName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueName_NativeFunction, "ReturnValue");
        GetParameterValueInt_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetParameterValueInt");
        GetParameterValueInt_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetParameterValueInt_NativeFunction);
        GetParameterValueInt_InParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueInt_NativeFunction, "InParameterName");
        GetParameterValueInt_InArrayIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueInt_NativeFunction, "InArrayIndex");
        GetParameterValueInt_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueInt_NativeFunction, "ReturnValue");
        GetParameterValueFloat_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetParameterValueFloat");
        GetParameterValueFloat_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetParameterValueFloat_NativeFunction);
        GetParameterValueFloat_InParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueFloat_NativeFunction, "InParameterName");
        GetParameterValueFloat_InArrayIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueFloat_NativeFunction, "InArrayIndex");
        GetParameterValueFloat_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueFloat_NativeFunction, "ReturnValue");
        GetParameterValueDouble_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetParameterValueDouble");
        GetParameterValueDouble_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetParameterValueDouble_NativeFunction);
        GetParameterValueDouble_InParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueDouble_NativeFunction, "InParameterName");
        GetParameterValueDouble_InArrayIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueDouble_NativeFunction, "InArrayIndex");
        GetParameterValueDouble_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueDouble_NativeFunction, "ReturnValue");
        GetParameterValueBool_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetParameterValueBool");
        GetParameterValueBool_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetParameterValueBool_NativeFunction);
        GetParameterValueBool_InParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueBool_NativeFunction, "InParameterName");
        GetParameterValueBool_InArrayIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueBool_NativeFunction, "InArrayIndex");
        GetParameterValueBool_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParameterValueBool_NativeFunction, "ReturnValue");
        Execute_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Execute");
        Execute_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Execute_NativeFunction);
        Execute_Context_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Execute_NativeFunction, "Context");
        Execute_InEntryName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Execute_NativeFunction, "InEntryName");
        Execute_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Execute_NativeFunction, "ReturnValue");
        
        
    }
    
    protected RigVM(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/RigVM.RigVM:SetParameterValueVector2D
    static readonly IntPtr SetParameterValueVector2D_NativeFunction;
    static readonly int SetParameterValueVector2D_ParamsSize;
    static readonly int SetParameterValueVector2D_InParameterName_Offset;
    static readonly int SetParameterValueVector2D_InValue_Offset;
    static readonly int SetParameterValueVector2D_InArrayIndex_Offset;
    
    public void SetParameterValueVector2D(Name inParameterName, System.DoubleNumerics.Vector2 inValue, int inArrayIndex = 0)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetParameterValueVector2D_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetParameterValueVector2D_InParameterName_Offset), 0, null, inParameterName);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, SetParameterValueVector2D_InValue_Offset), 0, null, inValue);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetParameterValueVector2D_InArrayIndex_Offset), 0, null, inArrayIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetParameterValueVector2D_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/RigVM.RigVM:SetParameterValueVector
    static readonly IntPtr SetParameterValueVector_NativeFunction;
    static readonly int SetParameterValueVector_ParamsSize;
    static readonly int SetParameterValueVector_InParameterName_Offset;
    static readonly int SetParameterValueVector_InValue_Offset;
    static readonly int SetParameterValueVector_InArrayIndex_Offset;
    
    public void SetParameterValueVector(Name inParameterName, System.DoubleNumerics.Vector3 inValue, int inArrayIndex = 0)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetParameterValueVector_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetParameterValueVector_InParameterName_Offset), 0, null, inParameterName);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, SetParameterValueVector_InValue_Offset), 0, null, inValue);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetParameterValueVector_InArrayIndex_Offset), 0, null, inArrayIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetParameterValueVector_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/RigVM.RigVM:SetParameterValueTransform
    static readonly IntPtr SetParameterValueTransform_NativeFunction;
    static readonly int SetParameterValueTransform_ParamsSize;
    static readonly int SetParameterValueTransform_InParameterName_Offset;
    static readonly int SetParameterValueTransform_InValue_Offset;
    static readonly int SetParameterValueTransform_InArrayIndex_Offset;
    
    public void SetParameterValueTransform(Name inParameterName, UnrealSharp.Transform inValue, int inArrayIndex = 0)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetParameterValueTransform_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetParameterValueTransform_InParameterName_Offset), 0, null, inParameterName);
            BlittableMarshaller<UnrealSharp.Transform>.ToNative(IntPtr.Add(ParamsBuffer, SetParameterValueTransform_InValue_Offset), 0, null, inValue);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetParameterValueTransform_InArrayIndex_Offset), 0, null, inArrayIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetParameterValueTransform_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/RigVM.RigVM:SetParameterValueString
    static readonly IntPtr SetParameterValueString_NativeFunction;
    static readonly int SetParameterValueString_ParamsSize;
    static readonly int SetParameterValueString_InParameterName_Offset;
    static readonly int SetParameterValueString_InValue_Offset;
    static readonly int SetParameterValueString_InArrayIndex_Offset;
    
    public void SetParameterValueString(Name inParameterName, string inValue, int inArrayIndex = 0)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetParameterValueString_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetParameterValueString_InParameterName_Offset), 0, null, inParameterName);
            IntPtr InValue_NativePtr = IntPtr.Add(ParamsBuffer,SetParameterValueString_InValue_Offset);
            StringMarshaller.ToNative(InValue_NativePtr,0,null,inValue);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetParameterValueString_InArrayIndex_Offset), 0, null, inArrayIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetParameterValueString_NativeFunction, ParamsBuffer);
            
            
            StringMarshaller.DestructInstance(InValue_NativePtr, 0);
        }
    }
    
    // Function /Script/RigVM.RigVM:SetParameterValueQuat
    static readonly IntPtr SetParameterValueQuat_NativeFunction;
    static readonly int SetParameterValueQuat_ParamsSize;
    static readonly int SetParameterValueQuat_InParameterName_Offset;
    static readonly int SetParameterValueQuat_InValue_Offset;
    static readonly int SetParameterValueQuat_InArrayIndex_Offset;
    
    public void SetParameterValueQuat(Name inParameterName, System.DoubleNumerics.Quaternion inValue, int inArrayIndex = 0)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetParameterValueQuat_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetParameterValueQuat_InParameterName_Offset), 0, null, inParameterName);
            BlittableMarshaller<System.DoubleNumerics.Quaternion>.ToNative(IntPtr.Add(ParamsBuffer, SetParameterValueQuat_InValue_Offset), 0, null, inValue);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetParameterValueQuat_InArrayIndex_Offset), 0, null, inArrayIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetParameterValueQuat_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/RigVM.RigVM:SetParameterValueName
    static readonly IntPtr SetParameterValueName_NativeFunction;
    static readonly int SetParameterValueName_ParamsSize;
    static readonly int SetParameterValueName_InParameterName_Offset;
    static readonly int SetParameterValueName_InValue_Offset;
    static readonly int SetParameterValueName_InArrayIndex_Offset;
    
    public void SetParameterValueName(Name inParameterName, Name inValue, int inArrayIndex = 0)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetParameterValueName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetParameterValueName_InParameterName_Offset), 0, null, inParameterName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetParameterValueName_InValue_Offset), 0, null, inValue);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetParameterValueName_InArrayIndex_Offset), 0, null, inArrayIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetParameterValueName_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/RigVM.RigVM:SetParameterValueInt
    static readonly IntPtr SetParameterValueInt_NativeFunction;
    static readonly int SetParameterValueInt_ParamsSize;
    static readonly int SetParameterValueInt_InParameterName_Offset;
    static readonly int SetParameterValueInt_InValue_Offset;
    static readonly int SetParameterValueInt_InArrayIndex_Offset;
    
    public void SetParameterValueInt(Name inParameterName, int inValue, int inArrayIndex = 0)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetParameterValueInt_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetParameterValueInt_InParameterName_Offset), 0, null, inParameterName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetParameterValueInt_InValue_Offset), 0, null, inValue);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetParameterValueInt_InArrayIndex_Offset), 0, null, inArrayIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetParameterValueInt_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/RigVM.RigVM:SetParameterValueFloat
    static readonly IntPtr SetParameterValueFloat_NativeFunction;
    static readonly int SetParameterValueFloat_ParamsSize;
    static readonly int SetParameterValueFloat_InParameterName_Offset;
    static readonly int SetParameterValueFloat_InValue_Offset;
    static readonly int SetParameterValueFloat_InArrayIndex_Offset;
    
    public void SetParameterValueFloat(Name inParameterName, float inValue, int inArrayIndex = 0)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetParameterValueFloat_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetParameterValueFloat_InParameterName_Offset), 0, null, inParameterName);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetParameterValueFloat_InValue_Offset), 0, null, inValue);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetParameterValueFloat_InArrayIndex_Offset), 0, null, inArrayIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetParameterValueFloat_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/RigVM.RigVM:SetParameterValueDouble
    static readonly IntPtr SetParameterValueDouble_NativeFunction;
    static readonly int SetParameterValueDouble_ParamsSize;
    static readonly int SetParameterValueDouble_InParameterName_Offset;
    static readonly int SetParameterValueDouble_InValue_Offset;
    static readonly int SetParameterValueDouble_InArrayIndex_Offset;
    
    public void SetParameterValueDouble(Name inParameterName, double inValue, int inArrayIndex = 0)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetParameterValueDouble_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetParameterValueDouble_InParameterName_Offset), 0, null, inParameterName);
            BlittableMarshaller<double>.ToNative(IntPtr.Add(ParamsBuffer, SetParameterValueDouble_InValue_Offset), 0, null, inValue);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetParameterValueDouble_InArrayIndex_Offset), 0, null, inArrayIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetParameterValueDouble_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/RigVM.RigVM:SetParameterValueBool
    static readonly IntPtr SetParameterValueBool_NativeFunction;
    static readonly int SetParameterValueBool_ParamsSize;
    static readonly int SetParameterValueBool_InParameterName_Offset;
    static readonly int SetParameterValueBool_InValue_Offset;
    static readonly int SetParameterValueBool_InArrayIndex_Offset;
    
    public void SetParameterValueBool(Name inParameterName, bool inValue, int inArrayIndex = 0)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetParameterValueBool_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetParameterValueBool_InParameterName_Offset), 0, null, inParameterName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetParameterValueBool_InValue_Offset), 0, null, inValue);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetParameterValueBool_InArrayIndex_Offset), 0, null, inArrayIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetParameterValueBool_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/RigVM.RigVM:GetStatistics
    static readonly IntPtr GetStatistics_NativeFunction;
    static readonly int GetStatistics_ParamsSize;
    static readonly int GetStatistics_ReturnValue_Offset;
    
    [Obsolete("This function is obsolete")]
    public UnrealSharp.RigVM.RigVMStatistics GetStatistics()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetStatistics_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetStatistics_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVM.RigVMStatistics returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.RigVM.RigVMStatistics>.FromNative(IntPtr.Add(ParamsBuffer, GetStatistics_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVM.RigVM:GetParameterValueVector2D
    static readonly IntPtr GetParameterValueVector2D_NativeFunction;
    static readonly int GetParameterValueVector2D_ParamsSize;
    static readonly int GetParameterValueVector2D_InParameterName_Offset;
    static readonly int GetParameterValueVector2D_InArrayIndex_Offset;
    static readonly int GetParameterValueVector2D_ReturnValue_Offset;
    
    public System.DoubleNumerics.Vector2 GetParameterValueVector2D(Name inParameterName, int inArrayIndex = 0)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetParameterValueVector2D_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetParameterValueVector2D_InParameterName_Offset), 0, null, inParameterName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetParameterValueVector2D_InArrayIndex_Offset), 0, null, inArrayIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetParameterValueVector2D_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector2 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(ParamsBuffer, GetParameterValueVector2D_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVM.RigVM:GetParameterValueVector
    static readonly IntPtr GetParameterValueVector_NativeFunction;
    static readonly int GetParameterValueVector_ParamsSize;
    static readonly int GetParameterValueVector_InParameterName_Offset;
    static readonly int GetParameterValueVector_InArrayIndex_Offset;
    static readonly int GetParameterValueVector_ReturnValue_Offset;
    
    public System.DoubleNumerics.Vector3 GetParameterValueVector(Name inParameterName, int inArrayIndex = 0)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetParameterValueVector_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetParameterValueVector_InParameterName_Offset), 0, null, inParameterName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetParameterValueVector_InArrayIndex_Offset), 0, null, inArrayIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetParameterValueVector_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector3 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector3>.FromNative(IntPtr.Add(ParamsBuffer, GetParameterValueVector_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVM.RigVM:GetParameterValueTransform
    static readonly IntPtr GetParameterValueTransform_NativeFunction;
    static readonly int GetParameterValueTransform_ParamsSize;
    static readonly int GetParameterValueTransform_InParameterName_Offset;
    static readonly int GetParameterValueTransform_InArrayIndex_Offset;
    static readonly int GetParameterValueTransform_ReturnValue_Offset;
    
    public UnrealSharp.Transform GetParameterValueTransform(Name inParameterName, int inArrayIndex = 0)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetParameterValueTransform_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetParameterValueTransform_InParameterName_Offset), 0, null, inParameterName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetParameterValueTransform_InArrayIndex_Offset), 0, null, inArrayIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetParameterValueTransform_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Transform returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.Transform>.FromNative(IntPtr.Add(ParamsBuffer, GetParameterValueTransform_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVM.RigVM:GetParameterValueString
    static readonly IntPtr GetParameterValueString_NativeFunction;
    static readonly int GetParameterValueString_ParamsSize;
    static readonly int GetParameterValueString_InParameterName_Offset;
    static readonly int GetParameterValueString_InArrayIndex_Offset;
    static readonly int GetParameterValueString_ReturnValue_Offset;
    
    public string GetParameterValueString(Name inParameterName, int inArrayIndex = 0)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetParameterValueString_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetParameterValueString_InParameterName_Offset), 0, null, inParameterName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetParameterValueString_InArrayIndex_Offset), 0, null, inArrayIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetParameterValueString_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetParameterValueString_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVM.RigVM:GetParameterValueQuat
    static readonly IntPtr GetParameterValueQuat_NativeFunction;
    static readonly int GetParameterValueQuat_ParamsSize;
    static readonly int GetParameterValueQuat_InParameterName_Offset;
    static readonly int GetParameterValueQuat_InArrayIndex_Offset;
    static readonly int GetParameterValueQuat_ReturnValue_Offset;
    
    public System.DoubleNumerics.Quaternion GetParameterValueQuat(Name inParameterName, int inArrayIndex = 0)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetParameterValueQuat_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetParameterValueQuat_InParameterName_Offset), 0, null, inParameterName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetParameterValueQuat_InArrayIndex_Offset), 0, null, inArrayIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetParameterValueQuat_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Quaternion returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Quaternion>.FromNative(IntPtr.Add(ParamsBuffer, GetParameterValueQuat_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVM.RigVM:GetParameterValueName
    static readonly IntPtr GetParameterValueName_NativeFunction;
    static readonly int GetParameterValueName_ParamsSize;
    static readonly int GetParameterValueName_InParameterName_Offset;
    static readonly int GetParameterValueName_InArrayIndex_Offset;
    static readonly int GetParameterValueName_ReturnValue_Offset;
    
    public Name GetParameterValueName(Name inParameterName, int inArrayIndex = 0)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetParameterValueName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetParameterValueName_InParameterName_Offset), 0, null, inParameterName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetParameterValueName_InArrayIndex_Offset), 0, null, inArrayIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetParameterValueName_NativeFunction, ParamsBuffer);
            
            Name returnValue;
            returnValue = BlittableMarshaller<Name>.FromNative(IntPtr.Add(ParamsBuffer, GetParameterValueName_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVM.RigVM:GetParameterValueInt
    static readonly IntPtr GetParameterValueInt_NativeFunction;
    static readonly int GetParameterValueInt_ParamsSize;
    static readonly int GetParameterValueInt_InParameterName_Offset;
    static readonly int GetParameterValueInt_InArrayIndex_Offset;
    static readonly int GetParameterValueInt_ReturnValue_Offset;
    
    public int GetParameterValueInt(Name inParameterName, int inArrayIndex = 0)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetParameterValueInt_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetParameterValueInt_InParameterName_Offset), 0, null, inParameterName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetParameterValueInt_InArrayIndex_Offset), 0, null, inArrayIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetParameterValueInt_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetParameterValueInt_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVM.RigVM:GetParameterValueFloat
    static readonly IntPtr GetParameterValueFloat_NativeFunction;
    static readonly int GetParameterValueFloat_ParamsSize;
    static readonly int GetParameterValueFloat_InParameterName_Offset;
    static readonly int GetParameterValueFloat_InArrayIndex_Offset;
    static readonly int GetParameterValueFloat_ReturnValue_Offset;
    
    public float GetParameterValueFloat(Name inParameterName, int inArrayIndex = 0)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetParameterValueFloat_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetParameterValueFloat_InParameterName_Offset), 0, null, inParameterName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetParameterValueFloat_InArrayIndex_Offset), 0, null, inArrayIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetParameterValueFloat_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetParameterValueFloat_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVM.RigVM:GetParameterValueDouble
    static readonly IntPtr GetParameterValueDouble_NativeFunction;
    static readonly int GetParameterValueDouble_ParamsSize;
    static readonly int GetParameterValueDouble_InParameterName_Offset;
    static readonly int GetParameterValueDouble_InArrayIndex_Offset;
    static readonly int GetParameterValueDouble_ReturnValue_Offset;
    
    public double GetParameterValueDouble(Name inParameterName, int inArrayIndex = 0)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetParameterValueDouble_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetParameterValueDouble_InParameterName_Offset), 0, null, inParameterName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetParameterValueDouble_InArrayIndex_Offset), 0, null, inArrayIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetParameterValueDouble_NativeFunction, ParamsBuffer);
            
            double returnValue;
            returnValue = BlittableMarshaller<double>.FromNative(IntPtr.Add(ParamsBuffer, GetParameterValueDouble_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVM.RigVM:GetParameterValueBool
    static readonly IntPtr GetParameterValueBool_NativeFunction;
    static readonly int GetParameterValueBool_ParamsSize;
    static readonly int GetParameterValueBool_InParameterName_Offset;
    static readonly int GetParameterValueBool_InArrayIndex_Offset;
    static readonly int GetParameterValueBool_ReturnValue_Offset;
    
    public bool GetParameterValueBool(Name inParameterName, int inArrayIndex = 0)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetParameterValueBool_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetParameterValueBool_InParameterName_Offset), 0, null, inParameterName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetParameterValueBool_InArrayIndex_Offset), 0, null, inArrayIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetParameterValueBool_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetParameterValueBool_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVM.RigVM:Execute
    static readonly IntPtr Execute_NativeFunction;
    static readonly int Execute_ParamsSize;
    static readonly int Execute_Context_Offset;
    static readonly int Execute_InEntryName_Offset;
    static readonly int Execute_ReturnValue_Offset;
    
    public bool Execute(out UnrealSharp.RigVM.RigVMExtendedExecuteContext context, Name inEntryName = default(Name))
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Execute_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, Execute_InEntryName_Offset), 0, null, inEntryName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, Execute_NativeFunction, ParamsBuffer);
            
            context = UnrealSharp.RigVM.RigVMExtendedExecuteContextMarshaler.FromNative(IntPtr.Add(ParamsBuffer, Execute_Context_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, Execute_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
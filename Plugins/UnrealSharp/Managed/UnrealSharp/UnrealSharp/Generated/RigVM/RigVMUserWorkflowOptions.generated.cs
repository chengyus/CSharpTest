// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.RigVM;

[UClass]
public partial class RigVMUserWorkflowOptions : UnrealSharp.CoreUObject.Object
{
    
    static RigVMUserWorkflowOptions()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("RigVMUserWorkflowOptions");
        
        Subject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Subject");
        Workflow_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Workflow");
        
        RequiresDialog_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RequiresDialog");
        RequiresDialog_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RequiresDialog_NativeFunction);
        RequiresDialog_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RequiresDialog_NativeFunction, "ReturnValue");
        ReportWarning_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ReportWarning");
        ReportWarning_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ReportWarning_NativeFunction);
        ReportWarning_InMessage_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReportWarning_NativeFunction, "InMessage");
        ReportInfo_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ReportInfo");
        ReportInfo_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ReportInfo_NativeFunction);
        ReportInfo_InMessage_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReportInfo_NativeFunction, "InMessage");
        ReportError_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ReportError");
        ReportError_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ReportError_NativeFunction);
        ReportError_InMessage_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReportError_NativeFunction, "InMessage");
        IsValid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsValid");
        IsValid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsValid_NativeFunction);
        IsValid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsValid_NativeFunction, "ReturnValue");
        
        
    }
    
    protected RigVMUserWorkflowOptions(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ObjectProperty /Script/RigVM.RigVMUserWorkflowOptions:Subject
    static readonly int Subject_Offset;
    
    public UnrealSharp.CoreUObject.Object Subject
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.CoreUObject.Object>.FromNative(IntPtr.Add(NativeObject, Subject_Offset), 0, this);
        }
    }
    
    // StructProperty /Script/RigVM.RigVMUserWorkflowOptions:Workflow
    static readonly int Workflow_Offset;
    
    public UnrealSharp.RigVM.RigVMUserWorkflow Workflow
    {
        get
        {
            CheckObjectForValidity();
            return UnrealSharp.RigVM.RigVMUserWorkflowMarshaler.FromNative(IntPtr.Add(NativeObject, Workflow_Offset), 0, this);
        }
    }
    
    // Function /Script/RigVM.RigVMUserWorkflowOptions:RequiresDialog
    static readonly IntPtr RequiresDialog_NativeFunction;
    static readonly int RequiresDialog_ParamsSize;
    static readonly int RequiresDialog_ReturnValue_Offset;
    
    public bool RequiresDialog()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RequiresDialog_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RequiresDialog_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RequiresDialog_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVM.RigVMUserWorkflowOptions:ReportWarning
    static readonly IntPtr ReportWarning_NativeFunction;
    static readonly int ReportWarning_ParamsSize;
    static readonly int ReportWarning_InMessage_Offset;
    
    public void ReportWarning(string inMessage)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ReportWarning_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InMessage_NativePtr = IntPtr.Add(ParamsBuffer,ReportWarning_InMessage_Offset);
            StringMarshaller.ToNative(InMessage_NativePtr,0,null,inMessage);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ReportWarning_NativeFunction, ParamsBuffer);
            
            StringMarshaller.DestructInstance(InMessage_NativePtr, 0);
        }
    }
    
    // Function /Script/RigVM.RigVMUserWorkflowOptions:ReportInfo
    static readonly IntPtr ReportInfo_NativeFunction;
    static readonly int ReportInfo_ParamsSize;
    static readonly int ReportInfo_InMessage_Offset;
    
    public void ReportInfo(string inMessage)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ReportInfo_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InMessage_NativePtr = IntPtr.Add(ParamsBuffer,ReportInfo_InMessage_Offset);
            StringMarshaller.ToNative(InMessage_NativePtr,0,null,inMessage);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ReportInfo_NativeFunction, ParamsBuffer);
            
            StringMarshaller.DestructInstance(InMessage_NativePtr, 0);
        }
    }
    
    // Function /Script/RigVM.RigVMUserWorkflowOptions:ReportError
    static readonly IntPtr ReportError_NativeFunction;
    static readonly int ReportError_ParamsSize;
    static readonly int ReportError_InMessage_Offset;
    
    public void ReportError(string inMessage)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ReportError_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InMessage_NativePtr = IntPtr.Add(ParamsBuffer,ReportError_InMessage_Offset);
            StringMarshaller.ToNative(InMessage_NativePtr,0,null,inMessage);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ReportError_NativeFunction, ParamsBuffer);
            
            StringMarshaller.DestructInstance(InMessage_NativePtr, 0);
        }
    }
    
    // Function /Script/RigVM.RigVMUserWorkflowOptions:IsValid
    static readonly IntPtr IsValid_NativeFunction;
    static readonly int IsValid_ParamsSize;
    static readonly int IsValid_ReturnValue_Offset;
    
    public bool IsValid()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsValid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsValid_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsValid_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
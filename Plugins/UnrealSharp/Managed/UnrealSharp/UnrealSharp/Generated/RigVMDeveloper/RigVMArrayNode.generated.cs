// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.RigVMDeveloper;

[UClass]
public partial class RigVMArrayNode : UnrealSharp.RigVMDeveloper.RigVMTemplateNode
{
    
    static RigVMArrayNode()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("RigVMArrayNode");
        
        
        GetOpCode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetOpCode");
        GetOpCode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetOpCode_NativeFunction);
        GetOpCode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetOpCode_NativeFunction, "ReturnValue");
        GetCPPTypeObject_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCPPTypeObject");
        GetCPPTypeObject_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCPPTypeObject_NativeFunction);
        GetCPPTypeObject_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCPPTypeObject_NativeFunction, "ReturnValue");
        GetCPPType_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCPPType");
        GetCPPType_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCPPType_NativeFunction);
        GetCPPType_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCPPType_NativeFunction, "ReturnValue");
        
        
    }
    
    protected RigVMArrayNode(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/RigVMDeveloper.RigVMArrayNode:GetOpCode
    static readonly IntPtr GetOpCode_NativeFunction;
    static readonly int GetOpCode_ParamsSize;
    static readonly int GetOpCode_ReturnValue_Offset;
    
    public UnrealSharp.RigVM.ERigVMOpCode GetOpCode()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetOpCode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetOpCode_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVM.ERigVMOpCode returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.RigVM.ERigVMOpCode>.FromNative(IntPtr.Add(ParamsBuffer, GetOpCode_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMArrayNode:GetCPPTypeObject
    static readonly IntPtr GetCPPTypeObject_NativeFunction;
    static readonly int GetCPPTypeObject_ParamsSize;
    static readonly int GetCPPTypeObject_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.Object GetCPPTypeObject()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCPPTypeObject_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCPPTypeObject_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.Object returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.CoreUObject.Object>.FromNative(IntPtr.Add(ParamsBuffer, GetCPPTypeObject_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMArrayNode:GetCPPType
    static readonly IntPtr GetCPPType_NativeFunction;
    static readonly int GetCPPType_ParamsSize;
    static readonly int GetCPPType_ReturnValue_Offset;
    
    public string GetCPPType()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCPPType_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCPPType_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetCPPType_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    
}
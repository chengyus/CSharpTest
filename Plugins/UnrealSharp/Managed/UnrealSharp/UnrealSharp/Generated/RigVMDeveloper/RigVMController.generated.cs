// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.RigVMDeveloper;

[UClass]
public partial class RigVMController : UnrealSharp.CoreUObject.Object
{
    
    static readonly IntPtr NativeClassPtr;
    static RigVMController()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("RigVMController");
        
        
        UpgradeNodes_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "UpgradeNodes");
        UpgradeNodes_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(UpgradeNodes_NativeFunction);
        UpgradeNodes_InNodeNames_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(UpgradeNodes_NativeFunction, "InNodeNames");
        UpgradeNodes_InNodeNames_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(UpgradeNodes_NativeFunction, "InNodeNames");
        UpgradeNodes_bRecursive_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(UpgradeNodes_NativeFunction, "bRecursive");
        UpgradeNodes_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(UpgradeNodes_NativeFunction, "bSetupUndoRedo");
        UpgradeNodes_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(UpgradeNodes_NativeFunction, "bPrintPythonCommand");
        UpgradeNodes_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(UpgradeNodes_NativeFunction, "ReturnValue");
        UpgradeNodes_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(UpgradeNodes_NativeFunction, "ReturnValue");
        UnresolveTemplateNodes_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "UnresolveTemplateNodes");
        UnresolveTemplateNodes_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(UnresolveTemplateNodes_NativeFunction);
        UnresolveTemplateNodes_InNodeNames_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(UnresolveTemplateNodes_NativeFunction, "InNodeNames");
        UnresolveTemplateNodes_InNodeNames_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(UnresolveTemplateNodes_NativeFunction, "InNodeNames");
        UnresolveTemplateNodes_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(UnresolveTemplateNodes_NativeFunction, "bSetupUndoRedo");
        UnresolveTemplateNodes_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(UnresolveTemplateNodes_NativeFunction, "bPrintPythonCommand");
        UnresolveTemplateNodes_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(UnresolveTemplateNodes_NativeFunction, "ReturnValue");
        Undo_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Undo");
        Undo_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Undo_NativeFunction);
        Undo_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Undo_NativeFunction, "ReturnValue");
        UnbindPinFromVariable_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "UnbindPinFromVariable");
        UnbindPinFromVariable_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(UnbindPinFromVariable_NativeFunction);
        UnbindPinFromVariable_InPinPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(UnbindPinFromVariable_NativeFunction, "InPinPath");
        UnbindPinFromVariable_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(UnbindPinFromVariable_NativeFunction, "bSetupUndoRedo");
        UnbindPinFromVariable_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(UnbindPinFromVariable_NativeFunction, "bPrintPythonCommand");
        UnbindPinFromVariable_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(UnbindPinFromVariable_NativeFunction, "ReturnValue");
        SetUnitNodeDefaults_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetUnitNodeDefaults");
        SetUnitNodeDefaults_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetUnitNodeDefaults_NativeFunction);
        SetUnitNodeDefaults_InNode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetUnitNodeDefaults_NativeFunction, "InNode");
        SetUnitNodeDefaults_InDefaults_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetUnitNodeDefaults_NativeFunction, "InDefaults");
        SetUnitNodeDefaults_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetUnitNodeDefaults_NativeFunction, "bSetupUndoRedo");
        SetUnitNodeDefaults_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetUnitNodeDefaults_NativeFunction, "bPrintPythonCommand");
        SetUnitNodeDefaults_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetUnitNodeDefaults_NativeFunction, "ReturnValue");
        SetSchema_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSchema");
        SetSchema_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSchema_NativeFunction);
        SetSchema_InSchema_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSchema_NativeFunction, "InSchema");
        SetRemappedVariable_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetRemappedVariable");
        SetRemappedVariable_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetRemappedVariable_NativeFunction);
        SetRemappedVariable_InFunctionRefNode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetRemappedVariable_NativeFunction, "InFunctionRefNode");
        SetRemappedVariable_InInnerVariableName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetRemappedVariable_NativeFunction, "InInnerVariableName");
        SetRemappedVariable_InOuterVariableName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetRemappedVariable_NativeFunction, "InOuterVariableName");
        SetRemappedVariable_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetRemappedVariable_NativeFunction, "bSetupUndoRedo");
        SetRemappedVariable_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetRemappedVariable_NativeFunction, "ReturnValue");
        SetPinIsWatched_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPinIsWatched");
        SetPinIsWatched_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPinIsWatched_NativeFunction);
        SetPinIsWatched_InPinPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPinIsWatched_NativeFunction, "InPinPath");
        SetPinIsWatched_bIsWatched_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPinIsWatched_NativeFunction, "bIsWatched");
        SetPinIsWatched_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPinIsWatched_NativeFunction, "bSetupUndoRedo");
        SetPinIsWatched_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPinIsWatched_NativeFunction, "ReturnValue");
        SetPinExpansion_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPinExpansion");
        SetPinExpansion_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPinExpansion_NativeFunction);
        SetPinExpansion_InPinPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPinExpansion_NativeFunction, "InPinPath");
        SetPinExpansion_bIsExpanded_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPinExpansion_NativeFunction, "bIsExpanded");
        SetPinExpansion_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPinExpansion_NativeFunction, "bSetupUndoRedo");
        SetPinExpansion_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPinExpansion_NativeFunction, "bPrintPythonCommand");
        SetPinExpansion_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPinExpansion_NativeFunction, "ReturnValue");
        SetPinDefaultValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPinDefaultValue");
        SetPinDefaultValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPinDefaultValue_NativeFunction);
        SetPinDefaultValue_InPinPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPinDefaultValue_NativeFunction, "InPinPath");
        SetPinDefaultValue_InDefaultValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPinDefaultValue_NativeFunction, "InDefaultValue");
        SetPinDefaultValue_bResizeArrays_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPinDefaultValue_NativeFunction, "bResizeArrays");
        SetPinDefaultValue_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPinDefaultValue_NativeFunction, "bSetupUndoRedo");
        SetPinDefaultValue_bMergeUndoAction_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPinDefaultValue_NativeFunction, "bMergeUndoAction");
        SetPinDefaultValue_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPinDefaultValue_NativeFunction, "bPrintPythonCommand");
        SetPinDefaultValue_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPinDefaultValue_NativeFunction, "ReturnValue");
        SetNodeSizeByName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetNodeSizeByName");
        SetNodeSizeByName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetNodeSizeByName_NativeFunction);
        SetNodeSizeByName_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeSizeByName_NativeFunction, "InNodeName");
        SetNodeSizeByName_InSize_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeSizeByName_NativeFunction, "InSize");
        SetNodeSizeByName_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeSizeByName_NativeFunction, "bSetupUndoRedo");
        SetNodeSizeByName_bMergeUndoAction_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeSizeByName_NativeFunction, "bMergeUndoAction");
        SetNodeSizeByName_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeSizeByName_NativeFunction, "bPrintPythonCommand");
        SetNodeSizeByName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeSizeByName_NativeFunction, "ReturnValue");
        SetNodeSize_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetNodeSize");
        SetNodeSize_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetNodeSize_NativeFunction);
        SetNodeSize_InNode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeSize_NativeFunction, "InNode");
        SetNodeSize_InSize_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeSize_NativeFunction, "InSize");
        SetNodeSize_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeSize_NativeFunction, "bSetupUndoRedo");
        SetNodeSize_bMergeUndoAction_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeSize_NativeFunction, "bMergeUndoAction");
        SetNodeSize_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeSize_NativeFunction, "bPrintPythonCommand");
        SetNodeSize_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeSize_NativeFunction, "ReturnValue");
        SetNodeSelection_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetNodeSelection");
        SetNodeSelection_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetNodeSelection_NativeFunction);
        SetNodeSelection_InNodeNames_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeSelection_NativeFunction, "InNodeNames");
        SetNodeSelection_InNodeNames_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(SetNodeSelection_NativeFunction, "InNodeNames");
        SetNodeSelection_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeSelection_NativeFunction, "bSetupUndoRedo");
        SetNodeSelection_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeSelection_NativeFunction, "bPrintPythonCommand");
        SetNodeSelection_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeSelection_NativeFunction, "ReturnValue");
        SetNodePositionByName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetNodePositionByName");
        SetNodePositionByName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetNodePositionByName_NativeFunction);
        SetNodePositionByName_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodePositionByName_NativeFunction, "InNodeName");
        SetNodePositionByName_InPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodePositionByName_NativeFunction, "InPosition");
        SetNodePositionByName_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodePositionByName_NativeFunction, "bSetupUndoRedo");
        SetNodePositionByName_bMergeUndoAction_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodePositionByName_NativeFunction, "bMergeUndoAction");
        SetNodePositionByName_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodePositionByName_NativeFunction, "bPrintPythonCommand");
        SetNodePositionByName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodePositionByName_NativeFunction, "ReturnValue");
        SetNodePosition_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetNodePosition");
        SetNodePosition_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetNodePosition_NativeFunction);
        SetNodePosition_InNode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodePosition_NativeFunction, "InNode");
        SetNodePosition_InPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodePosition_NativeFunction, "InPosition");
        SetNodePosition_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodePosition_NativeFunction, "bSetupUndoRedo");
        SetNodePosition_bMergeUndoAction_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodePosition_NativeFunction, "bMergeUndoAction");
        SetNodePosition_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodePosition_NativeFunction, "bPrintPythonCommand");
        SetNodePosition_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodePosition_NativeFunction, "ReturnValue");
        SetNodeKeywordsByName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetNodeKeywordsByName");
        SetNodeKeywordsByName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetNodeKeywordsByName_NativeFunction);
        SetNodeKeywordsByName_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeKeywordsByName_NativeFunction, "InNodeName");
        SetNodeKeywordsByName_InKeywords_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeKeywordsByName_NativeFunction, "InKeywords");
        SetNodeKeywordsByName_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeKeywordsByName_NativeFunction, "bSetupUndoRedo");
        SetNodeKeywordsByName_bMergeUndoAction_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeKeywordsByName_NativeFunction, "bMergeUndoAction");
        SetNodeKeywordsByName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeKeywordsByName_NativeFunction, "ReturnValue");
        SetNodeKeywords_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetNodeKeywords");
        SetNodeKeywords_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetNodeKeywords_NativeFunction);
        SetNodeKeywords_InNode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeKeywords_NativeFunction, "InNode");
        SetNodeKeywords_InKeywords_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeKeywords_NativeFunction, "InKeywords");
        SetNodeKeywords_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeKeywords_NativeFunction, "bSetupUndoRedo");
        SetNodeKeywords_bMergeUndoAction_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeKeywords_NativeFunction, "bMergeUndoAction");
        SetNodeKeywords_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeKeywords_NativeFunction, "bPrintPythonCommand");
        SetNodeKeywords_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeKeywords_NativeFunction, "ReturnValue");
        SetNodeDescriptionByName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetNodeDescriptionByName");
        SetNodeDescriptionByName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetNodeDescriptionByName_NativeFunction);
        SetNodeDescriptionByName_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeDescriptionByName_NativeFunction, "InNodeName");
        SetNodeDescriptionByName_InDescription_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeDescriptionByName_NativeFunction, "InDescription");
        SetNodeDescriptionByName_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeDescriptionByName_NativeFunction, "bSetupUndoRedo");
        SetNodeDescriptionByName_bMergeUndoAction_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeDescriptionByName_NativeFunction, "bMergeUndoAction");
        SetNodeDescriptionByName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeDescriptionByName_NativeFunction, "ReturnValue");
        SetNodeDescription_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetNodeDescription");
        SetNodeDescription_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetNodeDescription_NativeFunction);
        SetNodeDescription_InNode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeDescription_NativeFunction, "InNode");
        SetNodeDescription_InDescription_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeDescription_NativeFunction, "InDescription");
        SetNodeDescription_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeDescription_NativeFunction, "bSetupUndoRedo");
        SetNodeDescription_bMergeUndoAction_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeDescription_NativeFunction, "bMergeUndoAction");
        SetNodeDescription_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeDescription_NativeFunction, "bPrintPythonCommand");
        SetNodeDescription_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeDescription_NativeFunction, "ReturnValue");
        SetNodeColorByName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetNodeColorByName");
        SetNodeColorByName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetNodeColorByName_NativeFunction);
        SetNodeColorByName_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeColorByName_NativeFunction, "InNodeName");
        SetNodeColorByName_InColor_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeColorByName_NativeFunction, "InColor");
        SetNodeColorByName_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeColorByName_NativeFunction, "bSetupUndoRedo");
        SetNodeColorByName_bMergeUndoAction_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeColorByName_NativeFunction, "bMergeUndoAction");
        SetNodeColorByName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeColorByName_NativeFunction, "ReturnValue");
        SetNodeColor_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetNodeColor");
        SetNodeColor_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetNodeColor_NativeFunction);
        SetNodeColor_InNode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeColor_NativeFunction, "InNode");
        SetNodeColor_InColor_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeColor_NativeFunction, "InColor");
        SetNodeColor_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeColor_NativeFunction, "bSetupUndoRedo");
        SetNodeColor_bMergeUndoAction_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeColor_NativeFunction, "bMergeUndoAction");
        SetNodeColor_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeColor_NativeFunction, "bPrintPythonCommand");
        SetNodeColor_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeColor_NativeFunction, "ReturnValue");
        SetNodeCategoryByName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetNodeCategoryByName");
        SetNodeCategoryByName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetNodeCategoryByName_NativeFunction);
        SetNodeCategoryByName_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeCategoryByName_NativeFunction, "InNodeName");
        SetNodeCategoryByName_InCategory_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeCategoryByName_NativeFunction, "InCategory");
        SetNodeCategoryByName_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeCategoryByName_NativeFunction, "bSetupUndoRedo");
        SetNodeCategoryByName_bMergeUndoAction_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeCategoryByName_NativeFunction, "bMergeUndoAction");
        SetNodeCategoryByName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeCategoryByName_NativeFunction, "ReturnValue");
        SetNodeCategory_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetNodeCategory");
        SetNodeCategory_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetNodeCategory_NativeFunction);
        SetNodeCategory_InNode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeCategory_NativeFunction, "InNode");
        SetNodeCategory_InCategory_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeCategory_NativeFunction, "InCategory");
        SetNodeCategory_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeCategory_NativeFunction, "bSetupUndoRedo");
        SetNodeCategory_bMergeUndoAction_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeCategory_NativeFunction, "bMergeUndoAction");
        SetNodeCategory_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeCategory_NativeFunction, "bPrintPythonCommand");
        SetNodeCategory_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNodeCategory_NativeFunction, "ReturnValue");
        SetLocalVariableTypeFromObjectPath_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetLocalVariableTypeFromObjectPath");
        SetLocalVariableTypeFromObjectPath_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetLocalVariableTypeFromObjectPath_NativeFunction);
        SetLocalVariableTypeFromObjectPath_InVariableName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLocalVariableTypeFromObjectPath_NativeFunction, "InVariableName");
        SetLocalVariableTypeFromObjectPath_InCPPType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLocalVariableTypeFromObjectPath_NativeFunction, "InCPPType");
        SetLocalVariableTypeFromObjectPath_InCPPTypeObjectPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLocalVariableTypeFromObjectPath_NativeFunction, "InCPPTypeObjectPath");
        SetLocalVariableTypeFromObjectPath_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLocalVariableTypeFromObjectPath_NativeFunction, "bSetupUndoRedo");
        SetLocalVariableTypeFromObjectPath_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLocalVariableTypeFromObjectPath_NativeFunction, "bPrintPythonCommand");
        SetLocalVariableTypeFromObjectPath_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLocalVariableTypeFromObjectPath_NativeFunction, "ReturnValue");
        SetLocalVariableType_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetLocalVariableType");
        SetLocalVariableType_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetLocalVariableType_NativeFunction);
        SetLocalVariableType_InVariableName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLocalVariableType_NativeFunction, "InVariableName");
        SetLocalVariableType_InCPPType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLocalVariableType_NativeFunction, "InCPPType");
        SetLocalVariableType_InCPPTypeObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLocalVariableType_NativeFunction, "InCPPTypeObject");
        SetLocalVariableType_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLocalVariableType_NativeFunction, "bSetupUndoRedo");
        SetLocalVariableType_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLocalVariableType_NativeFunction, "bPrintPythonCommand");
        SetLocalVariableType_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLocalVariableType_NativeFunction, "ReturnValue");
        SetLocalVariableDefaultValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetLocalVariableDefaultValue");
        SetLocalVariableDefaultValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetLocalVariableDefaultValue_NativeFunction);
        SetLocalVariableDefaultValue_InVariableName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLocalVariableDefaultValue_NativeFunction, "InVariableName");
        SetLocalVariableDefaultValue_InDefaultValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLocalVariableDefaultValue_NativeFunction, "InDefaultValue");
        SetLocalVariableDefaultValue_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLocalVariableDefaultValue_NativeFunction, "bSetupUndoRedo");
        SetLocalVariableDefaultValue_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLocalVariableDefaultValue_NativeFunction, "bPrintPythonCommand");
        SetLocalVariableDefaultValue_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLocalVariableDefaultValue_NativeFunction, "ReturnValue");
        SetIsRunningUnitTest_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetIsRunningUnitTest");
        SetIsRunningUnitTest_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetIsRunningUnitTest_NativeFunction);
        SetIsRunningUnitTest_bIsRunning_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetIsRunningUnitTest_NativeFunction, "bIsRunning");
        SetGraph_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetGraph");
        SetGraph_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetGraph_NativeFunction);
        SetGraph_InGraph_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetGraph_NativeFunction, "InGraph");
        SetExposedPinIndex_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetExposedPinIndex");
        SetExposedPinIndex_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetExposedPinIndex_NativeFunction);
        SetExposedPinIndex_InPinName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetExposedPinIndex_NativeFunction, "InPinName");
        SetExposedPinIndex_InNewIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetExposedPinIndex_NativeFunction, "InNewIndex");
        SetExposedPinIndex_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetExposedPinIndex_NativeFunction, "bSetupUndoRedo");
        SetExposedPinIndex_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetExposedPinIndex_NativeFunction, "bPrintPythonCommand");
        SetExposedPinIndex_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetExposedPinIndex_NativeFunction, "ReturnValue");
        SetCommentTextByName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCommentTextByName");
        SetCommentTextByName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCommentTextByName_NativeFunction);
        SetCommentTextByName_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCommentTextByName_NativeFunction, "InNodeName");
        SetCommentTextByName_InCommentText_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCommentTextByName_NativeFunction, "InCommentText");
        SetCommentTextByName_InCommentFontSize_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCommentTextByName_NativeFunction, "InCommentFontSize");
        SetCommentTextByName_bInCommentBubbleVisible_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCommentTextByName_NativeFunction, "bInCommentBubbleVisible");
        SetCommentTextByName_bInCommentColorBubble_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCommentTextByName_NativeFunction, "bInCommentColorBubble");
        SetCommentTextByName_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCommentTextByName_NativeFunction, "bSetupUndoRedo");
        SetCommentTextByName_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCommentTextByName_NativeFunction, "bPrintPythonCommand");
        SetCommentTextByName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCommentTextByName_NativeFunction, "ReturnValue");
        SetCommentText_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCommentText");
        SetCommentText_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCommentText_NativeFunction);
        SetCommentText_InNode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCommentText_NativeFunction, "InNode");
        SetCommentText_InCommentText_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCommentText_NativeFunction, "InCommentText");
        SetCommentText_InCommentFontSize_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCommentText_NativeFunction, "InCommentFontSize");
        SetCommentText_bInCommentBubbleVisible_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCommentText_NativeFunction, "bInCommentBubbleVisible");
        SetCommentText_bInCommentColorBubble_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCommentText_NativeFunction, "bInCommentColorBubble");
        SetCommentText_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCommentText_NativeFunction, "bSetupUndoRedo");
        SetCommentText_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCommentText_NativeFunction, "bPrintPythonCommand");
        SetCommentText_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCommentText_NativeFunction, "ReturnValue");
        SetArrayPinSize_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetArrayPinSize");
        SetArrayPinSize_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetArrayPinSize_NativeFunction);
        SetArrayPinSize_InArrayPinPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetArrayPinSize_NativeFunction, "InArrayPinPath");
        SetArrayPinSize_InSize_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetArrayPinSize_NativeFunction, "InSize");
        SetArrayPinSize_InDefaultValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetArrayPinSize_NativeFunction, "InDefaultValue");
        SetArrayPinSize_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetArrayPinSize_NativeFunction, "bSetupUndoRedo");
        SetArrayPinSize_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetArrayPinSize_NativeFunction, "bPrintPythonCommand");
        SetArrayPinSize_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetArrayPinSize_NativeFunction, "ReturnValue");
        SelectNodeByName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SelectNodeByName");
        SelectNodeByName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SelectNodeByName_NativeFunction);
        SelectNodeByName_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SelectNodeByName_NativeFunction, "InNodeName");
        SelectNodeByName_bSelect_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SelectNodeByName_NativeFunction, "bSelect");
        SelectNodeByName_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SelectNodeByName_NativeFunction, "bSetupUndoRedo");
        SelectNodeByName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SelectNodeByName_NativeFunction, "ReturnValue");
        SelectNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SelectNode");
        SelectNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SelectNode_NativeFunction);
        SelectNode_InNode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SelectNode_NativeFunction, "InNode");
        SelectNode_bSelect_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SelectNode_NativeFunction, "bSelect");
        SelectNode_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SelectNode_NativeFunction, "bSetupUndoRedo");
        SelectNode_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SelectNode_NativeFunction, "bPrintPythonCommand");
        SelectNode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SelectNode_NativeFunction, "ReturnValue");
        ResolveWildCardPin_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ResolveWildCardPin");
        ResolveWildCardPin_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ResolveWildCardPin_NativeFunction);
        ResolveWildCardPin_InPinPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ResolveWildCardPin_NativeFunction, "InPinPath");
        ResolveWildCardPin_InCPPType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ResolveWildCardPin_NativeFunction, "InCPPType");
        ResolveWildCardPin_InCPPTypeObjectPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ResolveWildCardPin_NativeFunction, "InCPPTypeObjectPath");
        ResolveWildCardPin_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ResolveWildCardPin_NativeFunction, "bSetupUndoRedo");
        ResolveWildCardPin_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ResolveWildCardPin_NativeFunction, "bPrintPythonCommand");
        ResolveWildCardPin_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ResolveWildCardPin_NativeFunction, "ReturnValue");
        ResetPinDefaultValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ResetPinDefaultValue");
        ResetPinDefaultValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ResetPinDefaultValue_NativeFunction);
        ResetPinDefaultValue_InPinPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ResetPinDefaultValue_NativeFunction, "InPinPath");
        ResetPinDefaultValue_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ResetPinDefaultValue_NativeFunction, "bSetupUndoRedo");
        ResetPinDefaultValue_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ResetPinDefaultValue_NativeFunction, "bPrintPythonCommand");
        ResetPinDefaultValue_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ResetPinDefaultValue_NativeFunction, "ReturnValue");
        ReplaceParameterNodeWithVariable_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ReplaceParameterNodeWithVariable");
        ReplaceParameterNodeWithVariable_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ReplaceParameterNodeWithVariable_NativeFunction);
        ReplaceParameterNodeWithVariable_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReplaceParameterNodeWithVariable_NativeFunction, "InNodeName");
        ReplaceParameterNodeWithVariable_InVariableName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReplaceParameterNodeWithVariable_NativeFunction, "InVariableName");
        ReplaceParameterNodeWithVariable_InCPPType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReplaceParameterNodeWithVariable_NativeFunction, "InCPPType");
        ReplaceParameterNodeWithVariable_InCPPTypeObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReplaceParameterNodeWithVariable_NativeFunction, "InCPPTypeObject");
        ReplaceParameterNodeWithVariable_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReplaceParameterNodeWithVariable_NativeFunction, "bSetupUndoRedo");
        ReplaceParameterNodeWithVariable_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ReplaceParameterNodeWithVariable_NativeFunction, "ReturnValue");
        RenameVariable_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RenameVariable");
        RenameVariable_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RenameVariable_NativeFunction);
        RenameVariable_InOldName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameVariable_NativeFunction, "InOldName");
        RenameVariable_InNewName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameVariable_NativeFunction, "InNewName");
        RenameVariable_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameVariable_NativeFunction, "bSetupUndoRedo");
        RenameVariable_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameVariable_NativeFunction, "ReturnValue");
        RenameParameter_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RenameParameter");
        RenameParameter_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RenameParameter_NativeFunction);
        RenameParameter_InOldName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameParameter_NativeFunction, "InOldName");
        RenameParameter_InNewName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameParameter_NativeFunction, "InNewName");
        RenameParameter_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameParameter_NativeFunction, "bSetupUndoRedo");
        RenameParameter_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameParameter_NativeFunction, "ReturnValue");
        RenameNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RenameNode");
        RenameNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RenameNode_NativeFunction);
        RenameNode_InNode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameNode_NativeFunction, "InNode");
        RenameNode_InNewName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameNode_NativeFunction, "InNewName");
        RenameNode_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameNode_NativeFunction, "bSetupUndoRedo");
        RenameNode_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameNode_NativeFunction, "bPrintPythonCommand");
        RenameNode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameNode_NativeFunction, "ReturnValue");
        RenameLocalVariable_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RenameLocalVariable");
        RenameLocalVariable_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RenameLocalVariable_NativeFunction);
        RenameLocalVariable_InVariableName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameLocalVariable_NativeFunction, "InVariableName");
        RenameLocalVariable_InNewVariableName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameLocalVariable_NativeFunction, "InNewVariableName");
        RenameLocalVariable_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameLocalVariable_NativeFunction, "bSetupUndoRedo");
        RenameLocalVariable_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameLocalVariable_NativeFunction, "bPrintPythonCommand");
        RenameLocalVariable_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameLocalVariable_NativeFunction, "ReturnValue");
        RenameFunction_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RenameFunction");
        RenameFunction_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RenameFunction_NativeFunction);
        RenameFunction_InOldFunctionName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameFunction_NativeFunction, "InOldFunctionName");
        RenameFunction_InNewFunctionName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameFunction_NativeFunction, "InNewFunctionName");
        RenameFunction_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameFunction_NativeFunction, "bSetupUndoRedo");
        RenameFunction_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameFunction_NativeFunction, "ReturnValue");
        RenameExposedPin_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RenameExposedPin");
        RenameExposedPin_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RenameExposedPin_NativeFunction);
        RenameExposedPin_InOldPinName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameExposedPin_NativeFunction, "InOldPinName");
        RenameExposedPin_InNewPinName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameExposedPin_NativeFunction, "InNewPinName");
        RenameExposedPin_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameExposedPin_NativeFunction, "bSetupUndoRedo");
        RenameExposedPin_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameExposedPin_NativeFunction, "bPrintPythonCommand");
        RenameExposedPin_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameExposedPin_NativeFunction, "ReturnValue");
        RemoveNodesByName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveNodesByName");
        RemoveNodesByName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveNodesByName_NativeFunction);
        RemoveNodesByName_InNodeNames_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveNodesByName_NativeFunction, "InNodeNames");
        RemoveNodesByName_InNodeNames_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(RemoveNodesByName_NativeFunction, "InNodeNames");
        RemoveNodesByName_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveNodesByName_NativeFunction, "bSetupUndoRedo");
        RemoveNodesByName_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveNodesByName_NativeFunction, "bPrintPythonCommand");
        RemoveNodesByName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveNodesByName_NativeFunction, "ReturnValue");
        RemoveNodes_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveNodes");
        RemoveNodes_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveNodes_NativeFunction);
        RemoveNodes_InNodes_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveNodes_NativeFunction, "InNodes");
        RemoveNodes_InNodes_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(RemoveNodes_NativeFunction, "InNodes");
        RemoveNodes_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveNodes_NativeFunction, "bSetupUndoRedo");
        RemoveNodes_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveNodes_NativeFunction, "bPrintPythonCommand");
        RemoveNodes_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveNodes_NativeFunction, "ReturnValue");
        RemoveNodeByName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveNodeByName");
        RemoveNodeByName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveNodeByName_NativeFunction);
        RemoveNodeByName_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveNodeByName_NativeFunction, "InNodeName");
        RemoveNodeByName_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveNodeByName_NativeFunction, "bSetupUndoRedo");
        RemoveNodeByName_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveNodeByName_NativeFunction, "bPrintPythonCommand");
        RemoveNodeByName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveNodeByName_NativeFunction, "ReturnValue");
        RemoveNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveNode");
        RemoveNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveNode_NativeFunction);
        RemoveNode_InNode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveNode_NativeFunction, "InNode");
        RemoveNode_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveNode_NativeFunction, "bSetupUndoRedo");
        RemoveNode_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveNode_NativeFunction, "bPrintPythonCommand");
        RemoveNode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveNode_NativeFunction, "ReturnValue");
        RemoveLocalVariable_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveLocalVariable");
        RemoveLocalVariable_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveLocalVariable_NativeFunction);
        RemoveLocalVariable_InVariableName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveLocalVariable_NativeFunction, "InVariableName");
        RemoveLocalVariable_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveLocalVariable_NativeFunction, "bSetupUndoRedo");
        RemoveLocalVariable_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveLocalVariable_NativeFunction, "bPrintPythonCommand");
        RemoveLocalVariable_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveLocalVariable_NativeFunction, "ReturnValue");
        RemoveInjectedNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveInjectedNode");
        RemoveInjectedNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveInjectedNode_NativeFunction);
        RemoveInjectedNode_InPinPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveInjectedNode_NativeFunction, "InPinPath");
        RemoveInjectedNode_bAsInput_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveInjectedNode_NativeFunction, "bAsInput");
        RemoveInjectedNode_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveInjectedNode_NativeFunction, "bSetupUndoRedo");
        RemoveInjectedNode_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveInjectedNode_NativeFunction, "bPrintPythonCommand");
        RemoveInjectedNode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveInjectedNode_NativeFunction, "ReturnValue");
        RemoveFunctionFromLibrary_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveFunctionFromLibrary");
        RemoveFunctionFromLibrary_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveFunctionFromLibrary_NativeFunction);
        RemoveFunctionFromLibrary_InFunctionName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveFunctionFromLibrary_NativeFunction, "InFunctionName");
        RemoveFunctionFromLibrary_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveFunctionFromLibrary_NativeFunction, "bSetupUndoRedo");
        RemoveFunctionFromLibrary_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveFunctionFromLibrary_NativeFunction, "ReturnValue");
        RemoveExposedPin_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveExposedPin");
        RemoveExposedPin_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveExposedPin_NativeFunction);
        RemoveExposedPin_InPinName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveExposedPin_NativeFunction, "InPinName");
        RemoveExposedPin_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveExposedPin_NativeFunction, "bSetupUndoRedo");
        RemoveExposedPin_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveExposedPin_NativeFunction, "bPrintPythonCommand");
        RemoveExposedPin_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveExposedPin_NativeFunction, "ReturnValue");
        RemoveDecorator_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveDecorator");
        RemoveDecorator_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveDecorator_NativeFunction);
        RemoveDecorator_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveDecorator_NativeFunction, "InNodeName");
        RemoveDecorator_InDecoratorName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveDecorator_NativeFunction, "InDecoratorName");
        RemoveDecorator_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveDecorator_NativeFunction, "bSetupUndoRedo");
        RemoveDecorator_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveDecorator_NativeFunction, "bPrintPythonCommand");
        RemoveDecorator_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveDecorator_NativeFunction, "ReturnValue");
        RemoveArrayPin_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveArrayPin");
        RemoveArrayPin_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveArrayPin_NativeFunction);
        RemoveArrayPin_InArrayElementPinPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveArrayPin_NativeFunction, "InArrayElementPinPath");
        RemoveArrayPin_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveArrayPin_NativeFunction, "bSetupUndoRedo");
        RemoveArrayPin_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveArrayPin_NativeFunction, "bPrintPythonCommand");
        RemoveArrayPin_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveArrayPin_NativeFunction, "ReturnValue");
        RemoveAggregatePin_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveAggregatePin");
        RemoveAggregatePin_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveAggregatePin_NativeFunction);
        RemoveAggregatePin_InPinPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveAggregatePin_NativeFunction, "InPinPath");
        RemoveAggregatePin_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveAggregatePin_NativeFunction, "bSetupUndoRedo");
        RemoveAggregatePin_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveAggregatePin_NativeFunction, "bPrintPythonCommand");
        RemoveAggregatePin_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveAggregatePin_NativeFunction, "ReturnValue");
        RefreshVariableNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RefreshVariableNode");
        RefreshVariableNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RefreshVariableNode_NativeFunction);
        RefreshVariableNode_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RefreshVariableNode_NativeFunction, "InNodeName");
        RefreshVariableNode_InVariableName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RefreshVariableNode_NativeFunction, "InVariableName");
        RefreshVariableNode_InCPPType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RefreshVariableNode_NativeFunction, "InCPPType");
        RefreshVariableNode_InCPPTypeObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RefreshVariableNode_NativeFunction, "InCPPTypeObject");
        RefreshVariableNode_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RefreshVariableNode_NativeFunction, "bSetupUndoRedo");
        RefreshVariableNode_bSetupOrphanPins_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RefreshVariableNode_NativeFunction, "bSetupOrphanPins");
        Redo_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Redo");
        Redo_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Redo_NativeFunction);
        Redo_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Redo_NativeFunction, "ReturnValue");
        PushGraph_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "PushGraph");
        PushGraph_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(PushGraph_NativeFunction);
        PushGraph_InGraph_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PushGraph_NativeFunction, "InGraph");
        PushGraph_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PushGraph_NativeFunction, "bSetupUndoRedo");
        PushGraph_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PushGraph_NativeFunction, "ReturnValue");
        PromotePinToVariable_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "PromotePinToVariable");
        PromotePinToVariable_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(PromotePinToVariable_NativeFunction);
        PromotePinToVariable_InPinPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PromotePinToVariable_NativeFunction, "InPinPath");
        PromotePinToVariable_bCreateVariableNode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PromotePinToVariable_NativeFunction, "bCreateVariableNode");
        PromotePinToVariable_InNodePosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PromotePinToVariable_NativeFunction, "InNodePosition");
        PromotePinToVariable_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PromotePinToVariable_NativeFunction, "bSetupUndoRedo");
        PromotePinToVariable_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PromotePinToVariable_NativeFunction, "bPrintPythonCommand");
        PromotePinToVariable_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PromotePinToVariable_NativeFunction, "ReturnValue");
        PromoteFunctionReferenceNodeToCollapseNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "PromoteFunctionReferenceNodeToCollapseNode");
        PromoteFunctionReferenceNodeToCollapseNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(PromoteFunctionReferenceNodeToCollapseNode_NativeFunction);
        PromoteFunctionReferenceNodeToCollapseNode_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PromoteFunctionReferenceNodeToCollapseNode_NativeFunction, "InNodeName");
        PromoteFunctionReferenceNodeToCollapseNode_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PromoteFunctionReferenceNodeToCollapseNode_NativeFunction, "bSetupUndoRedo");
        PromoteFunctionReferenceNodeToCollapseNode_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PromoteFunctionReferenceNodeToCollapseNode_NativeFunction, "bPrintPythonCommand");
        PromoteFunctionReferenceNodeToCollapseNode_bRemoveFunctionDefinition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PromoteFunctionReferenceNodeToCollapseNode_NativeFunction, "bRemoveFunctionDefinition");
        PromoteFunctionReferenceNodeToCollapseNode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PromoteFunctionReferenceNodeToCollapseNode_NativeFunction, "ReturnValue");
        PromoteCollapseNodeToFunctionReferenceNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "PromoteCollapseNodeToFunctionReferenceNode");
        PromoteCollapseNodeToFunctionReferenceNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(PromoteCollapseNodeToFunctionReferenceNode_NativeFunction);
        PromoteCollapseNodeToFunctionReferenceNode_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PromoteCollapseNodeToFunctionReferenceNode_NativeFunction, "InNodeName");
        PromoteCollapseNodeToFunctionReferenceNode_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PromoteCollapseNodeToFunctionReferenceNode_NativeFunction, "bSetupUndoRedo");
        PromoteCollapseNodeToFunctionReferenceNode_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PromoteCollapseNodeToFunctionReferenceNode_NativeFunction, "bPrintPythonCommand");
        PromoteCollapseNodeToFunctionReferenceNode_InExistingFunctionDefinitionPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PromoteCollapseNodeToFunctionReferenceNode_NativeFunction, "InExistingFunctionDefinitionPath");
        PromoteCollapseNodeToFunctionReferenceNode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PromoteCollapseNodeToFunctionReferenceNode_NativeFunction, "ReturnValue");
        PopGraph_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "PopGraph");
        PopGraph_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(PopGraph_NativeFunction);
        PopGraph_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PopGraph_NativeFunction, "bSetupUndoRedo");
        PopGraph_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PopGraph_NativeFunction, "ReturnValue");
        PerformUserWorkflow_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "PerformUserWorkflow");
        PerformUserWorkflow_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(PerformUserWorkflow_NativeFunction);
        PerformUserWorkflow_InWorkflow_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PerformUserWorkflow_NativeFunction, "InWorkflow");
        PerformUserWorkflow_InOptions_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PerformUserWorkflow_NativeFunction, "InOptions");
        PerformUserWorkflow_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PerformUserWorkflow_NativeFunction, "bSetupUndoRedo");
        PerformUserWorkflow_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(PerformUserWorkflow_NativeFunction, "ReturnValue");
        OpenUndoBracket_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "OpenUndoBracket");
        OpenUndoBracket_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(OpenUndoBracket_NativeFunction);
        OpenUndoBracket_InTitle_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(OpenUndoBracket_NativeFunction, "InTitle");
        OpenUndoBracket_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(OpenUndoBracket_NativeFunction, "ReturnValue");
        MarkFunctionAsPublic_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "MarkFunctionAsPublic");
        MarkFunctionAsPublic_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(MarkFunctionAsPublic_NativeFunction);
        MarkFunctionAsPublic_InFunctionName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MarkFunctionAsPublic_NativeFunction, "InFunctionName");
        MarkFunctionAsPublic_bInIsPublic_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MarkFunctionAsPublic_NativeFunction, "bInIsPublic");
        MarkFunctionAsPublic_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MarkFunctionAsPublic_NativeFunction, "bSetupUndoRedo");
        MarkFunctionAsPublic_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MarkFunctionAsPublic_NativeFunction, "bPrintPythonCommand");
        MarkFunctionAsPublic_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MarkFunctionAsPublic_NativeFunction, "ReturnValue");
        MakeVariableNodeFromBinding_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "MakeVariableNodeFromBinding");
        MakeVariableNodeFromBinding_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(MakeVariableNodeFromBinding_NativeFunction);
        MakeVariableNodeFromBinding_InPinPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeVariableNodeFromBinding_NativeFunction, "InPinPath");
        MakeVariableNodeFromBinding_InNodePosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeVariableNodeFromBinding_NativeFunction, "InNodePosition");
        MakeVariableNodeFromBinding_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeVariableNodeFromBinding_NativeFunction, "bSetupUndoRedo");
        MakeVariableNodeFromBinding_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeVariableNodeFromBinding_NativeFunction, "bPrintPythonCommand");
        MakeVariableNodeFromBinding_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeVariableNodeFromBinding_NativeFunction, "ReturnValue");
        MakeOptionsForWorkflow_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "MakeOptionsForWorkflow");
        MakeOptionsForWorkflow_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(MakeOptionsForWorkflow_NativeFunction);
        MakeOptionsForWorkflow_InSubject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeOptionsForWorkflow_NativeFunction, "InSubject");
        MakeOptionsForWorkflow_InWorkflow_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeOptionsForWorkflow_NativeFunction, "InWorkflow");
        MakeOptionsForWorkflow_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeOptionsForWorkflow_NativeFunction, "ReturnValue");
        MakeBindingsFromVariableNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "MakeBindingsFromVariableNode");
        MakeBindingsFromVariableNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(MakeBindingsFromVariableNode_NativeFunction);
        MakeBindingsFromVariableNode_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeBindingsFromVariableNode_NativeFunction, "InNodeName");
        MakeBindingsFromVariableNode_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeBindingsFromVariableNode_NativeFunction, "bSetupUndoRedo");
        MakeBindingsFromVariableNode_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeBindingsFromVariableNode_NativeFunction, "bPrintPythonCommand");
        MakeBindingsFromVariableNode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MakeBindingsFromVariableNode_NativeFunction, "ReturnValue");
        LocalizeFunctionFromPath_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "LocalizeFunctionFromPath");
        LocalizeFunctionFromPath_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(LocalizeFunctionFromPath_NativeFunction);
        LocalizeFunctionFromPath_InHostPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LocalizeFunctionFromPath_NativeFunction, "InHostPath");
        LocalizeFunctionFromPath_InFunctionName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LocalizeFunctionFromPath_NativeFunction, "InFunctionName");
        LocalizeFunctionFromPath_bLocalizeDependentPrivateFunctions_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LocalizeFunctionFromPath_NativeFunction, "bLocalizeDependentPrivateFunctions");
        LocalizeFunctionFromPath_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LocalizeFunctionFromPath_NativeFunction, "bSetupUndoRedo");
        LocalizeFunctionFromPath_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LocalizeFunctionFromPath_NativeFunction, "bPrintPythonCommand");
        LocalizeFunctionFromPath_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LocalizeFunctionFromPath_NativeFunction, "ReturnValue");
        LocalizeFunction_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "LocalizeFunction");
        LocalizeFunction_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(LocalizeFunction_NativeFunction);
        LocalizeFunction_InFunctionDefinition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LocalizeFunction_NativeFunction, "InFunctionDefinition");
        LocalizeFunction_bLocalizeDependentPrivateFunctions_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LocalizeFunction_NativeFunction, "bLocalizeDependentPrivateFunctions");
        LocalizeFunction_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LocalizeFunction_NativeFunction, "bSetupUndoRedo");
        LocalizeFunction_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LocalizeFunction_NativeFunction, "bPrintPythonCommand");
        LocalizeFunction_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LocalizeFunction_NativeFunction, "ReturnValue");
        IsTransacting_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsTransacting");
        IsTransacting_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsTransacting_NativeFunction);
        IsTransacting_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsTransacting_NativeFunction, "ReturnValue");
        IsReportingEnabled_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsReportingEnabled");
        IsReportingEnabled_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsReportingEnabled_NativeFunction);
        IsReportingEnabled_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsReportingEnabled_NativeFunction, "ReturnValue");
        IsFunctionPublic_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsFunctionPublic");
        IsFunctionPublic_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsFunctionPublic_NativeFunction);
        IsFunctionPublic_InFunctionName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsFunctionPublic_NativeFunction, "InFunctionName");
        IsFunctionPublic_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsFunctionPublic_NativeFunction, "ReturnValue");
        InsertArrayPin_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "InsertArrayPin");
        InsertArrayPin_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(InsertArrayPin_NativeFunction);
        InsertArrayPin_InArrayPinPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InsertArrayPin_NativeFunction, "InArrayPinPath");
        InsertArrayPin_InIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InsertArrayPin_NativeFunction, "InIndex");
        InsertArrayPin_InDefaultValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InsertArrayPin_NativeFunction, "InDefaultValue");
        InsertArrayPin_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InsertArrayPin_NativeFunction, "bSetupUndoRedo");
        InsertArrayPin_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InsertArrayPin_NativeFunction, "bPrintPythonCommand");
        InsertArrayPin_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(InsertArrayPin_NativeFunction, "ReturnValue");
        ImportNodesFromText_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ImportNodesFromText");
        ImportNodesFromText_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ImportNodesFromText_NativeFunction);
        ImportNodesFromText_InText_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportNodesFromText_NativeFunction, "InText");
        ImportNodesFromText_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportNodesFromText_NativeFunction, "bSetupUndoRedo");
        ImportNodesFromText_bPrintPythonCommands_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportNodesFromText_NativeFunction, "bPrintPythonCommands");
        ImportNodesFromText_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ImportNodesFromText_NativeFunction, "ReturnValue");
        ImportNodesFromText_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(ImportNodesFromText_NativeFunction, "ReturnValue");
        GetUnitStructsForTemplate_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetUnitStructsForTemplate");
        GetUnitStructsForTemplate_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetUnitStructsForTemplate_NativeFunction);
        GetUnitStructsForTemplate_InNotation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetUnitStructsForTemplate_NativeFunction, "InNotation");
        GetUnitStructsForTemplate_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetUnitStructsForTemplate_NativeFunction, "ReturnValue");
        GetUnitStructsForTemplate_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetUnitStructsForTemplate_NativeFunction, "ReturnValue");
        GetTopLevelGraph_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetTopLevelGraph");
        GetTopLevelGraph_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetTopLevelGraph_NativeFunction);
        GetTopLevelGraph_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTopLevelGraph_NativeFunction, "ReturnValue");
        GetTemplateForUnitStruct_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetTemplateForUnitStruct");
        GetTemplateForUnitStruct_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetTemplateForUnitStruct_NativeFunction);
        GetTemplateForUnitStruct_InFunction_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTemplateForUnitStruct_NativeFunction, "InFunction");
        GetTemplateForUnitStruct_InMethodName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTemplateForUnitStruct_NativeFunction, "InMethodName");
        GetTemplateForUnitStruct_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTemplateForUnitStruct_NativeFunction, "ReturnValue");
        GetSchema_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSchema");
        GetSchema_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSchema_NativeFunction);
        GetSchema_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSchema_NativeFunction, "ReturnValue");
        GetRegisteredUnitStructs_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetRegisteredUnitStructs");
        GetRegisteredUnitStructs_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetRegisteredUnitStructs_NativeFunction);
        GetRegisteredUnitStructs_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetRegisteredUnitStructs_NativeFunction, "ReturnValue");
        GetRegisteredUnitStructs_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetRegisteredUnitStructs_NativeFunction, "ReturnValue");
        GetPinDefaultValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetPinDefaultValue");
        GetPinDefaultValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetPinDefaultValue_NativeFunction);
        GetPinDefaultValue_InPinPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetPinDefaultValue_NativeFunction, "InPinPath");
        GetPinDefaultValue_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetPinDefaultValue_NativeFunction, "ReturnValue");
        GetGraph_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetGraph");
        GetGraph_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetGraph_NativeFunction);
        GetGraph_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetGraph_NativeFunction, "ReturnValue");
        GetControllerForGraph_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetControllerForGraph");
        GetControllerForGraph_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetControllerForGraph_NativeFunction);
        GetControllerForGraph_InGraph_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetControllerForGraph_NativeFunction, "InGraph");
        GetControllerForGraph_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetControllerForGraph_NativeFunction, "ReturnValue");
        ExportSelectedNodesToText_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ExportSelectedNodesToText");
        ExportSelectedNodesToText_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ExportSelectedNodesToText_NativeFunction);
        ExportSelectedNodesToText_bIncludeExteriorLinks_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ExportSelectedNodesToText_NativeFunction, "bIncludeExteriorLinks");
        ExportSelectedNodesToText_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ExportSelectedNodesToText_NativeFunction, "ReturnValue");
        ExportNodesToText_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ExportNodesToText");
        ExportNodesToText_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ExportNodesToText_NativeFunction);
        ExportNodesToText_InNodeNames_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ExportNodesToText_NativeFunction, "InNodeNames");
        ExportNodesToText_InNodeNames_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(ExportNodesToText_NativeFunction, "InNodeNames");
        ExportNodesToText_bIncludeExteriorLinks_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ExportNodesToText_NativeFunction, "bIncludeExteriorLinks");
        ExportNodesToText_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ExportNodesToText_NativeFunction, "ReturnValue");
        ExpandLibraryNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ExpandLibraryNode");
        ExpandLibraryNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ExpandLibraryNode_NativeFunction);
        ExpandLibraryNode_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ExpandLibraryNode_NativeFunction, "InNodeName");
        ExpandLibraryNode_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ExpandLibraryNode_NativeFunction, "bSetupUndoRedo");
        ExpandLibraryNode_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ExpandLibraryNode_NativeFunction, "bPrintPythonCommand");
        ExpandLibraryNode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ExpandLibraryNode_NativeFunction, "ReturnValue");
        ExpandLibraryNode_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(ExpandLibraryNode_NativeFunction, "ReturnValue");
        EnableReporting_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "EnableReporting");
        EnableReporting_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(EnableReporting_NativeFunction);
        EnableReporting_bEnabled_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EnableReporting_NativeFunction, "bEnabled");
        EjectNodeFromPin_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "EjectNodeFromPin");
        EjectNodeFromPin_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(EjectNodeFromPin_NativeFunction);
        EjectNodeFromPin_InPinPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EjectNodeFromPin_NativeFunction, "InPinPath");
        EjectNodeFromPin_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EjectNodeFromPin_NativeFunction, "bSetupUndoRedo");
        EjectNodeFromPin_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EjectNodeFromPin_NativeFunction, "bPrintPythonCommand");
        EjectNodeFromPin_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EjectNodeFromPin_NativeFunction, "ReturnValue");
        DuplicateArrayPin_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "DuplicateArrayPin");
        DuplicateArrayPin_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(DuplicateArrayPin_NativeFunction);
        DuplicateArrayPin_InArrayElementPinPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(DuplicateArrayPin_NativeFunction, "InArrayElementPinPath");
        DuplicateArrayPin_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(DuplicateArrayPin_NativeFunction, "bSetupUndoRedo");
        DuplicateArrayPin_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(DuplicateArrayPin_NativeFunction, "bPrintPythonCommand");
        DuplicateArrayPin_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(DuplicateArrayPin_NativeFunction, "ReturnValue");
        CollapseNodes_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CollapseNodes");
        CollapseNodes_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(CollapseNodes_NativeFunction);
        CollapseNodes_InNodeNames_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CollapseNodes_NativeFunction, "InNodeNames");
        CollapseNodes_InNodeNames_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(CollapseNodes_NativeFunction, "InNodeNames");
        CollapseNodes_InCollapseNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CollapseNodes_NativeFunction, "InCollapseNodeName");
        CollapseNodes_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CollapseNodes_NativeFunction, "bSetupUndoRedo");
        CollapseNodes_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CollapseNodes_NativeFunction, "bPrintPythonCommand");
        CollapseNodes_bIsAggregate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CollapseNodes_NativeFunction, "bIsAggregate");
        CollapseNodes_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CollapseNodes_NativeFunction, "ReturnValue");
        CloseUndoBracket_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CloseUndoBracket");
        CloseUndoBracket_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(CloseUndoBracket_NativeFunction);
        CloseUndoBracket_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CloseUndoBracket_NativeFunction, "ReturnValue");
        ClearNodeSelection_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ClearNodeSelection");
        ClearNodeSelection_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ClearNodeSelection_NativeFunction);
        ClearNodeSelection_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ClearNodeSelection_NativeFunction, "bSetupUndoRedo");
        ClearNodeSelection_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ClearNodeSelection_NativeFunction, "bPrintPythonCommand");
        ClearNodeSelection_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ClearNodeSelection_NativeFunction, "ReturnValue");
        ClearArrayPin_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ClearArrayPin");
        ClearArrayPin_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ClearArrayPin_NativeFunction);
        ClearArrayPin_InArrayPinPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ClearArrayPin_NativeFunction, "InArrayPinPath");
        ClearArrayPin_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ClearArrayPin_NativeFunction, "bSetupUndoRedo");
        ClearArrayPin_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ClearArrayPin_NativeFunction, "bPrintPythonCommand");
        ClearArrayPin_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ClearArrayPin_NativeFunction, "ReturnValue");
        ChangeExposedPinType_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ChangeExposedPinType");
        ChangeExposedPinType_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ChangeExposedPinType_NativeFunction);
        ChangeExposedPinType_InPinName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ChangeExposedPinType_NativeFunction, "InPinName");
        ChangeExposedPinType_InCPPType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ChangeExposedPinType_NativeFunction, "InCPPType");
        ChangeExposedPinType_InCPPTypeObjectPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ChangeExposedPinType_NativeFunction, "InCPPTypeObjectPath");
        ChangeExposedPinType_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ChangeExposedPinType_NativeFunction, "bSetupUndoRedo");
        ChangeExposedPinType_bSetupOrphanPins_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ChangeExposedPinType_NativeFunction, "bSetupOrphanPins");
        ChangeExposedPinType_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ChangeExposedPinType_NativeFunction, "bPrintPythonCommand");
        ChangeExposedPinType_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ChangeExposedPinType_NativeFunction, "ReturnValue");
        CanImportNodesFromText_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CanImportNodesFromText");
        CanImportNodesFromText_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(CanImportNodesFromText_NativeFunction);
        CanImportNodesFromText_InText_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CanImportNodesFromText_NativeFunction, "InText");
        CanImportNodesFromText_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CanImportNodesFromText_NativeFunction, "ReturnValue");
        CancelUndoBracket_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CancelUndoBracket");
        CancelUndoBracket_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(CancelUndoBracket_NativeFunction);
        CancelUndoBracket_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CancelUndoBracket_NativeFunction, "ReturnValue");
        BreakLink_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "BreakLink");
        BreakLink_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(BreakLink_NativeFunction);
        BreakLink_InOutputPinPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BreakLink_NativeFunction, "InOutputPinPath");
        BreakLink_InInputPinPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BreakLink_NativeFunction, "InInputPinPath");
        BreakLink_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BreakLink_NativeFunction, "bSetupUndoRedo");
        BreakLink_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BreakLink_NativeFunction, "bPrintPythonCommand");
        BreakLink_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BreakLink_NativeFunction, "ReturnValue");
        BreakAllLinks_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "BreakAllLinks");
        BreakAllLinks_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(BreakAllLinks_NativeFunction);
        BreakAllLinks_InPinPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BreakAllLinks_NativeFunction, "InPinPath");
        BreakAllLinks_bAsInput_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BreakAllLinks_NativeFunction, "bAsInput");
        BreakAllLinks_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BreakAllLinks_NativeFunction, "bSetupUndoRedo");
        BreakAllLinks_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BreakAllLinks_NativeFunction, "bPrintPythonCommand");
        BreakAllLinks_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BreakAllLinks_NativeFunction, "ReturnValue");
        BindPinToVariable_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "BindPinToVariable");
        BindPinToVariable_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(BindPinToVariable_NativeFunction);
        BindPinToVariable_InPinPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BindPinToVariable_NativeFunction, "InPinPath");
        BindPinToVariable_InNewBoundVariablePath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BindPinToVariable_NativeFunction, "InNewBoundVariablePath");
        BindPinToVariable_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BindPinToVariable_NativeFunction, "bSetupUndoRedo");
        BindPinToVariable_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BindPinToVariable_NativeFunction, "bPrintPythonCommand");
        BindPinToVariable_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BindPinToVariable_NativeFunction, "ReturnValue");
        AddVariableNodeFromObjectPath_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddVariableNodeFromObjectPath");
        AddVariableNodeFromObjectPath_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddVariableNodeFromObjectPath_NativeFunction);
        AddVariableNodeFromObjectPath_InVariableName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddVariableNodeFromObjectPath_NativeFunction, "InVariableName");
        AddVariableNodeFromObjectPath_InCPPType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddVariableNodeFromObjectPath_NativeFunction, "InCPPType");
        AddVariableNodeFromObjectPath_InCPPTypeObjectPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddVariableNodeFromObjectPath_NativeFunction, "InCPPTypeObjectPath");
        AddVariableNodeFromObjectPath_bIsGetter_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddVariableNodeFromObjectPath_NativeFunction, "bIsGetter");
        AddVariableNodeFromObjectPath_InDefaultValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddVariableNodeFromObjectPath_NativeFunction, "InDefaultValue");
        AddVariableNodeFromObjectPath_InPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddVariableNodeFromObjectPath_NativeFunction, "InPosition");
        AddVariableNodeFromObjectPath_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddVariableNodeFromObjectPath_NativeFunction, "InNodeName");
        AddVariableNodeFromObjectPath_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddVariableNodeFromObjectPath_NativeFunction, "bSetupUndoRedo");
        AddVariableNodeFromObjectPath_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddVariableNodeFromObjectPath_NativeFunction, "bPrintPythonCommand");
        AddVariableNodeFromObjectPath_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddVariableNodeFromObjectPath_NativeFunction, "ReturnValue");
        AddVariableNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddVariableNode");
        AddVariableNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddVariableNode_NativeFunction);
        AddVariableNode_InVariableName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddVariableNode_NativeFunction, "InVariableName");
        AddVariableNode_InCPPType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddVariableNode_NativeFunction, "InCPPType");
        AddVariableNode_InCPPTypeObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddVariableNode_NativeFunction, "InCPPTypeObject");
        AddVariableNode_bIsGetter_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddVariableNode_NativeFunction, "bIsGetter");
        AddVariableNode_InDefaultValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddVariableNode_NativeFunction, "InDefaultValue");
        AddVariableNode_InPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddVariableNode_NativeFunction, "InPosition");
        AddVariableNode_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddVariableNode_NativeFunction, "InNodeName");
        AddVariableNode_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddVariableNode_NativeFunction, "bSetupUndoRedo");
        AddVariableNode_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddVariableNode_NativeFunction, "bPrintPythonCommand");
        AddVariableNode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddVariableNode_NativeFunction, "ReturnValue");
        AddUnitNodeWithDefaults_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddUnitNodeWithDefaults");
        AddUnitNodeWithDefaults_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddUnitNodeWithDefaults_NativeFunction);
        AddUnitNodeWithDefaults_InScriptStruct_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddUnitNodeWithDefaults_NativeFunction, "InScriptStruct");
        AddUnitNodeWithDefaults_InDefaults_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddUnitNodeWithDefaults_NativeFunction, "InDefaults");
        AddUnitNodeWithDefaults_InMethodName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddUnitNodeWithDefaults_NativeFunction, "InMethodName");
        AddUnitNodeWithDefaults_InPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddUnitNodeWithDefaults_NativeFunction, "InPosition");
        AddUnitNodeWithDefaults_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddUnitNodeWithDefaults_NativeFunction, "InNodeName");
        AddUnitNodeWithDefaults_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddUnitNodeWithDefaults_NativeFunction, "bSetupUndoRedo");
        AddUnitNodeWithDefaults_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddUnitNodeWithDefaults_NativeFunction, "bPrintPythonCommand");
        AddUnitNodeWithDefaults_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddUnitNodeWithDefaults_NativeFunction, "ReturnValue");
        AddUnitNodeFromStructPath_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddUnitNodeFromStructPath");
        AddUnitNodeFromStructPath_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddUnitNodeFromStructPath_NativeFunction);
        AddUnitNodeFromStructPath_InScriptStructPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddUnitNodeFromStructPath_NativeFunction, "InScriptStructPath");
        AddUnitNodeFromStructPath_InMethodName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddUnitNodeFromStructPath_NativeFunction, "InMethodName");
        AddUnitNodeFromStructPath_InPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddUnitNodeFromStructPath_NativeFunction, "InPosition");
        AddUnitNodeFromStructPath_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddUnitNodeFromStructPath_NativeFunction, "InNodeName");
        AddUnitNodeFromStructPath_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddUnitNodeFromStructPath_NativeFunction, "bSetupUndoRedo");
        AddUnitNodeFromStructPath_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddUnitNodeFromStructPath_NativeFunction, "bPrintPythonCommand");
        AddUnitNodeFromStructPath_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddUnitNodeFromStructPath_NativeFunction, "ReturnValue");
        AddUnitNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddUnitNode");
        AddUnitNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddUnitNode_NativeFunction);
        AddUnitNode_InScriptStruct_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddUnitNode_NativeFunction, "InScriptStruct");
        AddUnitNode_InMethodName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddUnitNode_NativeFunction, "InMethodName");
        AddUnitNode_InPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddUnitNode_NativeFunction, "InPosition");
        AddUnitNode_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddUnitNode_NativeFunction, "InNodeName");
        AddUnitNode_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddUnitNode_NativeFunction, "bSetupUndoRedo");
        AddUnitNode_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddUnitNode_NativeFunction, "bPrintPythonCommand");
        AddUnitNode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddUnitNode_NativeFunction, "ReturnValue");
        AddTemplateNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddTemplateNode");
        AddTemplateNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddTemplateNode_NativeFunction);
        AddTemplateNode_InNotation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddTemplateNode_NativeFunction, "InNotation");
        AddTemplateNode_InPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddTemplateNode_NativeFunction, "InPosition");
        AddTemplateNode_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddTemplateNode_NativeFunction, "InNodeName");
        AddTemplateNode_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddTemplateNode_NativeFunction, "bSetupUndoRedo");
        AddTemplateNode_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddTemplateNode_NativeFunction, "bPrintPythonCommand");
        AddTemplateNode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddTemplateNode_NativeFunction, "ReturnValue");
        AddSelectNodeFromStruct_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddSelectNodeFromStruct");
        AddSelectNodeFromStruct_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddSelectNodeFromStruct_NativeFunction);
        AddSelectNodeFromStruct_InScriptStruct_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddSelectNodeFromStruct_NativeFunction, "InScriptStruct");
        AddSelectNodeFromStruct_InPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddSelectNodeFromStruct_NativeFunction, "InPosition");
        AddSelectNodeFromStruct_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddSelectNodeFromStruct_NativeFunction, "InNodeName");
        AddSelectNodeFromStruct_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddSelectNodeFromStruct_NativeFunction, "bSetupUndoRedo");
        AddSelectNodeFromStruct_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddSelectNodeFromStruct_NativeFunction, "ReturnValue");
        AddSelectNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddSelectNode");
        AddSelectNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddSelectNode_NativeFunction);
        AddSelectNode_InCPPType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddSelectNode_NativeFunction, "InCPPType");
        AddSelectNode_InCPPTypeObjectPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddSelectNode_NativeFunction, "InCPPTypeObjectPath");
        AddSelectNode_InPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddSelectNode_NativeFunction, "InPosition");
        AddSelectNode_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddSelectNode_NativeFunction, "InNodeName");
        AddSelectNode_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddSelectNode_NativeFunction, "bSetupUndoRedo");
        AddSelectNode_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddSelectNode_NativeFunction, "bPrintPythonCommand");
        AddSelectNode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddSelectNode_NativeFunction, "ReturnValue");
        AddRerouteNodeOnPin_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddRerouteNodeOnPin");
        AddRerouteNodeOnPin_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddRerouteNodeOnPin_NativeFunction);
        AddRerouteNodeOnPin_InPinPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddRerouteNodeOnPin_NativeFunction, "InPinPath");
        AddRerouteNodeOnPin_bAsInput_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddRerouteNodeOnPin_NativeFunction, "bAsInput");
        AddRerouteNodeOnPin_InPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddRerouteNodeOnPin_NativeFunction, "InPosition");
        AddRerouteNodeOnPin_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddRerouteNodeOnPin_NativeFunction, "InNodeName");
        AddRerouteNodeOnPin_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddRerouteNodeOnPin_NativeFunction, "bSetupUndoRedo");
        AddRerouteNodeOnPin_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddRerouteNodeOnPin_NativeFunction, "bPrintPythonCommand");
        AddRerouteNodeOnPin_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddRerouteNodeOnPin_NativeFunction, "ReturnValue");
        AddRerouteNodeOnLinkPath_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddRerouteNodeOnLinkPath");
        AddRerouteNodeOnLinkPath_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddRerouteNodeOnLinkPath_NativeFunction);
        AddRerouteNodeOnLinkPath_InLinkPinPathRepresentation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddRerouteNodeOnLinkPath_NativeFunction, "InLinkPinPathRepresentation");
        AddRerouteNodeOnLinkPath_InPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddRerouteNodeOnLinkPath_NativeFunction, "InPosition");
        AddRerouteNodeOnLinkPath_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddRerouteNodeOnLinkPath_NativeFunction, "InNodeName");
        AddRerouteNodeOnLinkPath_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddRerouteNodeOnLinkPath_NativeFunction, "bSetupUndoRedo");
        AddRerouteNodeOnLinkPath_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddRerouteNodeOnLinkPath_NativeFunction, "bPrintPythonCommand");
        AddRerouteNodeOnLinkPath_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddRerouteNodeOnLinkPath_NativeFunction, "ReturnValue");
        AddRerouteNodeOnLink_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddRerouteNodeOnLink");
        AddRerouteNodeOnLink_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddRerouteNodeOnLink_NativeFunction);
        AddRerouteNodeOnLink_InLink_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddRerouteNodeOnLink_NativeFunction, "InLink");
        AddRerouteNodeOnLink_InPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddRerouteNodeOnLink_NativeFunction, "InPosition");
        AddRerouteNodeOnLink_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddRerouteNodeOnLink_NativeFunction, "InNodeName");
        AddRerouteNodeOnLink_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddRerouteNodeOnLink_NativeFunction, "bSetupUndoRedo");
        AddRerouteNodeOnLink_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddRerouteNodeOnLink_NativeFunction, "bPrintPythonCommand");
        AddRerouteNodeOnLink_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddRerouteNodeOnLink_NativeFunction, "ReturnValue");
        AddParameterNodeFromObjectPath_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddParameterNodeFromObjectPath");
        AddParameterNodeFromObjectPath_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddParameterNodeFromObjectPath_NativeFunction);
        AddParameterNodeFromObjectPath_InParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddParameterNodeFromObjectPath_NativeFunction, "InParameterName");
        AddParameterNodeFromObjectPath_InCPPType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddParameterNodeFromObjectPath_NativeFunction, "InCPPType");
        AddParameterNodeFromObjectPath_InCPPTypeObjectPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddParameterNodeFromObjectPath_NativeFunction, "InCPPTypeObjectPath");
        AddParameterNodeFromObjectPath_bIsInput_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddParameterNodeFromObjectPath_NativeFunction, "bIsInput");
        AddParameterNodeFromObjectPath_InDefaultValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddParameterNodeFromObjectPath_NativeFunction, "InDefaultValue");
        AddParameterNodeFromObjectPath_InPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddParameterNodeFromObjectPath_NativeFunction, "InPosition");
        AddParameterNodeFromObjectPath_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddParameterNodeFromObjectPath_NativeFunction, "InNodeName");
        AddParameterNodeFromObjectPath_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddParameterNodeFromObjectPath_NativeFunction, "bSetupUndoRedo");
        AddParameterNodeFromObjectPath_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddParameterNodeFromObjectPath_NativeFunction, "bPrintPythonCommand");
        AddParameterNodeFromObjectPath_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddParameterNodeFromObjectPath_NativeFunction, "ReturnValue");
        AddParameterNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddParameterNode");
        AddParameterNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddParameterNode_NativeFunction);
        AddParameterNode_InParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddParameterNode_NativeFunction, "InParameterName");
        AddParameterNode_InCPPType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddParameterNode_NativeFunction, "InCPPType");
        AddParameterNode_InCPPTypeObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddParameterNode_NativeFunction, "InCPPTypeObject");
        AddParameterNode_bIsInput_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddParameterNode_NativeFunction, "bIsInput");
        AddParameterNode_InDefaultValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddParameterNode_NativeFunction, "InDefaultValue");
        AddParameterNode_InPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddParameterNode_NativeFunction, "InPosition");
        AddParameterNode_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddParameterNode_NativeFunction, "InNodeName");
        AddParameterNode_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddParameterNode_NativeFunction, "bSetupUndoRedo");
        AddParameterNode_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddParameterNode_NativeFunction, "bPrintPythonCommand");
        AddParameterNode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddParameterNode_NativeFunction, "ReturnValue");
        AddLocalVariableFromObjectPath_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddLocalVariableFromObjectPath");
        AddLocalVariableFromObjectPath_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddLocalVariableFromObjectPath_NativeFunction);
        AddLocalVariableFromObjectPath_InVariableName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddLocalVariableFromObjectPath_NativeFunction, "InVariableName");
        AddLocalVariableFromObjectPath_InCPPType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddLocalVariableFromObjectPath_NativeFunction, "InCPPType");
        AddLocalVariableFromObjectPath_InCPPTypeObjectPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddLocalVariableFromObjectPath_NativeFunction, "InCPPTypeObjectPath");
        AddLocalVariableFromObjectPath_InDefaultValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddLocalVariableFromObjectPath_NativeFunction, "InDefaultValue");
        AddLocalVariableFromObjectPath_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddLocalVariableFromObjectPath_NativeFunction, "bSetupUndoRedo");
        AddLocalVariableFromObjectPath_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddLocalVariableFromObjectPath_NativeFunction, "ReturnValue");
        AddLocalVariable_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddLocalVariable");
        AddLocalVariable_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddLocalVariable_NativeFunction);
        AddLocalVariable_InVariableName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddLocalVariable_NativeFunction, "InVariableName");
        AddLocalVariable_InCPPType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddLocalVariable_NativeFunction, "InCPPType");
        AddLocalVariable_InCPPTypeObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddLocalVariable_NativeFunction, "InCPPTypeObject");
        AddLocalVariable_InDefaultValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddLocalVariable_NativeFunction, "InDefaultValue");
        AddLocalVariable_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddLocalVariable_NativeFunction, "bSetupUndoRedo");
        AddLocalVariable_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddLocalVariable_NativeFunction, "bPrintPythonCommand");
        AddLocalVariable_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddLocalVariable_NativeFunction, "ReturnValue");
        AddLink_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddLink");
        AddLink_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddLink_NativeFunction);
        AddLink_InOutputPinPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddLink_NativeFunction, "InOutputPinPath");
        AddLink_InInputPinPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddLink_NativeFunction, "InInputPinPath");
        AddLink_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddLink_NativeFunction, "bSetupUndoRedo");
        AddLink_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddLink_NativeFunction, "bPrintPythonCommand");
        AddLink_InUserDirection_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddLink_NativeFunction, "InUserDirection");
        AddLink_bCreateCastNode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddLink_NativeFunction, "bCreateCastNode");
        AddLink_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddLink_NativeFunction, "ReturnValue");
        AddInvokeEntryNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddInvokeEntryNode");
        AddInvokeEntryNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddInvokeEntryNode_NativeFunction);
        AddInvokeEntryNode_InEntryName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddInvokeEntryNode_NativeFunction, "InEntryName");
        AddInvokeEntryNode_InPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddInvokeEntryNode_NativeFunction, "InPosition");
        AddInvokeEntryNode_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddInvokeEntryNode_NativeFunction, "InNodeName");
        AddInvokeEntryNode_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddInvokeEntryNode_NativeFunction, "bSetupUndoRedo");
        AddInvokeEntryNode_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddInvokeEntryNode_NativeFunction, "bPrintPythonCommand");
        AddInvokeEntryNode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddInvokeEntryNode_NativeFunction, "ReturnValue");
        AddInjectedNodeFromStructPath_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddInjectedNodeFromStructPath");
        AddInjectedNodeFromStructPath_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddInjectedNodeFromStructPath_NativeFunction);
        AddInjectedNodeFromStructPath_InPinPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddInjectedNodeFromStructPath_NativeFunction, "InPinPath");
        AddInjectedNodeFromStructPath_bAsInput_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddInjectedNodeFromStructPath_NativeFunction, "bAsInput");
        AddInjectedNodeFromStructPath_InScriptStructPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddInjectedNodeFromStructPath_NativeFunction, "InScriptStructPath");
        AddInjectedNodeFromStructPath_InMethodName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddInjectedNodeFromStructPath_NativeFunction, "InMethodName");
        AddInjectedNodeFromStructPath_InInputPinName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddInjectedNodeFromStructPath_NativeFunction, "InInputPinName");
        AddInjectedNodeFromStructPath_InOutputPinName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddInjectedNodeFromStructPath_NativeFunction, "InOutputPinName");
        AddInjectedNodeFromStructPath_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddInjectedNodeFromStructPath_NativeFunction, "InNodeName");
        AddInjectedNodeFromStructPath_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddInjectedNodeFromStructPath_NativeFunction, "bSetupUndoRedo");
        AddInjectedNodeFromStructPath_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddInjectedNodeFromStructPath_NativeFunction, "ReturnValue");
        AddInjectedNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddInjectedNode");
        AddInjectedNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddInjectedNode_NativeFunction);
        AddInjectedNode_InPinPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddInjectedNode_NativeFunction, "InPinPath");
        AddInjectedNode_bAsInput_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddInjectedNode_NativeFunction, "bAsInput");
        AddInjectedNode_InScriptStruct_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddInjectedNode_NativeFunction, "InScriptStruct");
        AddInjectedNode_InMethodName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddInjectedNode_NativeFunction, "InMethodName");
        AddInjectedNode_InInputPinName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddInjectedNode_NativeFunction, "InInputPinName");
        AddInjectedNode_InOutputPinName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddInjectedNode_NativeFunction, "InOutputPinName");
        AddInjectedNode_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddInjectedNode_NativeFunction, "InNodeName");
        AddInjectedNode_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddInjectedNode_NativeFunction, "bSetupUndoRedo");
        AddInjectedNode_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddInjectedNode_NativeFunction, "bPrintPythonCommand");
        AddInjectedNode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddInjectedNode_NativeFunction, "ReturnValue");
        AddIfNodeFromStruct_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddIfNodeFromStruct");
        AddIfNodeFromStruct_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddIfNodeFromStruct_NativeFunction);
        AddIfNodeFromStruct_InScriptStruct_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddIfNodeFromStruct_NativeFunction, "InScriptStruct");
        AddIfNodeFromStruct_InPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddIfNodeFromStruct_NativeFunction, "InPosition");
        AddIfNodeFromStruct_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddIfNodeFromStruct_NativeFunction, "InNodeName");
        AddIfNodeFromStruct_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddIfNodeFromStruct_NativeFunction, "bSetupUndoRedo");
        AddIfNodeFromStruct_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddIfNodeFromStruct_NativeFunction, "ReturnValue");
        AddIfNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddIfNode");
        AddIfNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddIfNode_NativeFunction);
        AddIfNode_InCPPType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddIfNode_NativeFunction, "InCPPType");
        AddIfNode_InCPPTypeObjectPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddIfNode_NativeFunction, "InCPPTypeObjectPath");
        AddIfNode_InPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddIfNode_NativeFunction, "InPosition");
        AddIfNode_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddIfNode_NativeFunction, "InNodeName");
        AddIfNode_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddIfNode_NativeFunction, "bSetupUndoRedo");
        AddIfNode_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddIfNode_NativeFunction, "bPrintPythonCommand");
        AddIfNode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddIfNode_NativeFunction, "ReturnValue");
        AddFunctionToLibrary_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddFunctionToLibrary");
        AddFunctionToLibrary_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddFunctionToLibrary_NativeFunction);
        AddFunctionToLibrary_InFunctionName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddFunctionToLibrary_NativeFunction, "InFunctionName");
        AddFunctionToLibrary_bMutable_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddFunctionToLibrary_NativeFunction, "bMutable");
        AddFunctionToLibrary_InNodePosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddFunctionToLibrary_NativeFunction, "InNodePosition");
        AddFunctionToLibrary_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddFunctionToLibrary_NativeFunction, "bSetupUndoRedo");
        AddFunctionToLibrary_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddFunctionToLibrary_NativeFunction, "bPrintPythonCommand");
        AddFunctionToLibrary_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddFunctionToLibrary_NativeFunction, "ReturnValue");
        AddFunctionReferenceNodeFromDescription_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddFunctionReferenceNodeFromDescription");
        AddFunctionReferenceNodeFromDescription_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddFunctionReferenceNodeFromDescription_NativeFunction);
        AddFunctionReferenceNodeFromDescription_InFunctionDefinition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddFunctionReferenceNodeFromDescription_NativeFunction, "InFunctionDefinition");
        AddFunctionReferenceNodeFromDescription_InNodePosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddFunctionReferenceNodeFromDescription_NativeFunction, "InNodePosition");
        AddFunctionReferenceNodeFromDescription_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddFunctionReferenceNodeFromDescription_NativeFunction, "InNodeName");
        AddFunctionReferenceNodeFromDescription_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddFunctionReferenceNodeFromDescription_NativeFunction, "bSetupUndoRedo");
        AddFunctionReferenceNodeFromDescription_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddFunctionReferenceNodeFromDescription_NativeFunction, "bPrintPythonCommand");
        AddFunctionReferenceNodeFromDescription_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddFunctionReferenceNodeFromDescription_NativeFunction, "ReturnValue");
        AddFunctionReferenceNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddFunctionReferenceNode");
        AddFunctionReferenceNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddFunctionReferenceNode_NativeFunction);
        AddFunctionReferenceNode_InFunctionDefinition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddFunctionReferenceNode_NativeFunction, "InFunctionDefinition");
        AddFunctionReferenceNode_InNodePosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddFunctionReferenceNode_NativeFunction, "InNodePosition");
        AddFunctionReferenceNode_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddFunctionReferenceNode_NativeFunction, "InNodeName");
        AddFunctionReferenceNode_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddFunctionReferenceNode_NativeFunction, "bSetupUndoRedo");
        AddFunctionReferenceNode_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddFunctionReferenceNode_NativeFunction, "bPrintPythonCommand");
        AddFunctionReferenceNode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddFunctionReferenceNode_NativeFunction, "ReturnValue");
        AddFreeRerouteNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddFreeRerouteNode");
        AddFreeRerouteNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddFreeRerouteNode_NativeFunction);
        AddFreeRerouteNode_InCPPType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddFreeRerouteNode_NativeFunction, "InCPPType");
        AddFreeRerouteNode_InCPPTypeObjectPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddFreeRerouteNode_NativeFunction, "InCPPTypeObjectPath");
        AddFreeRerouteNode_bIsConstant_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddFreeRerouteNode_NativeFunction, "bIsConstant");
        AddFreeRerouteNode_InCustomWidgetName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddFreeRerouteNode_NativeFunction, "InCustomWidgetName");
        AddFreeRerouteNode_InDefaultValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddFreeRerouteNode_NativeFunction, "InDefaultValue");
        AddFreeRerouteNode_InPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddFreeRerouteNode_NativeFunction, "InPosition");
        AddFreeRerouteNode_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddFreeRerouteNode_NativeFunction, "InNodeName");
        AddFreeRerouteNode_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddFreeRerouteNode_NativeFunction, "bSetupUndoRedo");
        AddFreeRerouteNode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddFreeRerouteNode_NativeFunction, "ReturnValue");
        AddExternalFunctionReferenceNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddExternalFunctionReferenceNode");
        AddExternalFunctionReferenceNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddExternalFunctionReferenceNode_NativeFunction);
        AddExternalFunctionReferenceNode_InHostPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddExternalFunctionReferenceNode_NativeFunction, "InHostPath");
        AddExternalFunctionReferenceNode_InFunctionName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddExternalFunctionReferenceNode_NativeFunction, "InFunctionName");
        AddExternalFunctionReferenceNode_InNodePosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddExternalFunctionReferenceNode_NativeFunction, "InNodePosition");
        AddExternalFunctionReferenceNode_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddExternalFunctionReferenceNode_NativeFunction, "InNodeName");
        AddExternalFunctionReferenceNode_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddExternalFunctionReferenceNode_NativeFunction, "bSetupUndoRedo");
        AddExternalFunctionReferenceNode_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddExternalFunctionReferenceNode_NativeFunction, "bPrintPythonCommand");
        AddExternalFunctionReferenceNode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddExternalFunctionReferenceNode_NativeFunction, "ReturnValue");
        AddExposedPin_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddExposedPin");
        AddExposedPin_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddExposedPin_NativeFunction);
        AddExposedPin_InPinName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddExposedPin_NativeFunction, "InPinName");
        AddExposedPin_InDirection_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddExposedPin_NativeFunction, "InDirection");
        AddExposedPin_InCPPType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddExposedPin_NativeFunction, "InCPPType");
        AddExposedPin_InCPPTypeObjectPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddExposedPin_NativeFunction, "InCPPTypeObjectPath");
        AddExposedPin_InDefaultValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddExposedPin_NativeFunction, "InDefaultValue");
        AddExposedPin_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddExposedPin_NativeFunction, "bSetupUndoRedo");
        AddExposedPin_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddExposedPin_NativeFunction, "bPrintPythonCommand");
        AddExposedPin_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddExposedPin_NativeFunction, "ReturnValue");
        AddEnumNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddEnumNode");
        AddEnumNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddEnumNode_NativeFunction);
        AddEnumNode_InCPPTypeObjectPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddEnumNode_NativeFunction, "InCPPTypeObjectPath");
        AddEnumNode_InPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddEnumNode_NativeFunction, "InPosition");
        AddEnumNode_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddEnumNode_NativeFunction, "InNodeName");
        AddEnumNode_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddEnumNode_NativeFunction, "bSetupUndoRedo");
        AddEnumNode_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddEnumNode_NativeFunction, "bPrintPythonCommand");
        AddEnumNode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddEnumNode_NativeFunction, "ReturnValue");
        AddDecorator_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddDecorator");
        AddDecorator_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddDecorator_NativeFunction);
        AddDecorator_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddDecorator_NativeFunction, "InNodeName");
        AddDecorator_InDecoratorTypeObjectPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddDecorator_NativeFunction, "InDecoratorTypeObjectPath");
        AddDecorator_InDecoratorName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddDecorator_NativeFunction, "InDecoratorName");
        AddDecorator_InDefaultValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddDecorator_NativeFunction, "InDefaultValue");
        AddDecorator_InPinIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddDecorator_NativeFunction, "InPinIndex");
        AddDecorator_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddDecorator_NativeFunction, "bSetupUndoRedo");
        AddDecorator_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddDecorator_NativeFunction, "bPrintPythonCommand");
        AddDecorator_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddDecorator_NativeFunction, "ReturnValue");
        AddCommentNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddCommentNode");
        AddCommentNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddCommentNode_NativeFunction);
        AddCommentNode_InCommentText_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddCommentNode_NativeFunction, "InCommentText");
        AddCommentNode_InPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddCommentNode_NativeFunction, "InPosition");
        AddCommentNode_InSize_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddCommentNode_NativeFunction, "InSize");
        AddCommentNode_InColor_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddCommentNode_NativeFunction, "InColor");
        AddCommentNode_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddCommentNode_NativeFunction, "InNodeName");
        AddCommentNode_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddCommentNode_NativeFunction, "bSetupUndoRedo");
        AddCommentNode_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddCommentNode_NativeFunction, "bPrintPythonCommand");
        AddCommentNode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddCommentNode_NativeFunction, "ReturnValue");
        AddBranchNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddBranchNode");
        AddBranchNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddBranchNode_NativeFunction);
        AddBranchNode_InPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddBranchNode_NativeFunction, "InPosition");
        AddBranchNode_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddBranchNode_NativeFunction, "InNodeName");
        AddBranchNode_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddBranchNode_NativeFunction, "bSetupUndoRedo");
        AddBranchNode_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddBranchNode_NativeFunction, "bPrintPythonCommand");
        AddBranchNode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddBranchNode_NativeFunction, "ReturnValue");
        AddArrayPin_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddArrayPin");
        AddArrayPin_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddArrayPin_NativeFunction);
        AddArrayPin_InArrayPinPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddArrayPin_NativeFunction, "InArrayPinPath");
        AddArrayPin_InDefaultValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddArrayPin_NativeFunction, "InDefaultValue");
        AddArrayPin_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddArrayPin_NativeFunction, "bSetupUndoRedo");
        AddArrayPin_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddArrayPin_NativeFunction, "bPrintPythonCommand");
        AddArrayPin_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddArrayPin_NativeFunction, "ReturnValue");
        AddArrayNodeFromObjectPath_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddArrayNodeFromObjectPath");
        AddArrayNodeFromObjectPath_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddArrayNodeFromObjectPath_NativeFunction);
        AddArrayNodeFromObjectPath_InOpCode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddArrayNodeFromObjectPath_NativeFunction, "InOpCode");
        AddArrayNodeFromObjectPath_InCPPType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddArrayNodeFromObjectPath_NativeFunction, "InCPPType");
        AddArrayNodeFromObjectPath_InCPPTypeObjectPath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddArrayNodeFromObjectPath_NativeFunction, "InCPPTypeObjectPath");
        AddArrayNodeFromObjectPath_InPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddArrayNodeFromObjectPath_NativeFunction, "InPosition");
        AddArrayNodeFromObjectPath_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddArrayNodeFromObjectPath_NativeFunction, "InNodeName");
        AddArrayNodeFromObjectPath_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddArrayNodeFromObjectPath_NativeFunction, "bSetupUndoRedo");
        AddArrayNodeFromObjectPath_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddArrayNodeFromObjectPath_NativeFunction, "bPrintPythonCommand");
        AddArrayNodeFromObjectPath_bIsPatching_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddArrayNodeFromObjectPath_NativeFunction, "bIsPatching");
        AddArrayNodeFromObjectPath_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddArrayNodeFromObjectPath_NativeFunction, "ReturnValue");
        AddArrayNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddArrayNode");
        AddArrayNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddArrayNode_NativeFunction);
        AddArrayNode_InOpCode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddArrayNode_NativeFunction, "InOpCode");
        AddArrayNode_InCPPType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddArrayNode_NativeFunction, "InCPPType");
        AddArrayNode_InCPPTypeObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddArrayNode_NativeFunction, "InCPPTypeObject");
        AddArrayNode_InPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddArrayNode_NativeFunction, "InPosition");
        AddArrayNode_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddArrayNode_NativeFunction, "InNodeName");
        AddArrayNode_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddArrayNode_NativeFunction, "bSetupUndoRedo");
        AddArrayNode_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddArrayNode_NativeFunction, "bPrintPythonCommand");
        AddArrayNode_bIsPatching_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddArrayNode_NativeFunction, "bIsPatching");
        AddArrayNode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddArrayNode_NativeFunction, "ReturnValue");
        AddAggregatePin_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddAggregatePin");
        AddAggregatePin_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddAggregatePin_NativeFunction);
        AddAggregatePin_InNodeName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddAggregatePin_NativeFunction, "InNodeName");
        AddAggregatePin_InPinName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddAggregatePin_NativeFunction, "InPinName");
        AddAggregatePin_InDefaultValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddAggregatePin_NativeFunction, "InDefaultValue");
        AddAggregatePin_bSetupUndoRedo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddAggregatePin_NativeFunction, "bSetupUndoRedo");
        AddAggregatePin_bPrintPythonCommand_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddAggregatePin_NativeFunction, "bPrintPythonCommand");
        AddAggregatePin_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddAggregatePin_NativeFunction, "ReturnValue");
        
        
    }
    
    protected RigVMController(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/RigVMDeveloper.RigVMController:UpgradeNodes
    static readonly IntPtr UpgradeNodes_NativeFunction;
    static readonly int UpgradeNodes_ParamsSize;
    static readonly int UpgradeNodes_InNodeNames_Offset;
    static readonly int UpgradeNodes_InNodeNames_ElementSize;
    static readonly int UpgradeNodes_bRecursive_Offset;
    static readonly int UpgradeNodes_bSetupUndoRedo_Offset;
    static readonly int UpgradeNodes_bPrintPythonCommand_Offset;
    static readonly int UpgradeNodes_ReturnValue_Offset;
    static readonly int UpgradeNodes_ReturnValue_ElementSize;
    
    public System.Collections.Generic.IList<UnrealSharp.RigVMDeveloper.RigVMNode> UpgradeNodes(System.Collections.Generic.IList<Name> inNodeNames, bool bRecursive = true, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[UpgradeNodes_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InNodeNames_NativeBuffer = IntPtr.Add(ParamsBuffer, UpgradeNodes_InNodeNames_Offset);
            UnrealArrayCopyMarshaler<Name> InNodeNames_Marshaler = new UnrealArrayCopyMarshaler<Name>(1, BlittableMarshaller<Name>.ToNative, BlittableMarshaller<Name>.FromNative, UpgradeNodes_InNodeNames_ElementSize);
            InNodeNames_Marshaler.ToNative(InNodeNames_NativeBuffer, 0, null, inNodeNames);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, UpgradeNodes_bRecursive_Offset), 0, null, bRecursive);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, UpgradeNodes_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, UpgradeNodes_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, UpgradeNodes_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.RigVMDeveloper.RigVMNode> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, UpgradeNodes_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.RigVMDeveloper.RigVMNode> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.RigVMDeveloper.RigVMNode> (1, ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMNode>.ToNative, ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMNode>.FromNative, UpgradeNodes_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.RigVMDeveloper.RigVMNode>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:UnresolveTemplateNodes
    static readonly IntPtr UnresolveTemplateNodes_NativeFunction;
    static readonly int UnresolveTemplateNodes_ParamsSize;
    static readonly int UnresolveTemplateNodes_InNodeNames_Offset;
    static readonly int UnresolveTemplateNodes_InNodeNames_ElementSize;
    static readonly int UnresolveTemplateNodes_bSetupUndoRedo_Offset;
    static readonly int UnresolveTemplateNodes_bPrintPythonCommand_Offset;
    static readonly int UnresolveTemplateNodes_ReturnValue_Offset;
    
    public bool UnresolveTemplateNodes(System.Collections.Generic.IList<Name> inNodeNames, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[UnresolveTemplateNodes_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InNodeNames_NativeBuffer = IntPtr.Add(ParamsBuffer, UnresolveTemplateNodes_InNodeNames_Offset);
            UnrealArrayCopyMarshaler<Name> InNodeNames_Marshaler = new UnrealArrayCopyMarshaler<Name>(1, BlittableMarshaller<Name>.ToNative, BlittableMarshaller<Name>.FromNative, UnresolveTemplateNodes_InNodeNames_ElementSize);
            InNodeNames_Marshaler.ToNative(InNodeNames_NativeBuffer, 0, null, inNodeNames);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, UnresolveTemplateNodes_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, UnresolveTemplateNodes_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, UnresolveTemplateNodes_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, UnresolveTemplateNodes_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:Undo
    static readonly IntPtr Undo_NativeFunction;
    static readonly int Undo_ParamsSize;
    static readonly int Undo_ReturnValue_Offset;
    
    public bool Undo()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Undo_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, Undo_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, Undo_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:UnbindPinFromVariable
    static readonly IntPtr UnbindPinFromVariable_NativeFunction;
    static readonly int UnbindPinFromVariable_ParamsSize;
    static readonly int UnbindPinFromVariable_InPinPath_Offset;
    static readonly int UnbindPinFromVariable_bSetupUndoRedo_Offset;
    static readonly int UnbindPinFromVariable_bPrintPythonCommand_Offset;
    static readonly int UnbindPinFromVariable_ReturnValue_Offset;
    
    public bool UnbindPinFromVariable(string inPinPath, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[UnbindPinFromVariable_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPinPath_NativePtr = IntPtr.Add(ParamsBuffer,UnbindPinFromVariable_InPinPath_Offset);
            StringMarshaller.ToNative(InPinPath_NativePtr,0,null,inPinPath);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, UnbindPinFromVariable_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, UnbindPinFromVariable_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, UnbindPinFromVariable_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, UnbindPinFromVariable_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InPinPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SetUnitNodeDefaults
    static readonly IntPtr SetUnitNodeDefaults_NativeFunction;
    static readonly int SetUnitNodeDefaults_ParamsSize;
    static readonly int SetUnitNodeDefaults_InNode_Offset;
    static readonly int SetUnitNodeDefaults_InDefaults_Offset;
    static readonly int SetUnitNodeDefaults_bSetupUndoRedo_Offset;
    static readonly int SetUnitNodeDefaults_bPrintPythonCommand_Offset;
    static readonly int SetUnitNodeDefaults_ReturnValue_Offset;
    
    public bool SetUnitNodeDefaults(UnrealSharp.RigVMDeveloper.RigVMUnitNode inNode, string inDefaults, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetUnitNodeDefaults_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMUnitNode>.ToNative(IntPtr.Add(ParamsBuffer, SetUnitNodeDefaults_InNode_Offset), 0, null, inNode);
            IntPtr InDefaults_NativePtr = IntPtr.Add(ParamsBuffer,SetUnitNodeDefaults_InDefaults_Offset);
            StringMarshaller.ToNative(InDefaults_NativePtr,0,null,inDefaults);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetUnitNodeDefaults_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetUnitNodeDefaults_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetUnitNodeDefaults_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetUnitNodeDefaults_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InDefaults_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SetSchema
    static readonly IntPtr SetSchema_NativeFunction;
    static readonly int SetSchema_ParamsSize;
    static readonly int SetSchema_InSchema_Offset;
    
    public void SetSchema(UnrealSharp.RigVMDeveloper.RigVMSchema inSchema)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSchema_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMSchema>.ToNative(IntPtr.Add(ParamsBuffer, SetSchema_InSchema_Offset), 0, null, inSchema);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSchema_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SetRemappedVariable
    static readonly IntPtr SetRemappedVariable_NativeFunction;
    static readonly int SetRemappedVariable_ParamsSize;
    static readonly int SetRemappedVariable_InFunctionRefNode_Offset;
    static readonly int SetRemappedVariable_InInnerVariableName_Offset;
    static readonly int SetRemappedVariable_InOuterVariableName_Offset;
    static readonly int SetRemappedVariable_bSetupUndoRedo_Offset;
    static readonly int SetRemappedVariable_ReturnValue_Offset;
    
    public bool SetRemappedVariable(UnrealSharp.RigVMDeveloper.RigVMFunctionReferenceNode inFunctionRefNode, Name inInnerVariableName, Name inOuterVariableName, bool bSetupUndoRedo = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetRemappedVariable_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMFunctionReferenceNode>.ToNative(IntPtr.Add(ParamsBuffer, SetRemappedVariable_InFunctionRefNode_Offset), 0, null, inFunctionRefNode);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetRemappedVariable_InInnerVariableName_Offset), 0, null, inInnerVariableName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetRemappedVariable_InOuterVariableName_Offset), 0, null, inOuterVariableName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetRemappedVariable_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetRemappedVariable_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetRemappedVariable_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SetPinIsWatched
    static readonly IntPtr SetPinIsWatched_NativeFunction;
    static readonly int SetPinIsWatched_ParamsSize;
    static readonly int SetPinIsWatched_InPinPath_Offset;
    static readonly int SetPinIsWatched_bIsWatched_Offset;
    static readonly int SetPinIsWatched_bSetupUndoRedo_Offset;
    static readonly int SetPinIsWatched_ReturnValue_Offset;
    
    public bool SetPinIsWatched(string inPinPath, bool bIsWatched, bool bSetupUndoRedo = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPinIsWatched_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPinPath_NativePtr = IntPtr.Add(ParamsBuffer,SetPinIsWatched_InPinPath_Offset);
            StringMarshaller.ToNative(InPinPath_NativePtr,0,null,inPinPath);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetPinIsWatched_bIsWatched_Offset), 0, null, bIsWatched);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetPinIsWatched_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPinIsWatched_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetPinIsWatched_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InPinPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SetPinExpansion
    static readonly IntPtr SetPinExpansion_NativeFunction;
    static readonly int SetPinExpansion_ParamsSize;
    static readonly int SetPinExpansion_InPinPath_Offset;
    static readonly int SetPinExpansion_bIsExpanded_Offset;
    static readonly int SetPinExpansion_bSetupUndoRedo_Offset;
    static readonly int SetPinExpansion_bPrintPythonCommand_Offset;
    static readonly int SetPinExpansion_ReturnValue_Offset;
    
    public bool SetPinExpansion(string inPinPath, bool bIsExpanded, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPinExpansion_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPinPath_NativePtr = IntPtr.Add(ParamsBuffer,SetPinExpansion_InPinPath_Offset);
            StringMarshaller.ToNative(InPinPath_NativePtr,0,null,inPinPath);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetPinExpansion_bIsExpanded_Offset), 0, null, bIsExpanded);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetPinExpansion_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetPinExpansion_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPinExpansion_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetPinExpansion_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InPinPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SetPinDefaultValue
    static readonly IntPtr SetPinDefaultValue_NativeFunction;
    static readonly int SetPinDefaultValue_ParamsSize;
    static readonly int SetPinDefaultValue_InPinPath_Offset;
    static readonly int SetPinDefaultValue_InDefaultValue_Offset;
    static readonly int SetPinDefaultValue_bResizeArrays_Offset;
    static readonly int SetPinDefaultValue_bSetupUndoRedo_Offset;
    static readonly int SetPinDefaultValue_bMergeUndoAction_Offset;
    static readonly int SetPinDefaultValue_bPrintPythonCommand_Offset;
    static readonly int SetPinDefaultValue_ReturnValue_Offset;
    
    public bool SetPinDefaultValue(string inPinPath, string inDefaultValue, bool bResizeArrays = true, bool bSetupUndoRedo = true, bool bMergeUndoAction = false, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPinDefaultValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPinPath_NativePtr = IntPtr.Add(ParamsBuffer,SetPinDefaultValue_InPinPath_Offset);
            StringMarshaller.ToNative(InPinPath_NativePtr,0,null,inPinPath);
            IntPtr InDefaultValue_NativePtr = IntPtr.Add(ParamsBuffer,SetPinDefaultValue_InDefaultValue_Offset);
            StringMarshaller.ToNative(InDefaultValue_NativePtr,0,null,inDefaultValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetPinDefaultValue_bResizeArrays_Offset), 0, null, bResizeArrays);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetPinDefaultValue_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetPinDefaultValue_bMergeUndoAction_Offset), 0, null, bMergeUndoAction);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetPinDefaultValue_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPinDefaultValue_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetPinDefaultValue_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InPinPath_NativePtr, 0);
            StringMarshaller.DestructInstance(InDefaultValue_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SetNodeSizeByName
    static readonly IntPtr SetNodeSizeByName_NativeFunction;
    static readonly int SetNodeSizeByName_ParamsSize;
    static readonly int SetNodeSizeByName_InNodeName_Offset;
    static readonly int SetNodeSizeByName_InSize_Offset;
    static readonly int SetNodeSizeByName_bSetupUndoRedo_Offset;
    static readonly int SetNodeSizeByName_bMergeUndoAction_Offset;
    static readonly int SetNodeSizeByName_bPrintPythonCommand_Offset;
    static readonly int SetNodeSizeByName_ReturnValue_Offset;
    
    public bool SetNodeSizeByName(Name inNodeName, System.DoubleNumerics.Vector2 inSize, bool bSetupUndoRedo = true, bool bMergeUndoAction = false, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetNodeSizeByName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetNodeSizeByName_InNodeName_Offset), 0, null, inNodeName);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, SetNodeSizeByName_InSize_Offset), 0, null, inSize);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodeSizeByName_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodeSizeByName_bMergeUndoAction_Offset), 0, null, bMergeUndoAction);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodeSizeByName_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetNodeSizeByName_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetNodeSizeByName_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SetNodeSize
    static readonly IntPtr SetNodeSize_NativeFunction;
    static readonly int SetNodeSize_ParamsSize;
    static readonly int SetNodeSize_InNode_Offset;
    static readonly int SetNodeSize_InSize_Offset;
    static readonly int SetNodeSize_bSetupUndoRedo_Offset;
    static readonly int SetNodeSize_bMergeUndoAction_Offset;
    static readonly int SetNodeSize_bPrintPythonCommand_Offset;
    static readonly int SetNodeSize_ReturnValue_Offset;
    
    public bool SetNodeSize(UnrealSharp.RigVMDeveloper.RigVMNode inNode, System.DoubleNumerics.Vector2 inSize, bool bSetupUndoRedo = true, bool bMergeUndoAction = false, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetNodeSize_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMNode>.ToNative(IntPtr.Add(ParamsBuffer, SetNodeSize_InNode_Offset), 0, null, inNode);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, SetNodeSize_InSize_Offset), 0, null, inSize);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodeSize_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodeSize_bMergeUndoAction_Offset), 0, null, bMergeUndoAction);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodeSize_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetNodeSize_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetNodeSize_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SetNodeSelection
    static readonly IntPtr SetNodeSelection_NativeFunction;
    static readonly int SetNodeSelection_ParamsSize;
    static readonly int SetNodeSelection_InNodeNames_Offset;
    static readonly int SetNodeSelection_InNodeNames_ElementSize;
    static readonly int SetNodeSelection_bSetupUndoRedo_Offset;
    static readonly int SetNodeSelection_bPrintPythonCommand_Offset;
    static readonly int SetNodeSelection_ReturnValue_Offset;
    
    public bool SetNodeSelection(System.Collections.Generic.IList<Name> inNodeNames, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetNodeSelection_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InNodeNames_NativeBuffer = IntPtr.Add(ParamsBuffer, SetNodeSelection_InNodeNames_Offset);
            UnrealArrayCopyMarshaler<Name> InNodeNames_Marshaler = new UnrealArrayCopyMarshaler<Name>(1, BlittableMarshaller<Name>.ToNative, BlittableMarshaller<Name>.FromNative, SetNodeSelection_InNodeNames_ElementSize);
            InNodeNames_Marshaler.ToNative(InNodeNames_NativeBuffer, 0, null, inNodeNames);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodeSelection_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodeSelection_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetNodeSelection_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetNodeSelection_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SetNodePositionByName
    static readonly IntPtr SetNodePositionByName_NativeFunction;
    static readonly int SetNodePositionByName_ParamsSize;
    static readonly int SetNodePositionByName_InNodeName_Offset;
    static readonly int SetNodePositionByName_InPosition_Offset;
    static readonly int SetNodePositionByName_bSetupUndoRedo_Offset;
    static readonly int SetNodePositionByName_bMergeUndoAction_Offset;
    static readonly int SetNodePositionByName_bPrintPythonCommand_Offset;
    static readonly int SetNodePositionByName_ReturnValue_Offset;
    
    public bool SetNodePositionByName(Name inNodeName, System.DoubleNumerics.Vector2 inPosition, bool bSetupUndoRedo = true, bool bMergeUndoAction = false, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetNodePositionByName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetNodePositionByName_InNodeName_Offset), 0, null, inNodeName);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, SetNodePositionByName_InPosition_Offset), 0, null, inPosition);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodePositionByName_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodePositionByName_bMergeUndoAction_Offset), 0, null, bMergeUndoAction);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodePositionByName_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetNodePositionByName_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetNodePositionByName_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SetNodePosition
    static readonly IntPtr SetNodePosition_NativeFunction;
    static readonly int SetNodePosition_ParamsSize;
    static readonly int SetNodePosition_InNode_Offset;
    static readonly int SetNodePosition_InPosition_Offset;
    static readonly int SetNodePosition_bSetupUndoRedo_Offset;
    static readonly int SetNodePosition_bMergeUndoAction_Offset;
    static readonly int SetNodePosition_bPrintPythonCommand_Offset;
    static readonly int SetNodePosition_ReturnValue_Offset;
    
    public bool SetNodePosition(UnrealSharp.RigVMDeveloper.RigVMNode inNode, System.DoubleNumerics.Vector2 inPosition, bool bSetupUndoRedo = true, bool bMergeUndoAction = false, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetNodePosition_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMNode>.ToNative(IntPtr.Add(ParamsBuffer, SetNodePosition_InNode_Offset), 0, null, inNode);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, SetNodePosition_InPosition_Offset), 0, null, inPosition);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodePosition_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodePosition_bMergeUndoAction_Offset), 0, null, bMergeUndoAction);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodePosition_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetNodePosition_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetNodePosition_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SetNodeKeywordsByName
    static readonly IntPtr SetNodeKeywordsByName_NativeFunction;
    static readonly int SetNodeKeywordsByName_ParamsSize;
    static readonly int SetNodeKeywordsByName_InNodeName_Offset;
    static readonly int SetNodeKeywordsByName_InKeywords_Offset;
    static readonly int SetNodeKeywordsByName_bSetupUndoRedo_Offset;
    static readonly int SetNodeKeywordsByName_bMergeUndoAction_Offset;
    static readonly int SetNodeKeywordsByName_ReturnValue_Offset;
    
    public bool SetNodeKeywordsByName(Name inNodeName, string inKeywords, bool bSetupUndoRedo = true, bool bMergeUndoAction = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetNodeKeywordsByName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetNodeKeywordsByName_InNodeName_Offset), 0, null, inNodeName);
            IntPtr InKeywords_NativePtr = IntPtr.Add(ParamsBuffer,SetNodeKeywordsByName_InKeywords_Offset);
            StringMarshaller.ToNative(InKeywords_NativePtr,0,null,inKeywords);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodeKeywordsByName_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodeKeywordsByName_bMergeUndoAction_Offset), 0, null, bMergeUndoAction);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetNodeKeywordsByName_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetNodeKeywordsByName_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InKeywords_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SetNodeKeywords
    static readonly IntPtr SetNodeKeywords_NativeFunction;
    static readonly int SetNodeKeywords_ParamsSize;
    static readonly int SetNodeKeywords_InNode_Offset;
    static readonly int SetNodeKeywords_InKeywords_Offset;
    static readonly int SetNodeKeywords_bSetupUndoRedo_Offset;
    static readonly int SetNodeKeywords_bMergeUndoAction_Offset;
    static readonly int SetNodeKeywords_bPrintPythonCommand_Offset;
    static readonly int SetNodeKeywords_ReturnValue_Offset;
    
    public bool SetNodeKeywords(UnrealSharp.RigVMDeveloper.RigVMCollapseNode inNode, string inKeywords, bool bSetupUndoRedo = true, bool bMergeUndoAction = false, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetNodeKeywords_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMCollapseNode>.ToNative(IntPtr.Add(ParamsBuffer, SetNodeKeywords_InNode_Offset), 0, null, inNode);
            IntPtr InKeywords_NativePtr = IntPtr.Add(ParamsBuffer,SetNodeKeywords_InKeywords_Offset);
            StringMarshaller.ToNative(InKeywords_NativePtr,0,null,inKeywords);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodeKeywords_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodeKeywords_bMergeUndoAction_Offset), 0, null, bMergeUndoAction);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodeKeywords_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetNodeKeywords_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetNodeKeywords_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InKeywords_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SetNodeDescriptionByName
    static readonly IntPtr SetNodeDescriptionByName_NativeFunction;
    static readonly int SetNodeDescriptionByName_ParamsSize;
    static readonly int SetNodeDescriptionByName_InNodeName_Offset;
    static readonly int SetNodeDescriptionByName_InDescription_Offset;
    static readonly int SetNodeDescriptionByName_bSetupUndoRedo_Offset;
    static readonly int SetNodeDescriptionByName_bMergeUndoAction_Offset;
    static readonly int SetNodeDescriptionByName_ReturnValue_Offset;
    
    public bool SetNodeDescriptionByName(Name inNodeName, string inDescription, bool bSetupUndoRedo = true, bool bMergeUndoAction = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetNodeDescriptionByName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetNodeDescriptionByName_InNodeName_Offset), 0, null, inNodeName);
            IntPtr InDescription_NativePtr = IntPtr.Add(ParamsBuffer,SetNodeDescriptionByName_InDescription_Offset);
            StringMarshaller.ToNative(InDescription_NativePtr,0,null,inDescription);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodeDescriptionByName_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodeDescriptionByName_bMergeUndoAction_Offset), 0, null, bMergeUndoAction);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetNodeDescriptionByName_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetNodeDescriptionByName_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InDescription_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SetNodeDescription
    static readonly IntPtr SetNodeDescription_NativeFunction;
    static readonly int SetNodeDescription_ParamsSize;
    static readonly int SetNodeDescription_InNode_Offset;
    static readonly int SetNodeDescription_InDescription_Offset;
    static readonly int SetNodeDescription_bSetupUndoRedo_Offset;
    static readonly int SetNodeDescription_bMergeUndoAction_Offset;
    static readonly int SetNodeDescription_bPrintPythonCommand_Offset;
    static readonly int SetNodeDescription_ReturnValue_Offset;
    
    public bool SetNodeDescription(UnrealSharp.RigVMDeveloper.RigVMCollapseNode inNode, string inDescription, bool bSetupUndoRedo = true, bool bMergeUndoAction = false, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetNodeDescription_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMCollapseNode>.ToNative(IntPtr.Add(ParamsBuffer, SetNodeDescription_InNode_Offset), 0, null, inNode);
            IntPtr InDescription_NativePtr = IntPtr.Add(ParamsBuffer,SetNodeDescription_InDescription_Offset);
            StringMarshaller.ToNative(InDescription_NativePtr,0,null,inDescription);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodeDescription_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodeDescription_bMergeUndoAction_Offset), 0, null, bMergeUndoAction);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodeDescription_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetNodeDescription_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetNodeDescription_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InDescription_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SetNodeColorByName
    static readonly IntPtr SetNodeColorByName_NativeFunction;
    static readonly int SetNodeColorByName_ParamsSize;
    static readonly int SetNodeColorByName_InNodeName_Offset;
    static readonly int SetNodeColorByName_InColor_Offset;
    static readonly int SetNodeColorByName_bSetupUndoRedo_Offset;
    static readonly int SetNodeColorByName_bMergeUndoAction_Offset;
    static readonly int SetNodeColorByName_ReturnValue_Offset;
    
    public bool SetNodeColorByName(Name inNodeName, UnrealSharp.CoreUObject.LinearColor inColor, bool bSetupUndoRedo = true, bool bMergeUndoAction = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetNodeColorByName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetNodeColorByName_InNodeName_Offset), 0, null, inNodeName);
            BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.ToNative(IntPtr.Add(ParamsBuffer, SetNodeColorByName_InColor_Offset), 0, null, inColor);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodeColorByName_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodeColorByName_bMergeUndoAction_Offset), 0, null, bMergeUndoAction);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetNodeColorByName_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetNodeColorByName_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SetNodeColor
    static readonly IntPtr SetNodeColor_NativeFunction;
    static readonly int SetNodeColor_ParamsSize;
    static readonly int SetNodeColor_InNode_Offset;
    static readonly int SetNodeColor_InColor_Offset;
    static readonly int SetNodeColor_bSetupUndoRedo_Offset;
    static readonly int SetNodeColor_bMergeUndoAction_Offset;
    static readonly int SetNodeColor_bPrintPythonCommand_Offset;
    static readonly int SetNodeColor_ReturnValue_Offset;
    
    public bool SetNodeColor(UnrealSharp.RigVMDeveloper.RigVMNode inNode, UnrealSharp.CoreUObject.LinearColor inColor, bool bSetupUndoRedo = true, bool bMergeUndoAction = false, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetNodeColor_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMNode>.ToNative(IntPtr.Add(ParamsBuffer, SetNodeColor_InNode_Offset), 0, null, inNode);
            BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.ToNative(IntPtr.Add(ParamsBuffer, SetNodeColor_InColor_Offset), 0, null, inColor);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodeColor_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodeColor_bMergeUndoAction_Offset), 0, null, bMergeUndoAction);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodeColor_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetNodeColor_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetNodeColor_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SetNodeCategoryByName
    static readonly IntPtr SetNodeCategoryByName_NativeFunction;
    static readonly int SetNodeCategoryByName_ParamsSize;
    static readonly int SetNodeCategoryByName_InNodeName_Offset;
    static readonly int SetNodeCategoryByName_InCategory_Offset;
    static readonly int SetNodeCategoryByName_bSetupUndoRedo_Offset;
    static readonly int SetNodeCategoryByName_bMergeUndoAction_Offset;
    static readonly int SetNodeCategoryByName_ReturnValue_Offset;
    
    public bool SetNodeCategoryByName(Name inNodeName, string inCategory, bool bSetupUndoRedo = true, bool bMergeUndoAction = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetNodeCategoryByName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetNodeCategoryByName_InNodeName_Offset), 0, null, inNodeName);
            IntPtr InCategory_NativePtr = IntPtr.Add(ParamsBuffer,SetNodeCategoryByName_InCategory_Offset);
            StringMarshaller.ToNative(InCategory_NativePtr,0,null,inCategory);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodeCategoryByName_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodeCategoryByName_bMergeUndoAction_Offset), 0, null, bMergeUndoAction);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetNodeCategoryByName_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetNodeCategoryByName_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InCategory_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SetNodeCategory
    static readonly IntPtr SetNodeCategory_NativeFunction;
    static readonly int SetNodeCategory_ParamsSize;
    static readonly int SetNodeCategory_InNode_Offset;
    static readonly int SetNodeCategory_InCategory_Offset;
    static readonly int SetNodeCategory_bSetupUndoRedo_Offset;
    static readonly int SetNodeCategory_bMergeUndoAction_Offset;
    static readonly int SetNodeCategory_bPrintPythonCommand_Offset;
    static readonly int SetNodeCategory_ReturnValue_Offset;
    
    public bool SetNodeCategory(UnrealSharp.RigVMDeveloper.RigVMCollapseNode inNode, string inCategory, bool bSetupUndoRedo = true, bool bMergeUndoAction = false, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetNodeCategory_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMCollapseNode>.ToNative(IntPtr.Add(ParamsBuffer, SetNodeCategory_InNode_Offset), 0, null, inNode);
            IntPtr InCategory_NativePtr = IntPtr.Add(ParamsBuffer,SetNodeCategory_InCategory_Offset);
            StringMarshaller.ToNative(InCategory_NativePtr,0,null,inCategory);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodeCategory_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodeCategory_bMergeUndoAction_Offset), 0, null, bMergeUndoAction);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetNodeCategory_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetNodeCategory_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetNodeCategory_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InCategory_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SetLocalVariableTypeFromObjectPath
    static readonly IntPtr SetLocalVariableTypeFromObjectPath_NativeFunction;
    static readonly int SetLocalVariableTypeFromObjectPath_ParamsSize;
    static readonly int SetLocalVariableTypeFromObjectPath_InVariableName_Offset;
    static readonly int SetLocalVariableTypeFromObjectPath_InCPPType_Offset;
    static readonly int SetLocalVariableTypeFromObjectPath_InCPPTypeObjectPath_Offset;
    static readonly int SetLocalVariableTypeFromObjectPath_bSetupUndoRedo_Offset;
    static readonly int SetLocalVariableTypeFromObjectPath_bPrintPythonCommand_Offset;
    static readonly int SetLocalVariableTypeFromObjectPath_ReturnValue_Offset;
    
    public bool SetLocalVariableTypeFromObjectPath(Name inVariableName, string inCPPType, string inCPPTypeObjectPath, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetLocalVariableTypeFromObjectPath_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetLocalVariableTypeFromObjectPath_InVariableName_Offset), 0, null, inVariableName);
            IntPtr InCPPType_NativePtr = IntPtr.Add(ParamsBuffer,SetLocalVariableTypeFromObjectPath_InCPPType_Offset);
            StringMarshaller.ToNative(InCPPType_NativePtr,0,null,inCPPType);
            IntPtr InCPPTypeObjectPath_NativePtr = IntPtr.Add(ParamsBuffer,SetLocalVariableTypeFromObjectPath_InCPPTypeObjectPath_Offset);
            StringMarshaller.ToNative(InCPPTypeObjectPath_NativePtr,0,null,inCPPTypeObjectPath);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetLocalVariableTypeFromObjectPath_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetLocalVariableTypeFromObjectPath_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetLocalVariableTypeFromObjectPath_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetLocalVariableTypeFromObjectPath_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InCPPType_NativePtr, 0);
            StringMarshaller.DestructInstance(InCPPTypeObjectPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SetLocalVariableType
    static readonly IntPtr SetLocalVariableType_NativeFunction;
    static readonly int SetLocalVariableType_ParamsSize;
    static readonly int SetLocalVariableType_InVariableName_Offset;
    static readonly int SetLocalVariableType_InCPPType_Offset;
    static readonly int SetLocalVariableType_InCPPTypeObject_Offset;
    static readonly int SetLocalVariableType_bSetupUndoRedo_Offset;
    static readonly int SetLocalVariableType_bPrintPythonCommand_Offset;
    static readonly int SetLocalVariableType_ReturnValue_Offset;
    
    public bool SetLocalVariableType(Name inVariableName, string inCPPType, UnrealSharp.CoreUObject.Object inCPPTypeObject, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetLocalVariableType_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetLocalVariableType_InVariableName_Offset), 0, null, inVariableName);
            IntPtr InCPPType_NativePtr = IntPtr.Add(ParamsBuffer,SetLocalVariableType_InCPPType_Offset);
            StringMarshaller.ToNative(InCPPType_NativePtr,0,null,inCPPType);
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, SetLocalVariableType_InCPPTypeObject_Offset), 0, null, inCPPTypeObject);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetLocalVariableType_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetLocalVariableType_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetLocalVariableType_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetLocalVariableType_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InCPPType_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SetLocalVariableDefaultValue
    static readonly IntPtr SetLocalVariableDefaultValue_NativeFunction;
    static readonly int SetLocalVariableDefaultValue_ParamsSize;
    static readonly int SetLocalVariableDefaultValue_InVariableName_Offset;
    static readonly int SetLocalVariableDefaultValue_InDefaultValue_Offset;
    static readonly int SetLocalVariableDefaultValue_bSetupUndoRedo_Offset;
    static readonly int SetLocalVariableDefaultValue_bPrintPythonCommand_Offset;
    static readonly int SetLocalVariableDefaultValue_ReturnValue_Offset;
    
    public bool SetLocalVariableDefaultValue(Name inVariableName, string inDefaultValue, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetLocalVariableDefaultValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetLocalVariableDefaultValue_InVariableName_Offset), 0, null, inVariableName);
            IntPtr InDefaultValue_NativePtr = IntPtr.Add(ParamsBuffer,SetLocalVariableDefaultValue_InDefaultValue_Offset);
            StringMarshaller.ToNative(InDefaultValue_NativePtr,0,null,inDefaultValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetLocalVariableDefaultValue_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetLocalVariableDefaultValue_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetLocalVariableDefaultValue_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetLocalVariableDefaultValue_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InDefaultValue_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SetIsRunningUnitTest
    static readonly IntPtr SetIsRunningUnitTest_NativeFunction;
    static readonly int SetIsRunningUnitTest_ParamsSize;
    static readonly int SetIsRunningUnitTest_bIsRunning_Offset;
    
    public void SetIsRunningUnitTest(bool bIsRunning)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetIsRunningUnitTest_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetIsRunningUnitTest_bIsRunning_Offset), 0, null, bIsRunning);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetIsRunningUnitTest_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SetGraph
    static readonly IntPtr SetGraph_NativeFunction;
    static readonly int SetGraph_ParamsSize;
    static readonly int SetGraph_InGraph_Offset;
    
    [Obsolete("Function has been deprecated, please rely on GetControllerForGraph instead.")]
    public void SetGraph(UnrealSharp.RigVMDeveloper.RigVMGraph inGraph)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetGraph_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMGraph>.ToNative(IntPtr.Add(ParamsBuffer, SetGraph_InGraph_Offset), 0, null, inGraph);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetGraph_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SetExposedPinIndex
    static readonly IntPtr SetExposedPinIndex_NativeFunction;
    static readonly int SetExposedPinIndex_ParamsSize;
    static readonly int SetExposedPinIndex_InPinName_Offset;
    static readonly int SetExposedPinIndex_InNewIndex_Offset;
    static readonly int SetExposedPinIndex_bSetupUndoRedo_Offset;
    static readonly int SetExposedPinIndex_bPrintPythonCommand_Offset;
    static readonly int SetExposedPinIndex_ReturnValue_Offset;
    
    public bool SetExposedPinIndex(Name inPinName, int inNewIndex, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetExposedPinIndex_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetExposedPinIndex_InPinName_Offset), 0, null, inPinName);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetExposedPinIndex_InNewIndex_Offset), 0, null, inNewIndex);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetExposedPinIndex_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetExposedPinIndex_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetExposedPinIndex_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetExposedPinIndex_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SetCommentTextByName
    static readonly IntPtr SetCommentTextByName_NativeFunction;
    static readonly int SetCommentTextByName_ParamsSize;
    static readonly int SetCommentTextByName_InNodeName_Offset;
    static readonly int SetCommentTextByName_InCommentText_Offset;
    static readonly int SetCommentTextByName_InCommentFontSize_Offset;
    static readonly int SetCommentTextByName_bInCommentBubbleVisible_Offset;
    static readonly int SetCommentTextByName_bInCommentColorBubble_Offset;
    static readonly int SetCommentTextByName_bSetupUndoRedo_Offset;
    static readonly int SetCommentTextByName_bPrintPythonCommand_Offset;
    static readonly int SetCommentTextByName_ReturnValue_Offset;
    
    public bool SetCommentTextByName(Name inNodeName, string inCommentText, int inCommentFontSize, bool bInCommentBubbleVisible, bool bInCommentColorBubble, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCommentTextByName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetCommentTextByName_InNodeName_Offset), 0, null, inNodeName);
            IntPtr InCommentText_NativePtr = IntPtr.Add(ParamsBuffer,SetCommentTextByName_InCommentText_Offset);
            StringMarshaller.ToNative(InCommentText_NativePtr,0,null,inCommentText);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetCommentTextByName_InCommentFontSize_Offset), 0, null, inCommentFontSize);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCommentTextByName_bInCommentBubbleVisible_Offset), 0, null, bInCommentBubbleVisible);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCommentTextByName_bInCommentColorBubble_Offset), 0, null, bInCommentColorBubble);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCommentTextByName_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCommentTextByName_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCommentTextByName_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCommentTextByName_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InCommentText_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SetCommentText
    static readonly IntPtr SetCommentText_NativeFunction;
    static readonly int SetCommentText_ParamsSize;
    static readonly int SetCommentText_InNode_Offset;
    static readonly int SetCommentText_InCommentText_Offset;
    static readonly int SetCommentText_InCommentFontSize_Offset;
    static readonly int SetCommentText_bInCommentBubbleVisible_Offset;
    static readonly int SetCommentText_bInCommentColorBubble_Offset;
    static readonly int SetCommentText_bSetupUndoRedo_Offset;
    static readonly int SetCommentText_bPrintPythonCommand_Offset;
    static readonly int SetCommentText_ReturnValue_Offset;
    
    public bool SetCommentText(UnrealSharp.RigVMDeveloper.RigVMNode inNode, string inCommentText, int inCommentFontSize, bool bInCommentBubbleVisible, bool bInCommentColorBubble, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCommentText_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMNode>.ToNative(IntPtr.Add(ParamsBuffer, SetCommentText_InNode_Offset), 0, null, inNode);
            IntPtr InCommentText_NativePtr = IntPtr.Add(ParamsBuffer,SetCommentText_InCommentText_Offset);
            StringMarshaller.ToNative(InCommentText_NativePtr,0,null,inCommentText);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetCommentText_InCommentFontSize_Offset), 0, null, inCommentFontSize);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCommentText_bInCommentBubbleVisible_Offset), 0, null, bInCommentBubbleVisible);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCommentText_bInCommentColorBubble_Offset), 0, null, bInCommentColorBubble);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCommentText_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetCommentText_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCommentText_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCommentText_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InCommentText_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SetArrayPinSize
    static readonly IntPtr SetArrayPinSize_NativeFunction;
    static readonly int SetArrayPinSize_ParamsSize;
    static readonly int SetArrayPinSize_InArrayPinPath_Offset;
    static readonly int SetArrayPinSize_InSize_Offset;
    static readonly int SetArrayPinSize_InDefaultValue_Offset;
    static readonly int SetArrayPinSize_bSetupUndoRedo_Offset;
    static readonly int SetArrayPinSize_bPrintPythonCommand_Offset;
    static readonly int SetArrayPinSize_ReturnValue_Offset;
    
    public bool SetArrayPinSize(string inArrayPinPath, int inSize, string inDefaultValue, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetArrayPinSize_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InArrayPinPath_NativePtr = IntPtr.Add(ParamsBuffer,SetArrayPinSize_InArrayPinPath_Offset);
            StringMarshaller.ToNative(InArrayPinPath_NativePtr,0,null,inArrayPinPath);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetArrayPinSize_InSize_Offset), 0, null, inSize);
            IntPtr InDefaultValue_NativePtr = IntPtr.Add(ParamsBuffer,SetArrayPinSize_InDefaultValue_Offset);
            StringMarshaller.ToNative(InDefaultValue_NativePtr,0,null,inDefaultValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetArrayPinSize_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetArrayPinSize_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetArrayPinSize_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetArrayPinSize_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InArrayPinPath_NativePtr, 0);
            StringMarshaller.DestructInstance(InDefaultValue_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SelectNodeByName
    static readonly IntPtr SelectNodeByName_NativeFunction;
    static readonly int SelectNodeByName_ParamsSize;
    static readonly int SelectNodeByName_InNodeName_Offset;
    static readonly int SelectNodeByName_bSelect_Offset;
    static readonly int SelectNodeByName_bSetupUndoRedo_Offset;
    static readonly int SelectNodeByName_ReturnValue_Offset;
    
    public bool SelectNodeByName(Name inNodeName, bool bSelect = true, bool bSetupUndoRedo = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SelectNodeByName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SelectNodeByName_InNodeName_Offset), 0, null, inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SelectNodeByName_bSelect_Offset), 0, null, bSelect);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SelectNodeByName_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SelectNodeByName_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SelectNodeByName_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:SelectNode
    static readonly IntPtr SelectNode_NativeFunction;
    static readonly int SelectNode_ParamsSize;
    static readonly int SelectNode_InNode_Offset;
    static readonly int SelectNode_bSelect_Offset;
    static readonly int SelectNode_bSetupUndoRedo_Offset;
    static readonly int SelectNode_bPrintPythonCommand_Offset;
    static readonly int SelectNode_ReturnValue_Offset;
    
    public bool SelectNode(UnrealSharp.RigVMDeveloper.RigVMNode inNode, bool bSelect = true, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SelectNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMNode>.ToNative(IntPtr.Add(ParamsBuffer, SelectNode_InNode_Offset), 0, null, inNode);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SelectNode_bSelect_Offset), 0, null, bSelect);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SelectNode_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SelectNode_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SelectNode_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SelectNode_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:ResolveWildCardPin
    static readonly IntPtr ResolveWildCardPin_NativeFunction;
    static readonly int ResolveWildCardPin_ParamsSize;
    static readonly int ResolveWildCardPin_InPinPath_Offset;
    static readonly int ResolveWildCardPin_InCPPType_Offset;
    static readonly int ResolveWildCardPin_InCPPTypeObjectPath_Offset;
    static readonly int ResolveWildCardPin_bSetupUndoRedo_Offset;
    static readonly int ResolveWildCardPin_bPrintPythonCommand_Offset;
    static readonly int ResolveWildCardPin_ReturnValue_Offset;
    
    public bool ResolveWildCardPin(string inPinPath, string inCPPType, Name inCPPTypeObjectPath, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ResolveWildCardPin_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPinPath_NativePtr = IntPtr.Add(ParamsBuffer,ResolveWildCardPin_InPinPath_Offset);
            StringMarshaller.ToNative(InPinPath_NativePtr,0,null,inPinPath);
            IntPtr InCPPType_NativePtr = IntPtr.Add(ParamsBuffer,ResolveWildCardPin_InCPPType_Offset);
            StringMarshaller.ToNative(InCPPType_NativePtr,0,null,inCPPType);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, ResolveWildCardPin_InCPPTypeObjectPath_Offset), 0, null, inCPPTypeObjectPath);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ResolveWildCardPin_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ResolveWildCardPin_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ResolveWildCardPin_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, ResolveWildCardPin_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InPinPath_NativePtr, 0);
            StringMarshaller.DestructInstance(InCPPType_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:ResetPinDefaultValue
    static readonly IntPtr ResetPinDefaultValue_NativeFunction;
    static readonly int ResetPinDefaultValue_ParamsSize;
    static readonly int ResetPinDefaultValue_InPinPath_Offset;
    static readonly int ResetPinDefaultValue_bSetupUndoRedo_Offset;
    static readonly int ResetPinDefaultValue_bPrintPythonCommand_Offset;
    static readonly int ResetPinDefaultValue_ReturnValue_Offset;
    
    public bool ResetPinDefaultValue(string inPinPath, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ResetPinDefaultValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPinPath_NativePtr = IntPtr.Add(ParamsBuffer,ResetPinDefaultValue_InPinPath_Offset);
            StringMarshaller.ToNative(InPinPath_NativePtr,0,null,inPinPath);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ResetPinDefaultValue_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ResetPinDefaultValue_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ResetPinDefaultValue_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, ResetPinDefaultValue_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InPinPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:ReplaceParameterNodeWithVariable
    static readonly IntPtr ReplaceParameterNodeWithVariable_NativeFunction;
    static readonly int ReplaceParameterNodeWithVariable_ParamsSize;
    static readonly int ReplaceParameterNodeWithVariable_InNodeName_Offset;
    static readonly int ReplaceParameterNodeWithVariable_InVariableName_Offset;
    static readonly int ReplaceParameterNodeWithVariable_InCPPType_Offset;
    static readonly int ReplaceParameterNodeWithVariable_InCPPTypeObject_Offset;
    static readonly int ReplaceParameterNodeWithVariable_bSetupUndoRedo_Offset;
    static readonly int ReplaceParameterNodeWithVariable_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMVariableNode ReplaceParameterNodeWithVariable(Name inNodeName, Name inVariableName, string inCPPType, UnrealSharp.CoreUObject.Object inCPPTypeObject, bool bSetupUndoRedo)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ReplaceParameterNodeWithVariable_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, ReplaceParameterNodeWithVariable_InNodeName_Offset), 0, null, inNodeName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, ReplaceParameterNodeWithVariable_InVariableName_Offset), 0, null, inVariableName);
            IntPtr InCPPType_NativePtr = IntPtr.Add(ParamsBuffer,ReplaceParameterNodeWithVariable_InCPPType_Offset);
            StringMarshaller.ToNative(InCPPType_NativePtr,0,null,inCPPType);
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, ReplaceParameterNodeWithVariable_InCPPTypeObject_Offset), 0, null, inCPPTypeObject);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ReplaceParameterNodeWithVariable_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ReplaceParameterNodeWithVariable_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMVariableNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMVariableNode>.FromNative(IntPtr.Add(ParamsBuffer, ReplaceParameterNodeWithVariable_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InCPPType_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:RenameVariable
    static readonly IntPtr RenameVariable_NativeFunction;
    static readonly int RenameVariable_ParamsSize;
    static readonly int RenameVariable_InOldName_Offset;
    static readonly int RenameVariable_InNewName_Offset;
    static readonly int RenameVariable_bSetupUndoRedo_Offset;
    static readonly int RenameVariable_ReturnValue_Offset;
    
    [Obsolete("This function is obsolete")]
    public bool RenameVariable(Name inOldName, Name inNewName, bool bSetupUndoRedo = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RenameVariable_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, RenameVariable_InOldName_Offset), 0, null, inOldName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, RenameVariable_InNewName_Offset), 0, null, inNewName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RenameVariable_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RenameVariable_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RenameVariable_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:RenameParameter
    static readonly IntPtr RenameParameter_NativeFunction;
    static readonly int RenameParameter_ParamsSize;
    static readonly int RenameParameter_InOldName_Offset;
    static readonly int RenameParameter_InNewName_Offset;
    static readonly int RenameParameter_bSetupUndoRedo_Offset;
    static readonly int RenameParameter_ReturnValue_Offset;
    
    [Obsolete("This function is obsolete")]
    public bool RenameParameter(Name inOldName, Name inNewName, bool bSetupUndoRedo = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RenameParameter_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, RenameParameter_InOldName_Offset), 0, null, inOldName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, RenameParameter_InNewName_Offset), 0, null, inNewName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RenameParameter_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RenameParameter_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RenameParameter_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:RenameNode
    static readonly IntPtr RenameNode_NativeFunction;
    static readonly int RenameNode_ParamsSize;
    static readonly int RenameNode_InNode_Offset;
    static readonly int RenameNode_InNewName_Offset;
    static readonly int RenameNode_bSetupUndoRedo_Offset;
    static readonly int RenameNode_bPrintPythonCommand_Offset;
    static readonly int RenameNode_ReturnValue_Offset;
    
    public bool RenameNode(UnrealSharp.RigVMDeveloper.RigVMNode inNode, Name inNewName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RenameNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMNode>.ToNative(IntPtr.Add(ParamsBuffer, RenameNode_InNode_Offset), 0, null, inNode);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, RenameNode_InNewName_Offset), 0, null, inNewName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RenameNode_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RenameNode_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RenameNode_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RenameNode_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:RenameLocalVariable
    static readonly IntPtr RenameLocalVariable_NativeFunction;
    static readonly int RenameLocalVariable_ParamsSize;
    static readonly int RenameLocalVariable_InVariableName_Offset;
    static readonly int RenameLocalVariable_InNewVariableName_Offset;
    static readonly int RenameLocalVariable_bSetupUndoRedo_Offset;
    static readonly int RenameLocalVariable_bPrintPythonCommand_Offset;
    static readonly int RenameLocalVariable_ReturnValue_Offset;
    
    public bool RenameLocalVariable(Name inVariableName, Name inNewVariableName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RenameLocalVariable_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, RenameLocalVariable_InVariableName_Offset), 0, null, inVariableName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, RenameLocalVariable_InNewVariableName_Offset), 0, null, inNewVariableName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RenameLocalVariable_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RenameLocalVariable_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RenameLocalVariable_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RenameLocalVariable_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:RenameFunction
    static readonly IntPtr RenameFunction_NativeFunction;
    static readonly int RenameFunction_ParamsSize;
    static readonly int RenameFunction_InOldFunctionName_Offset;
    static readonly int RenameFunction_InNewFunctionName_Offset;
    static readonly int RenameFunction_bSetupUndoRedo_Offset;
    static readonly int RenameFunction_ReturnValue_Offset;
    
    public bool RenameFunction(Name inOldFunctionName, Name inNewFunctionName, bool bSetupUndoRedo = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RenameFunction_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, RenameFunction_InOldFunctionName_Offset), 0, null, inOldFunctionName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, RenameFunction_InNewFunctionName_Offset), 0, null, inNewFunctionName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RenameFunction_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RenameFunction_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RenameFunction_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:RenameExposedPin
    static readonly IntPtr RenameExposedPin_NativeFunction;
    static readonly int RenameExposedPin_ParamsSize;
    static readonly int RenameExposedPin_InOldPinName_Offset;
    static readonly int RenameExposedPin_InNewPinName_Offset;
    static readonly int RenameExposedPin_bSetupUndoRedo_Offset;
    static readonly int RenameExposedPin_bPrintPythonCommand_Offset;
    static readonly int RenameExposedPin_ReturnValue_Offset;
    
    public bool RenameExposedPin(Name inOldPinName, Name inNewPinName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RenameExposedPin_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, RenameExposedPin_InOldPinName_Offset), 0, null, inOldPinName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, RenameExposedPin_InNewPinName_Offset), 0, null, inNewPinName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RenameExposedPin_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RenameExposedPin_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RenameExposedPin_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RenameExposedPin_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:RemoveNodesByName
    static readonly IntPtr RemoveNodesByName_NativeFunction;
    static readonly int RemoveNodesByName_ParamsSize;
    static readonly int RemoveNodesByName_InNodeNames_Offset;
    static readonly int RemoveNodesByName_InNodeNames_ElementSize;
    static readonly int RemoveNodesByName_bSetupUndoRedo_Offset;
    static readonly int RemoveNodesByName_bPrintPythonCommand_Offset;
    static readonly int RemoveNodesByName_ReturnValue_Offset;
    
    public bool RemoveNodesByName(System.Collections.Generic.IList<Name> inNodeNames, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveNodesByName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InNodeNames_NativeBuffer = IntPtr.Add(ParamsBuffer, RemoveNodesByName_InNodeNames_Offset);
            UnrealArrayCopyMarshaler<Name> InNodeNames_Marshaler = new UnrealArrayCopyMarshaler<Name>(1, BlittableMarshaller<Name>.ToNative, BlittableMarshaller<Name>.FromNative, RemoveNodesByName_InNodeNames_ElementSize);
            InNodeNames_Marshaler.ToNative(InNodeNames_NativeBuffer, 0, null, inNodeNames);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveNodesByName_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveNodesByName_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveNodesByName_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveNodesByName_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:RemoveNodes
    static readonly IntPtr RemoveNodes_NativeFunction;
    static readonly int RemoveNodes_ParamsSize;
    static readonly int RemoveNodes_InNodes_Offset;
    static readonly int RemoveNodes_InNodes_ElementSize;
    static readonly int RemoveNodes_bSetupUndoRedo_Offset;
    static readonly int RemoveNodes_bPrintPythonCommand_Offset;
    static readonly int RemoveNodes_ReturnValue_Offset;
    
    public bool RemoveNodes(System.Collections.Generic.IList<UnrealSharp.RigVMDeveloper.RigVMNode> inNodes, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveNodes_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InNodes_NativeBuffer = IntPtr.Add(ParamsBuffer, RemoveNodes_InNodes_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.RigVMDeveloper.RigVMNode> InNodes_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.RigVMDeveloper.RigVMNode>(1, ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMNode>.ToNative, ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMNode>.FromNative, RemoveNodes_InNodes_ElementSize);
            InNodes_Marshaler.ToNative(InNodes_NativeBuffer, 0, null, inNodes);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveNodes_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveNodes_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveNodes_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveNodes_ReturnValue_Offset), 0, null);
            
            UnrealArrayCopyMarshaler<UnrealSharp.RigVMDeveloper.RigVMNode>.DestructInstance(InNodes_NativeBuffer, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:RemoveNodeByName
    static readonly IntPtr RemoveNodeByName_NativeFunction;
    static readonly int RemoveNodeByName_ParamsSize;
    static readonly int RemoveNodeByName_InNodeName_Offset;
    static readonly int RemoveNodeByName_bSetupUndoRedo_Offset;
    static readonly int RemoveNodeByName_bPrintPythonCommand_Offset;
    static readonly int RemoveNodeByName_ReturnValue_Offset;
    
    public bool RemoveNodeByName(Name inNodeName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveNodeByName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, RemoveNodeByName_InNodeName_Offset), 0, null, inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveNodeByName_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveNodeByName_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveNodeByName_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveNodeByName_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:RemoveNode
    static readonly IntPtr RemoveNode_NativeFunction;
    static readonly int RemoveNode_ParamsSize;
    static readonly int RemoveNode_InNode_Offset;
    static readonly int RemoveNode_bSetupUndoRedo_Offset;
    static readonly int RemoveNode_bPrintPythonCommand_Offset;
    static readonly int RemoveNode_ReturnValue_Offset;
    
    public bool RemoveNode(UnrealSharp.RigVMDeveloper.RigVMNode inNode, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMNode>.ToNative(IntPtr.Add(ParamsBuffer, RemoveNode_InNode_Offset), 0, null, inNode);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveNode_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveNode_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveNode_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveNode_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:RemoveLocalVariable
    static readonly IntPtr RemoveLocalVariable_NativeFunction;
    static readonly int RemoveLocalVariable_ParamsSize;
    static readonly int RemoveLocalVariable_InVariableName_Offset;
    static readonly int RemoveLocalVariable_bSetupUndoRedo_Offset;
    static readonly int RemoveLocalVariable_bPrintPythonCommand_Offset;
    static readonly int RemoveLocalVariable_ReturnValue_Offset;
    
    public bool RemoveLocalVariable(Name inVariableName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveLocalVariable_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, RemoveLocalVariable_InVariableName_Offset), 0, null, inVariableName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveLocalVariable_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveLocalVariable_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveLocalVariable_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveLocalVariable_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:RemoveInjectedNode
    static readonly IntPtr RemoveInjectedNode_NativeFunction;
    static readonly int RemoveInjectedNode_ParamsSize;
    static readonly int RemoveInjectedNode_InPinPath_Offset;
    static readonly int RemoveInjectedNode_bAsInput_Offset;
    static readonly int RemoveInjectedNode_bSetupUndoRedo_Offset;
    static readonly int RemoveInjectedNode_bPrintPythonCommand_Offset;
    static readonly int RemoveInjectedNode_ReturnValue_Offset;
    
    public bool RemoveInjectedNode(string inPinPath, bool bAsInput, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveInjectedNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPinPath_NativePtr = IntPtr.Add(ParamsBuffer,RemoveInjectedNode_InPinPath_Offset);
            StringMarshaller.ToNative(InPinPath_NativePtr,0,null,inPinPath);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveInjectedNode_bAsInput_Offset), 0, null, bAsInput);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveInjectedNode_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveInjectedNode_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveInjectedNode_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveInjectedNode_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InPinPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:RemoveFunctionFromLibrary
    static readonly IntPtr RemoveFunctionFromLibrary_NativeFunction;
    static readonly int RemoveFunctionFromLibrary_ParamsSize;
    static readonly int RemoveFunctionFromLibrary_InFunctionName_Offset;
    static readonly int RemoveFunctionFromLibrary_bSetupUndoRedo_Offset;
    static readonly int RemoveFunctionFromLibrary_ReturnValue_Offset;
    
    public bool RemoveFunctionFromLibrary(Name inFunctionName, bool bSetupUndoRedo = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveFunctionFromLibrary_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, RemoveFunctionFromLibrary_InFunctionName_Offset), 0, null, inFunctionName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveFunctionFromLibrary_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveFunctionFromLibrary_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveFunctionFromLibrary_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:RemoveExposedPin
    static readonly IntPtr RemoveExposedPin_NativeFunction;
    static readonly int RemoveExposedPin_ParamsSize;
    static readonly int RemoveExposedPin_InPinName_Offset;
    static readonly int RemoveExposedPin_bSetupUndoRedo_Offset;
    static readonly int RemoveExposedPin_bPrintPythonCommand_Offset;
    static readonly int RemoveExposedPin_ReturnValue_Offset;
    
    public bool RemoveExposedPin(Name inPinName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveExposedPin_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, RemoveExposedPin_InPinName_Offset), 0, null, inPinName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveExposedPin_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveExposedPin_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveExposedPin_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveExposedPin_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:RemoveDecorator
    static readonly IntPtr RemoveDecorator_NativeFunction;
    static readonly int RemoveDecorator_ParamsSize;
    static readonly int RemoveDecorator_InNodeName_Offset;
    static readonly int RemoveDecorator_InDecoratorName_Offset;
    static readonly int RemoveDecorator_bSetupUndoRedo_Offset;
    static readonly int RemoveDecorator_bPrintPythonCommand_Offset;
    static readonly int RemoveDecorator_ReturnValue_Offset;
    
    public bool RemoveDecorator(Name inNodeName, Name inDecoratorName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveDecorator_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, RemoveDecorator_InNodeName_Offset), 0, null, inNodeName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, RemoveDecorator_InDecoratorName_Offset), 0, null, inDecoratorName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveDecorator_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveDecorator_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveDecorator_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveDecorator_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:RemoveArrayPin
    static readonly IntPtr RemoveArrayPin_NativeFunction;
    static readonly int RemoveArrayPin_ParamsSize;
    static readonly int RemoveArrayPin_InArrayElementPinPath_Offset;
    static readonly int RemoveArrayPin_bSetupUndoRedo_Offset;
    static readonly int RemoveArrayPin_bPrintPythonCommand_Offset;
    static readonly int RemoveArrayPin_ReturnValue_Offset;
    
    public bool RemoveArrayPin(string inArrayElementPinPath, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveArrayPin_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InArrayElementPinPath_NativePtr = IntPtr.Add(ParamsBuffer,RemoveArrayPin_InArrayElementPinPath_Offset);
            StringMarshaller.ToNative(InArrayElementPinPath_NativePtr,0,null,inArrayElementPinPath);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveArrayPin_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveArrayPin_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveArrayPin_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveArrayPin_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InArrayElementPinPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:RemoveAggregatePin
    static readonly IntPtr RemoveAggregatePin_NativeFunction;
    static readonly int RemoveAggregatePin_ParamsSize;
    static readonly int RemoveAggregatePin_InPinPath_Offset;
    static readonly int RemoveAggregatePin_bSetupUndoRedo_Offset;
    static readonly int RemoveAggregatePin_bPrintPythonCommand_Offset;
    static readonly int RemoveAggregatePin_ReturnValue_Offset;
    
    public bool RemoveAggregatePin(string inPinPath, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveAggregatePin_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPinPath_NativePtr = IntPtr.Add(ParamsBuffer,RemoveAggregatePin_InPinPath_Offset);
            StringMarshaller.ToNative(InPinPath_NativePtr,0,null,inPinPath);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveAggregatePin_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveAggregatePin_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveAggregatePin_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveAggregatePin_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InPinPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:RefreshVariableNode
    static readonly IntPtr RefreshVariableNode_NativeFunction;
    static readonly int RefreshVariableNode_ParamsSize;
    static readonly int RefreshVariableNode_InNodeName_Offset;
    static readonly int RefreshVariableNode_InVariableName_Offset;
    static readonly int RefreshVariableNode_InCPPType_Offset;
    static readonly int RefreshVariableNode_InCPPTypeObject_Offset;
    static readonly int RefreshVariableNode_bSetupUndoRedo_Offset;
    static readonly int RefreshVariableNode_bSetupOrphanPins_Offset;
    
    public void RefreshVariableNode(Name inNodeName, Name inVariableName, string inCPPType, UnrealSharp.CoreUObject.Object inCPPTypeObject, bool bSetupUndoRedo, bool bSetupOrphanPins = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RefreshVariableNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, RefreshVariableNode_InNodeName_Offset), 0, null, inNodeName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, RefreshVariableNode_InVariableName_Offset), 0, null, inVariableName);
            IntPtr InCPPType_NativePtr = IntPtr.Add(ParamsBuffer,RefreshVariableNode_InCPPType_Offset);
            StringMarshaller.ToNative(InCPPType_NativePtr,0,null,inCPPType);
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, RefreshVariableNode_InCPPTypeObject_Offset), 0, null, inCPPTypeObject);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RefreshVariableNode_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RefreshVariableNode_bSetupOrphanPins_Offset), 0, null, bSetupOrphanPins);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RefreshVariableNode_NativeFunction, ParamsBuffer);
            
            
            StringMarshaller.DestructInstance(InCPPType_NativePtr, 0);
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:Redo
    static readonly IntPtr Redo_NativeFunction;
    static readonly int Redo_ParamsSize;
    static readonly int Redo_ReturnValue_Offset;
    
    public bool Redo()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Redo_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, Redo_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, Redo_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:PushGraph
    static readonly IntPtr PushGraph_NativeFunction;
    static readonly int PushGraph_ParamsSize;
    static readonly int PushGraph_InGraph_Offset;
    static readonly int PushGraph_bSetupUndoRedo_Offset;
    static readonly int PushGraph_ReturnValue_Offset;
    
    [Obsolete("Function has been deprecated, please rely on GetControllerForGraph instead.")]
    public bool PushGraph(UnrealSharp.RigVMDeveloper.RigVMGraph inGraph, bool bSetupUndoRedo = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[PushGraph_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMGraph>.ToNative(IntPtr.Add(ParamsBuffer, PushGraph_InGraph_Offset), 0, null, inGraph);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, PushGraph_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, PushGraph_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, PushGraph_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:PromotePinToVariable
    static readonly IntPtr PromotePinToVariable_NativeFunction;
    static readonly int PromotePinToVariable_ParamsSize;
    static readonly int PromotePinToVariable_InPinPath_Offset;
    static readonly int PromotePinToVariable_bCreateVariableNode_Offset;
    static readonly int PromotePinToVariable_InNodePosition_Offset;
    static readonly int PromotePinToVariable_bSetupUndoRedo_Offset;
    static readonly int PromotePinToVariable_bPrintPythonCommand_Offset;
    static readonly int PromotePinToVariable_ReturnValue_Offset;
    
    public bool PromotePinToVariable(string inPinPath, bool bCreateVariableNode, System.DoubleNumerics.Vector2 inNodePosition, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[PromotePinToVariable_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPinPath_NativePtr = IntPtr.Add(ParamsBuffer,PromotePinToVariable_InPinPath_Offset);
            StringMarshaller.ToNative(InPinPath_NativePtr,0,null,inPinPath);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, PromotePinToVariable_bCreateVariableNode_Offset), 0, null, bCreateVariableNode);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, PromotePinToVariable_InNodePosition_Offset), 0, null, inNodePosition);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, PromotePinToVariable_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, PromotePinToVariable_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, PromotePinToVariable_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, PromotePinToVariable_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InPinPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:PromoteFunctionReferenceNodeToCollapseNode
    static readonly IntPtr PromoteFunctionReferenceNodeToCollapseNode_NativeFunction;
    static readonly int PromoteFunctionReferenceNodeToCollapseNode_ParamsSize;
    static readonly int PromoteFunctionReferenceNodeToCollapseNode_InNodeName_Offset;
    static readonly int PromoteFunctionReferenceNodeToCollapseNode_bSetupUndoRedo_Offset;
    static readonly int PromoteFunctionReferenceNodeToCollapseNode_bPrintPythonCommand_Offset;
    static readonly int PromoteFunctionReferenceNodeToCollapseNode_bRemoveFunctionDefinition_Offset;
    static readonly int PromoteFunctionReferenceNodeToCollapseNode_ReturnValue_Offset;
    
    public Name PromoteFunctionReferenceNodeToCollapseNode(Name inNodeName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false, bool bRemoveFunctionDefinition = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[PromoteFunctionReferenceNodeToCollapseNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, PromoteFunctionReferenceNodeToCollapseNode_InNodeName_Offset), 0, null, inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, PromoteFunctionReferenceNodeToCollapseNode_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, PromoteFunctionReferenceNodeToCollapseNode_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, PromoteFunctionReferenceNodeToCollapseNode_bRemoveFunctionDefinition_Offset), 0, null, bRemoveFunctionDefinition);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, PromoteFunctionReferenceNodeToCollapseNode_NativeFunction, ParamsBuffer);
            
            Name returnValue;
            returnValue = BlittableMarshaller<Name>.FromNative(IntPtr.Add(ParamsBuffer, PromoteFunctionReferenceNodeToCollapseNode_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:PromoteCollapseNodeToFunctionReferenceNode
    static readonly IntPtr PromoteCollapseNodeToFunctionReferenceNode_NativeFunction;
    static readonly int PromoteCollapseNodeToFunctionReferenceNode_ParamsSize;
    static readonly int PromoteCollapseNodeToFunctionReferenceNode_InNodeName_Offset;
    static readonly int PromoteCollapseNodeToFunctionReferenceNode_bSetupUndoRedo_Offset;
    static readonly int PromoteCollapseNodeToFunctionReferenceNode_bPrintPythonCommand_Offset;
    static readonly int PromoteCollapseNodeToFunctionReferenceNode_InExistingFunctionDefinitionPath_Offset;
    static readonly int PromoteCollapseNodeToFunctionReferenceNode_ReturnValue_Offset;
    
    public Name PromoteCollapseNodeToFunctionReferenceNode(Name inNodeName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false, string inExistingFunctionDefinitionPath = "")
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[PromoteCollapseNodeToFunctionReferenceNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, PromoteCollapseNodeToFunctionReferenceNode_InNodeName_Offset), 0, null, inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, PromoteCollapseNodeToFunctionReferenceNode_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, PromoteCollapseNodeToFunctionReferenceNode_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            IntPtr InExistingFunctionDefinitionPath_NativePtr = IntPtr.Add(ParamsBuffer,PromoteCollapseNodeToFunctionReferenceNode_InExistingFunctionDefinitionPath_Offset);
            StringMarshaller.ToNative(InExistingFunctionDefinitionPath_NativePtr,0,null,inExistingFunctionDefinitionPath);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, PromoteCollapseNodeToFunctionReferenceNode_NativeFunction, ParamsBuffer);
            
            Name returnValue;
            returnValue = BlittableMarshaller<Name>.FromNative(IntPtr.Add(ParamsBuffer, PromoteCollapseNodeToFunctionReferenceNode_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InExistingFunctionDefinitionPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:PopGraph
    static readonly IntPtr PopGraph_NativeFunction;
    static readonly int PopGraph_ParamsSize;
    static readonly int PopGraph_bSetupUndoRedo_Offset;
    static readonly int PopGraph_ReturnValue_Offset;
    
    [Obsolete("Function has been deprecated, please rely on GetControllerForGraph instead.")]
    public UnrealSharp.RigVMDeveloper.RigVMGraph PopGraph(bool bSetupUndoRedo = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[PopGraph_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, PopGraph_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, PopGraph_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMGraph returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMGraph>.FromNative(IntPtr.Add(ParamsBuffer, PopGraph_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:PerformUserWorkflow
    static readonly IntPtr PerformUserWorkflow_NativeFunction;
    static readonly int PerformUserWorkflow_ParamsSize;
    static readonly int PerformUserWorkflow_InWorkflow_Offset;
    static readonly int PerformUserWorkflow_InOptions_Offset;
    static readonly int PerformUserWorkflow_bSetupUndoRedo_Offset;
    static readonly int PerformUserWorkflow_ReturnValue_Offset;
    
    public bool PerformUserWorkflow(UnrealSharp.RigVM.RigVMUserWorkflow inWorkflow, UnrealSharp.RigVM.RigVMUserWorkflowOptions inOptions, bool bSetupUndoRedo = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[PerformUserWorkflow_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.RigVM.RigVMUserWorkflowMarshaler.ToNative(IntPtr.Add(ParamsBuffer, PerformUserWorkflow_InWorkflow_Offset), 0, null, inWorkflow);
            ObjectMarshaller<UnrealSharp.RigVM.RigVMUserWorkflowOptions>.ToNative(IntPtr.Add(ParamsBuffer, PerformUserWorkflow_InOptions_Offset), 0, null, inOptions);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, PerformUserWorkflow_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, PerformUserWorkflow_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, PerformUserWorkflow_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:OpenUndoBracket
    static readonly IntPtr OpenUndoBracket_NativeFunction;
    static readonly int OpenUndoBracket_ParamsSize;
    static readonly int OpenUndoBracket_InTitle_Offset;
    static readonly int OpenUndoBracket_ReturnValue_Offset;
    
    public bool OpenUndoBracket(string inTitle)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[OpenUndoBracket_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InTitle_NativePtr = IntPtr.Add(ParamsBuffer,OpenUndoBracket_InTitle_Offset);
            StringMarshaller.ToNative(InTitle_NativePtr,0,null,inTitle);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, OpenUndoBracket_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, OpenUndoBracket_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InTitle_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:MarkFunctionAsPublic
    static readonly IntPtr MarkFunctionAsPublic_NativeFunction;
    static readonly int MarkFunctionAsPublic_ParamsSize;
    static readonly int MarkFunctionAsPublic_InFunctionName_Offset;
    static readonly int MarkFunctionAsPublic_bInIsPublic_Offset;
    static readonly int MarkFunctionAsPublic_bSetupUndoRedo_Offset;
    static readonly int MarkFunctionAsPublic_bPrintPythonCommand_Offset;
    static readonly int MarkFunctionAsPublic_ReturnValue_Offset;
    
    public bool MarkFunctionAsPublic(Name inFunctionName, bool bInIsPublic, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[MarkFunctionAsPublic_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, MarkFunctionAsPublic_InFunctionName_Offset), 0, null, inFunctionName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, MarkFunctionAsPublic_bInIsPublic_Offset), 0, null, bInIsPublic);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, MarkFunctionAsPublic_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, MarkFunctionAsPublic_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, MarkFunctionAsPublic_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, MarkFunctionAsPublic_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:MakeVariableNodeFromBinding
    static readonly IntPtr MakeVariableNodeFromBinding_NativeFunction;
    static readonly int MakeVariableNodeFromBinding_ParamsSize;
    static readonly int MakeVariableNodeFromBinding_InPinPath_Offset;
    static readonly int MakeVariableNodeFromBinding_InNodePosition_Offset;
    static readonly int MakeVariableNodeFromBinding_bSetupUndoRedo_Offset;
    static readonly int MakeVariableNodeFromBinding_bPrintPythonCommand_Offset;
    static readonly int MakeVariableNodeFromBinding_ReturnValue_Offset;
    
    public bool MakeVariableNodeFromBinding(string inPinPath, System.DoubleNumerics.Vector2 inNodePosition, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[MakeVariableNodeFromBinding_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPinPath_NativePtr = IntPtr.Add(ParamsBuffer,MakeVariableNodeFromBinding_InPinPath_Offset);
            StringMarshaller.ToNative(InPinPath_NativePtr,0,null,inPinPath);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, MakeVariableNodeFromBinding_InNodePosition_Offset), 0, null, inNodePosition);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, MakeVariableNodeFromBinding_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, MakeVariableNodeFromBinding_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, MakeVariableNodeFromBinding_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, MakeVariableNodeFromBinding_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InPinPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:MakeOptionsForWorkflow
    static readonly IntPtr MakeOptionsForWorkflow_NativeFunction;
    static readonly int MakeOptionsForWorkflow_ParamsSize;
    static readonly int MakeOptionsForWorkflow_InSubject_Offset;
    static readonly int MakeOptionsForWorkflow_InWorkflow_Offset;
    static readonly int MakeOptionsForWorkflow_ReturnValue_Offset;
    
    public UnrealSharp.RigVM.RigVMUserWorkflowOptions MakeOptionsForWorkflow(UnrealSharp.CoreUObject.Object inSubject, UnrealSharp.RigVM.RigVMUserWorkflow inWorkflow)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[MakeOptionsForWorkflow_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, MakeOptionsForWorkflow_InSubject_Offset), 0, null, inSubject);
            UnrealSharp.RigVM.RigVMUserWorkflowMarshaler.ToNative(IntPtr.Add(ParamsBuffer, MakeOptionsForWorkflow_InWorkflow_Offset), 0, null, inWorkflow);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, MakeOptionsForWorkflow_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVM.RigVMUserWorkflowOptions returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVM.RigVMUserWorkflowOptions>.FromNative(IntPtr.Add(ParamsBuffer, MakeOptionsForWorkflow_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:MakeBindingsFromVariableNode
    static readonly IntPtr MakeBindingsFromVariableNode_NativeFunction;
    static readonly int MakeBindingsFromVariableNode_ParamsSize;
    static readonly int MakeBindingsFromVariableNode_InNodeName_Offset;
    static readonly int MakeBindingsFromVariableNode_bSetupUndoRedo_Offset;
    static readonly int MakeBindingsFromVariableNode_bPrintPythonCommand_Offset;
    static readonly int MakeBindingsFromVariableNode_ReturnValue_Offset;
    
    public bool MakeBindingsFromVariableNode(Name inNodeName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[MakeBindingsFromVariableNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, MakeBindingsFromVariableNode_InNodeName_Offset), 0, null, inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, MakeBindingsFromVariableNode_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, MakeBindingsFromVariableNode_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, MakeBindingsFromVariableNode_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, MakeBindingsFromVariableNode_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:LocalizeFunctionFromPath
    static readonly IntPtr LocalizeFunctionFromPath_NativeFunction;
    static readonly int LocalizeFunctionFromPath_ParamsSize;
    static readonly int LocalizeFunctionFromPath_InHostPath_Offset;
    static readonly int LocalizeFunctionFromPath_InFunctionName_Offset;
    static readonly int LocalizeFunctionFromPath_bLocalizeDependentPrivateFunctions_Offset;
    static readonly int LocalizeFunctionFromPath_bSetupUndoRedo_Offset;
    static readonly int LocalizeFunctionFromPath_bPrintPythonCommand_Offset;
    static readonly int LocalizeFunctionFromPath_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMLibraryNode LocalizeFunctionFromPath(string inHostPath, Name inFunctionName, bool bLocalizeDependentPrivateFunctions = true, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[LocalizeFunctionFromPath_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InHostPath_NativePtr = IntPtr.Add(ParamsBuffer,LocalizeFunctionFromPath_InHostPath_Offset);
            StringMarshaller.ToNative(InHostPath_NativePtr,0,null,inHostPath);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, LocalizeFunctionFromPath_InFunctionName_Offset), 0, null, inFunctionName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, LocalizeFunctionFromPath_bLocalizeDependentPrivateFunctions_Offset), 0, null, bLocalizeDependentPrivateFunctions);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, LocalizeFunctionFromPath_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, LocalizeFunctionFromPath_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, LocalizeFunctionFromPath_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMLibraryNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMLibraryNode>.FromNative(IntPtr.Add(ParamsBuffer, LocalizeFunctionFromPath_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InHostPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:LocalizeFunction
    static readonly IntPtr LocalizeFunction_NativeFunction;
    static readonly int LocalizeFunction_ParamsSize;
    static readonly int LocalizeFunction_InFunctionDefinition_Offset;
    static readonly int LocalizeFunction_bLocalizeDependentPrivateFunctions_Offset;
    static readonly int LocalizeFunction_bSetupUndoRedo_Offset;
    static readonly int LocalizeFunction_bPrintPythonCommand_Offset;
    static readonly int LocalizeFunction_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMLibraryNode LocalizeFunction(UnrealSharp.RigVM.RigVMGraphFunctionIdentifier inFunctionDefinition, bool bLocalizeDependentPrivateFunctions = true, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[LocalizeFunction_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.RigVM.RigVMGraphFunctionIdentifierMarshaler.ToNative(IntPtr.Add(ParamsBuffer, LocalizeFunction_InFunctionDefinition_Offset), 0, null, inFunctionDefinition);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, LocalizeFunction_bLocalizeDependentPrivateFunctions_Offset), 0, null, bLocalizeDependentPrivateFunctions);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, LocalizeFunction_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, LocalizeFunction_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, LocalizeFunction_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMLibraryNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMLibraryNode>.FromNative(IntPtr.Add(ParamsBuffer, LocalizeFunction_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:IsTransacting
    static readonly IntPtr IsTransacting_NativeFunction;
    static readonly int IsTransacting_ParamsSize;
    static readonly int IsTransacting_ReturnValue_Offset;
    
    public bool IsTransacting()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsTransacting_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsTransacting_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsTransacting_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:IsReportingEnabled
    static readonly IntPtr IsReportingEnabled_NativeFunction;
    static readonly int IsReportingEnabled_ParamsSize;
    static readonly int IsReportingEnabled_ReturnValue_Offset;
    
    public bool IsReportingEnabled()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsReportingEnabled_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsReportingEnabled_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsReportingEnabled_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:IsFunctionPublic
    static readonly IntPtr IsFunctionPublic_NativeFunction;
    static readonly int IsFunctionPublic_ParamsSize;
    static readonly int IsFunctionPublic_InFunctionName_Offset;
    static readonly int IsFunctionPublic_ReturnValue_Offset;
    
    public bool IsFunctionPublic(Name inFunctionName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsFunctionPublic_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, IsFunctionPublic_InFunctionName_Offset), 0, null, inFunctionName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsFunctionPublic_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsFunctionPublic_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:InsertArrayPin
    static readonly IntPtr InsertArrayPin_NativeFunction;
    static readonly int InsertArrayPin_ParamsSize;
    static readonly int InsertArrayPin_InArrayPinPath_Offset;
    static readonly int InsertArrayPin_InIndex_Offset;
    static readonly int InsertArrayPin_InDefaultValue_Offset;
    static readonly int InsertArrayPin_bSetupUndoRedo_Offset;
    static readonly int InsertArrayPin_bPrintPythonCommand_Offset;
    static readonly int InsertArrayPin_ReturnValue_Offset;
    
    public string InsertArrayPin(string inArrayPinPath, int inIndex = -1, string inDefaultValue = "", bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[InsertArrayPin_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InArrayPinPath_NativePtr = IntPtr.Add(ParamsBuffer,InsertArrayPin_InArrayPinPath_Offset);
            StringMarshaller.ToNative(InArrayPinPath_NativePtr,0,null,inArrayPinPath);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, InsertArrayPin_InIndex_Offset), 0, null, inIndex);
            IntPtr InDefaultValue_NativePtr = IntPtr.Add(ParamsBuffer,InsertArrayPin_InDefaultValue_Offset);
            StringMarshaller.ToNative(InDefaultValue_NativePtr,0,null,inDefaultValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, InsertArrayPin_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, InsertArrayPin_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, InsertArrayPin_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,InsertArrayPin_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            StringMarshaller.DestructInstance(InArrayPinPath_NativePtr, 0);
            StringMarshaller.DestructInstance(InDefaultValue_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:ImportNodesFromText
    static readonly IntPtr ImportNodesFromText_NativeFunction;
    static readonly int ImportNodesFromText_ParamsSize;
    static readonly int ImportNodesFromText_InText_Offset;
    static readonly int ImportNodesFromText_bSetupUndoRedo_Offset;
    static readonly int ImportNodesFromText_bPrintPythonCommands_Offset;
    static readonly int ImportNodesFromText_ReturnValue_Offset;
    static readonly int ImportNodesFromText_ReturnValue_ElementSize;
    
    public System.Collections.Generic.IList<Name> ImportNodesFromText(string inText, bool bSetupUndoRedo = true, bool bPrintPythonCommands = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ImportNodesFromText_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InText_NativePtr = IntPtr.Add(ParamsBuffer,ImportNodesFromText_InText_Offset);
            StringMarshaller.ToNative(InText_NativePtr,0,null,inText);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ImportNodesFromText_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ImportNodesFromText_bPrintPythonCommands_Offset), 0, null, bPrintPythonCommands);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ImportNodesFromText_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<Name> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, ImportNodesFromText_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<Name> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<Name> (1, BlittableMarshaller<Name>.ToNative, BlittableMarshaller<Name>.FromNative, ImportNodesFromText_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<Name>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            StringMarshaller.DestructInstance(InText_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:GetUnitStructsForTemplate
    static readonly IntPtr GetUnitStructsForTemplate_NativeFunction;
    static readonly int GetUnitStructsForTemplate_ParamsSize;
    static readonly int GetUnitStructsForTemplate_InNotation_Offset;
    static readonly int GetUnitStructsForTemplate_ReturnValue_Offset;
    static readonly int GetUnitStructsForTemplate_ReturnValue_ElementSize;
    
    public static System.Collections.Generic.IList<UnrealSharp.CoreUObject.ScriptStruct> GetUnitStructsForTemplate(Name inNotation)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetUnitStructsForTemplate_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetUnitStructsForTemplate_InNotation_Offset), 0, null, inNotation);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetUnitStructsForTemplate_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.CoreUObject.ScriptStruct> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, GetUnitStructsForTemplate_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.ScriptStruct> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.ScriptStruct> (1, ObjectMarshaller<UnrealSharp.CoreUObject.ScriptStruct>.ToNative, ObjectMarshaller<UnrealSharp.CoreUObject.ScriptStruct>.FromNative, GetUnitStructsForTemplate_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.ScriptStruct>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:GetTopLevelGraph
    static readonly IntPtr GetTopLevelGraph_NativeFunction;
    static readonly int GetTopLevelGraph_ParamsSize;
    static readonly int GetTopLevelGraph_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMGraph GetTopLevelGraph()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetTopLevelGraph_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetTopLevelGraph_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMGraph returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMGraph>.FromNative(IntPtr.Add(ParamsBuffer, GetTopLevelGraph_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:GetTemplateForUnitStruct
    static readonly IntPtr GetTemplateForUnitStruct_NativeFunction;
    static readonly int GetTemplateForUnitStruct_ParamsSize;
    static readonly int GetTemplateForUnitStruct_InFunction_Offset;
    static readonly int GetTemplateForUnitStruct_InMethodName_Offset;
    static readonly int GetTemplateForUnitStruct_ReturnValue_Offset;
    
    public static string GetTemplateForUnitStruct(UnrealSharp.CoreUObject.ScriptStruct inFunction, string inMethodName = "Execute")
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetTemplateForUnitStruct_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.ScriptStruct>.ToNative(IntPtr.Add(ParamsBuffer, GetTemplateForUnitStruct_InFunction_Offset), 0, null, inFunction);
            IntPtr InMethodName_NativePtr = IntPtr.Add(ParamsBuffer,GetTemplateForUnitStruct_InMethodName_Offset);
            StringMarshaller.ToNative(InMethodName_NativePtr,0,null,inMethodName);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetTemplateForUnitStruct_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetTemplateForUnitStruct_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            StringMarshaller.DestructInstance(InMethodName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:GetSchema
    static readonly IntPtr GetSchema_NativeFunction;
    static readonly int GetSchema_ParamsSize;
    static readonly int GetSchema_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMSchema GetSchema()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSchema_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSchema_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMSchema returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMSchema>.FromNative(IntPtr.Add(ParamsBuffer, GetSchema_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:GetRegisteredUnitStructs
    static readonly IntPtr GetRegisteredUnitStructs_NativeFunction;
    static readonly int GetRegisteredUnitStructs_ParamsSize;
    static readonly int GetRegisteredUnitStructs_ReturnValue_Offset;
    static readonly int GetRegisteredUnitStructs_ReturnValue_ElementSize;
    
    public static System.Collections.Generic.IList<UnrealSharp.CoreUObject.ScriptStruct> GetRegisteredUnitStructs()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetRegisteredUnitStructs_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetRegisteredUnitStructs_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.CoreUObject.ScriptStruct> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, GetRegisteredUnitStructs_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.ScriptStruct> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.ScriptStruct> (1, ObjectMarshaller<UnrealSharp.CoreUObject.ScriptStruct>.ToNative, ObjectMarshaller<UnrealSharp.CoreUObject.ScriptStruct>.FromNative, GetRegisteredUnitStructs_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.ScriptStruct>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:GetPinDefaultValue
    static readonly IntPtr GetPinDefaultValue_NativeFunction;
    static readonly int GetPinDefaultValue_ParamsSize;
    static readonly int GetPinDefaultValue_InPinPath_Offset;
    static readonly int GetPinDefaultValue_ReturnValue_Offset;
    
    public string GetPinDefaultValue(string inPinPath)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetPinDefaultValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPinPath_NativePtr = IntPtr.Add(ParamsBuffer,GetPinDefaultValue_InPinPath_Offset);
            StringMarshaller.ToNative(InPinPath_NativePtr,0,null,inPinPath);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetPinDefaultValue_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetPinDefaultValue_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            StringMarshaller.DestructInstance(InPinPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:GetGraph
    static readonly IntPtr GetGraph_NativeFunction;
    static readonly int GetGraph_ParamsSize;
    static readonly int GetGraph_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMGraph GetGraph()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetGraph_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetGraph_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMGraph returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMGraph>.FromNative(IntPtr.Add(ParamsBuffer, GetGraph_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:GetControllerForGraph
    static readonly IntPtr GetControllerForGraph_NativeFunction;
    static readonly int GetControllerForGraph_ParamsSize;
    static readonly int GetControllerForGraph_InGraph_Offset;
    static readonly int GetControllerForGraph_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMController GetControllerForGraph(UnrealSharp.RigVMDeveloper.RigVMGraph inGraph)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetControllerForGraph_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMGraph>.ToNative(IntPtr.Add(ParamsBuffer, GetControllerForGraph_InGraph_Offset), 0, null, inGraph);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetControllerForGraph_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMController returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMController>.FromNative(IntPtr.Add(ParamsBuffer, GetControllerForGraph_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:ExportSelectedNodesToText
    static readonly IntPtr ExportSelectedNodesToText_NativeFunction;
    static readonly int ExportSelectedNodesToText_ParamsSize;
    static readonly int ExportSelectedNodesToText_bIncludeExteriorLinks_Offset;
    static readonly int ExportSelectedNodesToText_ReturnValue_Offset;
    
    public string ExportSelectedNodesToText(bool bIncludeExteriorLinks = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ExportSelectedNodesToText_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ExportSelectedNodesToText_bIncludeExteriorLinks_Offset), 0, null, bIncludeExteriorLinks);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ExportSelectedNodesToText_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,ExportSelectedNodesToText_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:ExportNodesToText
    static readonly IntPtr ExportNodesToText_NativeFunction;
    static readonly int ExportNodesToText_ParamsSize;
    static readonly int ExportNodesToText_InNodeNames_Offset;
    static readonly int ExportNodesToText_InNodeNames_ElementSize;
    static readonly int ExportNodesToText_bIncludeExteriorLinks_Offset;
    static readonly int ExportNodesToText_ReturnValue_Offset;
    
    public string ExportNodesToText(System.Collections.Generic.IList<Name> inNodeNames, bool bIncludeExteriorLinks = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ExportNodesToText_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InNodeNames_NativeBuffer = IntPtr.Add(ParamsBuffer, ExportNodesToText_InNodeNames_Offset);
            UnrealArrayCopyMarshaler<Name> InNodeNames_Marshaler = new UnrealArrayCopyMarshaler<Name>(1, BlittableMarshaller<Name>.ToNative, BlittableMarshaller<Name>.FromNative, ExportNodesToText_InNodeNames_ElementSize);
            InNodeNames_Marshaler.ToNative(InNodeNames_NativeBuffer, 0, null, inNodeNames);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ExportNodesToText_bIncludeExteriorLinks_Offset), 0, null, bIncludeExteriorLinks);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ExportNodesToText_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,ExportNodesToText_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:ExpandLibraryNode
    static readonly IntPtr ExpandLibraryNode_NativeFunction;
    static readonly int ExpandLibraryNode_ParamsSize;
    static readonly int ExpandLibraryNode_InNodeName_Offset;
    static readonly int ExpandLibraryNode_bSetupUndoRedo_Offset;
    static readonly int ExpandLibraryNode_bPrintPythonCommand_Offset;
    static readonly int ExpandLibraryNode_ReturnValue_Offset;
    static readonly int ExpandLibraryNode_ReturnValue_ElementSize;
    
    public System.Collections.Generic.IList<UnrealSharp.RigVMDeveloper.RigVMNode> ExpandLibraryNode(Name inNodeName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ExpandLibraryNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, ExpandLibraryNode_InNodeName_Offset), 0, null, inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ExpandLibraryNode_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ExpandLibraryNode_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ExpandLibraryNode_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.RigVMDeveloper.RigVMNode> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, ExpandLibraryNode_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.RigVMDeveloper.RigVMNode> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.RigVMDeveloper.RigVMNode> (1, ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMNode>.ToNative, ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMNode>.FromNative, ExpandLibraryNode_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.RigVMDeveloper.RigVMNode>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:EnableReporting
    static readonly IntPtr EnableReporting_NativeFunction;
    static readonly int EnableReporting_ParamsSize;
    static readonly int EnableReporting_bEnabled_Offset;
    
    public void EnableReporting(bool bEnabled = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[EnableReporting_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, EnableReporting_bEnabled_Offset), 0, null, bEnabled);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, EnableReporting_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:EjectNodeFromPin
    static readonly IntPtr EjectNodeFromPin_NativeFunction;
    static readonly int EjectNodeFromPin_ParamsSize;
    static readonly int EjectNodeFromPin_InPinPath_Offset;
    static readonly int EjectNodeFromPin_bSetupUndoRedo_Offset;
    static readonly int EjectNodeFromPin_bPrintPythonCommand_Offset;
    static readonly int EjectNodeFromPin_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMNode EjectNodeFromPin(string inPinPath, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[EjectNodeFromPin_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPinPath_NativePtr = IntPtr.Add(ParamsBuffer,EjectNodeFromPin_InPinPath_Offset);
            StringMarshaller.ToNative(InPinPath_NativePtr,0,null,inPinPath);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, EjectNodeFromPin_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, EjectNodeFromPin_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, EjectNodeFromPin_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMNode>.FromNative(IntPtr.Add(ParamsBuffer, EjectNodeFromPin_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InPinPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:DuplicateArrayPin
    static readonly IntPtr DuplicateArrayPin_NativeFunction;
    static readonly int DuplicateArrayPin_ParamsSize;
    static readonly int DuplicateArrayPin_InArrayElementPinPath_Offset;
    static readonly int DuplicateArrayPin_bSetupUndoRedo_Offset;
    static readonly int DuplicateArrayPin_bPrintPythonCommand_Offset;
    static readonly int DuplicateArrayPin_ReturnValue_Offset;
    
    public string DuplicateArrayPin(string inArrayElementPinPath, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[DuplicateArrayPin_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InArrayElementPinPath_NativePtr = IntPtr.Add(ParamsBuffer,DuplicateArrayPin_InArrayElementPinPath_Offset);
            StringMarshaller.ToNative(InArrayElementPinPath_NativePtr,0,null,inArrayElementPinPath);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, DuplicateArrayPin_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, DuplicateArrayPin_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, DuplicateArrayPin_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,DuplicateArrayPin_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            StringMarshaller.DestructInstance(InArrayElementPinPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:CollapseNodes
    static readonly IntPtr CollapseNodes_NativeFunction;
    static readonly int CollapseNodes_ParamsSize;
    static readonly int CollapseNodes_InNodeNames_Offset;
    static readonly int CollapseNodes_InNodeNames_ElementSize;
    static readonly int CollapseNodes_InCollapseNodeName_Offset;
    static readonly int CollapseNodes_bSetupUndoRedo_Offset;
    static readonly int CollapseNodes_bPrintPythonCommand_Offset;
    static readonly int CollapseNodes_bIsAggregate_Offset;
    static readonly int CollapseNodes_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMCollapseNode CollapseNodes(System.Collections.Generic.IList<Name> inNodeNames, string inCollapseNodeName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false, bool bIsAggregate = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[CollapseNodes_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InNodeNames_NativeBuffer = IntPtr.Add(ParamsBuffer, CollapseNodes_InNodeNames_Offset);
            UnrealArrayCopyMarshaler<Name> InNodeNames_Marshaler = new UnrealArrayCopyMarshaler<Name>(1, BlittableMarshaller<Name>.ToNative, BlittableMarshaller<Name>.FromNative, CollapseNodes_InNodeNames_ElementSize);
            InNodeNames_Marshaler.ToNative(InNodeNames_NativeBuffer, 0, null, inNodeNames);
            IntPtr InCollapseNodeName_NativePtr = IntPtr.Add(ParamsBuffer,CollapseNodes_InCollapseNodeName_Offset);
            StringMarshaller.ToNative(InCollapseNodeName_NativePtr,0,null,inCollapseNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, CollapseNodes_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, CollapseNodes_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, CollapseNodes_bIsAggregate_Offset), 0, null, bIsAggregate);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, CollapseNodes_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMCollapseNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMCollapseNode>.FromNative(IntPtr.Add(ParamsBuffer, CollapseNodes_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InCollapseNodeName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:CloseUndoBracket
    static readonly IntPtr CloseUndoBracket_NativeFunction;
    static readonly int CloseUndoBracket_ParamsSize;
    static readonly int CloseUndoBracket_ReturnValue_Offset;
    
    public bool CloseUndoBracket()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[CloseUndoBracket_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, CloseUndoBracket_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, CloseUndoBracket_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:ClearNodeSelection
    static readonly IntPtr ClearNodeSelection_NativeFunction;
    static readonly int ClearNodeSelection_ParamsSize;
    static readonly int ClearNodeSelection_bSetupUndoRedo_Offset;
    static readonly int ClearNodeSelection_bPrintPythonCommand_Offset;
    static readonly int ClearNodeSelection_ReturnValue_Offset;
    
    public bool ClearNodeSelection(bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ClearNodeSelection_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ClearNodeSelection_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ClearNodeSelection_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ClearNodeSelection_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, ClearNodeSelection_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:ClearArrayPin
    static readonly IntPtr ClearArrayPin_NativeFunction;
    static readonly int ClearArrayPin_ParamsSize;
    static readonly int ClearArrayPin_InArrayPinPath_Offset;
    static readonly int ClearArrayPin_bSetupUndoRedo_Offset;
    static readonly int ClearArrayPin_bPrintPythonCommand_Offset;
    static readonly int ClearArrayPin_ReturnValue_Offset;
    
    public bool ClearArrayPin(string inArrayPinPath, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ClearArrayPin_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InArrayPinPath_NativePtr = IntPtr.Add(ParamsBuffer,ClearArrayPin_InArrayPinPath_Offset);
            StringMarshaller.ToNative(InArrayPinPath_NativePtr,0,null,inArrayPinPath);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ClearArrayPin_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ClearArrayPin_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ClearArrayPin_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, ClearArrayPin_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InArrayPinPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:ChangeExposedPinType
    static readonly IntPtr ChangeExposedPinType_NativeFunction;
    static readonly int ChangeExposedPinType_ParamsSize;
    static readonly int ChangeExposedPinType_InPinName_Offset;
    static readonly int ChangeExposedPinType_InCPPType_Offset;
    static readonly int ChangeExposedPinType_InCPPTypeObjectPath_Offset;
    static readonly int ChangeExposedPinType_bSetupUndoRedo_Offset;
    static readonly int ChangeExposedPinType_bSetupOrphanPins_Offset;
    static readonly int ChangeExposedPinType_bPrintPythonCommand_Offset;
    static readonly int ChangeExposedPinType_ReturnValue_Offset;
    
    public bool ChangeExposedPinType(Name inPinName, string inCPPType, Name inCPPTypeObjectPath, ref bool bSetupUndoRedo, bool bSetupOrphanPins = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ChangeExposedPinType_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, ChangeExposedPinType_InPinName_Offset), 0, null, inPinName);
            IntPtr InCPPType_NativePtr = IntPtr.Add(ParamsBuffer,ChangeExposedPinType_InCPPType_Offset);
            StringMarshaller.ToNative(InCPPType_NativePtr,0,null,inCPPType);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, ChangeExposedPinType_InCPPTypeObjectPath_Offset), 0, null, inCPPTypeObjectPath);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ChangeExposedPinType_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ChangeExposedPinType_bSetupOrphanPins_Offset), 0, null, bSetupOrphanPins);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ChangeExposedPinType_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ChangeExposedPinType_NativeFunction, ParamsBuffer);
            
            bSetupUndoRedo = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, ChangeExposedPinType_bSetupUndoRedo_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, ChangeExposedPinType_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InCPPType_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:CanImportNodesFromText
    static readonly IntPtr CanImportNodesFromText_NativeFunction;
    static readonly int CanImportNodesFromText_ParamsSize;
    static readonly int CanImportNodesFromText_InText_Offset;
    static readonly int CanImportNodesFromText_ReturnValue_Offset;
    
    public bool CanImportNodesFromText(string inText)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[CanImportNodesFromText_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InText_NativePtr = IntPtr.Add(ParamsBuffer,CanImportNodesFromText_InText_Offset);
            StringMarshaller.ToNative(InText_NativePtr,0,null,inText);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, CanImportNodesFromText_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, CanImportNodesFromText_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InText_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:CancelUndoBracket
    static readonly IntPtr CancelUndoBracket_NativeFunction;
    static readonly int CancelUndoBracket_ParamsSize;
    static readonly int CancelUndoBracket_ReturnValue_Offset;
    
    public bool CancelUndoBracket()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[CancelUndoBracket_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, CancelUndoBracket_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, CancelUndoBracket_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:BreakLink
    static readonly IntPtr BreakLink_NativeFunction;
    static readonly int BreakLink_ParamsSize;
    static readonly int BreakLink_InOutputPinPath_Offset;
    static readonly int BreakLink_InInputPinPath_Offset;
    static readonly int BreakLink_bSetupUndoRedo_Offset;
    static readonly int BreakLink_bPrintPythonCommand_Offset;
    static readonly int BreakLink_ReturnValue_Offset;
    
    public bool BreakLink(string inOutputPinPath, string inInputPinPath, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[BreakLink_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InOutputPinPath_NativePtr = IntPtr.Add(ParamsBuffer,BreakLink_InOutputPinPath_Offset);
            StringMarshaller.ToNative(InOutputPinPath_NativePtr,0,null,inOutputPinPath);
            IntPtr InInputPinPath_NativePtr = IntPtr.Add(ParamsBuffer,BreakLink_InInputPinPath_Offset);
            StringMarshaller.ToNative(InInputPinPath_NativePtr,0,null,inInputPinPath);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, BreakLink_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, BreakLink_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, BreakLink_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, BreakLink_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InOutputPinPath_NativePtr, 0);
            StringMarshaller.DestructInstance(InInputPinPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:BreakAllLinks
    static readonly IntPtr BreakAllLinks_NativeFunction;
    static readonly int BreakAllLinks_ParamsSize;
    static readonly int BreakAllLinks_InPinPath_Offset;
    static readonly int BreakAllLinks_bAsInput_Offset;
    static readonly int BreakAllLinks_bSetupUndoRedo_Offset;
    static readonly int BreakAllLinks_bPrintPythonCommand_Offset;
    static readonly int BreakAllLinks_ReturnValue_Offset;
    
    public bool BreakAllLinks(string inPinPath, bool bAsInput = true, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[BreakAllLinks_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPinPath_NativePtr = IntPtr.Add(ParamsBuffer,BreakAllLinks_InPinPath_Offset);
            StringMarshaller.ToNative(InPinPath_NativePtr,0,null,inPinPath);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, BreakAllLinks_bAsInput_Offset), 0, null, bAsInput);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, BreakAllLinks_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, BreakAllLinks_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, BreakAllLinks_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, BreakAllLinks_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InPinPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:BindPinToVariable
    static readonly IntPtr BindPinToVariable_NativeFunction;
    static readonly int BindPinToVariable_ParamsSize;
    static readonly int BindPinToVariable_InPinPath_Offset;
    static readonly int BindPinToVariable_InNewBoundVariablePath_Offset;
    static readonly int BindPinToVariable_bSetupUndoRedo_Offset;
    static readonly int BindPinToVariable_bPrintPythonCommand_Offset;
    static readonly int BindPinToVariable_ReturnValue_Offset;
    
    public bool BindPinToVariable(string inPinPath, string inNewBoundVariablePath, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[BindPinToVariable_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPinPath_NativePtr = IntPtr.Add(ParamsBuffer,BindPinToVariable_InPinPath_Offset);
            StringMarshaller.ToNative(InPinPath_NativePtr,0,null,inPinPath);
            IntPtr InNewBoundVariablePath_NativePtr = IntPtr.Add(ParamsBuffer,BindPinToVariable_InNewBoundVariablePath_Offset);
            StringMarshaller.ToNative(InNewBoundVariablePath_NativePtr,0,null,inNewBoundVariablePath);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, BindPinToVariable_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, BindPinToVariable_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, BindPinToVariable_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, BindPinToVariable_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InPinPath_NativePtr, 0);
            StringMarshaller.DestructInstance(InNewBoundVariablePath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddVariableNodeFromObjectPath
    static readonly IntPtr AddVariableNodeFromObjectPath_NativeFunction;
    static readonly int AddVariableNodeFromObjectPath_ParamsSize;
    static readonly int AddVariableNodeFromObjectPath_InVariableName_Offset;
    static readonly int AddVariableNodeFromObjectPath_InCPPType_Offset;
    static readonly int AddVariableNodeFromObjectPath_InCPPTypeObjectPath_Offset;
    static readonly int AddVariableNodeFromObjectPath_bIsGetter_Offset;
    static readonly int AddVariableNodeFromObjectPath_InDefaultValue_Offset;
    static readonly int AddVariableNodeFromObjectPath_InPosition_Offset;
    static readonly int AddVariableNodeFromObjectPath_InNodeName_Offset;
    static readonly int AddVariableNodeFromObjectPath_bSetupUndoRedo_Offset;
    static readonly int AddVariableNodeFromObjectPath_bPrintPythonCommand_Offset;
    static readonly int AddVariableNodeFromObjectPath_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMVariableNode AddVariableNodeFromObjectPath(Name inVariableName, string inCPPType, string inCPPTypeObjectPath, bool bIsGetter, string inDefaultValue, System.DoubleNumerics.Vector2 inPosition, string inNodeName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddVariableNodeFromObjectPath_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddVariableNodeFromObjectPath_InVariableName_Offset), 0, null, inVariableName);
            IntPtr InCPPType_NativePtr = IntPtr.Add(ParamsBuffer,AddVariableNodeFromObjectPath_InCPPType_Offset);
            StringMarshaller.ToNative(InCPPType_NativePtr,0,null,inCPPType);
            IntPtr InCPPTypeObjectPath_NativePtr = IntPtr.Add(ParamsBuffer,AddVariableNodeFromObjectPath_InCPPTypeObjectPath_Offset);
            StringMarshaller.ToNative(InCPPTypeObjectPath_NativePtr,0,null,inCPPTypeObjectPath);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddVariableNodeFromObjectPath_bIsGetter_Offset), 0, null, bIsGetter);
            IntPtr InDefaultValue_NativePtr = IntPtr.Add(ParamsBuffer,AddVariableNodeFromObjectPath_InDefaultValue_Offset);
            StringMarshaller.ToNative(InDefaultValue_NativePtr,0,null,inDefaultValue);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, AddVariableNodeFromObjectPath_InPosition_Offset), 0, null, inPosition);
            IntPtr InNodeName_NativePtr = IntPtr.Add(ParamsBuffer,AddVariableNodeFromObjectPath_InNodeName_Offset);
            StringMarshaller.ToNative(InNodeName_NativePtr,0,null,inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddVariableNodeFromObjectPath_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddVariableNodeFromObjectPath_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddVariableNodeFromObjectPath_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMVariableNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMVariableNode>.FromNative(IntPtr.Add(ParamsBuffer, AddVariableNodeFromObjectPath_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InCPPType_NativePtr, 0);
            StringMarshaller.DestructInstance(InCPPTypeObjectPath_NativePtr, 0);
            StringMarshaller.DestructInstance(InDefaultValue_NativePtr, 0);
            StringMarshaller.DestructInstance(InNodeName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddVariableNode
    static readonly IntPtr AddVariableNode_NativeFunction;
    static readonly int AddVariableNode_ParamsSize;
    static readonly int AddVariableNode_InVariableName_Offset;
    static readonly int AddVariableNode_InCPPType_Offset;
    static readonly int AddVariableNode_InCPPTypeObject_Offset;
    static readonly int AddVariableNode_bIsGetter_Offset;
    static readonly int AddVariableNode_InDefaultValue_Offset;
    static readonly int AddVariableNode_InPosition_Offset;
    static readonly int AddVariableNode_InNodeName_Offset;
    static readonly int AddVariableNode_bSetupUndoRedo_Offset;
    static readonly int AddVariableNode_bPrintPythonCommand_Offset;
    static readonly int AddVariableNode_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMVariableNode AddVariableNode(Name inVariableName, string inCPPType, UnrealSharp.CoreUObject.Object inCPPTypeObject, bool bIsGetter, string inDefaultValue, System.DoubleNumerics.Vector2 inPosition, string inNodeName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddVariableNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddVariableNode_InVariableName_Offset), 0, null, inVariableName);
            IntPtr InCPPType_NativePtr = IntPtr.Add(ParamsBuffer,AddVariableNode_InCPPType_Offset);
            StringMarshaller.ToNative(InCPPType_NativePtr,0,null,inCPPType);
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, AddVariableNode_InCPPTypeObject_Offset), 0, null, inCPPTypeObject);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddVariableNode_bIsGetter_Offset), 0, null, bIsGetter);
            IntPtr InDefaultValue_NativePtr = IntPtr.Add(ParamsBuffer,AddVariableNode_InDefaultValue_Offset);
            StringMarshaller.ToNative(InDefaultValue_NativePtr,0,null,inDefaultValue);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, AddVariableNode_InPosition_Offset), 0, null, inPosition);
            IntPtr InNodeName_NativePtr = IntPtr.Add(ParamsBuffer,AddVariableNode_InNodeName_Offset);
            StringMarshaller.ToNative(InNodeName_NativePtr,0,null,inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddVariableNode_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddVariableNode_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddVariableNode_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMVariableNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMVariableNode>.FromNative(IntPtr.Add(ParamsBuffer, AddVariableNode_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InCPPType_NativePtr, 0);
            StringMarshaller.DestructInstance(InDefaultValue_NativePtr, 0);
            StringMarshaller.DestructInstance(InNodeName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddUnitNodeWithDefaults
    static readonly IntPtr AddUnitNodeWithDefaults_NativeFunction;
    static readonly int AddUnitNodeWithDefaults_ParamsSize;
    static readonly int AddUnitNodeWithDefaults_InScriptStruct_Offset;
    static readonly int AddUnitNodeWithDefaults_InDefaults_Offset;
    static readonly int AddUnitNodeWithDefaults_InMethodName_Offset;
    static readonly int AddUnitNodeWithDefaults_InPosition_Offset;
    static readonly int AddUnitNodeWithDefaults_InNodeName_Offset;
    static readonly int AddUnitNodeWithDefaults_bSetupUndoRedo_Offset;
    static readonly int AddUnitNodeWithDefaults_bPrintPythonCommand_Offset;
    static readonly int AddUnitNodeWithDefaults_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMUnitNode AddUnitNodeWithDefaults(UnrealSharp.CoreUObject.ScriptStruct inScriptStruct, string inDefaults)
    {
        Name inMethodName = new Name("Execute");
        return AddUnitNodeWithDefaults(inScriptStruct, inDefaults, inMethodName);
    }
    
    public UnrealSharp.RigVMDeveloper.RigVMUnitNode AddUnitNodeWithDefaults(UnrealSharp.CoreUObject.ScriptStruct inScriptStruct, string inDefaults, Name inMethodName, System.DoubleNumerics.Vector2 inPosition = default(System.DoubleNumerics.Vector2), string inNodeName = "", bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddUnitNodeWithDefaults_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.ScriptStruct>.ToNative(IntPtr.Add(ParamsBuffer, AddUnitNodeWithDefaults_InScriptStruct_Offset), 0, null, inScriptStruct);
            IntPtr InDefaults_NativePtr = IntPtr.Add(ParamsBuffer,AddUnitNodeWithDefaults_InDefaults_Offset);
            StringMarshaller.ToNative(InDefaults_NativePtr,0,null,inDefaults);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddUnitNodeWithDefaults_InMethodName_Offset), 0, null, inMethodName);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, AddUnitNodeWithDefaults_InPosition_Offset), 0, null, inPosition);
            IntPtr InNodeName_NativePtr = IntPtr.Add(ParamsBuffer,AddUnitNodeWithDefaults_InNodeName_Offset);
            StringMarshaller.ToNative(InNodeName_NativePtr,0,null,inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddUnitNodeWithDefaults_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddUnitNodeWithDefaults_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddUnitNodeWithDefaults_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMUnitNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMUnitNode>.FromNative(IntPtr.Add(ParamsBuffer, AddUnitNodeWithDefaults_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InDefaults_NativePtr, 0);
            StringMarshaller.DestructInstance(InNodeName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddUnitNodeFromStructPath
    static readonly IntPtr AddUnitNodeFromStructPath_NativeFunction;
    static readonly int AddUnitNodeFromStructPath_ParamsSize;
    static readonly int AddUnitNodeFromStructPath_InScriptStructPath_Offset;
    static readonly int AddUnitNodeFromStructPath_InMethodName_Offset;
    static readonly int AddUnitNodeFromStructPath_InPosition_Offset;
    static readonly int AddUnitNodeFromStructPath_InNodeName_Offset;
    static readonly int AddUnitNodeFromStructPath_bSetupUndoRedo_Offset;
    static readonly int AddUnitNodeFromStructPath_bPrintPythonCommand_Offset;
    static readonly int AddUnitNodeFromStructPath_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMUnitNode AddUnitNodeFromStructPath(string inScriptStructPath)
    {
        Name inMethodName = new Name("Execute");
        return AddUnitNodeFromStructPath(inScriptStructPath, inMethodName);
    }
    
    public UnrealSharp.RigVMDeveloper.RigVMUnitNode AddUnitNodeFromStructPath(string inScriptStructPath, Name inMethodName, System.DoubleNumerics.Vector2 inPosition = default(System.DoubleNumerics.Vector2), string inNodeName = "", bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddUnitNodeFromStructPath_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InScriptStructPath_NativePtr = IntPtr.Add(ParamsBuffer,AddUnitNodeFromStructPath_InScriptStructPath_Offset);
            StringMarshaller.ToNative(InScriptStructPath_NativePtr,0,null,inScriptStructPath);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddUnitNodeFromStructPath_InMethodName_Offset), 0, null, inMethodName);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, AddUnitNodeFromStructPath_InPosition_Offset), 0, null, inPosition);
            IntPtr InNodeName_NativePtr = IntPtr.Add(ParamsBuffer,AddUnitNodeFromStructPath_InNodeName_Offset);
            StringMarshaller.ToNative(InNodeName_NativePtr,0,null,inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddUnitNodeFromStructPath_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddUnitNodeFromStructPath_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddUnitNodeFromStructPath_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMUnitNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMUnitNode>.FromNative(IntPtr.Add(ParamsBuffer, AddUnitNodeFromStructPath_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InScriptStructPath_NativePtr, 0);
            StringMarshaller.DestructInstance(InNodeName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddUnitNode
    static readonly IntPtr AddUnitNode_NativeFunction;
    static readonly int AddUnitNode_ParamsSize;
    static readonly int AddUnitNode_InScriptStruct_Offset;
    static readonly int AddUnitNode_InMethodName_Offset;
    static readonly int AddUnitNode_InPosition_Offset;
    static readonly int AddUnitNode_InNodeName_Offset;
    static readonly int AddUnitNode_bSetupUndoRedo_Offset;
    static readonly int AddUnitNode_bPrintPythonCommand_Offset;
    static readonly int AddUnitNode_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMUnitNode AddUnitNode(UnrealSharp.CoreUObject.ScriptStruct inScriptStruct)
    {
        Name inMethodName = new Name("Execute");
        return AddUnitNode(inScriptStruct, inMethodName);
    }
    
    public UnrealSharp.RigVMDeveloper.RigVMUnitNode AddUnitNode(UnrealSharp.CoreUObject.ScriptStruct inScriptStruct, Name inMethodName, System.DoubleNumerics.Vector2 inPosition = default(System.DoubleNumerics.Vector2), string inNodeName = "", bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddUnitNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.ScriptStruct>.ToNative(IntPtr.Add(ParamsBuffer, AddUnitNode_InScriptStruct_Offset), 0, null, inScriptStruct);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddUnitNode_InMethodName_Offset), 0, null, inMethodName);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, AddUnitNode_InPosition_Offset), 0, null, inPosition);
            IntPtr InNodeName_NativePtr = IntPtr.Add(ParamsBuffer,AddUnitNode_InNodeName_Offset);
            StringMarshaller.ToNative(InNodeName_NativePtr,0,null,inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddUnitNode_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddUnitNode_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddUnitNode_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMUnitNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMUnitNode>.FromNative(IntPtr.Add(ParamsBuffer, AddUnitNode_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InNodeName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddTemplateNode
    static readonly IntPtr AddTemplateNode_NativeFunction;
    static readonly int AddTemplateNode_ParamsSize;
    static readonly int AddTemplateNode_InNotation_Offset;
    static readonly int AddTemplateNode_InPosition_Offset;
    static readonly int AddTemplateNode_InNodeName_Offset;
    static readonly int AddTemplateNode_bSetupUndoRedo_Offset;
    static readonly int AddTemplateNode_bPrintPythonCommand_Offset;
    static readonly int AddTemplateNode_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMTemplateNode AddTemplateNode(Name inNotation, System.DoubleNumerics.Vector2 inPosition, string inNodeName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddTemplateNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddTemplateNode_InNotation_Offset), 0, null, inNotation);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, AddTemplateNode_InPosition_Offset), 0, null, inPosition);
            IntPtr InNodeName_NativePtr = IntPtr.Add(ParamsBuffer,AddTemplateNode_InNodeName_Offset);
            StringMarshaller.ToNative(InNodeName_NativePtr,0,null,inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddTemplateNode_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddTemplateNode_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddTemplateNode_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMTemplateNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMTemplateNode>.FromNative(IntPtr.Add(ParamsBuffer, AddTemplateNode_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InNodeName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddSelectNodeFromStruct
    static readonly IntPtr AddSelectNodeFromStruct_NativeFunction;
    static readonly int AddSelectNodeFromStruct_ParamsSize;
    static readonly int AddSelectNodeFromStruct_InScriptStruct_Offset;
    static readonly int AddSelectNodeFromStruct_InPosition_Offset;
    static readonly int AddSelectNodeFromStruct_InNodeName_Offset;
    static readonly int AddSelectNodeFromStruct_bSetupUndoRedo_Offset;
    static readonly int AddSelectNodeFromStruct_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMNode AddSelectNodeFromStruct(UnrealSharp.CoreUObject.ScriptStruct inScriptStruct, System.DoubleNumerics.Vector2 inPosition, string inNodeName, bool bSetupUndoRedo = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddSelectNodeFromStruct_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.ScriptStruct>.ToNative(IntPtr.Add(ParamsBuffer, AddSelectNodeFromStruct_InScriptStruct_Offset), 0, null, inScriptStruct);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, AddSelectNodeFromStruct_InPosition_Offset), 0, null, inPosition);
            IntPtr InNodeName_NativePtr = IntPtr.Add(ParamsBuffer,AddSelectNodeFromStruct_InNodeName_Offset);
            StringMarshaller.ToNative(InNodeName_NativePtr,0,null,inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddSelectNodeFromStruct_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddSelectNodeFromStruct_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMNode>.FromNative(IntPtr.Add(ParamsBuffer, AddSelectNodeFromStruct_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InNodeName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddSelectNode
    static readonly IntPtr AddSelectNode_NativeFunction;
    static readonly int AddSelectNode_ParamsSize;
    static readonly int AddSelectNode_InCPPType_Offset;
    static readonly int AddSelectNode_InCPPTypeObjectPath_Offset;
    static readonly int AddSelectNode_InPosition_Offset;
    static readonly int AddSelectNode_InNodeName_Offset;
    static readonly int AddSelectNode_bSetupUndoRedo_Offset;
    static readonly int AddSelectNode_bPrintPythonCommand_Offset;
    static readonly int AddSelectNode_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMNode AddSelectNode(string inCPPType, Name inCPPTypeObjectPath, System.DoubleNumerics.Vector2 inPosition, string inNodeName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddSelectNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InCPPType_NativePtr = IntPtr.Add(ParamsBuffer,AddSelectNode_InCPPType_Offset);
            StringMarshaller.ToNative(InCPPType_NativePtr,0,null,inCPPType);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddSelectNode_InCPPTypeObjectPath_Offset), 0, null, inCPPTypeObjectPath);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, AddSelectNode_InPosition_Offset), 0, null, inPosition);
            IntPtr InNodeName_NativePtr = IntPtr.Add(ParamsBuffer,AddSelectNode_InNodeName_Offset);
            StringMarshaller.ToNative(InNodeName_NativePtr,0,null,inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddSelectNode_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddSelectNode_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddSelectNode_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMNode>.FromNative(IntPtr.Add(ParamsBuffer, AddSelectNode_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InCPPType_NativePtr, 0);
            StringMarshaller.DestructInstance(InNodeName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddRerouteNodeOnPin
    static readonly IntPtr AddRerouteNodeOnPin_NativeFunction;
    static readonly int AddRerouteNodeOnPin_ParamsSize;
    static readonly int AddRerouteNodeOnPin_InPinPath_Offset;
    static readonly int AddRerouteNodeOnPin_bAsInput_Offset;
    static readonly int AddRerouteNodeOnPin_InPosition_Offset;
    static readonly int AddRerouteNodeOnPin_InNodeName_Offset;
    static readonly int AddRerouteNodeOnPin_bSetupUndoRedo_Offset;
    static readonly int AddRerouteNodeOnPin_bPrintPythonCommand_Offset;
    static readonly int AddRerouteNodeOnPin_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMRerouteNode AddRerouteNodeOnPin(string inPinPath, bool bAsInput, System.DoubleNumerics.Vector2 inPosition, string inNodeName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddRerouteNodeOnPin_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPinPath_NativePtr = IntPtr.Add(ParamsBuffer,AddRerouteNodeOnPin_InPinPath_Offset);
            StringMarshaller.ToNative(InPinPath_NativePtr,0,null,inPinPath);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddRerouteNodeOnPin_bAsInput_Offset), 0, null, bAsInput);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, AddRerouteNodeOnPin_InPosition_Offset), 0, null, inPosition);
            IntPtr InNodeName_NativePtr = IntPtr.Add(ParamsBuffer,AddRerouteNodeOnPin_InNodeName_Offset);
            StringMarshaller.ToNative(InNodeName_NativePtr,0,null,inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddRerouteNodeOnPin_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddRerouteNodeOnPin_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddRerouteNodeOnPin_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMRerouteNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMRerouteNode>.FromNative(IntPtr.Add(ParamsBuffer, AddRerouteNodeOnPin_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InPinPath_NativePtr, 0);
            StringMarshaller.DestructInstance(InNodeName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddRerouteNodeOnLinkPath
    static readonly IntPtr AddRerouteNodeOnLinkPath_NativeFunction;
    static readonly int AddRerouteNodeOnLinkPath_ParamsSize;
    static readonly int AddRerouteNodeOnLinkPath_InLinkPinPathRepresentation_Offset;
    static readonly int AddRerouteNodeOnLinkPath_InPosition_Offset;
    static readonly int AddRerouteNodeOnLinkPath_InNodeName_Offset;
    static readonly int AddRerouteNodeOnLinkPath_bSetupUndoRedo_Offset;
    static readonly int AddRerouteNodeOnLinkPath_bPrintPythonCommand_Offset;
    static readonly int AddRerouteNodeOnLinkPath_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMRerouteNode AddRerouteNodeOnLinkPath(string inLinkPinPathRepresentation, System.DoubleNumerics.Vector2 inPosition, string inNodeName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddRerouteNodeOnLinkPath_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InLinkPinPathRepresentation_NativePtr = IntPtr.Add(ParamsBuffer,AddRerouteNodeOnLinkPath_InLinkPinPathRepresentation_Offset);
            StringMarshaller.ToNative(InLinkPinPathRepresentation_NativePtr,0,null,inLinkPinPathRepresentation);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, AddRerouteNodeOnLinkPath_InPosition_Offset), 0, null, inPosition);
            IntPtr InNodeName_NativePtr = IntPtr.Add(ParamsBuffer,AddRerouteNodeOnLinkPath_InNodeName_Offset);
            StringMarshaller.ToNative(InNodeName_NativePtr,0,null,inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddRerouteNodeOnLinkPath_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddRerouteNodeOnLinkPath_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddRerouteNodeOnLinkPath_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMRerouteNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMRerouteNode>.FromNative(IntPtr.Add(ParamsBuffer, AddRerouteNodeOnLinkPath_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InLinkPinPathRepresentation_NativePtr, 0);
            StringMarshaller.DestructInstance(InNodeName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddRerouteNodeOnLink
    static readonly IntPtr AddRerouteNodeOnLink_NativeFunction;
    static readonly int AddRerouteNodeOnLink_ParamsSize;
    static readonly int AddRerouteNodeOnLink_InLink_Offset;
    static readonly int AddRerouteNodeOnLink_InPosition_Offset;
    static readonly int AddRerouteNodeOnLink_InNodeName_Offset;
    static readonly int AddRerouteNodeOnLink_bSetupUndoRedo_Offset;
    static readonly int AddRerouteNodeOnLink_bPrintPythonCommand_Offset;
    static readonly int AddRerouteNodeOnLink_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMRerouteNode AddRerouteNodeOnLink(UnrealSharp.RigVMDeveloper.RigVMLink inLink, System.DoubleNumerics.Vector2 inPosition, string inNodeName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddRerouteNodeOnLink_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMLink>.ToNative(IntPtr.Add(ParamsBuffer, AddRerouteNodeOnLink_InLink_Offset), 0, null, inLink);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, AddRerouteNodeOnLink_InPosition_Offset), 0, null, inPosition);
            IntPtr InNodeName_NativePtr = IntPtr.Add(ParamsBuffer,AddRerouteNodeOnLink_InNodeName_Offset);
            StringMarshaller.ToNative(InNodeName_NativePtr,0,null,inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddRerouteNodeOnLink_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddRerouteNodeOnLink_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddRerouteNodeOnLink_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMRerouteNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMRerouteNode>.FromNative(IntPtr.Add(ParamsBuffer, AddRerouteNodeOnLink_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InNodeName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddParameterNodeFromObjectPath
    static readonly IntPtr AddParameterNodeFromObjectPath_NativeFunction;
    static readonly int AddParameterNodeFromObjectPath_ParamsSize;
    static readonly int AddParameterNodeFromObjectPath_InParameterName_Offset;
    static readonly int AddParameterNodeFromObjectPath_InCPPType_Offset;
    static readonly int AddParameterNodeFromObjectPath_InCPPTypeObjectPath_Offset;
    static readonly int AddParameterNodeFromObjectPath_bIsInput_Offset;
    static readonly int AddParameterNodeFromObjectPath_InDefaultValue_Offset;
    static readonly int AddParameterNodeFromObjectPath_InPosition_Offset;
    static readonly int AddParameterNodeFromObjectPath_InNodeName_Offset;
    static readonly int AddParameterNodeFromObjectPath_bSetupUndoRedo_Offset;
    static readonly int AddParameterNodeFromObjectPath_bPrintPythonCommand_Offset;
    static readonly int AddParameterNodeFromObjectPath_ReturnValue_Offset;
    
    [Obsolete("This function is obsolete")]
    public UnrealSharp.RigVMDeveloper.RigVMParameterNode AddParameterNodeFromObjectPath(Name inParameterName, string inCPPType, string inCPPTypeObjectPath, bool bIsInput, string inDefaultValue, System.DoubleNumerics.Vector2 inPosition, string inNodeName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddParameterNodeFromObjectPath_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddParameterNodeFromObjectPath_InParameterName_Offset), 0, null, inParameterName);
            IntPtr InCPPType_NativePtr = IntPtr.Add(ParamsBuffer,AddParameterNodeFromObjectPath_InCPPType_Offset);
            StringMarshaller.ToNative(InCPPType_NativePtr,0,null,inCPPType);
            IntPtr InCPPTypeObjectPath_NativePtr = IntPtr.Add(ParamsBuffer,AddParameterNodeFromObjectPath_InCPPTypeObjectPath_Offset);
            StringMarshaller.ToNative(InCPPTypeObjectPath_NativePtr,0,null,inCPPTypeObjectPath);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddParameterNodeFromObjectPath_bIsInput_Offset), 0, null, bIsInput);
            IntPtr InDefaultValue_NativePtr = IntPtr.Add(ParamsBuffer,AddParameterNodeFromObjectPath_InDefaultValue_Offset);
            StringMarshaller.ToNative(InDefaultValue_NativePtr,0,null,inDefaultValue);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, AddParameterNodeFromObjectPath_InPosition_Offset), 0, null, inPosition);
            IntPtr InNodeName_NativePtr = IntPtr.Add(ParamsBuffer,AddParameterNodeFromObjectPath_InNodeName_Offset);
            StringMarshaller.ToNative(InNodeName_NativePtr,0,null,inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddParameterNodeFromObjectPath_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddParameterNodeFromObjectPath_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddParameterNodeFromObjectPath_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMParameterNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMParameterNode>.FromNative(IntPtr.Add(ParamsBuffer, AddParameterNodeFromObjectPath_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InCPPType_NativePtr, 0);
            StringMarshaller.DestructInstance(InCPPTypeObjectPath_NativePtr, 0);
            StringMarshaller.DestructInstance(InDefaultValue_NativePtr, 0);
            StringMarshaller.DestructInstance(InNodeName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddParameterNode
    static readonly IntPtr AddParameterNode_NativeFunction;
    static readonly int AddParameterNode_ParamsSize;
    static readonly int AddParameterNode_InParameterName_Offset;
    static readonly int AddParameterNode_InCPPType_Offset;
    static readonly int AddParameterNode_InCPPTypeObject_Offset;
    static readonly int AddParameterNode_bIsInput_Offset;
    static readonly int AddParameterNode_InDefaultValue_Offset;
    static readonly int AddParameterNode_InPosition_Offset;
    static readonly int AddParameterNode_InNodeName_Offset;
    static readonly int AddParameterNode_bSetupUndoRedo_Offset;
    static readonly int AddParameterNode_bPrintPythonCommand_Offset;
    static readonly int AddParameterNode_ReturnValue_Offset;
    
    [Obsolete("This function is obsolete")]
    public UnrealSharp.RigVMDeveloper.RigVMParameterNode AddParameterNode(Name inParameterName, string inCPPType, UnrealSharp.CoreUObject.Object inCPPTypeObject, bool bIsInput, string inDefaultValue, System.DoubleNumerics.Vector2 inPosition, string inNodeName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddParameterNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddParameterNode_InParameterName_Offset), 0, null, inParameterName);
            IntPtr InCPPType_NativePtr = IntPtr.Add(ParamsBuffer,AddParameterNode_InCPPType_Offset);
            StringMarshaller.ToNative(InCPPType_NativePtr,0,null,inCPPType);
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, AddParameterNode_InCPPTypeObject_Offset), 0, null, inCPPTypeObject);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddParameterNode_bIsInput_Offset), 0, null, bIsInput);
            IntPtr InDefaultValue_NativePtr = IntPtr.Add(ParamsBuffer,AddParameterNode_InDefaultValue_Offset);
            StringMarshaller.ToNative(InDefaultValue_NativePtr,0,null,inDefaultValue);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, AddParameterNode_InPosition_Offset), 0, null, inPosition);
            IntPtr InNodeName_NativePtr = IntPtr.Add(ParamsBuffer,AddParameterNode_InNodeName_Offset);
            StringMarshaller.ToNative(InNodeName_NativePtr,0,null,inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddParameterNode_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddParameterNode_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddParameterNode_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMParameterNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMParameterNode>.FromNative(IntPtr.Add(ParamsBuffer, AddParameterNode_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InCPPType_NativePtr, 0);
            StringMarshaller.DestructInstance(InDefaultValue_NativePtr, 0);
            StringMarshaller.DestructInstance(InNodeName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddLocalVariableFromObjectPath
    static readonly IntPtr AddLocalVariableFromObjectPath_NativeFunction;
    static readonly int AddLocalVariableFromObjectPath_ParamsSize;
    static readonly int AddLocalVariableFromObjectPath_InVariableName_Offset;
    static readonly int AddLocalVariableFromObjectPath_InCPPType_Offset;
    static readonly int AddLocalVariableFromObjectPath_InCPPTypeObjectPath_Offset;
    static readonly int AddLocalVariableFromObjectPath_InDefaultValue_Offset;
    static readonly int AddLocalVariableFromObjectPath_bSetupUndoRedo_Offset;
    static readonly int AddLocalVariableFromObjectPath_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMGraphVariableDescription AddLocalVariableFromObjectPath(Name inVariableName, string inCPPType, string inCPPTypeObjectPath, string inDefaultValue, bool bSetupUndoRedo = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddLocalVariableFromObjectPath_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddLocalVariableFromObjectPath_InVariableName_Offset), 0, null, inVariableName);
            IntPtr InCPPType_NativePtr = IntPtr.Add(ParamsBuffer,AddLocalVariableFromObjectPath_InCPPType_Offset);
            StringMarshaller.ToNative(InCPPType_NativePtr,0,null,inCPPType);
            IntPtr InCPPTypeObjectPath_NativePtr = IntPtr.Add(ParamsBuffer,AddLocalVariableFromObjectPath_InCPPTypeObjectPath_Offset);
            StringMarshaller.ToNative(InCPPTypeObjectPath_NativePtr,0,null,inCPPTypeObjectPath);
            IntPtr InDefaultValue_NativePtr = IntPtr.Add(ParamsBuffer,AddLocalVariableFromObjectPath_InDefaultValue_Offset);
            StringMarshaller.ToNative(InDefaultValue_NativePtr,0,null,inDefaultValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddLocalVariableFromObjectPath_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddLocalVariableFromObjectPath_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMGraphVariableDescription returnValue;
            returnValue = UnrealSharp.RigVMDeveloper.RigVMGraphVariableDescriptionMarshaler.FromNative(IntPtr.Add(ParamsBuffer, AddLocalVariableFromObjectPath_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InCPPType_NativePtr, 0);
            StringMarshaller.DestructInstance(InCPPTypeObjectPath_NativePtr, 0);
            StringMarshaller.DestructInstance(InDefaultValue_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddLocalVariable
    static readonly IntPtr AddLocalVariable_NativeFunction;
    static readonly int AddLocalVariable_ParamsSize;
    static readonly int AddLocalVariable_InVariableName_Offset;
    static readonly int AddLocalVariable_InCPPType_Offset;
    static readonly int AddLocalVariable_InCPPTypeObject_Offset;
    static readonly int AddLocalVariable_InDefaultValue_Offset;
    static readonly int AddLocalVariable_bSetupUndoRedo_Offset;
    static readonly int AddLocalVariable_bPrintPythonCommand_Offset;
    static readonly int AddLocalVariable_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMGraphVariableDescription AddLocalVariable(Name inVariableName, string inCPPType, UnrealSharp.CoreUObject.Object inCPPTypeObject, string inDefaultValue, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddLocalVariable_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddLocalVariable_InVariableName_Offset), 0, null, inVariableName);
            IntPtr InCPPType_NativePtr = IntPtr.Add(ParamsBuffer,AddLocalVariable_InCPPType_Offset);
            StringMarshaller.ToNative(InCPPType_NativePtr,0,null,inCPPType);
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, AddLocalVariable_InCPPTypeObject_Offset), 0, null, inCPPTypeObject);
            IntPtr InDefaultValue_NativePtr = IntPtr.Add(ParamsBuffer,AddLocalVariable_InDefaultValue_Offset);
            StringMarshaller.ToNative(InDefaultValue_NativePtr,0,null,inDefaultValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddLocalVariable_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddLocalVariable_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddLocalVariable_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMGraphVariableDescription returnValue;
            returnValue = UnrealSharp.RigVMDeveloper.RigVMGraphVariableDescriptionMarshaler.FromNative(IntPtr.Add(ParamsBuffer, AddLocalVariable_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InCPPType_NativePtr, 0);
            StringMarshaller.DestructInstance(InDefaultValue_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddLink
    static readonly IntPtr AddLink_NativeFunction;
    static readonly int AddLink_ParamsSize;
    static readonly int AddLink_InOutputPinPath_Offset;
    static readonly int AddLink_InInputPinPath_Offset;
    static readonly int AddLink_bSetupUndoRedo_Offset;
    static readonly int AddLink_bPrintPythonCommand_Offset;
    static readonly int AddLink_InUserDirection_Offset;
    static readonly int AddLink_bCreateCastNode_Offset;
    static readonly int AddLink_ReturnValue_Offset;
    
    public bool AddLink(string inOutputPinPath, string inInputPinPath, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false, UnrealSharp.RigVM.ERigVMPinDirection inUserDirection = UnrealSharp.RigVM.ERigVMPinDirection.Output, bool bCreateCastNode = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddLink_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InOutputPinPath_NativePtr = IntPtr.Add(ParamsBuffer,AddLink_InOutputPinPath_Offset);
            StringMarshaller.ToNative(InOutputPinPath_NativePtr,0,null,inOutputPinPath);
            IntPtr InInputPinPath_NativePtr = IntPtr.Add(ParamsBuffer,AddLink_InInputPinPath_Offset);
            StringMarshaller.ToNative(InInputPinPath_NativePtr,0,null,inInputPinPath);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddLink_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddLink_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            BlittableMarshaller<UnrealSharp.RigVM.ERigVMPinDirection>.ToNative(IntPtr.Add(ParamsBuffer, AddLink_InUserDirection_Offset), 0, null, inUserDirection);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddLink_bCreateCastNode_Offset), 0, null, bCreateCastNode);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddLink_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, AddLink_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InOutputPinPath_NativePtr, 0);
            StringMarshaller.DestructInstance(InInputPinPath_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddInvokeEntryNode
    static readonly IntPtr AddInvokeEntryNode_NativeFunction;
    static readonly int AddInvokeEntryNode_ParamsSize;
    static readonly int AddInvokeEntryNode_InEntryName_Offset;
    static readonly int AddInvokeEntryNode_InPosition_Offset;
    static readonly int AddInvokeEntryNode_InNodeName_Offset;
    static readonly int AddInvokeEntryNode_bSetupUndoRedo_Offset;
    static readonly int AddInvokeEntryNode_bPrintPythonCommand_Offset;
    static readonly int AddInvokeEntryNode_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMInvokeEntryNode AddInvokeEntryNode(Name inEntryName, System.DoubleNumerics.Vector2 inPosition, string inNodeName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddInvokeEntryNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddInvokeEntryNode_InEntryName_Offset), 0, null, inEntryName);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, AddInvokeEntryNode_InPosition_Offset), 0, null, inPosition);
            IntPtr InNodeName_NativePtr = IntPtr.Add(ParamsBuffer,AddInvokeEntryNode_InNodeName_Offset);
            StringMarshaller.ToNative(InNodeName_NativePtr,0,null,inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddInvokeEntryNode_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddInvokeEntryNode_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddInvokeEntryNode_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMInvokeEntryNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMInvokeEntryNode>.FromNative(IntPtr.Add(ParamsBuffer, AddInvokeEntryNode_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InNodeName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddInjectedNodeFromStructPath
    static readonly IntPtr AddInjectedNodeFromStructPath_NativeFunction;
    static readonly int AddInjectedNodeFromStructPath_ParamsSize;
    static readonly int AddInjectedNodeFromStructPath_InPinPath_Offset;
    static readonly int AddInjectedNodeFromStructPath_bAsInput_Offset;
    static readonly int AddInjectedNodeFromStructPath_InScriptStructPath_Offset;
    static readonly int AddInjectedNodeFromStructPath_InMethodName_Offset;
    static readonly int AddInjectedNodeFromStructPath_InInputPinName_Offset;
    static readonly int AddInjectedNodeFromStructPath_InOutputPinName_Offset;
    static readonly int AddInjectedNodeFromStructPath_InNodeName_Offset;
    static readonly int AddInjectedNodeFromStructPath_bSetupUndoRedo_Offset;
    static readonly int AddInjectedNodeFromStructPath_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMInjectionInfo AddInjectedNodeFromStructPath(string inPinPath, bool bAsInput, string inScriptStructPath, Name inMethodName, Name inInputPinName, Name inOutputPinName, string inNodeName, bool bSetupUndoRedo = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddInjectedNodeFromStructPath_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPinPath_NativePtr = IntPtr.Add(ParamsBuffer,AddInjectedNodeFromStructPath_InPinPath_Offset);
            StringMarshaller.ToNative(InPinPath_NativePtr,0,null,inPinPath);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddInjectedNodeFromStructPath_bAsInput_Offset), 0, null, bAsInput);
            IntPtr InScriptStructPath_NativePtr = IntPtr.Add(ParamsBuffer,AddInjectedNodeFromStructPath_InScriptStructPath_Offset);
            StringMarshaller.ToNative(InScriptStructPath_NativePtr,0,null,inScriptStructPath);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddInjectedNodeFromStructPath_InMethodName_Offset), 0, null, inMethodName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddInjectedNodeFromStructPath_InInputPinName_Offset), 0, null, inInputPinName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddInjectedNodeFromStructPath_InOutputPinName_Offset), 0, null, inOutputPinName);
            IntPtr InNodeName_NativePtr = IntPtr.Add(ParamsBuffer,AddInjectedNodeFromStructPath_InNodeName_Offset);
            StringMarshaller.ToNative(InNodeName_NativePtr,0,null,inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddInjectedNodeFromStructPath_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddInjectedNodeFromStructPath_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMInjectionInfo returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMInjectionInfo>.FromNative(IntPtr.Add(ParamsBuffer, AddInjectedNodeFromStructPath_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InPinPath_NativePtr, 0);
            StringMarshaller.DestructInstance(InScriptStructPath_NativePtr, 0);
            StringMarshaller.DestructInstance(InNodeName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddInjectedNode
    static readonly IntPtr AddInjectedNode_NativeFunction;
    static readonly int AddInjectedNode_ParamsSize;
    static readonly int AddInjectedNode_InPinPath_Offset;
    static readonly int AddInjectedNode_bAsInput_Offset;
    static readonly int AddInjectedNode_InScriptStruct_Offset;
    static readonly int AddInjectedNode_InMethodName_Offset;
    static readonly int AddInjectedNode_InInputPinName_Offset;
    static readonly int AddInjectedNode_InOutputPinName_Offset;
    static readonly int AddInjectedNode_InNodeName_Offset;
    static readonly int AddInjectedNode_bSetupUndoRedo_Offset;
    static readonly int AddInjectedNode_bPrintPythonCommand_Offset;
    static readonly int AddInjectedNode_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMInjectionInfo AddInjectedNode(string inPinPath, bool bAsInput, UnrealSharp.CoreUObject.ScriptStruct inScriptStruct, Name inMethodName, Name inInputPinName, Name inOutputPinName, string inNodeName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddInjectedNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InPinPath_NativePtr = IntPtr.Add(ParamsBuffer,AddInjectedNode_InPinPath_Offset);
            StringMarshaller.ToNative(InPinPath_NativePtr,0,null,inPinPath);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddInjectedNode_bAsInput_Offset), 0, null, bAsInput);
            ObjectMarshaller<UnrealSharp.CoreUObject.ScriptStruct>.ToNative(IntPtr.Add(ParamsBuffer, AddInjectedNode_InScriptStruct_Offset), 0, null, inScriptStruct);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddInjectedNode_InMethodName_Offset), 0, null, inMethodName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddInjectedNode_InInputPinName_Offset), 0, null, inInputPinName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddInjectedNode_InOutputPinName_Offset), 0, null, inOutputPinName);
            IntPtr InNodeName_NativePtr = IntPtr.Add(ParamsBuffer,AddInjectedNode_InNodeName_Offset);
            StringMarshaller.ToNative(InNodeName_NativePtr,0,null,inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddInjectedNode_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddInjectedNode_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddInjectedNode_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMInjectionInfo returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMInjectionInfo>.FromNative(IntPtr.Add(ParamsBuffer, AddInjectedNode_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InPinPath_NativePtr, 0);
            StringMarshaller.DestructInstance(InNodeName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddIfNodeFromStruct
    static readonly IntPtr AddIfNodeFromStruct_NativeFunction;
    static readonly int AddIfNodeFromStruct_ParamsSize;
    static readonly int AddIfNodeFromStruct_InScriptStruct_Offset;
    static readonly int AddIfNodeFromStruct_InPosition_Offset;
    static readonly int AddIfNodeFromStruct_InNodeName_Offset;
    static readonly int AddIfNodeFromStruct_bSetupUndoRedo_Offset;
    static readonly int AddIfNodeFromStruct_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMNode AddIfNodeFromStruct(UnrealSharp.CoreUObject.ScriptStruct inScriptStruct, System.DoubleNumerics.Vector2 inPosition, string inNodeName, bool bSetupUndoRedo = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddIfNodeFromStruct_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.ScriptStruct>.ToNative(IntPtr.Add(ParamsBuffer, AddIfNodeFromStruct_InScriptStruct_Offset), 0, null, inScriptStruct);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, AddIfNodeFromStruct_InPosition_Offset), 0, null, inPosition);
            IntPtr InNodeName_NativePtr = IntPtr.Add(ParamsBuffer,AddIfNodeFromStruct_InNodeName_Offset);
            StringMarshaller.ToNative(InNodeName_NativePtr,0,null,inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddIfNodeFromStruct_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddIfNodeFromStruct_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMNode>.FromNative(IntPtr.Add(ParamsBuffer, AddIfNodeFromStruct_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InNodeName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddIfNode
    static readonly IntPtr AddIfNode_NativeFunction;
    static readonly int AddIfNode_ParamsSize;
    static readonly int AddIfNode_InCPPType_Offset;
    static readonly int AddIfNode_InCPPTypeObjectPath_Offset;
    static readonly int AddIfNode_InPosition_Offset;
    static readonly int AddIfNode_InNodeName_Offset;
    static readonly int AddIfNode_bSetupUndoRedo_Offset;
    static readonly int AddIfNode_bPrintPythonCommand_Offset;
    static readonly int AddIfNode_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMNode AddIfNode(string inCPPType, Name inCPPTypeObjectPath, System.DoubleNumerics.Vector2 inPosition, string inNodeName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddIfNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InCPPType_NativePtr = IntPtr.Add(ParamsBuffer,AddIfNode_InCPPType_Offset);
            StringMarshaller.ToNative(InCPPType_NativePtr,0,null,inCPPType);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddIfNode_InCPPTypeObjectPath_Offset), 0, null, inCPPTypeObjectPath);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, AddIfNode_InPosition_Offset), 0, null, inPosition);
            IntPtr InNodeName_NativePtr = IntPtr.Add(ParamsBuffer,AddIfNode_InNodeName_Offset);
            StringMarshaller.ToNative(InNodeName_NativePtr,0,null,inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddIfNode_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddIfNode_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddIfNode_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMNode>.FromNative(IntPtr.Add(ParamsBuffer, AddIfNode_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InCPPType_NativePtr, 0);
            StringMarshaller.DestructInstance(InNodeName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddFunctionToLibrary
    static readonly IntPtr AddFunctionToLibrary_NativeFunction;
    static readonly int AddFunctionToLibrary_ParamsSize;
    static readonly int AddFunctionToLibrary_InFunctionName_Offset;
    static readonly int AddFunctionToLibrary_bMutable_Offset;
    static readonly int AddFunctionToLibrary_InNodePosition_Offset;
    static readonly int AddFunctionToLibrary_bSetupUndoRedo_Offset;
    static readonly int AddFunctionToLibrary_bPrintPythonCommand_Offset;
    static readonly int AddFunctionToLibrary_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMLibraryNode AddFunctionToLibrary(Name inFunctionName, bool bMutable, System.DoubleNumerics.Vector2 inNodePosition, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddFunctionToLibrary_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddFunctionToLibrary_InFunctionName_Offset), 0, null, inFunctionName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddFunctionToLibrary_bMutable_Offset), 0, null, bMutable);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, AddFunctionToLibrary_InNodePosition_Offset), 0, null, inNodePosition);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddFunctionToLibrary_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddFunctionToLibrary_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddFunctionToLibrary_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMLibraryNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMLibraryNode>.FromNative(IntPtr.Add(ParamsBuffer, AddFunctionToLibrary_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddFunctionReferenceNodeFromDescription
    static readonly IntPtr AddFunctionReferenceNodeFromDescription_NativeFunction;
    static readonly int AddFunctionReferenceNodeFromDescription_ParamsSize;
    static readonly int AddFunctionReferenceNodeFromDescription_InFunctionDefinition_Offset;
    static readonly int AddFunctionReferenceNodeFromDescription_InNodePosition_Offset;
    static readonly int AddFunctionReferenceNodeFromDescription_InNodeName_Offset;
    static readonly int AddFunctionReferenceNodeFromDescription_bSetupUndoRedo_Offset;
    static readonly int AddFunctionReferenceNodeFromDescription_bPrintPythonCommand_Offset;
    static readonly int AddFunctionReferenceNodeFromDescription_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMFunctionReferenceNode AddFunctionReferenceNodeFromDescription(UnrealSharp.RigVM.RigVMGraphFunctionHeader inFunctionDefinition, System.DoubleNumerics.Vector2 inNodePosition, string inNodeName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddFunctionReferenceNodeFromDescription_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.RigVM.RigVMGraphFunctionHeaderMarshaler.ToNative(IntPtr.Add(ParamsBuffer, AddFunctionReferenceNodeFromDescription_InFunctionDefinition_Offset), 0, null, inFunctionDefinition);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, AddFunctionReferenceNodeFromDescription_InNodePosition_Offset), 0, null, inNodePosition);
            IntPtr InNodeName_NativePtr = IntPtr.Add(ParamsBuffer,AddFunctionReferenceNodeFromDescription_InNodeName_Offset);
            StringMarshaller.ToNative(InNodeName_NativePtr,0,null,inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddFunctionReferenceNodeFromDescription_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddFunctionReferenceNodeFromDescription_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddFunctionReferenceNodeFromDescription_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMFunctionReferenceNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMFunctionReferenceNode>.FromNative(IntPtr.Add(ParamsBuffer, AddFunctionReferenceNodeFromDescription_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InNodeName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddFunctionReferenceNode
    static readonly IntPtr AddFunctionReferenceNode_NativeFunction;
    static readonly int AddFunctionReferenceNode_ParamsSize;
    static readonly int AddFunctionReferenceNode_InFunctionDefinition_Offset;
    static readonly int AddFunctionReferenceNode_InNodePosition_Offset;
    static readonly int AddFunctionReferenceNode_InNodeName_Offset;
    static readonly int AddFunctionReferenceNode_bSetupUndoRedo_Offset;
    static readonly int AddFunctionReferenceNode_bPrintPythonCommand_Offset;
    static readonly int AddFunctionReferenceNode_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMFunctionReferenceNode AddFunctionReferenceNode(UnrealSharp.RigVMDeveloper.RigVMLibraryNode inFunctionDefinition, System.DoubleNumerics.Vector2 inNodePosition, string inNodeName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddFunctionReferenceNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMLibraryNode>.ToNative(IntPtr.Add(ParamsBuffer, AddFunctionReferenceNode_InFunctionDefinition_Offset), 0, null, inFunctionDefinition);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, AddFunctionReferenceNode_InNodePosition_Offset), 0, null, inNodePosition);
            IntPtr InNodeName_NativePtr = IntPtr.Add(ParamsBuffer,AddFunctionReferenceNode_InNodeName_Offset);
            StringMarshaller.ToNative(InNodeName_NativePtr,0,null,inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddFunctionReferenceNode_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddFunctionReferenceNode_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddFunctionReferenceNode_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMFunctionReferenceNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMFunctionReferenceNode>.FromNative(IntPtr.Add(ParamsBuffer, AddFunctionReferenceNode_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InNodeName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddFreeRerouteNode
    static readonly IntPtr AddFreeRerouteNode_NativeFunction;
    static readonly int AddFreeRerouteNode_ParamsSize;
    static readonly int AddFreeRerouteNode_InCPPType_Offset;
    static readonly int AddFreeRerouteNode_InCPPTypeObjectPath_Offset;
    static readonly int AddFreeRerouteNode_bIsConstant_Offset;
    static readonly int AddFreeRerouteNode_InCustomWidgetName_Offset;
    static readonly int AddFreeRerouteNode_InDefaultValue_Offset;
    static readonly int AddFreeRerouteNode_InPosition_Offset;
    static readonly int AddFreeRerouteNode_InNodeName_Offset;
    static readonly int AddFreeRerouteNode_bSetupUndoRedo_Offset;
    static readonly int AddFreeRerouteNode_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMRerouteNode AddFreeRerouteNode(string inCPPType, Name inCPPTypeObjectPath, bool bIsConstant, Name inCustomWidgetName, string inDefaultValue, System.DoubleNumerics.Vector2 inPosition, string inNodeName, bool bSetupUndoRedo = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddFreeRerouteNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InCPPType_NativePtr = IntPtr.Add(ParamsBuffer,AddFreeRerouteNode_InCPPType_Offset);
            StringMarshaller.ToNative(InCPPType_NativePtr,0,null,inCPPType);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddFreeRerouteNode_InCPPTypeObjectPath_Offset), 0, null, inCPPTypeObjectPath);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddFreeRerouteNode_bIsConstant_Offset), 0, null, bIsConstant);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddFreeRerouteNode_InCustomWidgetName_Offset), 0, null, inCustomWidgetName);
            IntPtr InDefaultValue_NativePtr = IntPtr.Add(ParamsBuffer,AddFreeRerouteNode_InDefaultValue_Offset);
            StringMarshaller.ToNative(InDefaultValue_NativePtr,0,null,inDefaultValue);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, AddFreeRerouteNode_InPosition_Offset), 0, null, inPosition);
            IntPtr InNodeName_NativePtr = IntPtr.Add(ParamsBuffer,AddFreeRerouteNode_InNodeName_Offset);
            StringMarshaller.ToNative(InNodeName_NativePtr,0,null,inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddFreeRerouteNode_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddFreeRerouteNode_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMRerouteNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMRerouteNode>.FromNative(IntPtr.Add(ParamsBuffer, AddFreeRerouteNode_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InCPPType_NativePtr, 0);
            StringMarshaller.DestructInstance(InDefaultValue_NativePtr, 0);
            StringMarshaller.DestructInstance(InNodeName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddExternalFunctionReferenceNode
    static readonly IntPtr AddExternalFunctionReferenceNode_NativeFunction;
    static readonly int AddExternalFunctionReferenceNode_ParamsSize;
    static readonly int AddExternalFunctionReferenceNode_InHostPath_Offset;
    static readonly int AddExternalFunctionReferenceNode_InFunctionName_Offset;
    static readonly int AddExternalFunctionReferenceNode_InNodePosition_Offset;
    static readonly int AddExternalFunctionReferenceNode_InNodeName_Offset;
    static readonly int AddExternalFunctionReferenceNode_bSetupUndoRedo_Offset;
    static readonly int AddExternalFunctionReferenceNode_bPrintPythonCommand_Offset;
    static readonly int AddExternalFunctionReferenceNode_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMFunctionReferenceNode AddExternalFunctionReferenceNode(string inHostPath, Name inFunctionName, System.DoubleNumerics.Vector2 inNodePosition, string inNodeName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddExternalFunctionReferenceNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InHostPath_NativePtr = IntPtr.Add(ParamsBuffer,AddExternalFunctionReferenceNode_InHostPath_Offset);
            StringMarshaller.ToNative(InHostPath_NativePtr,0,null,inHostPath);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddExternalFunctionReferenceNode_InFunctionName_Offset), 0, null, inFunctionName);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, AddExternalFunctionReferenceNode_InNodePosition_Offset), 0, null, inNodePosition);
            IntPtr InNodeName_NativePtr = IntPtr.Add(ParamsBuffer,AddExternalFunctionReferenceNode_InNodeName_Offset);
            StringMarshaller.ToNative(InNodeName_NativePtr,0,null,inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddExternalFunctionReferenceNode_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddExternalFunctionReferenceNode_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddExternalFunctionReferenceNode_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMFunctionReferenceNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMFunctionReferenceNode>.FromNative(IntPtr.Add(ParamsBuffer, AddExternalFunctionReferenceNode_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InHostPath_NativePtr, 0);
            StringMarshaller.DestructInstance(InNodeName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddExposedPin
    static readonly IntPtr AddExposedPin_NativeFunction;
    static readonly int AddExposedPin_ParamsSize;
    static readonly int AddExposedPin_InPinName_Offset;
    static readonly int AddExposedPin_InDirection_Offset;
    static readonly int AddExposedPin_InCPPType_Offset;
    static readonly int AddExposedPin_InCPPTypeObjectPath_Offset;
    static readonly int AddExposedPin_InDefaultValue_Offset;
    static readonly int AddExposedPin_bSetupUndoRedo_Offset;
    static readonly int AddExposedPin_bPrintPythonCommand_Offset;
    static readonly int AddExposedPin_ReturnValue_Offset;
    
    public Name AddExposedPin(Name inPinName, UnrealSharp.RigVM.ERigVMPinDirection inDirection, string inCPPType, Name inCPPTypeObjectPath, string inDefaultValue, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddExposedPin_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddExposedPin_InPinName_Offset), 0, null, inPinName);
            BlittableMarshaller<UnrealSharp.RigVM.ERigVMPinDirection>.ToNative(IntPtr.Add(ParamsBuffer, AddExposedPin_InDirection_Offset), 0, null, inDirection);
            IntPtr InCPPType_NativePtr = IntPtr.Add(ParamsBuffer,AddExposedPin_InCPPType_Offset);
            StringMarshaller.ToNative(InCPPType_NativePtr,0,null,inCPPType);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddExposedPin_InCPPTypeObjectPath_Offset), 0, null, inCPPTypeObjectPath);
            IntPtr InDefaultValue_NativePtr = IntPtr.Add(ParamsBuffer,AddExposedPin_InDefaultValue_Offset);
            StringMarshaller.ToNative(InDefaultValue_NativePtr,0,null,inDefaultValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddExposedPin_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddExposedPin_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddExposedPin_NativeFunction, ParamsBuffer);
            
            Name returnValue;
            returnValue = BlittableMarshaller<Name>.FromNative(IntPtr.Add(ParamsBuffer, AddExposedPin_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InCPPType_NativePtr, 0);
            StringMarshaller.DestructInstance(InDefaultValue_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddEnumNode
    static readonly IntPtr AddEnumNode_NativeFunction;
    static readonly int AddEnumNode_ParamsSize;
    static readonly int AddEnumNode_InCPPTypeObjectPath_Offset;
    static readonly int AddEnumNode_InPosition_Offset;
    static readonly int AddEnumNode_InNodeName_Offset;
    static readonly int AddEnumNode_bSetupUndoRedo_Offset;
    static readonly int AddEnumNode_bPrintPythonCommand_Offset;
    static readonly int AddEnumNode_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMEnumNode AddEnumNode(Name inCPPTypeObjectPath, System.DoubleNumerics.Vector2 inPosition, string inNodeName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddEnumNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddEnumNode_InCPPTypeObjectPath_Offset), 0, null, inCPPTypeObjectPath);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, AddEnumNode_InPosition_Offset), 0, null, inPosition);
            IntPtr InNodeName_NativePtr = IntPtr.Add(ParamsBuffer,AddEnumNode_InNodeName_Offset);
            StringMarshaller.ToNative(InNodeName_NativePtr,0,null,inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddEnumNode_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddEnumNode_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddEnumNode_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMEnumNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMEnumNode>.FromNative(IntPtr.Add(ParamsBuffer, AddEnumNode_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InNodeName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddDecorator
    static readonly IntPtr AddDecorator_NativeFunction;
    static readonly int AddDecorator_ParamsSize;
    static readonly int AddDecorator_InNodeName_Offset;
    static readonly int AddDecorator_InDecoratorTypeObjectPath_Offset;
    static readonly int AddDecorator_InDecoratorName_Offset;
    static readonly int AddDecorator_InDefaultValue_Offset;
    static readonly int AddDecorator_InPinIndex_Offset;
    static readonly int AddDecorator_bSetupUndoRedo_Offset;
    static readonly int AddDecorator_bPrintPythonCommand_Offset;
    static readonly int AddDecorator_ReturnValue_Offset;
    
    public Name AddDecorator(Name inNodeName, Name inDecoratorTypeObjectPath, Name inDecoratorName = default(Name), string inDefaultValue = "", int inPinIndex = -1, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddDecorator_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddDecorator_InNodeName_Offset), 0, null, inNodeName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddDecorator_InDecoratorTypeObjectPath_Offset), 0, null, inDecoratorTypeObjectPath);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddDecorator_InDecoratorName_Offset), 0, null, inDecoratorName);
            IntPtr InDefaultValue_NativePtr = IntPtr.Add(ParamsBuffer,AddDecorator_InDefaultValue_Offset);
            StringMarshaller.ToNative(InDefaultValue_NativePtr,0,null,inDefaultValue);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, AddDecorator_InPinIndex_Offset), 0, null, inPinIndex);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddDecorator_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddDecorator_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddDecorator_NativeFunction, ParamsBuffer);
            
            Name returnValue;
            returnValue = BlittableMarshaller<Name>.FromNative(IntPtr.Add(ParamsBuffer, AddDecorator_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InDefaultValue_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddCommentNode
    static readonly IntPtr AddCommentNode_NativeFunction;
    static readonly int AddCommentNode_ParamsSize;
    static readonly int AddCommentNode_InCommentText_Offset;
    static readonly int AddCommentNode_InPosition_Offset;
    static readonly int AddCommentNode_InSize_Offset;
    static readonly int AddCommentNode_InColor_Offset;
    static readonly int AddCommentNode_InNodeName_Offset;
    static readonly int AddCommentNode_bSetupUndoRedo_Offset;
    static readonly int AddCommentNode_bPrintPythonCommand_Offset;
    static readonly int AddCommentNode_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMCommentNode AddCommentNode(string inCommentText, System.DoubleNumerics.Vector2 inPosition)
    {
        System.DoubleNumerics.Vector2 inSize = new System.DoubleNumerics.Vector2
        {
            X=400.000f,
            Y=300.000f,
        };
        return AddCommentNode(inCommentText, inPosition, inSize);
    }
    
    public UnrealSharp.RigVMDeveloper.RigVMCommentNode AddCommentNode(string inCommentText, System.DoubleNumerics.Vector2 inPosition, System.DoubleNumerics.Vector2 inSize)
    {
        UnrealSharp.CoreUObject.LinearColor inColor = new UnrealSharp.CoreUObject.LinearColor
        {
            R=0.000000f,
            G=0.000000f,
            B=0.000000f,
            A=1.000000f,
        };
        return AddCommentNode(inCommentText, inPosition, inSize, inColor);
    }
    
    public UnrealSharp.RigVMDeveloper.RigVMCommentNode AddCommentNode(string inCommentText, System.DoubleNumerics.Vector2 inPosition, System.DoubleNumerics.Vector2 inSize, UnrealSharp.CoreUObject.LinearColor inColor, string inNodeName = "", bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddCommentNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InCommentText_NativePtr = IntPtr.Add(ParamsBuffer,AddCommentNode_InCommentText_Offset);
            StringMarshaller.ToNative(InCommentText_NativePtr,0,null,inCommentText);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, AddCommentNode_InPosition_Offset), 0, null, inPosition);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, AddCommentNode_InSize_Offset), 0, null, inSize);
            BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.ToNative(IntPtr.Add(ParamsBuffer, AddCommentNode_InColor_Offset), 0, null, inColor);
            IntPtr InNodeName_NativePtr = IntPtr.Add(ParamsBuffer,AddCommentNode_InNodeName_Offset);
            StringMarshaller.ToNative(InNodeName_NativePtr,0,null,inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddCommentNode_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddCommentNode_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddCommentNode_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMCommentNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMCommentNode>.FromNative(IntPtr.Add(ParamsBuffer, AddCommentNode_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InCommentText_NativePtr, 0);
            StringMarshaller.DestructInstance(InNodeName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddBranchNode
    static readonly IntPtr AddBranchNode_NativeFunction;
    static readonly int AddBranchNode_ParamsSize;
    static readonly int AddBranchNode_InPosition_Offset;
    static readonly int AddBranchNode_InNodeName_Offset;
    static readonly int AddBranchNode_bSetupUndoRedo_Offset;
    static readonly int AddBranchNode_bPrintPythonCommand_Offset;
    static readonly int AddBranchNode_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMNode AddBranchNode(System.DoubleNumerics.Vector2 inPosition, string inNodeName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddBranchNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, AddBranchNode_InPosition_Offset), 0, null, inPosition);
            IntPtr InNodeName_NativePtr = IntPtr.Add(ParamsBuffer,AddBranchNode_InNodeName_Offset);
            StringMarshaller.ToNative(InNodeName_NativePtr,0,null,inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddBranchNode_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddBranchNode_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddBranchNode_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMNode>.FromNative(IntPtr.Add(ParamsBuffer, AddBranchNode_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InNodeName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddArrayPin
    static readonly IntPtr AddArrayPin_NativeFunction;
    static readonly int AddArrayPin_ParamsSize;
    static readonly int AddArrayPin_InArrayPinPath_Offset;
    static readonly int AddArrayPin_InDefaultValue_Offset;
    static readonly int AddArrayPin_bSetupUndoRedo_Offset;
    static readonly int AddArrayPin_bPrintPythonCommand_Offset;
    static readonly int AddArrayPin_ReturnValue_Offset;
    
    public string AddArrayPin(string inArrayPinPath, string inDefaultValue, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddArrayPin_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InArrayPinPath_NativePtr = IntPtr.Add(ParamsBuffer,AddArrayPin_InArrayPinPath_Offset);
            StringMarshaller.ToNative(InArrayPinPath_NativePtr,0,null,inArrayPinPath);
            IntPtr InDefaultValue_NativePtr = IntPtr.Add(ParamsBuffer,AddArrayPin_InDefaultValue_Offset);
            StringMarshaller.ToNative(InDefaultValue_NativePtr,0,null,inDefaultValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddArrayPin_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddArrayPin_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddArrayPin_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,AddArrayPin_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            StringMarshaller.DestructInstance(InArrayPinPath_NativePtr, 0);
            StringMarshaller.DestructInstance(InDefaultValue_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddArrayNodeFromObjectPath
    static readonly IntPtr AddArrayNodeFromObjectPath_NativeFunction;
    static readonly int AddArrayNodeFromObjectPath_ParamsSize;
    static readonly int AddArrayNodeFromObjectPath_InOpCode_Offset;
    static readonly int AddArrayNodeFromObjectPath_InCPPType_Offset;
    static readonly int AddArrayNodeFromObjectPath_InCPPTypeObjectPath_Offset;
    static readonly int AddArrayNodeFromObjectPath_InPosition_Offset;
    static readonly int AddArrayNodeFromObjectPath_InNodeName_Offset;
    static readonly int AddArrayNodeFromObjectPath_bSetupUndoRedo_Offset;
    static readonly int AddArrayNodeFromObjectPath_bPrintPythonCommand_Offset;
    static readonly int AddArrayNodeFromObjectPath_bIsPatching_Offset;
    static readonly int AddArrayNodeFromObjectPath_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMNode AddArrayNodeFromObjectPath(UnrealSharp.RigVM.ERigVMOpCode inOpCode, string inCPPType, string inCPPTypeObjectPath, System.DoubleNumerics.Vector2 inPosition, string inNodeName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false, bool bIsPatching = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddArrayNodeFromObjectPath_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.RigVM.ERigVMOpCode>.ToNative(IntPtr.Add(ParamsBuffer, AddArrayNodeFromObjectPath_InOpCode_Offset), 0, null, inOpCode);
            IntPtr InCPPType_NativePtr = IntPtr.Add(ParamsBuffer,AddArrayNodeFromObjectPath_InCPPType_Offset);
            StringMarshaller.ToNative(InCPPType_NativePtr,0,null,inCPPType);
            IntPtr InCPPTypeObjectPath_NativePtr = IntPtr.Add(ParamsBuffer,AddArrayNodeFromObjectPath_InCPPTypeObjectPath_Offset);
            StringMarshaller.ToNative(InCPPTypeObjectPath_NativePtr,0,null,inCPPTypeObjectPath);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, AddArrayNodeFromObjectPath_InPosition_Offset), 0, null, inPosition);
            IntPtr InNodeName_NativePtr = IntPtr.Add(ParamsBuffer,AddArrayNodeFromObjectPath_InNodeName_Offset);
            StringMarshaller.ToNative(InNodeName_NativePtr,0,null,inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddArrayNodeFromObjectPath_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddArrayNodeFromObjectPath_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddArrayNodeFromObjectPath_bIsPatching_Offset), 0, null, bIsPatching);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddArrayNodeFromObjectPath_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMNode>.FromNative(IntPtr.Add(ParamsBuffer, AddArrayNodeFromObjectPath_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InCPPType_NativePtr, 0);
            StringMarshaller.DestructInstance(InCPPTypeObjectPath_NativePtr, 0);
            StringMarshaller.DestructInstance(InNodeName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddArrayNode
    static readonly IntPtr AddArrayNode_NativeFunction;
    static readonly int AddArrayNode_ParamsSize;
    static readonly int AddArrayNode_InOpCode_Offset;
    static readonly int AddArrayNode_InCPPType_Offset;
    static readonly int AddArrayNode_InCPPTypeObject_Offset;
    static readonly int AddArrayNode_InPosition_Offset;
    static readonly int AddArrayNode_InNodeName_Offset;
    static readonly int AddArrayNode_bSetupUndoRedo_Offset;
    static readonly int AddArrayNode_bPrintPythonCommand_Offset;
    static readonly int AddArrayNode_bIsPatching_Offset;
    static readonly int AddArrayNode_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMNode AddArrayNode(UnrealSharp.RigVM.ERigVMOpCode inOpCode, string inCPPType, UnrealSharp.CoreUObject.Object inCPPTypeObject, System.DoubleNumerics.Vector2 inPosition, string inNodeName, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false, bool bIsPatching = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddArrayNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.RigVM.ERigVMOpCode>.ToNative(IntPtr.Add(ParamsBuffer, AddArrayNode_InOpCode_Offset), 0, null, inOpCode);
            IntPtr InCPPType_NativePtr = IntPtr.Add(ParamsBuffer,AddArrayNode_InCPPType_Offset);
            StringMarshaller.ToNative(InCPPType_NativePtr,0,null,inCPPType);
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, AddArrayNode_InCPPTypeObject_Offset), 0, null, inCPPTypeObject);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, AddArrayNode_InPosition_Offset), 0, null, inPosition);
            IntPtr InNodeName_NativePtr = IntPtr.Add(ParamsBuffer,AddArrayNode_InNodeName_Offset);
            StringMarshaller.ToNative(InNodeName_NativePtr,0,null,inNodeName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddArrayNode_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddArrayNode_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddArrayNode_bIsPatching_Offset), 0, null, bIsPatching);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddArrayNode_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMNode>.FromNative(IntPtr.Add(ParamsBuffer, AddArrayNode_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(InCPPType_NativePtr, 0);
            StringMarshaller.DestructInstance(InNodeName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMController:AddAggregatePin
    static readonly IntPtr AddAggregatePin_NativeFunction;
    static readonly int AddAggregatePin_ParamsSize;
    static readonly int AddAggregatePin_InNodeName_Offset;
    static readonly int AddAggregatePin_InPinName_Offset;
    static readonly int AddAggregatePin_InDefaultValue_Offset;
    static readonly int AddAggregatePin_bSetupUndoRedo_Offset;
    static readonly int AddAggregatePin_bPrintPythonCommand_Offset;
    static readonly int AddAggregatePin_ReturnValue_Offset;
    
    public string AddAggregatePin(string inNodeName, string inPinName, string inDefaultValue, bool bSetupUndoRedo = true, bool bPrintPythonCommand = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddAggregatePin_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InNodeName_NativePtr = IntPtr.Add(ParamsBuffer,AddAggregatePin_InNodeName_Offset);
            StringMarshaller.ToNative(InNodeName_NativePtr,0,null,inNodeName);
            IntPtr InPinName_NativePtr = IntPtr.Add(ParamsBuffer,AddAggregatePin_InPinName_Offset);
            StringMarshaller.ToNative(InPinName_NativePtr,0,null,inPinName);
            IntPtr InDefaultValue_NativePtr = IntPtr.Add(ParamsBuffer,AddAggregatePin_InDefaultValue_Offset);
            StringMarshaller.ToNative(InDefaultValue_NativePtr,0,null,inDefaultValue);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddAggregatePin_bSetupUndoRedo_Offset), 0, null, bSetupUndoRedo);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, AddAggregatePin_bPrintPythonCommand_Offset), 0, null, bPrintPythonCommand);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddAggregatePin_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,AddAggregatePin_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            StringMarshaller.DestructInstance(InNodeName_NativePtr, 0);
            StringMarshaller.DestructInstance(InPinName_NativePtr, 0);
            StringMarshaller.DestructInstance(InDefaultValue_NativePtr, 0);
            return returnValue;
        }
    }
    
    
}
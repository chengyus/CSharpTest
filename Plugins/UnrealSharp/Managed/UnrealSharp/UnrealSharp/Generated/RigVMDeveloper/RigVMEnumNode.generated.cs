// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.RigVMDeveloper;

[UClass]
public partial class RigVMEnumNode : UnrealSharp.RigVMDeveloper.RigVMNode
{
    
    static RigVMEnumNode()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("RigVMEnumNode");
        
        
        GetEnum_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetEnum");
        GetEnum_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetEnum_NativeFunction);
        GetEnum_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetEnum_NativeFunction, "ReturnValue");
        GetCPPTypeObject_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCPPTypeObject");
        GetCPPTypeObject_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCPPTypeObject_NativeFunction);
        GetCPPTypeObject_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCPPTypeObject_NativeFunction, "ReturnValue");
        GetCPPType_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCPPType");
        GetCPPType_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCPPType_NativeFunction);
        GetCPPType_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCPPType_NativeFunction, "ReturnValue");
        
        
    }
    
    protected RigVMEnumNode(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/RigVMDeveloper.RigVMEnumNode:GetEnum
    static readonly IntPtr GetEnum_NativeFunction;
    static readonly int GetEnum_ParamsSize;
    static readonly int GetEnum_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.Enum GetEnum()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetEnum_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetEnum_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.Enum returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.CoreUObject.Enum>.FromNative(IntPtr.Add(ParamsBuffer, GetEnum_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMEnumNode:GetCPPTypeObject
    static readonly IntPtr GetCPPTypeObject_NativeFunction;
    static readonly int GetCPPTypeObject_ParamsSize;
    static readonly int GetCPPTypeObject_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.Object GetCPPTypeObject()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCPPTypeObject_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCPPTypeObject_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.Object returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.CoreUObject.Object>.FromNative(IntPtr.Add(ParamsBuffer, GetCPPTypeObject_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMEnumNode:GetCPPType
    static readonly IntPtr GetCPPType_NativeFunction;
    static readonly int GetCPPType_ParamsSize;
    static readonly int GetCPPType_ReturnValue_Offset;
    
    public string GetCPPType()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCPPType_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCPPType_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetCPPType_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    
}
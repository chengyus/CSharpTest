// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.RigVMDeveloper;

[UClass]
public partial class RigVMInvokeEntryNode : UnrealSharp.RigVMDeveloper.RigVMNode
{
    
    static RigVMInvokeEntryNode()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("RigVMInvokeEntryNode");
        
        
        GetEntryName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetEntryName");
        GetEntryName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetEntryName_NativeFunction);
        GetEntryName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetEntryName_NativeFunction, "ReturnValue");
        
        
    }
    
    protected RigVMInvokeEntryNode(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/RigVMDeveloper.RigVMInvokeEntryNode:GetEntryName
    static readonly IntPtr GetEntryName_NativeFunction;
    static readonly int GetEntryName_ParamsSize;
    static readonly int GetEntryName_ReturnValue_Offset;
    
    public Name GetEntryName()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetEntryName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetEntryName_NativeFunction, ParamsBuffer);
            
            Name returnValue;
            returnValue = BlittableMarshaller<Name>.FromNative(IntPtr.Add(ParamsBuffer, GetEntryName_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.RigVMDeveloper;

[UClass]
public partial class RigVMLink : UnrealSharp.CoreUObject.Object
{
    
    static RigVMLink()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("RigVMLink");
        
        
        GetTargetPin_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetTargetPin");
        GetTargetPin_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetTargetPin_NativeFunction);
        GetTargetPin_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTargetPin_NativeFunction, "ReturnValue");
        GetTargetNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetTargetNode");
        GetTargetNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetTargetNode_NativeFunction);
        GetTargetNode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTargetNode_NativeFunction, "ReturnValue");
        GetSourcePin_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSourcePin");
        GetSourcePin_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSourcePin_NativeFunction);
        GetSourcePin_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSourcePin_NativeFunction, "ReturnValue");
        GetSourceNode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSourceNode");
        GetSourceNode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSourceNode_NativeFunction);
        GetSourceNode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSourceNode_NativeFunction, "ReturnValue");
        GetPinPathRepresentation_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetPinPathRepresentation");
        GetPinPathRepresentation_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetPinPathRepresentation_NativeFunction);
        GetPinPathRepresentation_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetPinPathRepresentation_NativeFunction, "ReturnValue");
        GetOppositePin_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetOppositePin");
        GetOppositePin_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetOppositePin_NativeFunction);
        GetOppositePin_InPin_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetOppositePin_NativeFunction, "InPin");
        GetOppositePin_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetOppositePin_NativeFunction, "ReturnValue");
        GetLinkIndex_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetLinkIndex");
        GetLinkIndex_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetLinkIndex_NativeFunction);
        GetLinkIndex_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLinkIndex_NativeFunction, "ReturnValue");
        GetGraphDepth_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetGraphDepth");
        GetGraphDepth_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetGraphDepth_NativeFunction);
        GetGraphDepth_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetGraphDepth_NativeFunction, "ReturnValue");
        GetGraph_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetGraph");
        GetGraph_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetGraph_NativeFunction);
        GetGraph_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetGraph_NativeFunction, "ReturnValue");
        
        
    }
    
    protected RigVMLink(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/RigVMDeveloper.RigVMLink:GetTargetPin
    static readonly IntPtr GetTargetPin_NativeFunction;
    static readonly int GetTargetPin_ParamsSize;
    static readonly int GetTargetPin_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMPin GetTargetPin()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetTargetPin_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetTargetPin_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMPin returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMPin>.FromNative(IntPtr.Add(ParamsBuffer, GetTargetPin_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMLink:GetTargetNode
    static readonly IntPtr GetTargetNode_NativeFunction;
    static readonly int GetTargetNode_ParamsSize;
    static readonly int GetTargetNode_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMNode GetTargetNode()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetTargetNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetTargetNode_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMNode>.FromNative(IntPtr.Add(ParamsBuffer, GetTargetNode_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMLink:GetSourcePin
    static readonly IntPtr GetSourcePin_NativeFunction;
    static readonly int GetSourcePin_ParamsSize;
    static readonly int GetSourcePin_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMPin GetSourcePin()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSourcePin_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSourcePin_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMPin returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMPin>.FromNative(IntPtr.Add(ParamsBuffer, GetSourcePin_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMLink:GetSourceNode
    static readonly IntPtr GetSourceNode_NativeFunction;
    static readonly int GetSourceNode_ParamsSize;
    static readonly int GetSourceNode_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMNode GetSourceNode()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSourceNode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSourceNode_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMNode returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMNode>.FromNative(IntPtr.Add(ParamsBuffer, GetSourceNode_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMLink:GetPinPathRepresentation
    static readonly IntPtr GetPinPathRepresentation_NativeFunction;
    static readonly int GetPinPathRepresentation_ParamsSize;
    static readonly int GetPinPathRepresentation_ReturnValue_Offset;
    
    public string GetPinPathRepresentation()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetPinPathRepresentation_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetPinPathRepresentation_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetPinPathRepresentation_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMLink:GetOppositePin
    static readonly IntPtr GetOppositePin_NativeFunction;
    static readonly int GetOppositePin_ParamsSize;
    static readonly int GetOppositePin_InPin_Offset;
    static readonly int GetOppositePin_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMPin GetOppositePin(UnrealSharp.RigVMDeveloper.RigVMPin inPin)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetOppositePin_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMPin>.ToNative(IntPtr.Add(ParamsBuffer, GetOppositePin_InPin_Offset), 0, null, inPin);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetOppositePin_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMPin returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMPin>.FromNative(IntPtr.Add(ParamsBuffer, GetOppositePin_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMLink:GetLinkIndex
    static readonly IntPtr GetLinkIndex_NativeFunction;
    static readonly int GetLinkIndex_ParamsSize;
    static readonly int GetLinkIndex_ReturnValue_Offset;
    
    public int GetLinkIndex()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetLinkIndex_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetLinkIndex_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetLinkIndex_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMLink:GetGraphDepth
    static readonly IntPtr GetGraphDepth_NativeFunction;
    static readonly int GetGraphDepth_ParamsSize;
    static readonly int GetGraphDepth_ReturnValue_Offset;
    
    public int GetGraphDepth()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetGraphDepth_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetGraphDepth_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetGraphDepth_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/RigVMDeveloper.RigVMLink:GetGraph
    static readonly IntPtr GetGraph_NativeFunction;
    static readonly int GetGraph_ParamsSize;
    static readonly int GetGraph_ReturnValue_Offset;
    
    public UnrealSharp.RigVMDeveloper.RigVMGraph GetGraph()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetGraph_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetGraph_NativeFunction, ParamsBuffer);
            
            UnrealSharp.RigVMDeveloper.RigVMGraph returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.RigVMDeveloper.RigVMGraph>.FromNative(IntPtr.Add(ParamsBuffer, GetGraph_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
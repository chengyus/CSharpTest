// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.ScriptableEditorWidgets;

[UClass]
public partial class SinglePropertyView : UnrealSharp.ScriptableEditorWidgets.PropertyViewBase
{
    
    static SinglePropertyView()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("SinglePropertyView");
        
        
        SetPropertyName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPropertyName");
        SetPropertyName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPropertyName_NativeFunction);
        SetPropertyName_NewPropertyName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPropertyName_NativeFunction, "NewPropertyName");
        GetPropertyName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetPropertyName");
        GetPropertyName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetPropertyName_NativeFunction);
        GetPropertyName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetPropertyName_NativeFunction, "ReturnValue");
        
        
    }
    
    protected SinglePropertyView(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/ScriptableEditorWidgets.SinglePropertyView:SetPropertyName
    static readonly IntPtr SetPropertyName_NativeFunction;
    static readonly int SetPropertyName_ParamsSize;
    static readonly int SetPropertyName_NewPropertyName_Offset;
    
    public void SetPropertyName(Name newPropertyName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPropertyName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetPropertyName_NewPropertyName_Offset), 0, null, newPropertyName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPropertyName_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/ScriptableEditorWidgets.SinglePropertyView:GetPropertyName
    static readonly IntPtr GetPropertyName_NativeFunction;
    static readonly int GetPropertyName_ParamsSize;
    static readonly int GetPropertyName_ReturnValue_Offset;
    
    public Name GetPropertyName()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetPropertyName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetPropertyName_NativeFunction, ParamsBuffer);
            
            Name returnValue;
            returnValue = BlittableMarshaller<Name>.FromNative(IntPtr.Add(ParamsBuffer, GetPropertyName_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
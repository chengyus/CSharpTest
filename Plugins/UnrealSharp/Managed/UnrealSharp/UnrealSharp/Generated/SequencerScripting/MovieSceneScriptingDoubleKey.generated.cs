// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.SequencerScripting;

[UClass]
public partial class MovieSceneScriptingDoubleKey : UnrealSharp.SequencerScripting.MovieSceneScriptingKey
{
    
    static MovieSceneScriptingDoubleKey()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("MovieSceneScriptingDoubleKey");
        
        
        SetValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetValue");
        SetValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetValue_NativeFunction);
        SetValue_InNewValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetValue_NativeFunction, "InNewValue");
        SetTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetTime");
        SetTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetTime_NativeFunction);
        SetTime_NewFrameNumber_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetTime_NativeFunction, "NewFrameNumber");
        SetTime_SubFrame_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetTime_NativeFunction, "SubFrame");
        SetTime_TimeUnit_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetTime_NativeFunction, "TimeUnit");
        SetTangentWeightMode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetTangentWeightMode");
        SetTangentWeightMode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetTangentWeightMode_NativeFunction);
        SetTangentWeightMode_InNewValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetTangentWeightMode_NativeFunction, "InNewValue");
        SetTangentMode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetTangentMode");
        SetTangentMode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetTangentMode_NativeFunction);
        SetTangentMode_InNewValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetTangentMode_NativeFunction, "InNewValue");
        SetLeaveTangentWeight_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetLeaveTangentWeight");
        SetLeaveTangentWeight_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetLeaveTangentWeight_NativeFunction);
        SetLeaveTangentWeight_InNewValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLeaveTangentWeight_NativeFunction, "InNewValue");
        SetLeaveTangent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetLeaveTangent");
        SetLeaveTangent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetLeaveTangent_NativeFunction);
        SetLeaveTangent_InNewValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLeaveTangent_NativeFunction, "InNewValue");
        SetInterpolationMode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetInterpolationMode");
        SetInterpolationMode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetInterpolationMode_NativeFunction);
        SetInterpolationMode_InNewValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetInterpolationMode_NativeFunction, "InNewValue");
        SetArriveTangentWeight_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetArriveTangentWeight");
        SetArriveTangentWeight_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetArriveTangentWeight_NativeFunction);
        SetArriveTangentWeight_InNewValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetArriveTangentWeight_NativeFunction, "InNewValue");
        SetArriveTangent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetArriveTangent");
        SetArriveTangent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetArriveTangent_NativeFunction);
        SetArriveTangent_InNewValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetArriveTangent_NativeFunction, "InNewValue");
        GetValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetValue");
        GetValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetValue_NativeFunction);
        GetValue_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetValue_NativeFunction, "ReturnValue");
        GetTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetTime");
        GetTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetTime_NativeFunction);
        GetTime_TimeUnit_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTime_NativeFunction, "TimeUnit");
        GetTime_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTime_NativeFunction, "ReturnValue");
        GetTangentWeightMode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetTangentWeightMode");
        GetTangentWeightMode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetTangentWeightMode_NativeFunction);
        GetTangentWeightMode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTangentWeightMode_NativeFunction, "ReturnValue");
        GetTangentMode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetTangentMode");
        GetTangentMode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetTangentMode_NativeFunction);
        GetTangentMode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTangentMode_NativeFunction, "ReturnValue");
        GetLeaveTangentWeight_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetLeaveTangentWeight");
        GetLeaveTangentWeight_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetLeaveTangentWeight_NativeFunction);
        GetLeaveTangentWeight_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLeaveTangentWeight_NativeFunction, "ReturnValue");
        GetLeaveTangent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetLeaveTangent");
        GetLeaveTangent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetLeaveTangent_NativeFunction);
        GetLeaveTangent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLeaveTangent_NativeFunction, "ReturnValue");
        GetInterpolationMode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetInterpolationMode");
        GetInterpolationMode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetInterpolationMode_NativeFunction);
        GetInterpolationMode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetInterpolationMode_NativeFunction, "ReturnValue");
        GetArriveTangentWeight_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetArriveTangentWeight");
        GetArriveTangentWeight_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetArriveTangentWeight_NativeFunction);
        GetArriveTangentWeight_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetArriveTangentWeight_NativeFunction, "ReturnValue");
        GetArriveTangent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetArriveTangent");
        GetArriveTangent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetArriveTangent_NativeFunction);
        GetArriveTangent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetArriveTangent_NativeFunction, "ReturnValue");
        
        
    }
    
    protected MovieSceneScriptingDoubleKey(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey:SetValue
    static readonly IntPtr SetValue_NativeFunction;
    static readonly int SetValue_ParamsSize;
    static readonly int SetValue_InNewValue_Offset;
    
    public void SetValue(double inNewValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<double>.ToNative(IntPtr.Add(ParamsBuffer, SetValue_InNewValue_Offset), 0, null, inNewValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetValue_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey:SetTime
    static readonly IntPtr SetTime_NativeFunction;
    static readonly int SetTime_ParamsSize;
    static readonly int SetTime_NewFrameNumber_Offset;
    static readonly int SetTime_SubFrame_Offset;
    static readonly int SetTime_TimeUnit_Offset;
    
    public void SetTime(UnrealSharp.CoreUObject.FrameNumber newFrameNumber, float subFrame = 0.000000f, UnrealSharp.SequencerScripting.ESequenceTimeUnit timeUnit = UnrealSharp.SequencerScripting.ESequenceTimeUnit.DisplayRate)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.CoreUObject.FrameNumber>.ToNative(IntPtr.Add(ParamsBuffer, SetTime_NewFrameNumber_Offset), 0, null, newFrameNumber);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetTime_SubFrame_Offset), 0, null, subFrame);
            BlittableMarshaller<UnrealSharp.SequencerScripting.ESequenceTimeUnit>.ToNative(IntPtr.Add(ParamsBuffer, SetTime_TimeUnit_Offset), 0, null, timeUnit);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetTime_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey:SetTangentWeightMode
    static readonly IntPtr SetTangentWeightMode_NativeFunction;
    static readonly int SetTangentWeightMode_ParamsSize;
    static readonly int SetTangentWeightMode_InNewValue_Offset;
    
    public void SetTangentWeightMode(UnrealSharp.Engine.ERichCurveTangentWeightMode inNewValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetTangentWeightMode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.Engine.ERichCurveTangentWeightMode>.ToNative(IntPtr.Add(ParamsBuffer, SetTangentWeightMode_InNewValue_Offset), 0, null, inNewValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetTangentWeightMode_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey:SetTangentMode
    static readonly IntPtr SetTangentMode_NativeFunction;
    static readonly int SetTangentMode_ParamsSize;
    static readonly int SetTangentMode_InNewValue_Offset;
    
    public void SetTangentMode(UnrealSharp.Engine.ERichCurveTangentMode inNewValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetTangentMode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.Engine.ERichCurveTangentMode>.ToNative(IntPtr.Add(ParamsBuffer, SetTangentMode_InNewValue_Offset), 0, null, inNewValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetTangentMode_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey:SetLeaveTangentWeight
    static readonly IntPtr SetLeaveTangentWeight_NativeFunction;
    static readonly int SetLeaveTangentWeight_ParamsSize;
    static readonly int SetLeaveTangentWeight_InNewValue_Offset;
    
    public void SetLeaveTangentWeight(float inNewValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetLeaveTangentWeight_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetLeaveTangentWeight_InNewValue_Offset), 0, null, inNewValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetLeaveTangentWeight_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey:SetLeaveTangent
    static readonly IntPtr SetLeaveTangent_NativeFunction;
    static readonly int SetLeaveTangent_ParamsSize;
    static readonly int SetLeaveTangent_InNewValue_Offset;
    
    public void SetLeaveTangent(float inNewValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetLeaveTangent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetLeaveTangent_InNewValue_Offset), 0, null, inNewValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetLeaveTangent_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey:SetInterpolationMode
    static readonly IntPtr SetInterpolationMode_NativeFunction;
    static readonly int SetInterpolationMode_ParamsSize;
    static readonly int SetInterpolationMode_InNewValue_Offset;
    
    public void SetInterpolationMode(UnrealSharp.Engine.ERichCurveInterpMode inNewValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetInterpolationMode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.Engine.ERichCurveInterpMode>.ToNative(IntPtr.Add(ParamsBuffer, SetInterpolationMode_InNewValue_Offset), 0, null, inNewValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetInterpolationMode_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey:SetArriveTangentWeight
    static readonly IntPtr SetArriveTangentWeight_NativeFunction;
    static readonly int SetArriveTangentWeight_ParamsSize;
    static readonly int SetArriveTangentWeight_InNewValue_Offset;
    
    public void SetArriveTangentWeight(float inNewValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetArriveTangentWeight_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetArriveTangentWeight_InNewValue_Offset), 0, null, inNewValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetArriveTangentWeight_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey:SetArriveTangent
    static readonly IntPtr SetArriveTangent_NativeFunction;
    static readonly int SetArriveTangent_ParamsSize;
    static readonly int SetArriveTangent_InNewValue_Offset;
    
    public void SetArriveTangent(float inNewValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetArriveTangent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetArriveTangent_InNewValue_Offset), 0, null, inNewValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetArriveTangent_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey:GetValue
    static readonly IntPtr GetValue_NativeFunction;
    static readonly int GetValue_ParamsSize;
    static readonly int GetValue_ReturnValue_Offset;
    
    public double GetValue()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetValue_NativeFunction, ParamsBuffer);
            
            double returnValue;
            returnValue = BlittableMarshaller<double>.FromNative(IntPtr.Add(ParamsBuffer, GetValue_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey:GetTime
    static readonly IntPtr GetTime_NativeFunction;
    static readonly int GetTime_ParamsSize;
    static readonly int GetTime_TimeUnit_Offset;
    static readonly int GetTime_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.FrameTime GetTime(UnrealSharp.SequencerScripting.ESequenceTimeUnit timeUnit = UnrealSharp.SequencerScripting.ESequenceTimeUnit.DisplayRate)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.SequencerScripting.ESequenceTimeUnit>.ToNative(IntPtr.Add(ParamsBuffer, GetTime_TimeUnit_Offset), 0, null, timeUnit);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetTime_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.FrameTime returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.CoreUObject.FrameTime>.FromNative(IntPtr.Add(ParamsBuffer, GetTime_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey:GetTangentWeightMode
    static readonly IntPtr GetTangentWeightMode_NativeFunction;
    static readonly int GetTangentWeightMode_ParamsSize;
    static readonly int GetTangentWeightMode_ReturnValue_Offset;
    
    public UnrealSharp.Engine.ERichCurveTangentWeightMode GetTangentWeightMode()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetTangentWeightMode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetTangentWeightMode_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.ERichCurveTangentWeightMode returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.Engine.ERichCurveTangentWeightMode>.FromNative(IntPtr.Add(ParamsBuffer, GetTangentWeightMode_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey:GetTangentMode
    static readonly IntPtr GetTangentMode_NativeFunction;
    static readonly int GetTangentMode_ParamsSize;
    static readonly int GetTangentMode_ReturnValue_Offset;
    
    public UnrealSharp.Engine.ERichCurveTangentMode GetTangentMode()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetTangentMode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetTangentMode_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.ERichCurveTangentMode returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.Engine.ERichCurveTangentMode>.FromNative(IntPtr.Add(ParamsBuffer, GetTangentMode_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey:GetLeaveTangentWeight
    static readonly IntPtr GetLeaveTangentWeight_NativeFunction;
    static readonly int GetLeaveTangentWeight_ParamsSize;
    static readonly int GetLeaveTangentWeight_ReturnValue_Offset;
    
    public float GetLeaveTangentWeight()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetLeaveTangentWeight_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetLeaveTangentWeight_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetLeaveTangentWeight_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey:GetLeaveTangent
    static readonly IntPtr GetLeaveTangent_NativeFunction;
    static readonly int GetLeaveTangent_ParamsSize;
    static readonly int GetLeaveTangent_ReturnValue_Offset;
    
    public float GetLeaveTangent()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetLeaveTangent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetLeaveTangent_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetLeaveTangent_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey:GetInterpolationMode
    static readonly IntPtr GetInterpolationMode_NativeFunction;
    static readonly int GetInterpolationMode_ParamsSize;
    static readonly int GetInterpolationMode_ReturnValue_Offset;
    
    public UnrealSharp.Engine.ERichCurveInterpMode GetInterpolationMode()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetInterpolationMode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetInterpolationMode_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.ERichCurveInterpMode returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.Engine.ERichCurveInterpMode>.FromNative(IntPtr.Add(ParamsBuffer, GetInterpolationMode_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey:GetArriveTangentWeight
    static readonly IntPtr GetArriveTangentWeight_NativeFunction;
    static readonly int GetArriveTangentWeight_ParamsSize;
    static readonly int GetArriveTangentWeight_ReturnValue_Offset;
    
    public float GetArriveTangentWeight()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetArriveTangentWeight_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetArriveTangentWeight_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetArriveTangentWeight_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey:GetArriveTangent
    static readonly IntPtr GetArriveTangent_NativeFunction;
    static readonly int GetArriveTangent_ParamsSize;
    static readonly int GetArriveTangent_ReturnValue_Offset;
    
    public float GetArriveTangent()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetArriveTangent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetArriveTangent_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetArriveTangent_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
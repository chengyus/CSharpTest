// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.SequencerScripting;

[UClass]
public partial class MovieSceneSectionExtensions : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static MovieSceneSectionExtensions()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("MovieSceneSectionExtensions");
        
        
        SetStartFrameSeconds_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetStartFrameSeconds");
        SetStartFrameSeconds_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetStartFrameSeconds_NativeFunction);
        SetStartFrameSeconds_Section_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStartFrameSeconds_NativeFunction, "Section");
        SetStartFrameSeconds_StartTime_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStartFrameSeconds_NativeFunction, "StartTime");
        SetStartFrameBounded_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetStartFrameBounded");
        SetStartFrameBounded_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetStartFrameBounded_NativeFunction);
        SetStartFrameBounded_Section_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStartFrameBounded_NativeFunction, "Section");
        SetStartFrameBounded_bIsBounded_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStartFrameBounded_NativeFunction, "bIsBounded");
        SetStartFrame_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetStartFrame");
        SetStartFrame_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetStartFrame_NativeFunction);
        SetStartFrame_Section_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStartFrame_NativeFunction, "Section");
        SetStartFrame_StartFrame_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStartFrame_NativeFunction, "StartFrame");
        SetRangeSeconds_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetRangeSeconds");
        SetRangeSeconds_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetRangeSeconds_NativeFunction);
        SetRangeSeconds_Section_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetRangeSeconds_NativeFunction, "Section");
        SetRangeSeconds_StartTime_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetRangeSeconds_NativeFunction, "StartTime");
        SetRangeSeconds_EndTime_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetRangeSeconds_NativeFunction, "EndTime");
        SetRange_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetRange");
        SetRange_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetRange_NativeFunction);
        SetRange_Section_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetRange_NativeFunction, "Section");
        SetRange_StartFrame_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetRange_NativeFunction, "StartFrame");
        SetRange_EndFrame_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetRange_NativeFunction, "EndFrame");
        SetEndFrameSeconds_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetEndFrameSeconds");
        SetEndFrameSeconds_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetEndFrameSeconds_NativeFunction);
        SetEndFrameSeconds_Section_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEndFrameSeconds_NativeFunction, "Section");
        SetEndFrameSeconds_EndTime_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEndFrameSeconds_NativeFunction, "EndTime");
        SetEndFrameBounded_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetEndFrameBounded");
        SetEndFrameBounded_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetEndFrameBounded_NativeFunction);
        SetEndFrameBounded_Section_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEndFrameBounded_NativeFunction, "Section");
        SetEndFrameBounded_bIsBounded_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEndFrameBounded_NativeFunction, "bIsBounded");
        SetEndFrame_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetEndFrame");
        SetEndFrame_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetEndFrame_NativeFunction);
        SetEndFrame_Section_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEndFrame_NativeFunction, "Section");
        SetEndFrame_EndFrame_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEndFrame_NativeFunction, "EndFrame");
        HasStartFrame_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "HasStartFrame");
        HasStartFrame_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(HasStartFrame_NativeFunction);
        HasStartFrame_Section_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasStartFrame_NativeFunction, "Section");
        HasStartFrame_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasStartFrame_NativeFunction, "ReturnValue");
        HasEndFrame_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "HasEndFrame");
        HasEndFrame_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(HasEndFrame_NativeFunction);
        HasEndFrame_Section_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasEndFrame_NativeFunction, "Section");
        HasEndFrame_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasEndFrame_NativeFunction, "ReturnValue");
        GetStartFrameSeconds_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetStartFrameSeconds");
        GetStartFrameSeconds_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetStartFrameSeconds_NativeFunction);
        GetStartFrameSeconds_Section_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetStartFrameSeconds_NativeFunction, "Section");
        GetStartFrameSeconds_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetStartFrameSeconds_NativeFunction, "ReturnValue");
        GetStartFrame_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetStartFrame");
        GetStartFrame_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetStartFrame_NativeFunction);
        GetStartFrame_Section_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetStartFrame_NativeFunction, "Section");
        GetStartFrame_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetStartFrame_NativeFunction, "ReturnValue");
        GetParentSequenceFrame_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetParentSequenceFrame");
        GetParentSequenceFrame_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetParentSequenceFrame_NativeFunction);
        GetParentSequenceFrame_Section_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParentSequenceFrame_NativeFunction, "Section");
        GetParentSequenceFrame_InFrame_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParentSequenceFrame_NativeFunction, "InFrame");
        GetParentSequenceFrame_ParentSequence_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParentSequenceFrame_NativeFunction, "ParentSequence");
        GetParentSequenceFrame_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParentSequenceFrame_NativeFunction, "ReturnValue");
        GetEndFrameSeconds_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetEndFrameSeconds");
        GetEndFrameSeconds_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetEndFrameSeconds_NativeFunction);
        GetEndFrameSeconds_Section_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetEndFrameSeconds_NativeFunction, "Section");
        GetEndFrameSeconds_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetEndFrameSeconds_NativeFunction, "ReturnValue");
        GetEndFrame_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetEndFrame");
        GetEndFrame_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetEndFrame_NativeFunction);
        GetEndFrame_Section_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetEndFrame_NativeFunction, "Section");
        GetEndFrame_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetEndFrame_NativeFunction, "ReturnValue");
        GetChannelsByType_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetChannelsByType");
        GetChannelsByType_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetChannelsByType_NativeFunction);
        GetChannelsByType_Section_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetChannelsByType_NativeFunction, "Section");
        GetChannelsByType_ChannelType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetChannelsByType_NativeFunction, "ChannelType");
        GetChannelsByType_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetChannelsByType_NativeFunction, "ReturnValue");
        GetChannelsByType_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetChannelsByType_NativeFunction, "ReturnValue");
        GetAutoSizeStartFrameSeconds_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetAutoSizeStartFrameSeconds");
        GetAutoSizeStartFrameSeconds_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetAutoSizeStartFrameSeconds_NativeFunction);
        GetAutoSizeStartFrameSeconds_Section_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAutoSizeStartFrameSeconds_NativeFunction, "Section");
        GetAutoSizeStartFrameSeconds_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAutoSizeStartFrameSeconds_NativeFunction, "ReturnValue");
        GetAutoSizeStartFrame_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetAutoSizeStartFrame");
        GetAutoSizeStartFrame_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetAutoSizeStartFrame_NativeFunction);
        GetAutoSizeStartFrame_Section_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAutoSizeStartFrame_NativeFunction, "Section");
        GetAutoSizeStartFrame_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAutoSizeStartFrame_NativeFunction, "ReturnValue");
        GetAutoSizeHasStartFrame_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetAutoSizeHasStartFrame");
        GetAutoSizeHasStartFrame_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetAutoSizeHasStartFrame_NativeFunction);
        GetAutoSizeHasStartFrame_Section_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAutoSizeHasStartFrame_NativeFunction, "Section");
        GetAutoSizeHasStartFrame_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAutoSizeHasStartFrame_NativeFunction, "ReturnValue");
        GetAutoSizeHasEndFrame_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetAutoSizeHasEndFrame");
        GetAutoSizeHasEndFrame_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetAutoSizeHasEndFrame_NativeFunction);
        GetAutoSizeHasEndFrame_Section_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAutoSizeHasEndFrame_NativeFunction, "Section");
        GetAutoSizeHasEndFrame_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAutoSizeHasEndFrame_NativeFunction, "ReturnValue");
        GetAutoSizeEndFrameSeconds_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetAutoSizeEndFrameSeconds");
        GetAutoSizeEndFrameSeconds_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetAutoSizeEndFrameSeconds_NativeFunction);
        GetAutoSizeEndFrameSeconds_Section_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAutoSizeEndFrameSeconds_NativeFunction, "Section");
        GetAutoSizeEndFrameSeconds_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAutoSizeEndFrameSeconds_NativeFunction, "ReturnValue");
        GetAutoSizeEndFrame_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetAutoSizeEndFrame");
        GetAutoSizeEndFrame_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetAutoSizeEndFrame_NativeFunction);
        GetAutoSizeEndFrame_Section_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAutoSizeEndFrame_NativeFunction, "Section");
        GetAutoSizeEndFrame_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAutoSizeEndFrame_NativeFunction, "ReturnValue");
        GetAllChannels_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetAllChannels");
        GetAllChannels_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetAllChannels_NativeFunction);
        GetAllChannels_Section_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAllChannels_NativeFunction, "Section");
        GetAllChannels_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAllChannels_NativeFunction, "ReturnValue");
        GetAllChannels_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetAllChannels_NativeFunction, "ReturnValue");
        
        
    }
    
    protected MovieSceneSectionExtensions(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/SequencerScripting.MovieSceneSectionExtensions:SetStartFrameSeconds
    static readonly IntPtr SetStartFrameSeconds_NativeFunction;
    static readonly int SetStartFrameSeconds_ParamsSize;
    static readonly int SetStartFrameSeconds_Section_Offset;
    static readonly int SetStartFrameSeconds_StartTime_Offset;
    
    public static void SetStartFrameSeconds(UnrealSharp.MovieScene.MovieSceneSection section, float startTime)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetStartFrameSeconds_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSection>.ToNative(IntPtr.Add(ParamsBuffer, SetStartFrameSeconds_Section_Offset), 0, null, section);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetStartFrameSeconds_StartTime_Offset), 0, null, startTime);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetStartFrameSeconds_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneSectionExtensions:SetStartFrameBounded
    static readonly IntPtr SetStartFrameBounded_NativeFunction;
    static readonly int SetStartFrameBounded_ParamsSize;
    static readonly int SetStartFrameBounded_Section_Offset;
    static readonly int SetStartFrameBounded_bIsBounded_Offset;
    
    public static void SetStartFrameBounded(UnrealSharp.MovieScene.MovieSceneSection section, bool bIsBounded)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetStartFrameBounded_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSection>.ToNative(IntPtr.Add(ParamsBuffer, SetStartFrameBounded_Section_Offset), 0, null, section);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetStartFrameBounded_bIsBounded_Offset), 0, null, bIsBounded);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetStartFrameBounded_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneSectionExtensions:SetStartFrame
    static readonly IntPtr SetStartFrame_NativeFunction;
    static readonly int SetStartFrame_ParamsSize;
    static readonly int SetStartFrame_Section_Offset;
    static readonly int SetStartFrame_StartFrame_Offset;
    
    public static void SetStartFrame(UnrealSharp.MovieScene.MovieSceneSection section, int startFrame)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetStartFrame_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSection>.ToNative(IntPtr.Add(ParamsBuffer, SetStartFrame_Section_Offset), 0, null, section);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetStartFrame_StartFrame_Offset), 0, null, startFrame);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetStartFrame_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneSectionExtensions:SetRangeSeconds
    static readonly IntPtr SetRangeSeconds_NativeFunction;
    static readonly int SetRangeSeconds_ParamsSize;
    static readonly int SetRangeSeconds_Section_Offset;
    static readonly int SetRangeSeconds_StartTime_Offset;
    static readonly int SetRangeSeconds_EndTime_Offset;
    
    public static void SetRangeSeconds(UnrealSharp.MovieScene.MovieSceneSection section, float startTime, float endTime)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetRangeSeconds_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSection>.ToNative(IntPtr.Add(ParamsBuffer, SetRangeSeconds_Section_Offset), 0, null, section);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetRangeSeconds_StartTime_Offset), 0, null, startTime);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetRangeSeconds_EndTime_Offset), 0, null, endTime);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetRangeSeconds_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneSectionExtensions:SetRange
    static readonly IntPtr SetRange_NativeFunction;
    static readonly int SetRange_ParamsSize;
    static readonly int SetRange_Section_Offset;
    static readonly int SetRange_StartFrame_Offset;
    static readonly int SetRange_EndFrame_Offset;
    
    public static void SetRange(UnrealSharp.MovieScene.MovieSceneSection section, int startFrame, int endFrame)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetRange_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSection>.ToNative(IntPtr.Add(ParamsBuffer, SetRange_Section_Offset), 0, null, section);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetRange_StartFrame_Offset), 0, null, startFrame);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetRange_EndFrame_Offset), 0, null, endFrame);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetRange_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneSectionExtensions:SetEndFrameSeconds
    static readonly IntPtr SetEndFrameSeconds_NativeFunction;
    static readonly int SetEndFrameSeconds_ParamsSize;
    static readonly int SetEndFrameSeconds_Section_Offset;
    static readonly int SetEndFrameSeconds_EndTime_Offset;
    
    public static void SetEndFrameSeconds(UnrealSharp.MovieScene.MovieSceneSection section, float endTime)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetEndFrameSeconds_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSection>.ToNative(IntPtr.Add(ParamsBuffer, SetEndFrameSeconds_Section_Offset), 0, null, section);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetEndFrameSeconds_EndTime_Offset), 0, null, endTime);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetEndFrameSeconds_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneSectionExtensions:SetEndFrameBounded
    static readonly IntPtr SetEndFrameBounded_NativeFunction;
    static readonly int SetEndFrameBounded_ParamsSize;
    static readonly int SetEndFrameBounded_Section_Offset;
    static readonly int SetEndFrameBounded_bIsBounded_Offset;
    
    public static void SetEndFrameBounded(UnrealSharp.MovieScene.MovieSceneSection section, bool bIsBounded)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetEndFrameBounded_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSection>.ToNative(IntPtr.Add(ParamsBuffer, SetEndFrameBounded_Section_Offset), 0, null, section);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetEndFrameBounded_bIsBounded_Offset), 0, null, bIsBounded);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetEndFrameBounded_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneSectionExtensions:SetEndFrame
    static readonly IntPtr SetEndFrame_NativeFunction;
    static readonly int SetEndFrame_ParamsSize;
    static readonly int SetEndFrame_Section_Offset;
    static readonly int SetEndFrame_EndFrame_Offset;
    
    public static void SetEndFrame(UnrealSharp.MovieScene.MovieSceneSection section, int endFrame)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetEndFrame_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSection>.ToNative(IntPtr.Add(ParamsBuffer, SetEndFrame_Section_Offset), 0, null, section);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetEndFrame_EndFrame_Offset), 0, null, endFrame);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SetEndFrame_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneSectionExtensions:HasStartFrame
    static readonly IntPtr HasStartFrame_NativeFunction;
    static readonly int HasStartFrame_ParamsSize;
    static readonly int HasStartFrame_Section_Offset;
    static readonly int HasStartFrame_ReturnValue_Offset;
    
    public static bool HasStartFrame(UnrealSharp.MovieScene.MovieSceneSection section)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[HasStartFrame_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSection>.ToNative(IntPtr.Add(ParamsBuffer, HasStartFrame_Section_Offset), 0, null, section);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, HasStartFrame_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, HasStartFrame_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneSectionExtensions:HasEndFrame
    static readonly IntPtr HasEndFrame_NativeFunction;
    static readonly int HasEndFrame_ParamsSize;
    static readonly int HasEndFrame_Section_Offset;
    static readonly int HasEndFrame_ReturnValue_Offset;
    
    public static bool HasEndFrame(UnrealSharp.MovieScene.MovieSceneSection section)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[HasEndFrame_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSection>.ToNative(IntPtr.Add(ParamsBuffer, HasEndFrame_Section_Offset), 0, null, section);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, HasEndFrame_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, HasEndFrame_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneSectionExtensions:GetStartFrameSeconds
    static readonly IntPtr GetStartFrameSeconds_NativeFunction;
    static readonly int GetStartFrameSeconds_ParamsSize;
    static readonly int GetStartFrameSeconds_Section_Offset;
    static readonly int GetStartFrameSeconds_ReturnValue_Offset;
    
    public static float GetStartFrameSeconds(UnrealSharp.MovieScene.MovieSceneSection section)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetStartFrameSeconds_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSection>.ToNative(IntPtr.Add(ParamsBuffer, GetStartFrameSeconds_Section_Offset), 0, null, section);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetStartFrameSeconds_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetStartFrameSeconds_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneSectionExtensions:GetStartFrame
    static readonly IntPtr GetStartFrame_NativeFunction;
    static readonly int GetStartFrame_ParamsSize;
    static readonly int GetStartFrame_Section_Offset;
    static readonly int GetStartFrame_ReturnValue_Offset;
    
    public static int GetStartFrame(UnrealSharp.MovieScene.MovieSceneSection section)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetStartFrame_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSection>.ToNative(IntPtr.Add(ParamsBuffer, GetStartFrame_Section_Offset), 0, null, section);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetStartFrame_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetStartFrame_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneSectionExtensions:GetParentSequenceFrame
    static readonly IntPtr GetParentSequenceFrame_NativeFunction;
    static readonly int GetParentSequenceFrame_ParamsSize;
    static readonly int GetParentSequenceFrame_Section_Offset;
    static readonly int GetParentSequenceFrame_InFrame_Offset;
    static readonly int GetParentSequenceFrame_ParentSequence_Offset;
    static readonly int GetParentSequenceFrame_ReturnValue_Offset;
    
    public static int GetParentSequenceFrame(UnrealSharp.MovieScene.MovieSceneSubSection section, int inFrame, UnrealSharp.MovieScene.MovieSceneSequence parentSequence)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetParentSequenceFrame_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSubSection>.ToNative(IntPtr.Add(ParamsBuffer, GetParentSequenceFrame_Section_Offset), 0, null, section);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetParentSequenceFrame_InFrame_Offset), 0, null, inFrame);
            ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSequence>.ToNative(IntPtr.Add(ParamsBuffer, GetParentSequenceFrame_ParentSequence_Offset), 0, null, parentSequence);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetParentSequenceFrame_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetParentSequenceFrame_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneSectionExtensions:GetEndFrameSeconds
    static readonly IntPtr GetEndFrameSeconds_NativeFunction;
    static readonly int GetEndFrameSeconds_ParamsSize;
    static readonly int GetEndFrameSeconds_Section_Offset;
    static readonly int GetEndFrameSeconds_ReturnValue_Offset;
    
    public static float GetEndFrameSeconds(UnrealSharp.MovieScene.MovieSceneSection section)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetEndFrameSeconds_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSection>.ToNative(IntPtr.Add(ParamsBuffer, GetEndFrameSeconds_Section_Offset), 0, null, section);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetEndFrameSeconds_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetEndFrameSeconds_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneSectionExtensions:GetEndFrame
    static readonly IntPtr GetEndFrame_NativeFunction;
    static readonly int GetEndFrame_ParamsSize;
    static readonly int GetEndFrame_Section_Offset;
    static readonly int GetEndFrame_ReturnValue_Offset;
    
    public static int GetEndFrame(UnrealSharp.MovieScene.MovieSceneSection section)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetEndFrame_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSection>.ToNative(IntPtr.Add(ParamsBuffer, GetEndFrame_Section_Offset), 0, null, section);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetEndFrame_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetEndFrame_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneSectionExtensions:GetChannelsByType
    static readonly IntPtr GetChannelsByType_NativeFunction;
    static readonly int GetChannelsByType_ParamsSize;
    static readonly int GetChannelsByType_Section_Offset;
    static readonly int GetChannelsByType_ChannelType_Offset;
    static readonly int GetChannelsByType_ReturnValue_Offset;
    static readonly int GetChannelsByType_ReturnValue_ElementSize;
    
    public static System.Collections.Generic.IList<UnrealSharp.SequencerScripting.MovieSceneScriptingChannel> GetChannelsByType(UnrealSharp.MovieScene.MovieSceneSection section, SubclassOf<UnrealSharp.SequencerScripting.MovieSceneScriptingChannel> channelType)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetChannelsByType_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSection>.ToNative(IntPtr.Add(ParamsBuffer, GetChannelsByType_Section_Offset), 0, null, section);
            SubclassOfMarshaller<UnrealSharp.SequencerScripting.MovieSceneScriptingChannel>.ToNative(IntPtr.Add(ParamsBuffer, GetChannelsByType_ChannelType_Offset), 0, null, channelType);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetChannelsByType_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.SequencerScripting.MovieSceneScriptingChannel> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, GetChannelsByType_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.SequencerScripting.MovieSceneScriptingChannel> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.SequencerScripting.MovieSceneScriptingChannel> (1, ObjectMarshaller<UnrealSharp.SequencerScripting.MovieSceneScriptingChannel>.ToNative, ObjectMarshaller<UnrealSharp.SequencerScripting.MovieSceneScriptingChannel>.FromNative, GetChannelsByType_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.SequencerScripting.MovieSceneScriptingChannel>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneSectionExtensions:GetAutoSizeStartFrameSeconds
    static readonly IntPtr GetAutoSizeStartFrameSeconds_NativeFunction;
    static readonly int GetAutoSizeStartFrameSeconds_ParamsSize;
    static readonly int GetAutoSizeStartFrameSeconds_Section_Offset;
    static readonly int GetAutoSizeStartFrameSeconds_ReturnValue_Offset;
    
    public static float GetAutoSizeStartFrameSeconds(UnrealSharp.MovieScene.MovieSceneSection section)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetAutoSizeStartFrameSeconds_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSection>.ToNative(IntPtr.Add(ParamsBuffer, GetAutoSizeStartFrameSeconds_Section_Offset), 0, null, section);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetAutoSizeStartFrameSeconds_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetAutoSizeStartFrameSeconds_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneSectionExtensions:GetAutoSizeStartFrame
    static readonly IntPtr GetAutoSizeStartFrame_NativeFunction;
    static readonly int GetAutoSizeStartFrame_ParamsSize;
    static readonly int GetAutoSizeStartFrame_Section_Offset;
    static readonly int GetAutoSizeStartFrame_ReturnValue_Offset;
    
    public static int GetAutoSizeStartFrame(UnrealSharp.MovieScene.MovieSceneSection section)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetAutoSizeStartFrame_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSection>.ToNative(IntPtr.Add(ParamsBuffer, GetAutoSizeStartFrame_Section_Offset), 0, null, section);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetAutoSizeStartFrame_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetAutoSizeStartFrame_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneSectionExtensions:GetAutoSizeHasStartFrame
    static readonly IntPtr GetAutoSizeHasStartFrame_NativeFunction;
    static readonly int GetAutoSizeHasStartFrame_ParamsSize;
    static readonly int GetAutoSizeHasStartFrame_Section_Offset;
    static readonly int GetAutoSizeHasStartFrame_ReturnValue_Offset;
    
    public static bool GetAutoSizeHasStartFrame(UnrealSharp.MovieScene.MovieSceneSection section)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetAutoSizeHasStartFrame_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSection>.ToNative(IntPtr.Add(ParamsBuffer, GetAutoSizeHasStartFrame_Section_Offset), 0, null, section);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetAutoSizeHasStartFrame_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetAutoSizeHasStartFrame_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneSectionExtensions:GetAutoSizeHasEndFrame
    static readonly IntPtr GetAutoSizeHasEndFrame_NativeFunction;
    static readonly int GetAutoSizeHasEndFrame_ParamsSize;
    static readonly int GetAutoSizeHasEndFrame_Section_Offset;
    static readonly int GetAutoSizeHasEndFrame_ReturnValue_Offset;
    
    public static bool GetAutoSizeHasEndFrame(UnrealSharp.MovieScene.MovieSceneSection section)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetAutoSizeHasEndFrame_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSection>.ToNative(IntPtr.Add(ParamsBuffer, GetAutoSizeHasEndFrame_Section_Offset), 0, null, section);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetAutoSizeHasEndFrame_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetAutoSizeHasEndFrame_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneSectionExtensions:GetAutoSizeEndFrameSeconds
    static readonly IntPtr GetAutoSizeEndFrameSeconds_NativeFunction;
    static readonly int GetAutoSizeEndFrameSeconds_ParamsSize;
    static readonly int GetAutoSizeEndFrameSeconds_Section_Offset;
    static readonly int GetAutoSizeEndFrameSeconds_ReturnValue_Offset;
    
    public static float GetAutoSizeEndFrameSeconds(UnrealSharp.MovieScene.MovieSceneSection section)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetAutoSizeEndFrameSeconds_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSection>.ToNative(IntPtr.Add(ParamsBuffer, GetAutoSizeEndFrameSeconds_Section_Offset), 0, null, section);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetAutoSizeEndFrameSeconds_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetAutoSizeEndFrameSeconds_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneSectionExtensions:GetAutoSizeEndFrame
    static readonly IntPtr GetAutoSizeEndFrame_NativeFunction;
    static readonly int GetAutoSizeEndFrame_ParamsSize;
    static readonly int GetAutoSizeEndFrame_Section_Offset;
    static readonly int GetAutoSizeEndFrame_ReturnValue_Offset;
    
    public static int GetAutoSizeEndFrame(UnrealSharp.MovieScene.MovieSceneSection section)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetAutoSizeEndFrame_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSection>.ToNative(IntPtr.Add(ParamsBuffer, GetAutoSizeEndFrame_Section_Offset), 0, null, section);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetAutoSizeEndFrame_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetAutoSizeEndFrame_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SequencerScripting.MovieSceneSectionExtensions:GetAllChannels
    static readonly IntPtr GetAllChannels_NativeFunction;
    static readonly int GetAllChannels_ParamsSize;
    static readonly int GetAllChannels_Section_Offset;
    static readonly int GetAllChannels_ReturnValue_Offset;
    static readonly int GetAllChannels_ReturnValue_ElementSize;
    
    public static System.Collections.Generic.IList<UnrealSharp.SequencerScripting.MovieSceneScriptingChannel> GetAllChannels(UnrealSharp.MovieScene.MovieSceneSection section)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetAllChannels_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.MovieScene.MovieSceneSection>.ToNative(IntPtr.Add(ParamsBuffer, GetAllChannels_Section_Offset), 0, null, section);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetAllChannels_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.SequencerScripting.MovieSceneScriptingChannel> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, GetAllChannels_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.SequencerScripting.MovieSceneScriptingChannel> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.SequencerScripting.MovieSceneScriptingChannel> (1, ObjectMarshaller<UnrealSharp.SequencerScripting.MovieSceneScriptingChannel>.ToNative, ObjectMarshaller<UnrealSharp.SequencerScripting.MovieSceneScriptingChannel>.FromNative, GetAllChannels_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.SequencerScripting.MovieSceneScriptingChannel>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    
}
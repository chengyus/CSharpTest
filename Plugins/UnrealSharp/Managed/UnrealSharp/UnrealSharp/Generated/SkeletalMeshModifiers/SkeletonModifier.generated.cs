// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.SkeletalMeshModifiers;

[UClass]
public partial class SkeletonModifier : UnrealSharp.CoreUObject.Object
{
    
    static SkeletonModifier()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("SkeletonModifier");
        
        
        SetSkeletalMesh_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSkeletalMesh");
        SetSkeletalMesh_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSkeletalMesh_NativeFunction);
        SetSkeletalMesh_InSkeletalMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSkeletalMesh_NativeFunction, "InSkeletalMesh");
        SetSkeletalMesh_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSkeletalMesh_NativeFunction, "ReturnValue");
        SetBoneTransform_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetBoneTransform");
        SetBoneTransform_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetBoneTransform_NativeFunction);
        SetBoneTransform_InBoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBoneTransform_NativeFunction, "InBoneName");
        SetBoneTransform_InNewTransform_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBoneTransform_NativeFunction, "InNewTransform");
        SetBoneTransform_bMoveChildren_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBoneTransform_NativeFunction, "bMoveChildren");
        SetBoneTransform_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBoneTransform_NativeFunction, "ReturnValue");
        SetBonesTransforms_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetBonesTransforms");
        SetBonesTransforms_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetBonesTransforms_NativeFunction);
        SetBonesTransforms_InBoneNames_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBonesTransforms_NativeFunction, "InBoneNames");
        SetBonesTransforms_InBoneNames_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(SetBonesTransforms_NativeFunction, "InBoneNames");
        SetBonesTransforms_InNewTransforms_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBonesTransforms_NativeFunction, "InNewTransforms");
        SetBonesTransforms_InNewTransforms_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(SetBonesTransforms_NativeFunction, "InNewTransforms");
        SetBonesTransforms_bMoveChildren_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBonesTransforms_NativeFunction, "bMoveChildren");
        SetBonesTransforms_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBonesTransforms_NativeFunction, "ReturnValue");
        RenameBones_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RenameBones");
        RenameBones_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RenameBones_NativeFunction);
        RenameBones_InOldBoneNames_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameBones_NativeFunction, "InOldBoneNames");
        RenameBones_InOldBoneNames_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(RenameBones_NativeFunction, "InOldBoneNames");
        RenameBones_InNewBoneNames_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameBones_NativeFunction, "InNewBoneNames");
        RenameBones_InNewBoneNames_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(RenameBones_NativeFunction, "InNewBoneNames");
        RenameBones_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameBones_NativeFunction, "ReturnValue");
        RenameBone_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RenameBone");
        RenameBone_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RenameBone_NativeFunction);
        RenameBone_InOldBoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameBone_NativeFunction, "InOldBoneName");
        RenameBone_InNewBoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameBone_NativeFunction, "InNewBoneName");
        RenameBone_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RenameBone_NativeFunction, "ReturnValue");
        RemoveBones_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveBones");
        RemoveBones_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveBones_NativeFunction);
        RemoveBones_InBoneNames_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveBones_NativeFunction, "InBoneNames");
        RemoveBones_InBoneNames_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(RemoveBones_NativeFunction, "InBoneNames");
        RemoveBones_bRemoveChildren_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveBones_NativeFunction, "bRemoveChildren");
        RemoveBones_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveBones_NativeFunction, "ReturnValue");
        RemoveBone_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveBone");
        RemoveBone_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveBone_NativeFunction);
        RemoveBone_InBoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveBone_NativeFunction, "InBoneName");
        RemoveBone_bRemoveChildren_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveBone_NativeFunction, "bRemoveChildren");
        RemoveBone_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveBone_NativeFunction, "ReturnValue");
        ParentBones_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ParentBones");
        ParentBones_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ParentBones_NativeFunction);
        ParentBones_InBoneNames_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ParentBones_NativeFunction, "InBoneNames");
        ParentBones_InBoneNames_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(ParentBones_NativeFunction, "InBoneNames");
        ParentBones_InParentNames_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ParentBones_NativeFunction, "InParentNames");
        ParentBones_InParentNames_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(ParentBones_NativeFunction, "InParentNames");
        ParentBones_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ParentBones_NativeFunction, "ReturnValue");
        ParentBone_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ParentBone");
        ParentBone_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ParentBone_NativeFunction);
        ParentBone_InBoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ParentBone_NativeFunction, "InBoneName");
        ParentBone_InParentName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ParentBone_NativeFunction, "InParentName");
        ParentBone_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ParentBone_NativeFunction, "ReturnValue");
        OrientBones_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "OrientBones");
        OrientBones_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(OrientBones_NativeFunction);
        OrientBones_InBoneNames_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(OrientBones_NativeFunction, "InBoneNames");
        OrientBones_InBoneNames_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(OrientBones_NativeFunction, "InBoneNames");
        OrientBones_InOptions_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(OrientBones_NativeFunction, "InOptions");
        OrientBones_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(OrientBones_NativeFunction, "ReturnValue");
        OrientBone_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "OrientBone");
        OrientBone_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(OrientBone_NativeFunction);
        OrientBone_InBoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(OrientBone_NativeFunction, "InBoneName");
        OrientBone_InOptions_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(OrientBone_NativeFunction, "InOptions");
        OrientBone_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(OrientBone_NativeFunction, "ReturnValue");
        MirrorBones_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "MirrorBones");
        MirrorBones_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(MirrorBones_NativeFunction);
        MirrorBones_InBonesName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MirrorBones_NativeFunction, "InBonesName");
        MirrorBones_InBonesName_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(MirrorBones_NativeFunction, "InBonesName");
        MirrorBones_InOptions_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MirrorBones_NativeFunction, "InOptions");
        MirrorBones_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MirrorBones_NativeFunction, "ReturnValue");
        MirrorBone_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "MirrorBone");
        MirrorBone_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(MirrorBone_NativeFunction);
        MirrorBone_InBoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MirrorBone_NativeFunction, "InBoneName");
        MirrorBone_InOptions_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MirrorBone_NativeFunction, "InOptions");
        MirrorBone_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(MirrorBone_NativeFunction, "ReturnValue");
        GetParentName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetParentName");
        GetParentName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetParentName_NativeFunction);
        GetParentName_InBoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParentName_NativeFunction, "InBoneName");
        GetParentName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParentName_NativeFunction, "ReturnValue");
        GetChildrenNames_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetChildrenNames");
        GetChildrenNames_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetChildrenNames_NativeFunction);
        GetChildrenNames_InBoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetChildrenNames_NativeFunction, "InBoneName");
        GetChildrenNames_bRecursive_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetChildrenNames_NativeFunction, "bRecursive");
        GetChildrenNames_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetChildrenNames_NativeFunction, "ReturnValue");
        GetChildrenNames_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetChildrenNames_NativeFunction, "ReturnValue");
        GetBoneTransform_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBoneTransform");
        GetBoneTransform_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBoneTransform_NativeFunction);
        GetBoneTransform_InBoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBoneTransform_NativeFunction, "InBoneName");
        GetBoneTransform_bGlobal_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBoneTransform_NativeFunction, "bGlobal");
        GetBoneTransform_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBoneTransform_NativeFunction, "ReturnValue");
        GetAllBoneNames_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetAllBoneNames");
        GetAllBoneNames_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetAllBoneNames_NativeFunction);
        GetAllBoneNames_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAllBoneNames_NativeFunction, "ReturnValue");
        GetAllBoneNames_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetAllBoneNames_NativeFunction, "ReturnValue");
        CommitSkeletonToSkeletalMesh_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CommitSkeletonToSkeletalMesh");
        CommitSkeletonToSkeletalMesh_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(CommitSkeletonToSkeletalMesh_NativeFunction);
        CommitSkeletonToSkeletalMesh_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CommitSkeletonToSkeletalMesh_NativeFunction, "ReturnValue");
        AddBones_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddBones");
        AddBones_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddBones_NativeFunction);
        AddBones_InBonesName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddBones_NativeFunction, "InBonesName");
        AddBones_InBonesName_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(AddBones_NativeFunction, "InBonesName");
        AddBones_InParentsName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddBones_NativeFunction, "InParentsName");
        AddBones_InParentsName_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(AddBones_NativeFunction, "InParentsName");
        AddBones_InTransforms_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddBones_NativeFunction, "InTransforms");
        AddBones_InTransforms_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(AddBones_NativeFunction, "InTransforms");
        AddBones_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddBones_NativeFunction, "ReturnValue");
        AddBone_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddBone");
        AddBone_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddBone_NativeFunction);
        AddBone_InBoneName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddBone_NativeFunction, "InBoneName");
        AddBone_InParentName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddBone_NativeFunction, "InParentName");
        AddBone_InTransform_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddBone_NativeFunction, "InTransform");
        AddBone_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddBone_NativeFunction, "ReturnValue");
        
        
    }
    
    protected SkeletonModifier(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/SkeletalMeshModifiers.SkeletonModifier:SetSkeletalMesh
    static readonly IntPtr SetSkeletalMesh_NativeFunction;
    static readonly int SetSkeletalMesh_ParamsSize;
    static readonly int SetSkeletalMesh_InSkeletalMesh_Offset;
    static readonly int SetSkeletalMesh_ReturnValue_Offset;
    
    public bool SetSkeletalMesh(UnrealSharp.Engine.SkeletalMesh inSkeletalMesh)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSkeletalMesh_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.SkeletalMesh>.ToNative(IntPtr.Add(ParamsBuffer, SetSkeletalMesh_InSkeletalMesh_Offset), 0, null, inSkeletalMesh);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSkeletalMesh_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetSkeletalMesh_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SkeletalMeshModifiers.SkeletonModifier:SetBoneTransform
    static readonly IntPtr SetBoneTransform_NativeFunction;
    static readonly int SetBoneTransform_ParamsSize;
    static readonly int SetBoneTransform_InBoneName_Offset;
    static readonly int SetBoneTransform_InNewTransform_Offset;
    static readonly int SetBoneTransform_bMoveChildren_Offset;
    static readonly int SetBoneTransform_ReturnValue_Offset;
    
    public bool SetBoneTransform(Name inBoneName, UnrealSharp.Transform inNewTransform, bool bMoveChildren)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetBoneTransform_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetBoneTransform_InBoneName_Offset), 0, null, inBoneName);
            BlittableMarshaller<UnrealSharp.Transform>.ToNative(IntPtr.Add(ParamsBuffer, SetBoneTransform_InNewTransform_Offset), 0, null, inNewTransform);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetBoneTransform_bMoveChildren_Offset), 0, null, bMoveChildren);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetBoneTransform_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetBoneTransform_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SkeletalMeshModifiers.SkeletonModifier:SetBonesTransforms
    static readonly IntPtr SetBonesTransforms_NativeFunction;
    static readonly int SetBonesTransforms_ParamsSize;
    static readonly int SetBonesTransforms_InBoneNames_Offset;
    static readonly int SetBonesTransforms_InBoneNames_ElementSize;
    static readonly int SetBonesTransforms_InNewTransforms_Offset;
    static readonly int SetBonesTransforms_InNewTransforms_ElementSize;
    static readonly int SetBonesTransforms_bMoveChildren_Offset;
    static readonly int SetBonesTransforms_ReturnValue_Offset;
    
    public bool SetBonesTransforms(System.Collections.Generic.IList<Name> inBoneNames, System.Collections.Generic.IList<UnrealSharp.Transform> inNewTransforms, bool bMoveChildren)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetBonesTransforms_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InBoneNames_NativeBuffer = IntPtr.Add(ParamsBuffer, SetBonesTransforms_InBoneNames_Offset);
            UnrealArrayCopyMarshaler<Name> InBoneNames_Marshaler = new UnrealArrayCopyMarshaler<Name>(1, BlittableMarshaller<Name>.ToNative, BlittableMarshaller<Name>.FromNative, SetBonesTransforms_InBoneNames_ElementSize);
            InBoneNames_Marshaler.ToNative(InBoneNames_NativeBuffer, 0, null, inBoneNames);
            IntPtr InNewTransforms_NativeBuffer = IntPtr.Add(ParamsBuffer, SetBonesTransforms_InNewTransforms_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Transform> InNewTransforms_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Transform>(1, BlittableMarshaller<UnrealSharp.Transform>.ToNative, BlittableMarshaller<UnrealSharp.Transform>.FromNative, SetBonesTransforms_InNewTransforms_ElementSize);
            InNewTransforms_Marshaler.ToNative(InNewTransforms_NativeBuffer, 0, null, inNewTransforms);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetBonesTransforms_bMoveChildren_Offset), 0, null, bMoveChildren);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetBonesTransforms_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetBonesTransforms_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SkeletalMeshModifiers.SkeletonModifier:RenameBones
    static readonly IntPtr RenameBones_NativeFunction;
    static readonly int RenameBones_ParamsSize;
    static readonly int RenameBones_InOldBoneNames_Offset;
    static readonly int RenameBones_InOldBoneNames_ElementSize;
    static readonly int RenameBones_InNewBoneNames_Offset;
    static readonly int RenameBones_InNewBoneNames_ElementSize;
    static readonly int RenameBones_ReturnValue_Offset;
    
    public bool RenameBones(System.Collections.Generic.IList<Name> inOldBoneNames, System.Collections.Generic.IList<Name> inNewBoneNames)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RenameBones_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InOldBoneNames_NativeBuffer = IntPtr.Add(ParamsBuffer, RenameBones_InOldBoneNames_Offset);
            UnrealArrayCopyMarshaler<Name> InOldBoneNames_Marshaler = new UnrealArrayCopyMarshaler<Name>(1, BlittableMarshaller<Name>.ToNative, BlittableMarshaller<Name>.FromNative, RenameBones_InOldBoneNames_ElementSize);
            InOldBoneNames_Marshaler.ToNative(InOldBoneNames_NativeBuffer, 0, null, inOldBoneNames);
            IntPtr InNewBoneNames_NativeBuffer = IntPtr.Add(ParamsBuffer, RenameBones_InNewBoneNames_Offset);
            UnrealArrayCopyMarshaler<Name> InNewBoneNames_Marshaler = new UnrealArrayCopyMarshaler<Name>(1, BlittableMarshaller<Name>.ToNative, BlittableMarshaller<Name>.FromNative, RenameBones_InNewBoneNames_ElementSize);
            InNewBoneNames_Marshaler.ToNative(InNewBoneNames_NativeBuffer, 0, null, inNewBoneNames);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RenameBones_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RenameBones_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SkeletalMeshModifiers.SkeletonModifier:RenameBone
    static readonly IntPtr RenameBone_NativeFunction;
    static readonly int RenameBone_ParamsSize;
    static readonly int RenameBone_InOldBoneName_Offset;
    static readonly int RenameBone_InNewBoneName_Offset;
    static readonly int RenameBone_ReturnValue_Offset;
    
    public bool RenameBone(Name inOldBoneName, Name inNewBoneName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RenameBone_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, RenameBone_InOldBoneName_Offset), 0, null, inOldBoneName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, RenameBone_InNewBoneName_Offset), 0, null, inNewBoneName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RenameBone_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RenameBone_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SkeletalMeshModifiers.SkeletonModifier:RemoveBones
    static readonly IntPtr RemoveBones_NativeFunction;
    static readonly int RemoveBones_ParamsSize;
    static readonly int RemoveBones_InBoneNames_Offset;
    static readonly int RemoveBones_InBoneNames_ElementSize;
    static readonly int RemoveBones_bRemoveChildren_Offset;
    static readonly int RemoveBones_ReturnValue_Offset;
    
    public bool RemoveBones(System.Collections.Generic.IList<Name> inBoneNames, bool bRemoveChildren)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveBones_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InBoneNames_NativeBuffer = IntPtr.Add(ParamsBuffer, RemoveBones_InBoneNames_Offset);
            UnrealArrayCopyMarshaler<Name> InBoneNames_Marshaler = new UnrealArrayCopyMarshaler<Name>(1, BlittableMarshaller<Name>.ToNative, BlittableMarshaller<Name>.FromNative, RemoveBones_InBoneNames_ElementSize);
            InBoneNames_Marshaler.ToNative(InBoneNames_NativeBuffer, 0, null, inBoneNames);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveBones_bRemoveChildren_Offset), 0, null, bRemoveChildren);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveBones_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveBones_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SkeletalMeshModifiers.SkeletonModifier:RemoveBone
    static readonly IntPtr RemoveBone_NativeFunction;
    static readonly int RemoveBone_ParamsSize;
    static readonly int RemoveBone_InBoneName_Offset;
    static readonly int RemoveBone_bRemoveChildren_Offset;
    static readonly int RemoveBone_ReturnValue_Offset;
    
    public bool RemoveBone(Name inBoneName, bool bRemoveChildren)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveBone_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, RemoveBone_InBoneName_Offset), 0, null, inBoneName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, RemoveBone_bRemoveChildren_Offset), 0, null, bRemoveChildren);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveBone_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveBone_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SkeletalMeshModifiers.SkeletonModifier:ParentBones
    static readonly IntPtr ParentBones_NativeFunction;
    static readonly int ParentBones_ParamsSize;
    static readonly int ParentBones_InBoneNames_Offset;
    static readonly int ParentBones_InBoneNames_ElementSize;
    static readonly int ParentBones_InParentNames_Offset;
    static readonly int ParentBones_InParentNames_ElementSize;
    static readonly int ParentBones_ReturnValue_Offset;
    
    public bool ParentBones(System.Collections.Generic.IList<Name> inBoneNames, System.Collections.Generic.IList<Name> inParentNames)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ParentBones_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InBoneNames_NativeBuffer = IntPtr.Add(ParamsBuffer, ParentBones_InBoneNames_Offset);
            UnrealArrayCopyMarshaler<Name> InBoneNames_Marshaler = new UnrealArrayCopyMarshaler<Name>(1, BlittableMarshaller<Name>.ToNative, BlittableMarshaller<Name>.FromNative, ParentBones_InBoneNames_ElementSize);
            InBoneNames_Marshaler.ToNative(InBoneNames_NativeBuffer, 0, null, inBoneNames);
            IntPtr InParentNames_NativeBuffer = IntPtr.Add(ParamsBuffer, ParentBones_InParentNames_Offset);
            UnrealArrayCopyMarshaler<Name> InParentNames_Marshaler = new UnrealArrayCopyMarshaler<Name>(1, BlittableMarshaller<Name>.ToNative, BlittableMarshaller<Name>.FromNative, ParentBones_InParentNames_ElementSize);
            InParentNames_Marshaler.ToNative(InParentNames_NativeBuffer, 0, null, inParentNames);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ParentBones_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, ParentBones_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SkeletalMeshModifiers.SkeletonModifier:ParentBone
    static readonly IntPtr ParentBone_NativeFunction;
    static readonly int ParentBone_ParamsSize;
    static readonly int ParentBone_InBoneName_Offset;
    static readonly int ParentBone_InParentName_Offset;
    static readonly int ParentBone_ReturnValue_Offset;
    
    public bool ParentBone(Name inBoneName, Name inParentName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ParentBone_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, ParentBone_InBoneName_Offset), 0, null, inBoneName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, ParentBone_InParentName_Offset), 0, null, inParentName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ParentBone_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, ParentBone_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SkeletalMeshModifiers.SkeletonModifier:OrientBones
    static readonly IntPtr OrientBones_NativeFunction;
    static readonly int OrientBones_ParamsSize;
    static readonly int OrientBones_InBoneNames_Offset;
    static readonly int OrientBones_InBoneNames_ElementSize;
    static readonly int OrientBones_InOptions_Offset;
    static readonly int OrientBones_ReturnValue_Offset;
    
    public bool OrientBones(System.Collections.Generic.IList<Name> inBoneNames)
    {
        return OrientBones(inBoneNames, new OrientOptions());
    }
    
    public bool OrientBones(System.Collections.Generic.IList<Name> inBoneNames, UnrealSharp.SkeletalMeshModifiers.OrientOptions inOptions)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[OrientBones_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InBoneNames_NativeBuffer = IntPtr.Add(ParamsBuffer, OrientBones_InBoneNames_Offset);
            UnrealArrayCopyMarshaler<Name> InBoneNames_Marshaler = new UnrealArrayCopyMarshaler<Name>(1, BlittableMarshaller<Name>.ToNative, BlittableMarshaller<Name>.FromNative, OrientBones_InBoneNames_ElementSize);
            InBoneNames_Marshaler.ToNative(InBoneNames_NativeBuffer, 0, null, inBoneNames);
            UnrealSharp.SkeletalMeshModifiers.OrientOptionsMarshaler.ToNative(IntPtr.Add(ParamsBuffer, OrientBones_InOptions_Offset), 0, null, inOptions);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, OrientBones_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, OrientBones_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SkeletalMeshModifiers.SkeletonModifier:OrientBone
    static readonly IntPtr OrientBone_NativeFunction;
    static readonly int OrientBone_ParamsSize;
    static readonly int OrientBone_InBoneName_Offset;
    static readonly int OrientBone_InOptions_Offset;
    static readonly int OrientBone_ReturnValue_Offset;
    
    public bool OrientBone(Name inBoneName)
    {
        return OrientBone(inBoneName, new OrientOptions());
    }
    
    public bool OrientBone(Name inBoneName, UnrealSharp.SkeletalMeshModifiers.OrientOptions inOptions)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[OrientBone_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, OrientBone_InBoneName_Offset), 0, null, inBoneName);
            UnrealSharp.SkeletalMeshModifiers.OrientOptionsMarshaler.ToNative(IntPtr.Add(ParamsBuffer, OrientBone_InOptions_Offset), 0, null, inOptions);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, OrientBone_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, OrientBone_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SkeletalMeshModifiers.SkeletonModifier:MirrorBones
    static readonly IntPtr MirrorBones_NativeFunction;
    static readonly int MirrorBones_ParamsSize;
    static readonly int MirrorBones_InBonesName_Offset;
    static readonly int MirrorBones_InBonesName_ElementSize;
    static readonly int MirrorBones_InOptions_Offset;
    static readonly int MirrorBones_ReturnValue_Offset;
    
    public bool MirrorBones(System.Collections.Generic.IList<Name> inBonesName)
    {
        return MirrorBones(inBonesName, new MirrorOptions());
    }
    
    public bool MirrorBones(System.Collections.Generic.IList<Name> inBonesName, UnrealSharp.SkeletalMeshModifiers.MirrorOptions inOptions)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[MirrorBones_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InBonesName_NativeBuffer = IntPtr.Add(ParamsBuffer, MirrorBones_InBonesName_Offset);
            UnrealArrayCopyMarshaler<Name> InBonesName_Marshaler = new UnrealArrayCopyMarshaler<Name>(1, BlittableMarshaller<Name>.ToNative, BlittableMarshaller<Name>.FromNative, MirrorBones_InBonesName_ElementSize);
            InBonesName_Marshaler.ToNative(InBonesName_NativeBuffer, 0, null, inBonesName);
            UnrealSharp.SkeletalMeshModifiers.MirrorOptionsMarshaler.ToNative(IntPtr.Add(ParamsBuffer, MirrorBones_InOptions_Offset), 0, null, inOptions);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, MirrorBones_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, MirrorBones_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SkeletalMeshModifiers.SkeletonModifier:MirrorBone
    static readonly IntPtr MirrorBone_NativeFunction;
    static readonly int MirrorBone_ParamsSize;
    static readonly int MirrorBone_InBoneName_Offset;
    static readonly int MirrorBone_InOptions_Offset;
    static readonly int MirrorBone_ReturnValue_Offset;
    
    public bool MirrorBone(Name inBoneName)
    {
        return MirrorBone(inBoneName, new MirrorOptions());
    }
    
    public bool MirrorBone(Name inBoneName, UnrealSharp.SkeletalMeshModifiers.MirrorOptions inOptions)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[MirrorBone_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, MirrorBone_InBoneName_Offset), 0, null, inBoneName);
            UnrealSharp.SkeletalMeshModifiers.MirrorOptionsMarshaler.ToNative(IntPtr.Add(ParamsBuffer, MirrorBone_InOptions_Offset), 0, null, inOptions);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, MirrorBone_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, MirrorBone_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SkeletalMeshModifiers.SkeletonModifier:GetParentName
    static readonly IntPtr GetParentName_NativeFunction;
    static readonly int GetParentName_ParamsSize;
    static readonly int GetParentName_InBoneName_Offset;
    static readonly int GetParentName_ReturnValue_Offset;
    
    public Name GetParentName(Name inBoneName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetParentName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetParentName_InBoneName_Offset), 0, null, inBoneName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetParentName_NativeFunction, ParamsBuffer);
            
            Name returnValue;
            returnValue = BlittableMarshaller<Name>.FromNative(IntPtr.Add(ParamsBuffer, GetParentName_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SkeletalMeshModifiers.SkeletonModifier:GetChildrenNames
    static readonly IntPtr GetChildrenNames_NativeFunction;
    static readonly int GetChildrenNames_ParamsSize;
    static readonly int GetChildrenNames_InBoneName_Offset;
    static readonly int GetChildrenNames_bRecursive_Offset;
    static readonly int GetChildrenNames_ReturnValue_Offset;
    static readonly int GetChildrenNames_ReturnValue_ElementSize;
    
    public System.Collections.Generic.IList<Name> GetChildrenNames(Name inBoneName, bool bRecursive = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetChildrenNames_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetChildrenNames_InBoneName_Offset), 0, null, inBoneName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, GetChildrenNames_bRecursive_Offset), 0, null, bRecursive);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetChildrenNames_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<Name> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, GetChildrenNames_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<Name> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<Name> (1, BlittableMarshaller<Name>.ToNative, BlittableMarshaller<Name>.FromNative, GetChildrenNames_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<Name>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/SkeletalMeshModifiers.SkeletonModifier:GetBoneTransform
    static readonly IntPtr GetBoneTransform_NativeFunction;
    static readonly int GetBoneTransform_ParamsSize;
    static readonly int GetBoneTransform_InBoneName_Offset;
    static readonly int GetBoneTransform_bGlobal_Offset;
    static readonly int GetBoneTransform_ReturnValue_Offset;
    
    public UnrealSharp.Transform GetBoneTransform(Name inBoneName, bool bGlobal = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBoneTransform_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, GetBoneTransform_InBoneName_Offset), 0, null, inBoneName);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, GetBoneTransform_bGlobal_Offset), 0, null, bGlobal);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetBoneTransform_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Transform returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.Transform>.FromNative(IntPtr.Add(ParamsBuffer, GetBoneTransform_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SkeletalMeshModifiers.SkeletonModifier:GetAllBoneNames
    static readonly IntPtr GetAllBoneNames_NativeFunction;
    static readonly int GetAllBoneNames_ParamsSize;
    static readonly int GetAllBoneNames_ReturnValue_Offset;
    static readonly int GetAllBoneNames_ReturnValue_ElementSize;
    
    public System.Collections.Generic.IList<Name> GetAllBoneNames()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetAllBoneNames_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetAllBoneNames_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<Name> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, GetAllBoneNames_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<Name> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<Name> (1, BlittableMarshaller<Name>.ToNative, BlittableMarshaller<Name>.FromNative, GetAllBoneNames_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<Name>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/SkeletalMeshModifiers.SkeletonModifier:CommitSkeletonToSkeletalMesh
    static readonly IntPtr CommitSkeletonToSkeletalMesh_NativeFunction;
    static readonly int CommitSkeletonToSkeletalMesh_ParamsSize;
    static readonly int CommitSkeletonToSkeletalMesh_ReturnValue_Offset;
    
    public bool CommitSkeletonToSkeletalMesh()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[CommitSkeletonToSkeletalMesh_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, CommitSkeletonToSkeletalMesh_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, CommitSkeletonToSkeletalMesh_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SkeletalMeshModifiers.SkeletonModifier:AddBones
    static readonly IntPtr AddBones_NativeFunction;
    static readonly int AddBones_ParamsSize;
    static readonly int AddBones_InBonesName_Offset;
    static readonly int AddBones_InBonesName_ElementSize;
    static readonly int AddBones_InParentsName_Offset;
    static readonly int AddBones_InParentsName_ElementSize;
    static readonly int AddBones_InTransforms_Offset;
    static readonly int AddBones_InTransforms_ElementSize;
    static readonly int AddBones_ReturnValue_Offset;
    
    public bool AddBones(System.Collections.Generic.IList<Name> inBonesName, System.Collections.Generic.IList<Name> inParentsName, System.Collections.Generic.IList<UnrealSharp.Transform> inTransforms)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddBones_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InBonesName_NativeBuffer = IntPtr.Add(ParamsBuffer, AddBones_InBonesName_Offset);
            UnrealArrayCopyMarshaler<Name> InBonesName_Marshaler = new UnrealArrayCopyMarshaler<Name>(1, BlittableMarshaller<Name>.ToNative, BlittableMarshaller<Name>.FromNative, AddBones_InBonesName_ElementSize);
            InBonesName_Marshaler.ToNative(InBonesName_NativeBuffer, 0, null, inBonesName);
            IntPtr InParentsName_NativeBuffer = IntPtr.Add(ParamsBuffer, AddBones_InParentsName_Offset);
            UnrealArrayCopyMarshaler<Name> InParentsName_Marshaler = new UnrealArrayCopyMarshaler<Name>(1, BlittableMarshaller<Name>.ToNative, BlittableMarshaller<Name>.FromNative, AddBones_InParentsName_ElementSize);
            InParentsName_Marshaler.ToNative(InParentsName_NativeBuffer, 0, null, inParentsName);
            IntPtr InTransforms_NativeBuffer = IntPtr.Add(ParamsBuffer, AddBones_InTransforms_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Transform> InTransforms_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Transform>(1, BlittableMarshaller<UnrealSharp.Transform>.ToNative, BlittableMarshaller<UnrealSharp.Transform>.FromNative, AddBones_InTransforms_ElementSize);
            InTransforms_Marshaler.ToNative(InTransforms_NativeBuffer, 0, null, inTransforms);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddBones_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, AddBones_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SkeletalMeshModifiers.SkeletonModifier:AddBone
    static readonly IntPtr AddBone_NativeFunction;
    static readonly int AddBone_ParamsSize;
    static readonly int AddBone_InBoneName_Offset;
    static readonly int AddBone_InParentName_Offset;
    static readonly int AddBone_InTransform_Offset;
    static readonly int AddBone_ReturnValue_Offset;
    
    public bool AddBone(Name inBoneName, Name inParentName, UnrealSharp.Transform inTransform)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddBone_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddBone_InBoneName_Offset), 0, null, inBoneName);
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddBone_InParentName_Offset), 0, null, inParentName);
            BlittableMarshaller<UnrealSharp.Transform>.ToNative(IntPtr.Add(ParamsBuffer, AddBone_InTransform_Offset), 0, null, inTransform);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddBone_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, AddBone_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
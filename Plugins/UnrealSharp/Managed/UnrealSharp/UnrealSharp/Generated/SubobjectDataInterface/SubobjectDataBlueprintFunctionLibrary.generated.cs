// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.SubobjectDataInterface;

[UClass]
public partial class SubobjectDataBlueprintFunctionLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static SubobjectDataBlueprintFunctionLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("SubobjectDataBlueprintFunctionLibrary");
        
        
        IsValid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsValid");
        IsValid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsValid_NativeFunction);
        IsValid_Data_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsValid_NativeFunction, "Data");
        IsValid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsValid_NativeFunction, "ReturnValue");
        IsSceneComponent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsSceneComponent");
        IsSceneComponent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsSceneComponent_NativeFunction);
        IsSceneComponent_Data_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsSceneComponent_NativeFunction, "Data");
        IsSceneComponent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsSceneComponent_NativeFunction, "ReturnValue");
        IsRootComponent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsRootComponent");
        IsRootComponent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsRootComponent_NativeFunction);
        IsRootComponent_Data_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsRootComponent_NativeFunction, "Data");
        IsRootComponent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsRootComponent_NativeFunction, "ReturnValue");
        IsRootActor_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsRootActor");
        IsRootActor_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsRootActor_NativeFunction);
        IsRootActor_Data_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsRootActor_NativeFunction, "Data");
        IsRootActor_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsRootActor_NativeFunction, "ReturnValue");
        IsNativeComponent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsNativeComponent");
        IsNativeComponent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsNativeComponent_NativeFunction);
        IsNativeComponent_Data_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsNativeComponent_NativeFunction, "Data");
        IsNativeComponent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsNativeComponent_NativeFunction, "ReturnValue");
        IsInstancedComponent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsInstancedComponent");
        IsInstancedComponent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsInstancedComponent_NativeFunction);
        IsInstancedComponent_Data_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsInstancedComponent_NativeFunction, "Data");
        IsInstancedComponent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsInstancedComponent_NativeFunction, "ReturnValue");
        IsInstancedActor_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsInstancedActor");
        IsInstancedActor_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsInstancedActor_NativeFunction);
        IsInstancedActor_Data_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsInstancedActor_NativeFunction, "Data");
        IsInstancedActor_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsInstancedActor_NativeFunction, "ReturnValue");
        IsInheritedComponent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsInheritedComponent");
        IsInheritedComponent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsInheritedComponent_NativeFunction);
        IsInheritedComponent_Data_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsInheritedComponent_NativeFunction, "Data");
        IsInheritedComponent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsInheritedComponent_NativeFunction, "ReturnValue");
        IsHandleValid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsHandleValid");
        IsHandleValid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsHandleValid_NativeFunction);
        IsHandleValid_DataHandle_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsHandleValid_NativeFunction, "DataHandle");
        IsHandleValid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsHandleValid_NativeFunction, "ReturnValue");
        IsDefaultSceneRoot_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsDefaultSceneRoot");
        IsDefaultSceneRoot_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsDefaultSceneRoot_NativeFunction);
        IsDefaultSceneRoot_Data_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsDefaultSceneRoot_NativeFunction, "Data");
        IsDefaultSceneRoot_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsDefaultSceneRoot_NativeFunction, "ReturnValue");
        IsComponent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsComponent");
        IsComponent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsComponent_NativeFunction);
        IsComponent_Data_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsComponent_NativeFunction, "Data");
        IsComponent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsComponent_NativeFunction, "ReturnValue");
        IsChildActor_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsChildActor");
        IsChildActor_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsChildActor_NativeFunction);
        IsChildActor_Data_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsChildActor_NativeFunction, "Data");
        IsChildActor_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsChildActor_NativeFunction, "ReturnValue");
        IsAttachedTo_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsAttachedTo");
        IsAttachedTo_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsAttachedTo_NativeFunction);
        IsAttachedTo_Data_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsAttachedTo_NativeFunction, "Data");
        IsAttachedTo_InHandle_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsAttachedTo_NativeFunction, "InHandle");
        IsAttachedTo_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsAttachedTo_NativeFunction, "ReturnValue");
        IsActor_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsActor");
        IsActor_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsActor_NativeFunction);
        IsActor_Data_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsActor_NativeFunction, "Data");
        IsActor_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsActor_NativeFunction, "ReturnValue");
        GetVariableName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetVariableName");
        GetVariableName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetVariableName_NativeFunction);
        GetVariableName_Data_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetVariableName_NativeFunction, "Data");
        GetVariableName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetVariableName_NativeFunction, "ReturnValue");
        GetObjectForBlueprint_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetObjectForBlueprint");
        GetObjectForBlueprint_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetObjectForBlueprint_NativeFunction);
        GetObjectForBlueprint_Data_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetObjectForBlueprint_NativeFunction, "Data");
        GetObjectForBlueprint_Blueprint_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetObjectForBlueprint_NativeFunction, "Blueprint");
        GetObjectForBlueprint_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetObjectForBlueprint_NativeFunction, "ReturnValue");
        GetObject_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetObject");
        GetObject_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetObject_NativeFunction);
        GetObject_Data_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetObject_NativeFunction, "Data");
        GetObject_bEvenIfPendingKill_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetObject_NativeFunction, "bEvenIfPendingKill");
        GetObject_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetObject_NativeFunction, "ReturnValue");
        GetHandle_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetHandle");
        GetHandle_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetHandle_NativeFunction);
        GetHandle_Data_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetHandle_NativeFunction, "Data");
        GetHandle_OutHandle_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetHandle_NativeFunction, "OutHandle");
        GetData_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetData");
        GetData_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetData_NativeFunction);
        GetData_DataHandle_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetData_NativeFunction, "DataHandle");
        GetData_OutData_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetData_NativeFunction, "OutData");
        GetBlueprint_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetBlueprint");
        GetBlueprint_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetBlueprint_NativeFunction);
        GetBlueprint_Data_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlueprint_NativeFunction, "Data");
        GetBlueprint_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetBlueprint_NativeFunction, "ReturnValue");
        CanReparent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CanReparent");
        CanReparent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(CanReparent_NativeFunction);
        CanReparent_Data_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CanReparent_NativeFunction, "Data");
        CanReparent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CanReparent_NativeFunction, "ReturnValue");
        CanRename_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CanRename");
        CanRename_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(CanRename_NativeFunction);
        CanRename_Data_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CanRename_NativeFunction, "Data");
        CanRename_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CanRename_NativeFunction, "ReturnValue");
        CanEdit_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CanEdit");
        CanEdit_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(CanEdit_NativeFunction);
        CanEdit_Data_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CanEdit_NativeFunction, "Data");
        CanEdit_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CanEdit_NativeFunction, "ReturnValue");
        CanDuplicate_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CanDuplicate");
        CanDuplicate_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(CanDuplicate_NativeFunction);
        CanDuplicate_Data_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CanDuplicate_NativeFunction, "Data");
        CanDuplicate_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CanDuplicate_NativeFunction, "ReturnValue");
        CanDelete_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CanDelete");
        CanDelete_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(CanDelete_NativeFunction);
        CanDelete_Data_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CanDelete_NativeFunction, "Data");
        CanDelete_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CanDelete_NativeFunction, "ReturnValue");
        CanCopy_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CanCopy");
        CanCopy_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(CanCopy_NativeFunction);
        CanCopy_Data_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CanCopy_NativeFunction, "Data");
        CanCopy_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CanCopy_NativeFunction, "ReturnValue");
        
        
    }
    
    protected SubobjectDataBlueprintFunctionLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/SubobjectDataInterface.SubobjectDataBlueprintFunctionLibrary:IsValid
    static readonly IntPtr IsValid_NativeFunction;
    static readonly int IsValid_ParamsSize;
    static readonly int IsValid_Data_Offset;
    static readonly int IsValid_ReturnValue_Offset;
    
    public static bool IsValid(UnrealSharp.SubobjectDataInterface.SubobjectData data)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsValid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SubobjectDataInterface.SubobjectDataMarshaler.ToNative(IntPtr.Add(ParamsBuffer, IsValid_Data_Offset), 0, null, data);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, IsValid_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsValid_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SubobjectDataInterface.SubobjectDataBlueprintFunctionLibrary:IsSceneComponent
    static readonly IntPtr IsSceneComponent_NativeFunction;
    static readonly int IsSceneComponent_ParamsSize;
    static readonly int IsSceneComponent_Data_Offset;
    static readonly int IsSceneComponent_ReturnValue_Offset;
    
    public static bool IsSceneComponent(UnrealSharp.SubobjectDataInterface.SubobjectData data)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsSceneComponent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SubobjectDataInterface.SubobjectDataMarshaler.ToNative(IntPtr.Add(ParamsBuffer, IsSceneComponent_Data_Offset), 0, null, data);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, IsSceneComponent_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsSceneComponent_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SubobjectDataInterface.SubobjectDataBlueprintFunctionLibrary:IsRootComponent
    static readonly IntPtr IsRootComponent_NativeFunction;
    static readonly int IsRootComponent_ParamsSize;
    static readonly int IsRootComponent_Data_Offset;
    static readonly int IsRootComponent_ReturnValue_Offset;
    
    public static bool IsRootComponent(UnrealSharp.SubobjectDataInterface.SubobjectData data)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsRootComponent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SubobjectDataInterface.SubobjectDataMarshaler.ToNative(IntPtr.Add(ParamsBuffer, IsRootComponent_Data_Offset), 0, null, data);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, IsRootComponent_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsRootComponent_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SubobjectDataInterface.SubobjectDataBlueprintFunctionLibrary:IsRootActor
    static readonly IntPtr IsRootActor_NativeFunction;
    static readonly int IsRootActor_ParamsSize;
    static readonly int IsRootActor_Data_Offset;
    static readonly int IsRootActor_ReturnValue_Offset;
    
    public static bool IsRootActor(UnrealSharp.SubobjectDataInterface.SubobjectData data)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsRootActor_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SubobjectDataInterface.SubobjectDataMarshaler.ToNative(IntPtr.Add(ParamsBuffer, IsRootActor_Data_Offset), 0, null, data);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, IsRootActor_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsRootActor_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SubobjectDataInterface.SubobjectDataBlueprintFunctionLibrary:IsNativeComponent
    static readonly IntPtr IsNativeComponent_NativeFunction;
    static readonly int IsNativeComponent_ParamsSize;
    static readonly int IsNativeComponent_Data_Offset;
    static readonly int IsNativeComponent_ReturnValue_Offset;
    
    public static bool IsNativeComponent(UnrealSharp.SubobjectDataInterface.SubobjectData data)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsNativeComponent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SubobjectDataInterface.SubobjectDataMarshaler.ToNative(IntPtr.Add(ParamsBuffer, IsNativeComponent_Data_Offset), 0, null, data);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, IsNativeComponent_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsNativeComponent_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SubobjectDataInterface.SubobjectDataBlueprintFunctionLibrary:IsInstancedComponent
    static readonly IntPtr IsInstancedComponent_NativeFunction;
    static readonly int IsInstancedComponent_ParamsSize;
    static readonly int IsInstancedComponent_Data_Offset;
    static readonly int IsInstancedComponent_ReturnValue_Offset;
    
    public static bool IsInstancedComponent(UnrealSharp.SubobjectDataInterface.SubobjectData data)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsInstancedComponent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SubobjectDataInterface.SubobjectDataMarshaler.ToNative(IntPtr.Add(ParamsBuffer, IsInstancedComponent_Data_Offset), 0, null, data);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, IsInstancedComponent_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsInstancedComponent_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SubobjectDataInterface.SubobjectDataBlueprintFunctionLibrary:IsInstancedActor
    static readonly IntPtr IsInstancedActor_NativeFunction;
    static readonly int IsInstancedActor_ParamsSize;
    static readonly int IsInstancedActor_Data_Offset;
    static readonly int IsInstancedActor_ReturnValue_Offset;
    
    public static bool IsInstancedActor(UnrealSharp.SubobjectDataInterface.SubobjectData data)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsInstancedActor_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SubobjectDataInterface.SubobjectDataMarshaler.ToNative(IntPtr.Add(ParamsBuffer, IsInstancedActor_Data_Offset), 0, null, data);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, IsInstancedActor_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsInstancedActor_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SubobjectDataInterface.SubobjectDataBlueprintFunctionLibrary:IsInheritedComponent
    static readonly IntPtr IsInheritedComponent_NativeFunction;
    static readonly int IsInheritedComponent_ParamsSize;
    static readonly int IsInheritedComponent_Data_Offset;
    static readonly int IsInheritedComponent_ReturnValue_Offset;
    
    public static bool IsInheritedComponent(UnrealSharp.SubobjectDataInterface.SubobjectData data)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsInheritedComponent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SubobjectDataInterface.SubobjectDataMarshaler.ToNative(IntPtr.Add(ParamsBuffer, IsInheritedComponent_Data_Offset), 0, null, data);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, IsInheritedComponent_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsInheritedComponent_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SubobjectDataInterface.SubobjectDataBlueprintFunctionLibrary:IsHandleValid
    static readonly IntPtr IsHandleValid_NativeFunction;
    static readonly int IsHandleValid_ParamsSize;
    static readonly int IsHandleValid_DataHandle_Offset;
    static readonly int IsHandleValid_ReturnValue_Offset;
    
    public static bool IsHandleValid(UnrealSharp.SubobjectDataInterface.SubobjectDataHandle dataHandle)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsHandleValid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SubobjectDataInterface.SubobjectDataHandleMarshaler.ToNative(IntPtr.Add(ParamsBuffer, IsHandleValid_DataHandle_Offset), 0, null, dataHandle);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, IsHandleValid_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsHandleValid_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SubobjectDataInterface.SubobjectDataBlueprintFunctionLibrary:IsDefaultSceneRoot
    static readonly IntPtr IsDefaultSceneRoot_NativeFunction;
    static readonly int IsDefaultSceneRoot_ParamsSize;
    static readonly int IsDefaultSceneRoot_Data_Offset;
    static readonly int IsDefaultSceneRoot_ReturnValue_Offset;
    
    public static bool IsDefaultSceneRoot(UnrealSharp.SubobjectDataInterface.SubobjectData data)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsDefaultSceneRoot_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SubobjectDataInterface.SubobjectDataMarshaler.ToNative(IntPtr.Add(ParamsBuffer, IsDefaultSceneRoot_Data_Offset), 0, null, data);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, IsDefaultSceneRoot_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsDefaultSceneRoot_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SubobjectDataInterface.SubobjectDataBlueprintFunctionLibrary:IsComponent
    static readonly IntPtr IsComponent_NativeFunction;
    static readonly int IsComponent_ParamsSize;
    static readonly int IsComponent_Data_Offset;
    static readonly int IsComponent_ReturnValue_Offset;
    
    public static bool IsComponent(UnrealSharp.SubobjectDataInterface.SubobjectData data)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsComponent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SubobjectDataInterface.SubobjectDataMarshaler.ToNative(IntPtr.Add(ParamsBuffer, IsComponent_Data_Offset), 0, null, data);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, IsComponent_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsComponent_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SubobjectDataInterface.SubobjectDataBlueprintFunctionLibrary:IsChildActor
    static readonly IntPtr IsChildActor_NativeFunction;
    static readonly int IsChildActor_ParamsSize;
    static readonly int IsChildActor_Data_Offset;
    static readonly int IsChildActor_ReturnValue_Offset;
    
    public static bool IsChildActor(UnrealSharp.SubobjectDataInterface.SubobjectData data)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsChildActor_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SubobjectDataInterface.SubobjectDataMarshaler.ToNative(IntPtr.Add(ParamsBuffer, IsChildActor_Data_Offset), 0, null, data);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, IsChildActor_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsChildActor_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SubobjectDataInterface.SubobjectDataBlueprintFunctionLibrary:IsAttachedTo
    static readonly IntPtr IsAttachedTo_NativeFunction;
    static readonly int IsAttachedTo_ParamsSize;
    static readonly int IsAttachedTo_Data_Offset;
    static readonly int IsAttachedTo_InHandle_Offset;
    static readonly int IsAttachedTo_ReturnValue_Offset;
    
    public static bool IsAttachedTo(UnrealSharp.SubobjectDataInterface.SubobjectData data, UnrealSharp.SubobjectDataInterface.SubobjectDataHandle inHandle)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsAttachedTo_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SubobjectDataInterface.SubobjectDataMarshaler.ToNative(IntPtr.Add(ParamsBuffer, IsAttachedTo_Data_Offset), 0, null, data);
            UnrealSharp.SubobjectDataInterface.SubobjectDataHandleMarshaler.ToNative(IntPtr.Add(ParamsBuffer, IsAttachedTo_InHandle_Offset), 0, null, inHandle);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, IsAttachedTo_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsAttachedTo_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SubobjectDataInterface.SubobjectDataBlueprintFunctionLibrary:IsActor
    static readonly IntPtr IsActor_NativeFunction;
    static readonly int IsActor_ParamsSize;
    static readonly int IsActor_Data_Offset;
    static readonly int IsActor_ReturnValue_Offset;
    
    public static bool IsActor(UnrealSharp.SubobjectDataInterface.SubobjectData data)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsActor_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SubobjectDataInterface.SubobjectDataMarshaler.ToNative(IntPtr.Add(ParamsBuffer, IsActor_Data_Offset), 0, null, data);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, IsActor_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsActor_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SubobjectDataInterface.SubobjectDataBlueprintFunctionLibrary:GetVariableName
    static readonly IntPtr GetVariableName_NativeFunction;
    static readonly int GetVariableName_ParamsSize;
    static readonly int GetVariableName_Data_Offset;
    static readonly int GetVariableName_ReturnValue_Offset;
    
    public static Name GetVariableName(UnrealSharp.SubobjectDataInterface.SubobjectData data)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetVariableName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SubobjectDataInterface.SubobjectDataMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetVariableName_Data_Offset), 0, null, data);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetVariableName_NativeFunction, ParamsBuffer);
            
            Name returnValue;
            returnValue = BlittableMarshaller<Name>.FromNative(IntPtr.Add(ParamsBuffer, GetVariableName_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SubobjectDataInterface.SubobjectDataBlueprintFunctionLibrary:GetObjectForBlueprint
    static readonly IntPtr GetObjectForBlueprint_NativeFunction;
    static readonly int GetObjectForBlueprint_ParamsSize;
    static readonly int GetObjectForBlueprint_Data_Offset;
    static readonly int GetObjectForBlueprint_Blueprint_Offset;
    static readonly int GetObjectForBlueprint_ReturnValue_Offset;
    
    public static UnrealSharp.CoreUObject.Object GetObjectForBlueprint(UnrealSharp.SubobjectDataInterface.SubobjectData data, UnrealSharp.Engine.Blueprint blueprint)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetObjectForBlueprint_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SubobjectDataInterface.SubobjectDataMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetObjectForBlueprint_Data_Offset), 0, null, data);
            ObjectMarshaller<UnrealSharp.Engine.Blueprint>.ToNative(IntPtr.Add(ParamsBuffer, GetObjectForBlueprint_Blueprint_Offset), 0, null, blueprint);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetObjectForBlueprint_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.Object returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.CoreUObject.Object>.FromNative(IntPtr.Add(ParamsBuffer, GetObjectForBlueprint_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SubobjectDataInterface.SubobjectDataBlueprintFunctionLibrary:GetObject
    static readonly IntPtr GetObject_NativeFunction;
    static readonly int GetObject_ParamsSize;
    static readonly int GetObject_Data_Offset;
    static readonly int GetObject_bEvenIfPendingKill_Offset;
    static readonly int GetObject_ReturnValue_Offset;
    
    public static UnrealSharp.CoreUObject.Object GetObject(UnrealSharp.SubobjectDataInterface.SubobjectData data, bool bEvenIfPendingKill = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetObject_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SubobjectDataInterface.SubobjectDataMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetObject_Data_Offset), 0, null, data);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, GetObject_bEvenIfPendingKill_Offset), 0, null, bEvenIfPendingKill);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetObject_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.Object returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.CoreUObject.Object>.FromNative(IntPtr.Add(ParamsBuffer, GetObject_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SubobjectDataInterface.SubobjectDataBlueprintFunctionLibrary:GetHandle
    static readonly IntPtr GetHandle_NativeFunction;
    static readonly int GetHandle_ParamsSize;
    static readonly int GetHandle_Data_Offset;
    static readonly int GetHandle_OutHandle_Offset;
    
    public static void GetHandle(UnrealSharp.SubobjectDataInterface.SubobjectData data, out UnrealSharp.SubobjectDataInterface.SubobjectDataHandle outHandle)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetHandle_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SubobjectDataInterface.SubobjectDataMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetHandle_Data_Offset), 0, null, data);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetHandle_NativeFunction, ParamsBuffer);
            
            outHandle = UnrealSharp.SubobjectDataInterface.SubobjectDataHandleMarshaler.FromNative(IntPtr.Add(ParamsBuffer, GetHandle_OutHandle_Offset), 0, null);
            
        }
    }
    
    // Function /Script/SubobjectDataInterface.SubobjectDataBlueprintFunctionLibrary:GetData
    static readonly IntPtr GetData_NativeFunction;
    static readonly int GetData_ParamsSize;
    static readonly int GetData_DataHandle_Offset;
    static readonly int GetData_OutData_Offset;
    
    public static void GetData(UnrealSharp.SubobjectDataInterface.SubobjectDataHandle dataHandle, out UnrealSharp.SubobjectDataInterface.SubobjectData outData)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetData_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SubobjectDataInterface.SubobjectDataHandleMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetData_DataHandle_Offset), 0, null, dataHandle);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetData_NativeFunction, ParamsBuffer);
            
            outData = UnrealSharp.SubobjectDataInterface.SubobjectDataMarshaler.FromNative(IntPtr.Add(ParamsBuffer, GetData_OutData_Offset), 0, null);
            
        }
    }
    
    // Function /Script/SubobjectDataInterface.SubobjectDataBlueprintFunctionLibrary:GetBlueprint
    static readonly IntPtr GetBlueprint_NativeFunction;
    static readonly int GetBlueprint_ParamsSize;
    static readonly int GetBlueprint_Data_Offset;
    static readonly int GetBlueprint_ReturnValue_Offset;
    
    public UnrealSharp.Engine.Blueprint GetBlueprint(UnrealSharp.SubobjectDataInterface.SubobjectData data)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetBlueprint_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SubobjectDataInterface.SubobjectDataMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetBlueprint_Data_Offset), 0, null, data);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetBlueprint_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.Blueprint returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.Blueprint>.FromNative(IntPtr.Add(ParamsBuffer, GetBlueprint_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SubobjectDataInterface.SubobjectDataBlueprintFunctionLibrary:CanReparent
    static readonly IntPtr CanReparent_NativeFunction;
    static readonly int CanReparent_ParamsSize;
    static readonly int CanReparent_Data_Offset;
    static readonly int CanReparent_ReturnValue_Offset;
    
    public static bool CanReparent(UnrealSharp.SubobjectDataInterface.SubobjectData data)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[CanReparent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SubobjectDataInterface.SubobjectDataMarshaler.ToNative(IntPtr.Add(ParamsBuffer, CanReparent_Data_Offset), 0, null, data);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, CanReparent_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, CanReparent_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SubobjectDataInterface.SubobjectDataBlueprintFunctionLibrary:CanRename
    static readonly IntPtr CanRename_NativeFunction;
    static readonly int CanRename_ParamsSize;
    static readonly int CanRename_Data_Offset;
    static readonly int CanRename_ReturnValue_Offset;
    
    public static bool CanRename(UnrealSharp.SubobjectDataInterface.SubobjectData data)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[CanRename_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SubobjectDataInterface.SubobjectDataMarshaler.ToNative(IntPtr.Add(ParamsBuffer, CanRename_Data_Offset), 0, null, data);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, CanRename_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, CanRename_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SubobjectDataInterface.SubobjectDataBlueprintFunctionLibrary:CanEdit
    static readonly IntPtr CanEdit_NativeFunction;
    static readonly int CanEdit_ParamsSize;
    static readonly int CanEdit_Data_Offset;
    static readonly int CanEdit_ReturnValue_Offset;
    
    public static bool CanEdit(UnrealSharp.SubobjectDataInterface.SubobjectData data)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[CanEdit_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SubobjectDataInterface.SubobjectDataMarshaler.ToNative(IntPtr.Add(ParamsBuffer, CanEdit_Data_Offset), 0, null, data);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, CanEdit_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, CanEdit_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SubobjectDataInterface.SubobjectDataBlueprintFunctionLibrary:CanDuplicate
    static readonly IntPtr CanDuplicate_NativeFunction;
    static readonly int CanDuplicate_ParamsSize;
    static readonly int CanDuplicate_Data_Offset;
    static readonly int CanDuplicate_ReturnValue_Offset;
    
    public static bool CanDuplicate(UnrealSharp.SubobjectDataInterface.SubobjectData data)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[CanDuplicate_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SubobjectDataInterface.SubobjectDataMarshaler.ToNative(IntPtr.Add(ParamsBuffer, CanDuplicate_Data_Offset), 0, null, data);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, CanDuplicate_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, CanDuplicate_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SubobjectDataInterface.SubobjectDataBlueprintFunctionLibrary:CanDelete
    static readonly IntPtr CanDelete_NativeFunction;
    static readonly int CanDelete_ParamsSize;
    static readonly int CanDelete_Data_Offset;
    static readonly int CanDelete_ReturnValue_Offset;
    
    public static bool CanDelete(UnrealSharp.SubobjectDataInterface.SubobjectData data)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[CanDelete_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SubobjectDataInterface.SubobjectDataMarshaler.ToNative(IntPtr.Add(ParamsBuffer, CanDelete_Data_Offset), 0, null, data);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, CanDelete_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, CanDelete_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/SubobjectDataInterface.SubobjectDataBlueprintFunctionLibrary:CanCopy
    static readonly IntPtr CanCopy_NativeFunction;
    static readonly int CanCopy_ParamsSize;
    static readonly int CanCopy_Data_Offset;
    static readonly int CanCopy_ReturnValue_Offset;
    
    public static bool CanCopy(UnrealSharp.SubobjectDataInterface.SubobjectData data)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[CanCopy_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SubobjectDataInterface.SubobjectDataMarshaler.ToNative(IntPtr.Add(ParamsBuffer, CanCopy_Data_Offset), 0, null, data);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, CanCopy_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, CanCopy_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
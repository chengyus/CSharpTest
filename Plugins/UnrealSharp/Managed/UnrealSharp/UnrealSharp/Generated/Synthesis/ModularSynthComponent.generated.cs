// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Synthesis;

[UClass]
public partial class ModularSynthComponent : UnrealSharp.AudioMixer.SynthComponent
{
    
    static ModularSynthComponent()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("ModularSynthComponent");
        
        VoiceCount_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "VoiceCount");
        
        SetSynthPreset_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSynthPreset");
        SetSynthPreset_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSynthPreset_NativeFunction);
        SetSynthPreset_SynthPreset_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSynthPreset_NativeFunction, "SynthPreset");
        SetSustainGain_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSustainGain");
        SetSustainGain_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSustainGain_NativeFunction);
        SetSustainGain_SustainGain_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSustainGain_NativeFunction, "SustainGain");
        SetStereoDelayWetlevel_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetStereoDelayWetlevel");
        SetStereoDelayWetlevel_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetStereoDelayWetlevel_NativeFunction);
        SetStereoDelayWetlevel_DelayWetlevel_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStereoDelayWetlevel_NativeFunction, "DelayWetlevel");
        SetStereoDelayTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetStereoDelayTime");
        SetStereoDelayTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetStereoDelayTime_NativeFunction);
        SetStereoDelayTime_DelayTimeMsec_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStereoDelayTime_NativeFunction, "DelayTimeMsec");
        SetStereoDelayRatio_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetStereoDelayRatio");
        SetStereoDelayRatio_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetStereoDelayRatio_NativeFunction);
        SetStereoDelayRatio_DelayRatio_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStereoDelayRatio_NativeFunction, "DelayRatio");
        SetStereoDelayMode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetStereoDelayMode");
        SetStereoDelayMode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetStereoDelayMode_NativeFunction);
        SetStereoDelayMode_StereoDelayMode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStereoDelayMode_NativeFunction, "StereoDelayMode");
        SetStereoDelayIsEnabled_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetStereoDelayIsEnabled");
        SetStereoDelayIsEnabled_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetStereoDelayIsEnabled_NativeFunction);
        SetStereoDelayIsEnabled_StereoDelayEnabled_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStereoDelayIsEnabled_NativeFunction, "StereoDelayEnabled");
        SetStereoDelayFeedback_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetStereoDelayFeedback");
        SetStereoDelayFeedback_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetStereoDelayFeedback_NativeFunction);
        SetStereoDelayFeedback_DelayFeedback_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStereoDelayFeedback_NativeFunction, "DelayFeedback");
        SetSpread_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSpread");
        SetSpread_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSpread_NativeFunction);
        SetSpread_Spread_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSpread_NativeFunction, "Spread");
        SetReleaseTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetReleaseTime");
        SetReleaseTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetReleaseTime_NativeFunction);
        SetReleaseTime_ReleaseTimeMsec_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetReleaseTime_NativeFunction, "ReleaseTimeMsec");
        SetPortamento_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPortamento");
        SetPortamento_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPortamento_NativeFunction);
        SetPortamento_Portamento_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPortamento_NativeFunction, "Portamento");
        SetPitchBend_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPitchBend");
        SetPitchBend_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPitchBend_NativeFunction);
        SetPitchBend_PitchBend_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPitchBend_NativeFunction, "PitchBend");
        SetPan_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPan");
        SetPan_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPan_NativeFunction);
        SetPan_Pan_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPan_NativeFunction, "Pan");
        SetOscType_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetOscType");
        SetOscType_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetOscType_NativeFunction);
        SetOscType_OscIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetOscType_NativeFunction, "OscIndex");
        SetOscType_OscType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetOscType_NativeFunction, "OscType");
        SetOscSync_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetOscSync");
        SetOscSync_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetOscSync_NativeFunction);
        SetOscSync_bIsSynced_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetOscSync_NativeFunction, "bIsSynced");
        SetOscSemitones_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetOscSemitones");
        SetOscSemitones_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetOscSemitones_NativeFunction);
        SetOscSemitones_OscIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetOscSemitones_NativeFunction, "OscIndex");
        SetOscSemitones_Semitones_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetOscSemitones_NativeFunction, "Semitones");
        SetOscPulsewidth_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetOscPulsewidth");
        SetOscPulsewidth_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetOscPulsewidth_NativeFunction);
        SetOscPulsewidth_OscIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetOscPulsewidth_NativeFunction, "OscIndex");
        SetOscPulsewidth_Pulsewidth_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetOscPulsewidth_NativeFunction, "Pulsewidth");
        SetOscOctave_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetOscOctave");
        SetOscOctave_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetOscOctave_NativeFunction);
        SetOscOctave_OscIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetOscOctave_NativeFunction, "OscIndex");
        SetOscOctave_Octave_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetOscOctave_NativeFunction, "Octave");
        SetOscGainMod_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetOscGainMod");
        SetOscGainMod_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetOscGainMod_NativeFunction);
        SetOscGainMod_OscIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetOscGainMod_NativeFunction, "OscIndex");
        SetOscGainMod_OscGainMod_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetOscGainMod_NativeFunction, "OscGainMod");
        SetOscGain_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetOscGain");
        SetOscGain_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetOscGain_NativeFunction);
        SetOscGain_OscIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetOscGain_NativeFunction, "OscIndex");
        SetOscGain_OscGain_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetOscGain_NativeFunction, "OscGain");
        SetOscFrequencyMod_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetOscFrequencyMod");
        SetOscFrequencyMod_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetOscFrequencyMod_NativeFunction);
        SetOscFrequencyMod_OscIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetOscFrequencyMod_NativeFunction, "OscIndex");
        SetOscFrequencyMod_OscFreqMod_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetOscFrequencyMod_NativeFunction, "OscFreqMod");
        SetOscCents_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetOscCents");
        SetOscCents_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetOscCents_NativeFunction);
        SetOscCents_OscIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetOscCents_NativeFunction, "OscIndex");
        SetOscCents_Cents_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetOscCents_NativeFunction, "Cents");
        SetModEnvSustainGain_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetModEnvSustainGain");
        SetModEnvSustainGain_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetModEnvSustainGain_NativeFunction);
        SetModEnvSustainGain_SustainGain_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetModEnvSustainGain_NativeFunction, "SustainGain");
        SetModEnvReleaseTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetModEnvReleaseTime");
        SetModEnvReleaseTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetModEnvReleaseTime_NativeFunction);
        SetModEnvReleaseTime_Release_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetModEnvReleaseTime_NativeFunction, "Release");
        SetModEnvPatch_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetModEnvPatch");
        SetModEnvPatch_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetModEnvPatch_NativeFunction);
        SetModEnvPatch_InPatchType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetModEnvPatch_NativeFunction, "InPatchType");
        SetModEnvInvert_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetModEnvInvert");
        SetModEnvInvert_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetModEnvInvert_NativeFunction);
        SetModEnvInvert_bInvert_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetModEnvInvert_NativeFunction, "bInvert");
        SetModEnvDepth_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetModEnvDepth");
        SetModEnvDepth_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetModEnvDepth_NativeFunction);
        SetModEnvDepth_Depth_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetModEnvDepth_NativeFunction, "Depth");
        SetModEnvDecayTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetModEnvDecayTime");
        SetModEnvDecayTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetModEnvDecayTime_NativeFunction);
        SetModEnvDecayTime_DecayTimeMsec_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetModEnvDecayTime_NativeFunction, "DecayTimeMsec");
        SetModEnvBiasPatch_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetModEnvBiasPatch");
        SetModEnvBiasPatch_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetModEnvBiasPatch_NativeFunction);
        SetModEnvBiasPatch_InPatchType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetModEnvBiasPatch_NativeFunction, "InPatchType");
        SetModEnvBiasInvert_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetModEnvBiasInvert");
        SetModEnvBiasInvert_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetModEnvBiasInvert_NativeFunction);
        SetModEnvBiasInvert_bInvert_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetModEnvBiasInvert_NativeFunction, "bInvert");
        SetModEnvAttackTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetModEnvAttackTime");
        SetModEnvAttackTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetModEnvAttackTime_NativeFunction);
        SetModEnvAttackTime_AttackTimeMsec_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetModEnvAttackTime_NativeFunction, "AttackTimeMsec");
        SetLFOType_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetLFOType");
        SetLFOType_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetLFOType_NativeFunction);
        SetLFOType_LFOIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLFOType_NativeFunction, "LFOIndex");
        SetLFOType_LFOType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLFOType_NativeFunction, "LFOType");
        SetLFOPatch_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetLFOPatch");
        SetLFOPatch_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetLFOPatch_NativeFunction);
        SetLFOPatch_LFOIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLFOPatch_NativeFunction, "LFOIndex");
        SetLFOPatch_LFOPatchType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLFOPatch_NativeFunction, "LFOPatchType");
        SetLFOMode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetLFOMode");
        SetLFOMode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetLFOMode_NativeFunction);
        SetLFOMode_LFOIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLFOMode_NativeFunction, "LFOIndex");
        SetLFOMode_LFOMode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLFOMode_NativeFunction, "LFOMode");
        SetLFOGainMod_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetLFOGainMod");
        SetLFOGainMod_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetLFOGainMod_NativeFunction);
        SetLFOGainMod_LFOIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLFOGainMod_NativeFunction, "LFOIndex");
        SetLFOGainMod_GainMod_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLFOGainMod_NativeFunction, "GainMod");
        SetLFOGain_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetLFOGain");
        SetLFOGain_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetLFOGain_NativeFunction);
        SetLFOGain_LFOIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLFOGain_NativeFunction, "LFOIndex");
        SetLFOGain_Gain_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLFOGain_NativeFunction, "Gain");
        SetLFOFrequencyMod_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetLFOFrequencyMod");
        SetLFOFrequencyMod_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetLFOFrequencyMod_NativeFunction);
        SetLFOFrequencyMod_LFOIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLFOFrequencyMod_NativeFunction, "LFOIndex");
        SetLFOFrequencyMod_FrequencyModHz_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLFOFrequencyMod_NativeFunction, "FrequencyModHz");
        SetLFOFrequency_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetLFOFrequency");
        SetLFOFrequency_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetLFOFrequency_NativeFunction);
        SetLFOFrequency_LFOIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLFOFrequency_NativeFunction, "LFOIndex");
        SetLFOFrequency_FrequencyHz_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLFOFrequency_NativeFunction, "FrequencyHz");
        SetGainDb_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetGainDb");
        SetGainDb_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetGainDb_NativeFunction);
        SetGainDb_GainDb_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetGainDb_NativeFunction, "GainDb");
        SetFilterType_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetFilterType");
        SetFilterType_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetFilterType_NativeFunction);
        SetFilterType_FilterType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetFilterType_NativeFunction, "FilterType");
        SetFilterQMod_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetFilterQMod");
        SetFilterQMod_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetFilterQMod_NativeFunction);
        SetFilterQMod_FilterQ_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetFilterQMod_NativeFunction, "FilterQ");
        SetFilterQ_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetFilterQ");
        SetFilterQ_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetFilterQ_NativeFunction);
        SetFilterQ_FilterQ_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetFilterQ_NativeFunction, "FilterQ");
        SetFilterFrequencyMod_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetFilterFrequencyMod");
        SetFilterFrequencyMod_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetFilterFrequencyMod_NativeFunction);
        SetFilterFrequencyMod_FilterFrequencyHz_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetFilterFrequencyMod_NativeFunction, "FilterFrequencyHz");
        SetFilterFrequency_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetFilterFrequency");
        SetFilterFrequency_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetFilterFrequency_NativeFunction);
        SetFilterFrequency_FilterFrequencyHz_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetFilterFrequency_NativeFunction, "FilterFrequencyHz");
        SetFilterAlgorithm_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetFilterAlgorithm");
        SetFilterAlgorithm_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetFilterAlgorithm_NativeFunction);
        SetFilterAlgorithm_FilterAlgorithm_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetFilterAlgorithm_NativeFunction, "FilterAlgorithm");
        SetEnableUnison_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetEnableUnison");
        SetEnableUnison_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetEnableUnison_NativeFunction);
        SetEnableUnison_EnableUnison_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEnableUnison_NativeFunction, "EnableUnison");
        SetEnableRetrigger_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetEnableRetrigger");
        SetEnableRetrigger_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetEnableRetrigger_NativeFunction);
        SetEnableRetrigger_RetriggerEnabled_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEnableRetrigger_NativeFunction, "RetriggerEnabled");
        SetEnablePolyphony_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetEnablePolyphony");
        SetEnablePolyphony_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetEnablePolyphony_NativeFunction);
        SetEnablePolyphony_bEnablePolyphony_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEnablePolyphony_NativeFunction, "bEnablePolyphony");
        SetEnablePatch_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetEnablePatch");
        SetEnablePatch_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetEnablePatch_NativeFunction);
        SetEnablePatch_PatchId_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEnablePatch_NativeFunction, "PatchId");
        SetEnablePatch_bIsEnabled_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEnablePatch_NativeFunction, "bIsEnabled");
        SetEnablePatch_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEnablePatch_NativeFunction, "ReturnValue");
        SetEnableLegato_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetEnableLegato");
        SetEnableLegato_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetEnableLegato_NativeFunction);
        SetEnableLegato_LegatoEnabled_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetEnableLegato_NativeFunction, "LegatoEnabled");
        SetDecayTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetDecayTime");
        SetDecayTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetDecayTime_NativeFunction);
        SetDecayTime_DecayTimeMsec_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetDecayTime_NativeFunction, "DecayTimeMsec");
        SetChorusFrequency_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetChorusFrequency");
        SetChorusFrequency_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetChorusFrequency_NativeFunction);
        SetChorusFrequency_Frequency_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetChorusFrequency_NativeFunction, "Frequency");
        SetChorusFeedback_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetChorusFeedback");
        SetChorusFeedback_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetChorusFeedback_NativeFunction);
        SetChorusFeedback_Feedback_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetChorusFeedback_NativeFunction, "Feedback");
        SetChorusEnabled_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetChorusEnabled");
        SetChorusEnabled_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetChorusEnabled_NativeFunction);
        SetChorusEnabled_EnableChorus_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetChorusEnabled_NativeFunction, "EnableChorus");
        SetChorusDepth_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetChorusDepth");
        SetChorusDepth_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetChorusDepth_NativeFunction);
        SetChorusDepth_Depth_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetChorusDepth_NativeFunction, "Depth");
        SetAttackTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAttackTime");
        SetAttackTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAttackTime_NativeFunction);
        SetAttackTime_AttackTimeMsec_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAttackTime_NativeFunction, "AttackTimeMsec");
        NoteOn_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "NoteOn");
        NoteOn_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(NoteOn_NativeFunction);
        NoteOn_Note_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NoteOn_NativeFunction, "Note");
        NoteOn_Velocity_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NoteOn_NativeFunction, "Velocity");
        NoteOn_Duration_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NoteOn_NativeFunction, "Duration");
        NoteOff_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "NoteOff");
        NoteOff_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(NoteOff_NativeFunction);
        NoteOff_Note_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NoteOff_NativeFunction, "Note");
        NoteOff_bAllNotesOff_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NoteOff_NativeFunction, "bAllNotesOff");
        NoteOff_bKillAllNotes_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NoteOff_NativeFunction, "bKillAllNotes");
        CreatePatch_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CreatePatch");
        CreatePatch_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(CreatePatch_NativeFunction);
        CreatePatch_PatchSource_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CreatePatch_NativeFunction, "PatchSource");
        CreatePatch_PatchCables_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CreatePatch_NativeFunction, "PatchCables");
        CreatePatch_PatchCables_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(CreatePatch_NativeFunction, "PatchCables");
        CreatePatch_bEnableByDefault_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CreatePatch_NativeFunction, "bEnableByDefault");
        CreatePatch_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CreatePatch_NativeFunction, "ReturnValue");
        
        
    }
    
    protected ModularSynthComponent(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // IntProperty /Script/Synthesis.ModularSynthComponent:VoiceCount
    static readonly int VoiceCount_Offset;
    
    public int VoiceCount
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<int>.FromNative(IntPtr.Add(NativeObject, VoiceCount_Offset), 0, this);
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetSynthPreset
    static readonly IntPtr SetSynthPreset_NativeFunction;
    static readonly int SetSynthPreset_ParamsSize;
    static readonly int SetSynthPreset_SynthPreset_Offset;
    
    public void SetSynthPreset(UnrealSharp.Synthesis.ModularSynthPreset synthPreset)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSynthPreset_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.Synthesis.ModularSynthPresetMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetSynthPreset_SynthPreset_Offset), 0, null, synthPreset);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSynthPreset_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetSustainGain
    static readonly IntPtr SetSustainGain_NativeFunction;
    static readonly int SetSustainGain_ParamsSize;
    static readonly int SetSustainGain_SustainGain_Offset;
    
    public void SetSustainGain(float sustainGain)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSustainGain_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetSustainGain_SustainGain_Offset), 0, null, sustainGain);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSustainGain_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetStereoDelayWetlevel
    static readonly IntPtr SetStereoDelayWetlevel_NativeFunction;
    static readonly int SetStereoDelayWetlevel_ParamsSize;
    static readonly int SetStereoDelayWetlevel_DelayWetlevel_Offset;
    
    public void SetStereoDelayWetlevel(float delayWetlevel)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetStereoDelayWetlevel_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetStereoDelayWetlevel_DelayWetlevel_Offset), 0, null, delayWetlevel);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetStereoDelayWetlevel_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetStereoDelayTime
    static readonly IntPtr SetStereoDelayTime_NativeFunction;
    static readonly int SetStereoDelayTime_ParamsSize;
    static readonly int SetStereoDelayTime_DelayTimeMsec_Offset;
    
    public void SetStereoDelayTime(float delayTimeMsec)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetStereoDelayTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetStereoDelayTime_DelayTimeMsec_Offset), 0, null, delayTimeMsec);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetStereoDelayTime_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetStereoDelayRatio
    static readonly IntPtr SetStereoDelayRatio_NativeFunction;
    static readonly int SetStereoDelayRatio_ParamsSize;
    static readonly int SetStereoDelayRatio_DelayRatio_Offset;
    
    public void SetStereoDelayRatio(float delayRatio)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetStereoDelayRatio_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetStereoDelayRatio_DelayRatio_Offset), 0, null, delayRatio);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetStereoDelayRatio_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetStereoDelayMode
    static readonly IntPtr SetStereoDelayMode_NativeFunction;
    static readonly int SetStereoDelayMode_ParamsSize;
    static readonly int SetStereoDelayMode_StereoDelayMode_Offset;
    
    public void SetStereoDelayMode(UnrealSharp.Synthesis.ESynthStereoDelayMode stereoDelayMode)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetStereoDelayMode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.Synthesis.ESynthStereoDelayMode>.ToNative(IntPtr.Add(ParamsBuffer, SetStereoDelayMode_StereoDelayMode_Offset), 0, null, stereoDelayMode);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetStereoDelayMode_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetStereoDelayIsEnabled
    static readonly IntPtr SetStereoDelayIsEnabled_NativeFunction;
    static readonly int SetStereoDelayIsEnabled_ParamsSize;
    static readonly int SetStereoDelayIsEnabled_StereoDelayEnabled_Offset;
    
    public void SetStereoDelayIsEnabled(bool stereoDelayEnabled)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetStereoDelayIsEnabled_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetStereoDelayIsEnabled_StereoDelayEnabled_Offset), 0, null, stereoDelayEnabled);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetStereoDelayIsEnabled_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetStereoDelayFeedback
    static readonly IntPtr SetStereoDelayFeedback_NativeFunction;
    static readonly int SetStereoDelayFeedback_ParamsSize;
    static readonly int SetStereoDelayFeedback_DelayFeedback_Offset;
    
    public void SetStereoDelayFeedback(float delayFeedback)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetStereoDelayFeedback_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetStereoDelayFeedback_DelayFeedback_Offset), 0, null, delayFeedback);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetStereoDelayFeedback_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetSpread
    static readonly IntPtr SetSpread_NativeFunction;
    static readonly int SetSpread_ParamsSize;
    static readonly int SetSpread_Spread_Offset;
    
    public void SetSpread(float spread)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSpread_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetSpread_Spread_Offset), 0, null, spread);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSpread_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetReleaseTime
    static readonly IntPtr SetReleaseTime_NativeFunction;
    static readonly int SetReleaseTime_ParamsSize;
    static readonly int SetReleaseTime_ReleaseTimeMsec_Offset;
    
    public void SetReleaseTime(float releaseTimeMsec)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetReleaseTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetReleaseTime_ReleaseTimeMsec_Offset), 0, null, releaseTimeMsec);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetReleaseTime_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetPortamento
    static readonly IntPtr SetPortamento_NativeFunction;
    static readonly int SetPortamento_ParamsSize;
    static readonly int SetPortamento_Portamento_Offset;
    
    public void SetPortamento(float portamento)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPortamento_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetPortamento_Portamento_Offset), 0, null, portamento);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPortamento_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetPitchBend
    static readonly IntPtr SetPitchBend_NativeFunction;
    static readonly int SetPitchBend_ParamsSize;
    static readonly int SetPitchBend_PitchBend_Offset;
    
    public void SetPitchBend(float pitchBend)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPitchBend_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetPitchBend_PitchBend_Offset), 0, null, pitchBend);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPitchBend_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetPan
    static readonly IntPtr SetPan_NativeFunction;
    static readonly int SetPan_ParamsSize;
    static readonly int SetPan_Pan_Offset;
    
    public void SetPan(float pan)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPan_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetPan_Pan_Offset), 0, null, pan);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPan_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetOscType
    static readonly IntPtr SetOscType_NativeFunction;
    static readonly int SetOscType_ParamsSize;
    static readonly int SetOscType_OscIndex_Offset;
    static readonly int SetOscType_OscType_Offset;
    
    public void SetOscType(int oscIndex, UnrealSharp.Synthesis.ESynth1OscType oscType)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetOscType_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetOscType_OscIndex_Offset), 0, null, oscIndex);
            BlittableMarshaller<UnrealSharp.Synthesis.ESynth1OscType>.ToNative(IntPtr.Add(ParamsBuffer, SetOscType_OscType_Offset), 0, null, oscType);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetOscType_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetOscSync
    static readonly IntPtr SetOscSync_NativeFunction;
    static readonly int SetOscSync_ParamsSize;
    static readonly int SetOscSync_bIsSynced_Offset;
    
    public void SetOscSync(bool bIsSynced)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetOscSync_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetOscSync_bIsSynced_Offset), 0, null, bIsSynced);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetOscSync_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetOscSemitones
    static readonly IntPtr SetOscSemitones_NativeFunction;
    static readonly int SetOscSemitones_ParamsSize;
    static readonly int SetOscSemitones_OscIndex_Offset;
    static readonly int SetOscSemitones_Semitones_Offset;
    
    public void SetOscSemitones(int oscIndex, float semitones)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetOscSemitones_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetOscSemitones_OscIndex_Offset), 0, null, oscIndex);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetOscSemitones_Semitones_Offset), 0, null, semitones);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetOscSemitones_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetOscPulsewidth
    static readonly IntPtr SetOscPulsewidth_NativeFunction;
    static readonly int SetOscPulsewidth_ParamsSize;
    static readonly int SetOscPulsewidth_OscIndex_Offset;
    static readonly int SetOscPulsewidth_Pulsewidth_Offset;
    
    public void SetOscPulsewidth(int oscIndex, float pulsewidth)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetOscPulsewidth_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetOscPulsewidth_OscIndex_Offset), 0, null, oscIndex);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetOscPulsewidth_Pulsewidth_Offset), 0, null, pulsewidth);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetOscPulsewidth_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetOscOctave
    static readonly IntPtr SetOscOctave_NativeFunction;
    static readonly int SetOscOctave_ParamsSize;
    static readonly int SetOscOctave_OscIndex_Offset;
    static readonly int SetOscOctave_Octave_Offset;
    
    public void SetOscOctave(int oscIndex, float octave)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetOscOctave_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetOscOctave_OscIndex_Offset), 0, null, oscIndex);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetOscOctave_Octave_Offset), 0, null, octave);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetOscOctave_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetOscGainMod
    static readonly IntPtr SetOscGainMod_NativeFunction;
    static readonly int SetOscGainMod_ParamsSize;
    static readonly int SetOscGainMod_OscIndex_Offset;
    static readonly int SetOscGainMod_OscGainMod_Offset;
    
    public void SetOscGainMod(int oscIndex, float oscGainMod)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetOscGainMod_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetOscGainMod_OscIndex_Offset), 0, null, oscIndex);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetOscGainMod_OscGainMod_Offset), 0, null, oscGainMod);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetOscGainMod_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetOscGain
    static readonly IntPtr SetOscGain_NativeFunction;
    static readonly int SetOscGain_ParamsSize;
    static readonly int SetOscGain_OscIndex_Offset;
    static readonly int SetOscGain_OscGain_Offset;
    
    public void SetOscGain(int oscIndex, float oscGain)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetOscGain_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetOscGain_OscIndex_Offset), 0, null, oscIndex);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetOscGain_OscGain_Offset), 0, null, oscGain);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetOscGain_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetOscFrequencyMod
    static readonly IntPtr SetOscFrequencyMod_NativeFunction;
    static readonly int SetOscFrequencyMod_ParamsSize;
    static readonly int SetOscFrequencyMod_OscIndex_Offset;
    static readonly int SetOscFrequencyMod_OscFreqMod_Offset;
    
    public void SetOscFrequencyMod(int oscIndex, float oscFreqMod)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetOscFrequencyMod_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetOscFrequencyMod_OscIndex_Offset), 0, null, oscIndex);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetOscFrequencyMod_OscFreqMod_Offset), 0, null, oscFreqMod);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetOscFrequencyMod_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetOscCents
    static readonly IntPtr SetOscCents_NativeFunction;
    static readonly int SetOscCents_ParamsSize;
    static readonly int SetOscCents_OscIndex_Offset;
    static readonly int SetOscCents_Cents_Offset;
    
    public void SetOscCents(int oscIndex, float cents)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetOscCents_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetOscCents_OscIndex_Offset), 0, null, oscIndex);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetOscCents_Cents_Offset), 0, null, cents);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetOscCents_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetModEnvSustainGain
    static readonly IntPtr SetModEnvSustainGain_NativeFunction;
    static readonly int SetModEnvSustainGain_ParamsSize;
    static readonly int SetModEnvSustainGain_SustainGain_Offset;
    
    public void SetModEnvSustainGain(float sustainGain)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetModEnvSustainGain_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetModEnvSustainGain_SustainGain_Offset), 0, null, sustainGain);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetModEnvSustainGain_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetModEnvReleaseTime
    static readonly IntPtr SetModEnvReleaseTime_NativeFunction;
    static readonly int SetModEnvReleaseTime_ParamsSize;
    static readonly int SetModEnvReleaseTime_Release_Offset;
    
    public void SetModEnvReleaseTime(float release)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetModEnvReleaseTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetModEnvReleaseTime_Release_Offset), 0, null, release);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetModEnvReleaseTime_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetModEnvPatch
    static readonly IntPtr SetModEnvPatch_NativeFunction;
    static readonly int SetModEnvPatch_ParamsSize;
    static readonly int SetModEnvPatch_InPatchType_Offset;
    
    public void SetModEnvPatch(UnrealSharp.Synthesis.ESynthModEnvPatch inPatchType)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetModEnvPatch_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.Synthesis.ESynthModEnvPatch>.ToNative(IntPtr.Add(ParamsBuffer, SetModEnvPatch_InPatchType_Offset), 0, null, inPatchType);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetModEnvPatch_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetModEnvInvert
    static readonly IntPtr SetModEnvInvert_NativeFunction;
    static readonly int SetModEnvInvert_ParamsSize;
    static readonly int SetModEnvInvert_bInvert_Offset;
    
    public void SetModEnvInvert(bool bInvert)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetModEnvInvert_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetModEnvInvert_bInvert_Offset), 0, null, bInvert);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetModEnvInvert_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetModEnvDepth
    static readonly IntPtr SetModEnvDepth_NativeFunction;
    static readonly int SetModEnvDepth_ParamsSize;
    static readonly int SetModEnvDepth_Depth_Offset;
    
    public void SetModEnvDepth(float depth)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetModEnvDepth_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetModEnvDepth_Depth_Offset), 0, null, depth);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetModEnvDepth_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetModEnvDecayTime
    static readonly IntPtr SetModEnvDecayTime_NativeFunction;
    static readonly int SetModEnvDecayTime_ParamsSize;
    static readonly int SetModEnvDecayTime_DecayTimeMsec_Offset;
    
    public void SetModEnvDecayTime(float decayTimeMsec)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetModEnvDecayTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetModEnvDecayTime_DecayTimeMsec_Offset), 0, null, decayTimeMsec);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetModEnvDecayTime_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetModEnvBiasPatch
    static readonly IntPtr SetModEnvBiasPatch_NativeFunction;
    static readonly int SetModEnvBiasPatch_ParamsSize;
    static readonly int SetModEnvBiasPatch_InPatchType_Offset;
    
    public void SetModEnvBiasPatch(UnrealSharp.Synthesis.ESynthModEnvBiasPatch inPatchType)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetModEnvBiasPatch_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.Synthesis.ESynthModEnvBiasPatch>.ToNative(IntPtr.Add(ParamsBuffer, SetModEnvBiasPatch_InPatchType_Offset), 0, null, inPatchType);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetModEnvBiasPatch_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetModEnvBiasInvert
    static readonly IntPtr SetModEnvBiasInvert_NativeFunction;
    static readonly int SetModEnvBiasInvert_ParamsSize;
    static readonly int SetModEnvBiasInvert_bInvert_Offset;
    
    public void SetModEnvBiasInvert(bool bInvert)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetModEnvBiasInvert_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetModEnvBiasInvert_bInvert_Offset), 0, null, bInvert);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetModEnvBiasInvert_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetModEnvAttackTime
    static readonly IntPtr SetModEnvAttackTime_NativeFunction;
    static readonly int SetModEnvAttackTime_ParamsSize;
    static readonly int SetModEnvAttackTime_AttackTimeMsec_Offset;
    
    public void SetModEnvAttackTime(float attackTimeMsec)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetModEnvAttackTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetModEnvAttackTime_AttackTimeMsec_Offset), 0, null, attackTimeMsec);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetModEnvAttackTime_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetLFOType
    static readonly IntPtr SetLFOType_NativeFunction;
    static readonly int SetLFOType_ParamsSize;
    static readonly int SetLFOType_LFOIndex_Offset;
    static readonly int SetLFOType_LFOType_Offset;
    
    public void SetLFOType(int lFOIndex, UnrealSharp.Synthesis.ESynthLFOType lFOType)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetLFOType_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetLFOType_LFOIndex_Offset), 0, null, lFOIndex);
            BlittableMarshaller<UnrealSharp.Synthesis.ESynthLFOType>.ToNative(IntPtr.Add(ParamsBuffer, SetLFOType_LFOType_Offset), 0, null, lFOType);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetLFOType_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetLFOPatch
    static readonly IntPtr SetLFOPatch_NativeFunction;
    static readonly int SetLFOPatch_ParamsSize;
    static readonly int SetLFOPatch_LFOIndex_Offset;
    static readonly int SetLFOPatch_LFOPatchType_Offset;
    
    public void SetLFOPatch(int lFOIndex, UnrealSharp.Synthesis.ESynthLFOPatchType lFOPatchType)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetLFOPatch_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetLFOPatch_LFOIndex_Offset), 0, null, lFOIndex);
            BlittableMarshaller<UnrealSharp.Synthesis.ESynthLFOPatchType>.ToNative(IntPtr.Add(ParamsBuffer, SetLFOPatch_LFOPatchType_Offset), 0, null, lFOPatchType);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetLFOPatch_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetLFOMode
    static readonly IntPtr SetLFOMode_NativeFunction;
    static readonly int SetLFOMode_ParamsSize;
    static readonly int SetLFOMode_LFOIndex_Offset;
    static readonly int SetLFOMode_LFOMode_Offset;
    
    public void SetLFOMode(int lFOIndex, UnrealSharp.Synthesis.ESynthLFOMode lFOMode)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetLFOMode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetLFOMode_LFOIndex_Offset), 0, null, lFOIndex);
            BlittableMarshaller<UnrealSharp.Synthesis.ESynthLFOMode>.ToNative(IntPtr.Add(ParamsBuffer, SetLFOMode_LFOMode_Offset), 0, null, lFOMode);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetLFOMode_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetLFOGainMod
    static readonly IntPtr SetLFOGainMod_NativeFunction;
    static readonly int SetLFOGainMod_ParamsSize;
    static readonly int SetLFOGainMod_LFOIndex_Offset;
    static readonly int SetLFOGainMod_GainMod_Offset;
    
    public void SetLFOGainMod(int lFOIndex, float gainMod)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetLFOGainMod_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetLFOGainMod_LFOIndex_Offset), 0, null, lFOIndex);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetLFOGainMod_GainMod_Offset), 0, null, gainMod);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetLFOGainMod_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetLFOGain
    static readonly IntPtr SetLFOGain_NativeFunction;
    static readonly int SetLFOGain_ParamsSize;
    static readonly int SetLFOGain_LFOIndex_Offset;
    static readonly int SetLFOGain_Gain_Offset;
    
    public void SetLFOGain(int lFOIndex, float gain)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetLFOGain_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetLFOGain_LFOIndex_Offset), 0, null, lFOIndex);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetLFOGain_Gain_Offset), 0, null, gain);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetLFOGain_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetLFOFrequencyMod
    static readonly IntPtr SetLFOFrequencyMod_NativeFunction;
    static readonly int SetLFOFrequencyMod_ParamsSize;
    static readonly int SetLFOFrequencyMod_LFOIndex_Offset;
    static readonly int SetLFOFrequencyMod_FrequencyModHz_Offset;
    
    public void SetLFOFrequencyMod(int lFOIndex, float frequencyModHz)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetLFOFrequencyMod_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetLFOFrequencyMod_LFOIndex_Offset), 0, null, lFOIndex);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetLFOFrequencyMod_FrequencyModHz_Offset), 0, null, frequencyModHz);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetLFOFrequencyMod_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetLFOFrequency
    static readonly IntPtr SetLFOFrequency_NativeFunction;
    static readonly int SetLFOFrequency_ParamsSize;
    static readonly int SetLFOFrequency_LFOIndex_Offset;
    static readonly int SetLFOFrequency_FrequencyHz_Offset;
    
    public void SetLFOFrequency(int lFOIndex, float frequencyHz)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetLFOFrequency_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetLFOFrequency_LFOIndex_Offset), 0, null, lFOIndex);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetLFOFrequency_FrequencyHz_Offset), 0, null, frequencyHz);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetLFOFrequency_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetGainDb
    static readonly IntPtr SetGainDb_NativeFunction;
    static readonly int SetGainDb_ParamsSize;
    static readonly int SetGainDb_GainDb_Offset;
    
    public void SetGainDb(float gainDb)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetGainDb_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetGainDb_GainDb_Offset), 0, null, gainDb);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetGainDb_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetFilterType
    static readonly IntPtr SetFilterType_NativeFunction;
    static readonly int SetFilterType_ParamsSize;
    static readonly int SetFilterType_FilterType_Offset;
    
    public void SetFilterType(UnrealSharp.Synthesis.ESynthFilterType filterType)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetFilterType_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.Synthesis.ESynthFilterType>.ToNative(IntPtr.Add(ParamsBuffer, SetFilterType_FilterType_Offset), 0, null, filterType);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetFilterType_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetFilterQMod
    static readonly IntPtr SetFilterQMod_NativeFunction;
    static readonly int SetFilterQMod_ParamsSize;
    static readonly int SetFilterQMod_FilterQ_Offset;
    
    public void SetFilterQMod(float filterQ)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetFilterQMod_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetFilterQMod_FilterQ_Offset), 0, null, filterQ);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetFilterQMod_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetFilterQ
    static readonly IntPtr SetFilterQ_NativeFunction;
    static readonly int SetFilterQ_ParamsSize;
    static readonly int SetFilterQ_FilterQ_Offset;
    
    public void SetFilterQ(float filterQ)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetFilterQ_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetFilterQ_FilterQ_Offset), 0, null, filterQ);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetFilterQ_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetFilterFrequencyMod
    static readonly IntPtr SetFilterFrequencyMod_NativeFunction;
    static readonly int SetFilterFrequencyMod_ParamsSize;
    static readonly int SetFilterFrequencyMod_FilterFrequencyHz_Offset;
    
    public void SetFilterFrequencyMod(float filterFrequencyHz)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetFilterFrequencyMod_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetFilterFrequencyMod_FilterFrequencyHz_Offset), 0, null, filterFrequencyHz);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetFilterFrequencyMod_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetFilterFrequency
    static readonly IntPtr SetFilterFrequency_NativeFunction;
    static readonly int SetFilterFrequency_ParamsSize;
    static readonly int SetFilterFrequency_FilterFrequencyHz_Offset;
    
    public void SetFilterFrequency(float filterFrequencyHz)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetFilterFrequency_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetFilterFrequency_FilterFrequencyHz_Offset), 0, null, filterFrequencyHz);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetFilterFrequency_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetFilterAlgorithm
    static readonly IntPtr SetFilterAlgorithm_NativeFunction;
    static readonly int SetFilterAlgorithm_ParamsSize;
    static readonly int SetFilterAlgorithm_FilterAlgorithm_Offset;
    
    public void SetFilterAlgorithm(UnrealSharp.Synthesis.ESynthFilterAlgorithm filterAlgorithm)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetFilterAlgorithm_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.Synthesis.ESynthFilterAlgorithm>.ToNative(IntPtr.Add(ParamsBuffer, SetFilterAlgorithm_FilterAlgorithm_Offset), 0, null, filterAlgorithm);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetFilterAlgorithm_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetEnableUnison
    static readonly IntPtr SetEnableUnison_NativeFunction;
    static readonly int SetEnableUnison_ParamsSize;
    static readonly int SetEnableUnison_EnableUnison_Offset;
    
    public void SetEnableUnison(bool enableUnison)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetEnableUnison_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetEnableUnison_EnableUnison_Offset), 0, null, enableUnison);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetEnableUnison_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetEnableRetrigger
    static readonly IntPtr SetEnableRetrigger_NativeFunction;
    static readonly int SetEnableRetrigger_ParamsSize;
    static readonly int SetEnableRetrigger_RetriggerEnabled_Offset;
    
    public void SetEnableRetrigger(bool retriggerEnabled)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetEnableRetrigger_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetEnableRetrigger_RetriggerEnabled_Offset), 0, null, retriggerEnabled);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetEnableRetrigger_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetEnablePolyphony
    static readonly IntPtr SetEnablePolyphony_NativeFunction;
    static readonly int SetEnablePolyphony_ParamsSize;
    static readonly int SetEnablePolyphony_bEnablePolyphony_Offset;
    
    public void SetEnablePolyphony(bool bEnablePolyphony)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetEnablePolyphony_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetEnablePolyphony_bEnablePolyphony_Offset), 0, null, bEnablePolyphony);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetEnablePolyphony_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetEnablePatch
    static readonly IntPtr SetEnablePatch_NativeFunction;
    static readonly int SetEnablePatch_ParamsSize;
    static readonly int SetEnablePatch_PatchId_Offset;
    static readonly int SetEnablePatch_bIsEnabled_Offset;
    static readonly int SetEnablePatch_ReturnValue_Offset;
    
    public bool SetEnablePatch(UnrealSharp.Synthesis.PatchId patchId, bool bIsEnabled)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetEnablePatch_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.Synthesis.PatchIdMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetEnablePatch_PatchId_Offset), 0, null, patchId);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetEnablePatch_bIsEnabled_Offset), 0, null, bIsEnabled);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetEnablePatch_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetEnablePatch_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetEnableLegato
    static readonly IntPtr SetEnableLegato_NativeFunction;
    static readonly int SetEnableLegato_ParamsSize;
    static readonly int SetEnableLegato_LegatoEnabled_Offset;
    
    public void SetEnableLegato(bool legatoEnabled)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetEnableLegato_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetEnableLegato_LegatoEnabled_Offset), 0, null, legatoEnabled);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetEnableLegato_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetDecayTime
    static readonly IntPtr SetDecayTime_NativeFunction;
    static readonly int SetDecayTime_ParamsSize;
    static readonly int SetDecayTime_DecayTimeMsec_Offset;
    
    public void SetDecayTime(float decayTimeMsec)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetDecayTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetDecayTime_DecayTimeMsec_Offset), 0, null, decayTimeMsec);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetDecayTime_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetChorusFrequency
    static readonly IntPtr SetChorusFrequency_NativeFunction;
    static readonly int SetChorusFrequency_ParamsSize;
    static readonly int SetChorusFrequency_Frequency_Offset;
    
    public void SetChorusFrequency(float frequency)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetChorusFrequency_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetChorusFrequency_Frequency_Offset), 0, null, frequency);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetChorusFrequency_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetChorusFeedback
    static readonly IntPtr SetChorusFeedback_NativeFunction;
    static readonly int SetChorusFeedback_ParamsSize;
    static readonly int SetChorusFeedback_Feedback_Offset;
    
    public void SetChorusFeedback(float feedback)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetChorusFeedback_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetChorusFeedback_Feedback_Offset), 0, null, feedback);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetChorusFeedback_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetChorusEnabled
    static readonly IntPtr SetChorusEnabled_NativeFunction;
    static readonly int SetChorusEnabled_ParamsSize;
    static readonly int SetChorusEnabled_EnableChorus_Offset;
    
    public void SetChorusEnabled(bool enableChorus)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetChorusEnabled_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetChorusEnabled_EnableChorus_Offset), 0, null, enableChorus);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetChorusEnabled_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetChorusDepth
    static readonly IntPtr SetChorusDepth_NativeFunction;
    static readonly int SetChorusDepth_ParamsSize;
    static readonly int SetChorusDepth_Depth_Offset;
    
    public void SetChorusDepth(float depth)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetChorusDepth_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetChorusDepth_Depth_Offset), 0, null, depth);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetChorusDepth_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:SetAttackTime
    static readonly IntPtr SetAttackTime_NativeFunction;
    static readonly int SetAttackTime_ParamsSize;
    static readonly int SetAttackTime_AttackTimeMsec_Offset;
    
    public void SetAttackTime(float attackTimeMsec)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAttackTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetAttackTime_AttackTimeMsec_Offset), 0, null, attackTimeMsec);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAttackTime_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:NoteOn
    static readonly IntPtr NoteOn_NativeFunction;
    static readonly int NoteOn_ParamsSize;
    static readonly int NoteOn_Note_Offset;
    static readonly int NoteOn_Velocity_Offset;
    static readonly int NoteOn_Duration_Offset;
    
    public void NoteOn(float note, int velocity, float duration = -1.000000f)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[NoteOn_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, NoteOn_Note_Offset), 0, null, note);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, NoteOn_Velocity_Offset), 0, null, velocity);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, NoteOn_Duration_Offset), 0, null, duration);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, NoteOn_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:NoteOff
    static readonly IntPtr NoteOff_NativeFunction;
    static readonly int NoteOff_ParamsSize;
    static readonly int NoteOff_Note_Offset;
    static readonly int NoteOff_bAllNotesOff_Offset;
    static readonly int NoteOff_bKillAllNotes_Offset;
    
    public void NoteOff(float note, bool bAllNotesOff = false, bool bKillAllNotes = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[NoteOff_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, NoteOff_Note_Offset), 0, null, note);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, NoteOff_bAllNotesOff_Offset), 0, null, bAllNotesOff);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, NoteOff_bKillAllNotes_Offset), 0, null, bKillAllNotes);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, NoteOff_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.ModularSynthComponent:CreatePatch
    static readonly IntPtr CreatePatch_NativeFunction;
    static readonly int CreatePatch_ParamsSize;
    static readonly int CreatePatch_PatchSource_Offset;
    static readonly int CreatePatch_PatchCables_Offset;
    static readonly int CreatePatch_PatchCables_ElementSize;
    static readonly int CreatePatch_bEnableByDefault_Offset;
    static readonly int CreatePatch_ReturnValue_Offset;
    
    public UnrealSharp.Synthesis.PatchId CreatePatch(UnrealSharp.Synthesis.ESynth1PatchSource patchSource, System.Collections.Generic.IList<UnrealSharp.Synthesis.Synth1PatchCable> patchCables, bool bEnableByDefault)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[CreatePatch_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.Synthesis.ESynth1PatchSource>.ToNative(IntPtr.Add(ParamsBuffer, CreatePatch_PatchSource_Offset), 0, null, patchSource);
            IntPtr PatchCables_NativeBuffer = IntPtr.Add(ParamsBuffer, CreatePatch_PatchCables_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Synthesis.Synth1PatchCable> PatchCables_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Synthesis.Synth1PatchCable>(1, UnrealSharp.Synthesis.Synth1PatchCableMarshaler.ToNative, UnrealSharp.Synthesis.Synth1PatchCableMarshaler.FromNative, CreatePatch_PatchCables_ElementSize);
            PatchCables_Marshaler.ToNative(PatchCables_NativeBuffer, 0, null, patchCables);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, CreatePatch_bEnableByDefault_Offset), 0, null, bEnableByDefault);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, CreatePatch_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Synthesis.PatchId returnValue;
            returnValue = UnrealSharp.Synthesis.PatchIdMarshaler.FromNative(IntPtr.Add(ParamsBuffer, CreatePatch_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Synthesis;

[UClass]
public partial class ModularSynthPresetBank : UnrealSharp.CoreUObject.Object
{
    
    static ModularSynthPresetBank()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("ModularSynthPresetBank");
        
        Presets_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Presets");
        Presets_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "Presets");
        
        
        
    }
    
    protected ModularSynthPresetBank(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ArrayProperty /Script/Synthesis.ModularSynthPresetBank:Presets
    static readonly int Presets_Offset;
    static readonly IntPtr Presets_NativeProperty;
    UnrealArrayReadWriteMarshaler<UnrealSharp.Synthesis.ModularSynthPresetBankEntry> Presets_Wrapper = null;
    
    public System.Collections.Generic.IList<UnrealSharp.Synthesis.ModularSynthPresetBankEntry> Presets
    {
        get
        {
            if(Presets_Wrapper == null)
            {
                Presets_Wrapper = new UnrealArrayReadWriteMarshaler<UnrealSharp.Synthesis.ModularSynthPresetBankEntry>(1, Presets_NativeProperty, UnrealSharp.Synthesis.ModularSynthPresetBankEntryMarshaler.ToNative, UnrealSharp.Synthesis.ModularSynthPresetBankEntryMarshaler.FromNative);
            }
            
            return Presets_Wrapper.FromNative(IntPtr.Add(NativeObject,Presets_Offset),0,this);
        }
    }
    
    
}
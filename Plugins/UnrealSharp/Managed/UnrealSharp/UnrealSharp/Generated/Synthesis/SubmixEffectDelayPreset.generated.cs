// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Synthesis;

[UClass]
public partial class SubmixEffectDelayPreset : UnrealSharp.Engine.SoundEffectSubmixPreset
{
    
    static SubmixEffectDelayPreset()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("SubmixEffectDelayPreset");
        
        Settings_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Settings");
        
        SetSettings_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSettings");
        SetSettings_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSettings_NativeFunction);
        SetSettings_InSettings_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSettings_NativeFunction, "InSettings");
        SetInterpolationTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetInterpolationTime");
        SetInterpolationTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetInterpolationTime_NativeFunction);
        SetInterpolationTime_Time_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetInterpolationTime_NativeFunction, "Time");
        SetDelay_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetDelay");
        SetDelay_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetDelay_NativeFunction);
        SetDelay_Length_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetDelay_NativeFunction, "Length");
        SetDefaultSettings_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetDefaultSettings");
        SetDefaultSettings_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetDefaultSettings_NativeFunction);
        SetDefaultSettings_InSettings_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetDefaultSettings_NativeFunction, "InSettings");
        GetMaxDelayInMilliseconds_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetMaxDelayInMilliseconds");
        GetMaxDelayInMilliseconds_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetMaxDelayInMilliseconds_NativeFunction);
        GetMaxDelayInMilliseconds_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMaxDelayInMilliseconds_NativeFunction, "ReturnValue");
        
        
    }
    
    protected SubmixEffectDelayPreset(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // StructProperty /Script/Synthesis.SubmixEffectDelayPreset:Settings
    static readonly int Settings_Offset;
    
    public UnrealSharp.Synthesis.SubmixEffectDelaySettings Settings
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Synthesis.SubmixEffectDelaySettings>.FromNative(IntPtr.Add(NativeObject, Settings_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.Synthesis.SubmixEffectDelaySettings>.ToNative(IntPtr.Add(NativeObject, Settings_Offset), 0, this, value);
        }
    }
    
    // Function /Script/Synthesis.SubmixEffectDelayPreset:SetSettings
    static readonly IntPtr SetSettings_NativeFunction;
    static readonly int SetSettings_ParamsSize;
    static readonly int SetSettings_InSettings_Offset;
    
    public void SetSettings(UnrealSharp.Synthesis.SubmixEffectDelaySettings inSettings)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSettings_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.Synthesis.SubmixEffectDelaySettings>.ToNative(IntPtr.Add(ParamsBuffer, SetSettings_InSettings_Offset), 0, null, inSettings);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSettings_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/Synthesis.SubmixEffectDelayPreset:SetInterpolationTime
    static readonly IntPtr SetInterpolationTime_NativeFunction;
    static readonly int SetInterpolationTime_ParamsSize;
    static readonly int SetInterpolationTime_Time_Offset;
    
    public void SetInterpolationTime(float time)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetInterpolationTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetInterpolationTime_Time_Offset), 0, null, time);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetInterpolationTime_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SubmixEffectDelayPreset:SetDelay
    static readonly IntPtr SetDelay_NativeFunction;
    static readonly int SetDelay_ParamsSize;
    static readonly int SetDelay_Length_Offset;
    
    public void SetDelay(float length)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetDelay_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetDelay_Length_Offset), 0, null, length);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetDelay_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SubmixEffectDelayPreset:SetDefaultSettings
    static readonly IntPtr SetDefaultSettings_NativeFunction;
    static readonly int SetDefaultSettings_ParamsSize;
    static readonly int SetDefaultSettings_InSettings_Offset;
    
    public void SetDefaultSettings(UnrealSharp.Synthesis.SubmixEffectDelaySettings inSettings)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetDefaultSettings_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.Synthesis.SubmixEffectDelaySettings>.ToNative(IntPtr.Add(ParamsBuffer, SetDefaultSettings_InSettings_Offset), 0, null, inSettings);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetDefaultSettings_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/Synthesis.SubmixEffectDelayPreset:GetMaxDelayInMilliseconds
    static readonly IntPtr GetMaxDelayInMilliseconds_NativeFunction;
    static readonly int GetMaxDelayInMilliseconds_ParamsSize;
    static readonly int GetMaxDelayInMilliseconds_ReturnValue_Offset;
    
    public float GetMaxDelayInMilliseconds()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetMaxDelayInMilliseconds_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetMaxDelayInMilliseconds_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetMaxDelayInMilliseconds_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
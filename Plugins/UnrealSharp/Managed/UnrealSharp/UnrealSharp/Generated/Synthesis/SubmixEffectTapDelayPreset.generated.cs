// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Synthesis;

[UClass]
public partial class SubmixEffectTapDelayPreset : UnrealSharp.Engine.SoundEffectSubmixPreset
{
    
    static SubmixEffectTapDelayPreset()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("SubmixEffectTapDelayPreset");
        
        Settings_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Settings");
        
        SetTap_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetTap");
        SetTap_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetTap_NativeFunction);
        SetTap_TapId_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetTap_NativeFunction, "TapId");
        SetTap_TapInfo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetTap_NativeFunction, "TapInfo");
        SetSettings_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSettings");
        SetSettings_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSettings_NativeFunction);
        SetSettings_InSettings_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSettings_NativeFunction, "InSettings");
        SetInterpolationTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetInterpolationTime");
        SetInterpolationTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetInterpolationTime_NativeFunction);
        SetInterpolationTime_Time_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetInterpolationTime_NativeFunction, "Time");
        RemoveTap_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveTap");
        RemoveTap_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveTap_NativeFunction);
        RemoveTap_TapId_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveTap_NativeFunction, "TapId");
        GetTapIds_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetTapIds");
        GetTapIds_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetTapIds_NativeFunction);
        GetTapIds_TapIds_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTapIds_NativeFunction, "TapIds");
        GetTapIds_TapIds_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetTapIds_NativeFunction, "TapIds");
        GetTap_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetTap");
        GetTap_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetTap_NativeFunction);
        GetTap_TapId_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTap_NativeFunction, "TapId");
        GetTap_TapInfo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTap_NativeFunction, "TapInfo");
        GetMaxDelayInMilliseconds_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetMaxDelayInMilliseconds");
        GetMaxDelayInMilliseconds_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetMaxDelayInMilliseconds_NativeFunction);
        GetMaxDelayInMilliseconds_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMaxDelayInMilliseconds_NativeFunction, "ReturnValue");
        AddTap_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddTap");
        AddTap_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddTap_NativeFunction);
        AddTap_TapId_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddTap_NativeFunction, "TapId");
        
        
    }
    
    protected SubmixEffectTapDelayPreset(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // StructProperty /Script/Synthesis.SubmixEffectTapDelayPreset:Settings
    static readonly int Settings_Offset;
    
    public UnrealSharp.Synthesis.SubmixEffectTapDelaySettings Settings
    {
        get
        {
            CheckObjectForValidity();
            return UnrealSharp.Synthesis.SubmixEffectTapDelaySettingsMarshaler.FromNative(IntPtr.Add(NativeObject, Settings_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            UnrealSharp.Synthesis.SubmixEffectTapDelaySettingsMarshaler.ToNative(IntPtr.Add(NativeObject, Settings_Offset), 0, this, value);
        }
    }
    
    // Function /Script/Synthesis.SubmixEffectTapDelayPreset:SetTap
    static readonly IntPtr SetTap_NativeFunction;
    static readonly int SetTap_ParamsSize;
    static readonly int SetTap_TapId_Offset;
    static readonly int SetTap_TapInfo_Offset;
    
    public void SetTap(int tapId, UnrealSharp.Synthesis.TapDelayInfo tapInfo)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetTap_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetTap_TapId_Offset), 0, null, tapId);
            UnrealSharp.Synthesis.TapDelayInfoMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetTap_TapInfo_Offset), 0, null, tapInfo);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetTap_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/Synthesis.SubmixEffectTapDelayPreset:SetSettings
    static readonly IntPtr SetSettings_NativeFunction;
    static readonly int SetSettings_ParamsSize;
    static readonly int SetSettings_InSettings_Offset;
    
    public void SetSettings(UnrealSharp.Synthesis.SubmixEffectTapDelaySettings inSettings)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSettings_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.Synthesis.SubmixEffectTapDelaySettingsMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetSettings_InSettings_Offset), 0, null, inSettings);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSettings_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/Synthesis.SubmixEffectTapDelayPreset:SetInterpolationTime
    static readonly IntPtr SetInterpolationTime_NativeFunction;
    static readonly int SetInterpolationTime_ParamsSize;
    static readonly int SetInterpolationTime_Time_Offset;
    
    public void SetInterpolationTime(float time)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetInterpolationTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetInterpolationTime_Time_Offset), 0, null, time);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetInterpolationTime_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SubmixEffectTapDelayPreset:RemoveTap
    static readonly IntPtr RemoveTap_NativeFunction;
    static readonly int RemoveTap_ParamsSize;
    static readonly int RemoveTap_TapId_Offset;
    
    public void RemoveTap(int tapId)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveTap_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, RemoveTap_TapId_Offset), 0, null, tapId);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveTap_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SubmixEffectTapDelayPreset:GetTapIds
    static readonly IntPtr GetTapIds_NativeFunction;
    static readonly int GetTapIds_ParamsSize;
    static readonly int GetTapIds_TapIds_Offset;
    static readonly int GetTapIds_TapIds_ElementSize;
    
    public void GetTapIds(out System.Collections.Generic.IList<int> tapIds)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetTapIds_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetTapIds_NativeFunction, ParamsBuffer);
            
            IntPtr TapIds_NativeBuffer = IntPtr.Add(ParamsBuffer, GetTapIds_TapIds_Offset);
            UnrealArrayCopyMarshaler<int> TapIds_Marshaler = new UnrealArrayCopyMarshaler<int> (1, BlittableMarshaller<int>.ToNative, BlittableMarshaller<int>.FromNative, GetTapIds_TapIds_ElementSize);
            tapIds = TapIds_Marshaler.FromNative(TapIds_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<int>.DestructInstance(TapIds_NativeBuffer, 0);
            
        }
    }
    
    // Function /Script/Synthesis.SubmixEffectTapDelayPreset:GetTap
    static readonly IntPtr GetTap_NativeFunction;
    static readonly int GetTap_ParamsSize;
    static readonly int GetTap_TapId_Offset;
    static readonly int GetTap_TapInfo_Offset;
    
    public void GetTap(int tapId, out UnrealSharp.Synthesis.TapDelayInfo tapInfo)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetTap_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetTap_TapId_Offset), 0, null, tapId);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetTap_NativeFunction, ParamsBuffer);
            
            tapInfo = UnrealSharp.Synthesis.TapDelayInfoMarshaler.FromNative(IntPtr.Add(ParamsBuffer, GetTap_TapInfo_Offset), 0, null);
            
        }
    }
    
    // Function /Script/Synthesis.SubmixEffectTapDelayPreset:GetMaxDelayInMilliseconds
    static readonly IntPtr GetMaxDelayInMilliseconds_NativeFunction;
    static readonly int GetMaxDelayInMilliseconds_ParamsSize;
    static readonly int GetMaxDelayInMilliseconds_ReturnValue_Offset;
    
    public float GetMaxDelayInMilliseconds()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetMaxDelayInMilliseconds_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetMaxDelayInMilliseconds_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetMaxDelayInMilliseconds_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Synthesis.SubmixEffectTapDelayPreset:AddTap
    static readonly IntPtr AddTap_NativeFunction;
    static readonly int AddTap_ParamsSize;
    static readonly int AddTap_TapId_Offset;
    
    public void AddTap(out int tapId)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddTap_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddTap_NativeFunction, ParamsBuffer);
            
            tapId = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, AddTap_TapId_Offset), 0, null);
            
        }
    }
    
    
}
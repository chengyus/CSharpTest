// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Synthesis;

[UClass]
public partial class SynthComponentMonoWaveTable : UnrealSharp.AudioMixer.SynthComponent
{
    
    static SynthComponentMonoWaveTable()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("SynthComponentMonoWaveTable");
        
        
        SetWaveTablePosition_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetWaveTablePosition");
        SetWaveTablePosition_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetWaveTablePosition_NativeFunction);
        SetWaveTablePosition_InPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetWaveTablePosition_NativeFunction, "InPosition");
        SetSustainPedalState_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSustainPedalState");
        SetSustainPedalState_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSustainPedalState_NativeFunction);
        SetSustainPedalState_InSustainPedalState_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSustainPedalState_NativeFunction, "InSustainPedalState");
        SetPosLfoType_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPosLfoType");
        SetPosLfoType_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPosLfoType_NativeFunction);
        SetPosLfoType_InLfoType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPosLfoType_NativeFunction, "InLfoType");
        SetPosLfoFrequency_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPosLfoFrequency");
        SetPosLfoFrequency_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPosLfoFrequency_NativeFunction);
        SetPosLfoFrequency_InLfoFrequency_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPosLfoFrequency_NativeFunction, "InLfoFrequency");
        SetPosLfoDepth_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPosLfoDepth");
        SetPosLfoDepth_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPosLfoDepth_NativeFunction);
        SetPosLfoDepth_InLfoDepth_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPosLfoDepth_NativeFunction, "InLfoDepth");
        SetPositionEnvelopeSustainGain_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPositionEnvelopeSustainGain");
        SetPositionEnvelopeSustainGain_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPositionEnvelopeSustainGain_NativeFunction);
        SetPositionEnvelopeSustainGain_InSustainGain_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPositionEnvelopeSustainGain_NativeFunction, "InSustainGain");
        SetPositionEnvelopeReleaseTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPositionEnvelopeReleaseTime");
        SetPositionEnvelopeReleaseTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPositionEnvelopeReleaseTime_NativeFunction);
        SetPositionEnvelopeReleaseTime_InReleaseTimeMsec_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPositionEnvelopeReleaseTime_NativeFunction, "InReleaseTimeMsec");
        SetPositionEnvelopeInvert_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPositionEnvelopeInvert");
        SetPositionEnvelopeInvert_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPositionEnvelopeInvert_NativeFunction);
        SetPositionEnvelopeInvert_bInInvert_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPositionEnvelopeInvert_NativeFunction, "bInInvert");
        SetPositionEnvelopeDepth_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPositionEnvelopeDepth");
        SetPositionEnvelopeDepth_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPositionEnvelopeDepth_NativeFunction);
        SetPositionEnvelopeDepth_InDepth_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPositionEnvelopeDepth_NativeFunction, "InDepth");
        SetPositionEnvelopeDecayTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPositionEnvelopeDecayTime");
        SetPositionEnvelopeDecayTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPositionEnvelopeDecayTime_NativeFunction);
        SetPositionEnvelopeDecayTime_InDecayTimeMsec_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPositionEnvelopeDecayTime_NativeFunction, "InDecayTimeMsec");
        SetPositionEnvelopeBiasInvert_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPositionEnvelopeBiasInvert");
        SetPositionEnvelopeBiasInvert_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPositionEnvelopeBiasInvert_NativeFunction);
        SetPositionEnvelopeBiasInvert_bInBiasInvert_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPositionEnvelopeBiasInvert_NativeFunction, "bInBiasInvert");
        SetPositionEnvelopeBiasDepth_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPositionEnvelopeBiasDepth");
        SetPositionEnvelopeBiasDepth_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPositionEnvelopeBiasDepth_NativeFunction);
        SetPositionEnvelopeBiasDepth_InDepth_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPositionEnvelopeBiasDepth_NativeFunction, "InDepth");
        SetPositionEnvelopeAttackTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPositionEnvelopeAttackTime");
        SetPositionEnvelopeAttackTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPositionEnvelopeAttackTime_NativeFunction);
        SetPositionEnvelopeAttackTime_InAttackTimeMsec_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPositionEnvelopeAttackTime_NativeFunction, "InAttackTimeMsec");
        SetLowPassFilterResonance_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetLowPassFilterResonance");
        SetLowPassFilterResonance_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetLowPassFilterResonance_NativeFunction);
        SetLowPassFilterResonance_InNewQ_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLowPassFilterResonance_NativeFunction, "InNewQ");
        SetFrequencyWithMidiNote_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetFrequencyWithMidiNote");
        SetFrequencyWithMidiNote_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetFrequencyWithMidiNote_NativeFunction);
        SetFrequencyWithMidiNote_InMidiNote_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetFrequencyWithMidiNote_NativeFunction, "InMidiNote");
        SetFrequencyPitchBend_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetFrequencyPitchBend");
        SetFrequencyPitchBend_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetFrequencyPitchBend_NativeFunction);
        SetFrequencyPitchBend_FrequencyOffsetCents_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetFrequencyPitchBend_NativeFunction, "FrequencyOffsetCents");
        SetFrequency_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetFrequency");
        SetFrequency_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetFrequency_NativeFunction);
        SetFrequency_FrequencyHz_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetFrequency_NativeFunction, "FrequencyHz");
        SetFilterEnvelopeSustainGain_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetFilterEnvelopeSustainGain");
        SetFilterEnvelopeSustainGain_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetFilterEnvelopeSustainGain_NativeFunction);
        SetFilterEnvelopeSustainGain_InSustainGain_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetFilterEnvelopeSustainGain_NativeFunction, "InSustainGain");
        SetFilterEnvelopeReleaseTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetFilterEnvelopeReleaseTime");
        SetFilterEnvelopeReleaseTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetFilterEnvelopeReleaseTime_NativeFunction);
        SetFilterEnvelopeReleaseTime_InReleaseTimeMsec_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetFilterEnvelopeReleaseTime_NativeFunction, "InReleaseTimeMsec");
        SetFilterEnvelopenDecayTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetFilterEnvelopenDecayTime");
        SetFilterEnvelopenDecayTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetFilterEnvelopenDecayTime_NativeFunction);
        SetFilterEnvelopenDecayTime_InDecayTimeMsec_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetFilterEnvelopenDecayTime_NativeFunction, "InDecayTimeMsec");
        SetFilterEnvelopeInvert_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetFilterEnvelopeInvert");
        SetFilterEnvelopeInvert_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetFilterEnvelopeInvert_NativeFunction);
        SetFilterEnvelopeInvert_bInInvert_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetFilterEnvelopeInvert_NativeFunction, "bInInvert");
        SetFilterEnvelopeDepth_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetFilterEnvelopeDepth");
        SetFilterEnvelopeDepth_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetFilterEnvelopeDepth_NativeFunction);
        SetFilterEnvelopeDepth_InDepth_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetFilterEnvelopeDepth_NativeFunction, "InDepth");
        SetFilterEnvelopeBiasInvert_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetFilterEnvelopeBiasInvert");
        SetFilterEnvelopeBiasInvert_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetFilterEnvelopeBiasInvert_NativeFunction);
        SetFilterEnvelopeBiasInvert_bInBiasInvert_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetFilterEnvelopeBiasInvert_NativeFunction, "bInBiasInvert");
        SetFilterEnvelopeBiasDepth_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetFilterEnvelopeBiasDepth");
        SetFilterEnvelopeBiasDepth_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetFilterEnvelopeBiasDepth_NativeFunction);
        SetFilterEnvelopeBiasDepth_InDepth_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetFilterEnvelopeBiasDepth_NativeFunction, "InDepth");
        SetFilterEnvelopeAttackTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetFilterEnvelopeAttackTime");
        SetFilterEnvelopeAttackTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetFilterEnvelopeAttackTime_NativeFunction);
        SetFilterEnvelopeAttackTime_InAttackTimeMsec_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetFilterEnvelopeAttackTime_NativeFunction, "InAttackTimeMsec");
        SetCurveValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCurveValue");
        SetCurveValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCurveValue_NativeFunction);
        SetCurveValue_TableIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCurveValue_NativeFunction, "TableIndex");
        SetCurveValue_KeyframeIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCurveValue_NativeFunction, "KeyframeIndex");
        SetCurveValue_NewValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCurveValue_NativeFunction, "NewValue");
        SetCurveValue_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCurveValue_NativeFunction, "ReturnValue");
        SetCurveTangent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCurveTangent");
        SetCurveTangent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCurveTangent_NativeFunction);
        SetCurveTangent_TableIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCurveTangent_NativeFunction, "TableIndex");
        SetCurveTangent_InNewTangent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCurveTangent_NativeFunction, "InNewTangent");
        SetCurveTangent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCurveTangent_NativeFunction, "ReturnValue");
        SetCurveInterpolationType_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCurveInterpolationType");
        SetCurveInterpolationType_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCurveInterpolationType_NativeFunction);
        SetCurveInterpolationType_InterpolationType_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCurveInterpolationType_NativeFunction, "InterpolationType");
        SetCurveInterpolationType_TableIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCurveInterpolationType_NativeFunction, "TableIndex");
        SetCurveInterpolationType_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCurveInterpolationType_NativeFunction, "ReturnValue");
        SetAmpEnvelopeSustainGain_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAmpEnvelopeSustainGain");
        SetAmpEnvelopeSustainGain_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAmpEnvelopeSustainGain_NativeFunction);
        SetAmpEnvelopeSustainGain_InSustainGain_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAmpEnvelopeSustainGain_NativeFunction, "InSustainGain");
        SetAmpEnvelopeReleaseTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAmpEnvelopeReleaseTime");
        SetAmpEnvelopeReleaseTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAmpEnvelopeReleaseTime_NativeFunction);
        SetAmpEnvelopeReleaseTime_InReleaseTimeMsec_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAmpEnvelopeReleaseTime_NativeFunction, "InReleaseTimeMsec");
        SetAmpEnvelopeInvert_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAmpEnvelopeInvert");
        SetAmpEnvelopeInvert_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAmpEnvelopeInvert_NativeFunction);
        SetAmpEnvelopeInvert_bInInvert_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAmpEnvelopeInvert_NativeFunction, "bInInvert");
        SetAmpEnvelopeDepth_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAmpEnvelopeDepth");
        SetAmpEnvelopeDepth_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAmpEnvelopeDepth_NativeFunction);
        SetAmpEnvelopeDepth_InDepth_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAmpEnvelopeDepth_NativeFunction, "InDepth");
        SetAmpEnvelopeDecayTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAmpEnvelopeDecayTime");
        SetAmpEnvelopeDecayTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAmpEnvelopeDecayTime_NativeFunction);
        SetAmpEnvelopeDecayTime_InDecayTimeMsec_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAmpEnvelopeDecayTime_NativeFunction, "InDecayTimeMsec");
        SetAmpEnvelopeBiasInvert_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAmpEnvelopeBiasInvert");
        SetAmpEnvelopeBiasInvert_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAmpEnvelopeBiasInvert_NativeFunction);
        SetAmpEnvelopeBiasInvert_bInBiasInvert_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAmpEnvelopeBiasInvert_NativeFunction, "bInBiasInvert");
        SetAmpEnvelopeBiasDepth_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAmpEnvelopeBiasDepth");
        SetAmpEnvelopeBiasDepth_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAmpEnvelopeBiasDepth_NativeFunction);
        SetAmpEnvelopeBiasDepth_InDepth_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAmpEnvelopeBiasDepth_NativeFunction, "InDepth");
        SetAmpEnvelopeAttackTime_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAmpEnvelopeAttackTime");
        SetAmpEnvelopeAttackTime_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAmpEnvelopeAttackTime_NativeFunction);
        SetAmpEnvelopeAttackTime_InAttackTimeMsec_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAmpEnvelopeAttackTime_NativeFunction, "InAttackTimeMsec");
        RefreshWaveTable_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RefreshWaveTable");
        RefreshWaveTable_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RefreshWaveTable_NativeFunction);
        RefreshWaveTable_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RefreshWaveTable_NativeFunction, "Index");
        RefreshAllWaveTables_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RefreshAllWaveTables");
        NoteOn_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "NoteOn");
        NoteOn_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(NoteOn_NativeFunction);
        NoteOn_InMidiNote_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NoteOn_NativeFunction, "InMidiNote");
        NoteOn_InVelocity_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NoteOn_NativeFunction, "InVelocity");
        NoteOff_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "NoteOff");
        NoteOff_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(NoteOff_NativeFunction);
        NoteOff_InMidiNote_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NoteOff_NativeFunction, "InMidiNote");
        GetNumTableEntries_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetNumTableEntries");
        GetNumTableEntries_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetNumTableEntries_NativeFunction);
        GetNumTableEntries_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetNumTableEntries_NativeFunction, "ReturnValue");
        GetMaxTableIndex_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetMaxTableIndex");
        GetMaxTableIndex_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetMaxTableIndex_NativeFunction);
        GetMaxTableIndex_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMaxTableIndex_NativeFunction, "ReturnValue");
        GetKeyFrameValuesForTable_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetKeyFrameValuesForTable");
        GetKeyFrameValuesForTable_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetKeyFrameValuesForTable_NativeFunction);
        GetKeyFrameValuesForTable_TableIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetKeyFrameValuesForTable_NativeFunction, "TableIndex");
        GetKeyFrameValuesForTable_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetKeyFrameValuesForTable_NativeFunction, "ReturnValue");
        GetKeyFrameValuesForTable_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetKeyFrameValuesForTable_NativeFunction, "ReturnValue");
        GetCurveTangent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCurveTangent");
        GetCurveTangent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCurveTangent_NativeFunction);
        GetCurveTangent_TableIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCurveTangent_NativeFunction, "TableIndex");
        GetCurveTangent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCurveTangent_NativeFunction, "ReturnValue");
        
        
    }
    
    protected SynthComponentMonoWaveTable(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetWaveTablePosition
    static readonly IntPtr SetWaveTablePosition_NativeFunction;
    static readonly int SetWaveTablePosition_ParamsSize;
    static readonly int SetWaveTablePosition_InPosition_Offset;
    
    public void SetWaveTablePosition(float inPosition)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetWaveTablePosition_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetWaveTablePosition_InPosition_Offset), 0, null, inPosition);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetWaveTablePosition_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetSustainPedalState
    static readonly IntPtr SetSustainPedalState_NativeFunction;
    static readonly int SetSustainPedalState_ParamsSize;
    static readonly int SetSustainPedalState_InSustainPedalState_Offset;
    
    public void SetSustainPedalState(bool inSustainPedalState)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSustainPedalState_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetSustainPedalState_InSustainPedalState_Offset), 0, null, inSustainPedalState);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSustainPedalState_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetPosLfoType
    static readonly IntPtr SetPosLfoType_NativeFunction;
    static readonly int SetPosLfoType_ParamsSize;
    static readonly int SetPosLfoType_InLfoType_Offset;
    
    public void SetPosLfoType(UnrealSharp.Synthesis.ESynthLFOType inLfoType)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPosLfoType_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.Synthesis.ESynthLFOType>.ToNative(IntPtr.Add(ParamsBuffer, SetPosLfoType_InLfoType_Offset), 0, null, inLfoType);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPosLfoType_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetPosLfoFrequency
    static readonly IntPtr SetPosLfoFrequency_NativeFunction;
    static readonly int SetPosLfoFrequency_ParamsSize;
    static readonly int SetPosLfoFrequency_InLfoFrequency_Offset;
    
    public void SetPosLfoFrequency(float inLfoFrequency)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPosLfoFrequency_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetPosLfoFrequency_InLfoFrequency_Offset), 0, null, inLfoFrequency);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPosLfoFrequency_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetPosLfoDepth
    static readonly IntPtr SetPosLfoDepth_NativeFunction;
    static readonly int SetPosLfoDepth_ParamsSize;
    static readonly int SetPosLfoDepth_InLfoDepth_Offset;
    
    public void SetPosLfoDepth(float inLfoDepth)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPosLfoDepth_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetPosLfoDepth_InLfoDepth_Offset), 0, null, inLfoDepth);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPosLfoDepth_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetPositionEnvelopeSustainGain
    static readonly IntPtr SetPositionEnvelopeSustainGain_NativeFunction;
    static readonly int SetPositionEnvelopeSustainGain_ParamsSize;
    static readonly int SetPositionEnvelopeSustainGain_InSustainGain_Offset;
    
    public void SetPositionEnvelopeSustainGain(float inSustainGain)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPositionEnvelopeSustainGain_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetPositionEnvelopeSustainGain_InSustainGain_Offset), 0, null, inSustainGain);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPositionEnvelopeSustainGain_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetPositionEnvelopeReleaseTime
    static readonly IntPtr SetPositionEnvelopeReleaseTime_NativeFunction;
    static readonly int SetPositionEnvelopeReleaseTime_ParamsSize;
    static readonly int SetPositionEnvelopeReleaseTime_InReleaseTimeMsec_Offset;
    
    public void SetPositionEnvelopeReleaseTime(float inReleaseTimeMsec)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPositionEnvelopeReleaseTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetPositionEnvelopeReleaseTime_InReleaseTimeMsec_Offset), 0, null, inReleaseTimeMsec);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPositionEnvelopeReleaseTime_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetPositionEnvelopeInvert
    static readonly IntPtr SetPositionEnvelopeInvert_NativeFunction;
    static readonly int SetPositionEnvelopeInvert_ParamsSize;
    static readonly int SetPositionEnvelopeInvert_bInInvert_Offset;
    
    public void SetPositionEnvelopeInvert(bool bInInvert)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPositionEnvelopeInvert_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetPositionEnvelopeInvert_bInInvert_Offset), 0, null, bInInvert);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPositionEnvelopeInvert_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetPositionEnvelopeDepth
    static readonly IntPtr SetPositionEnvelopeDepth_NativeFunction;
    static readonly int SetPositionEnvelopeDepth_ParamsSize;
    static readonly int SetPositionEnvelopeDepth_InDepth_Offset;
    
    public void SetPositionEnvelopeDepth(float inDepth)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPositionEnvelopeDepth_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetPositionEnvelopeDepth_InDepth_Offset), 0, null, inDepth);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPositionEnvelopeDepth_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetPositionEnvelopeDecayTime
    static readonly IntPtr SetPositionEnvelopeDecayTime_NativeFunction;
    static readonly int SetPositionEnvelopeDecayTime_ParamsSize;
    static readonly int SetPositionEnvelopeDecayTime_InDecayTimeMsec_Offset;
    
    public void SetPositionEnvelopeDecayTime(float inDecayTimeMsec)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPositionEnvelopeDecayTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetPositionEnvelopeDecayTime_InDecayTimeMsec_Offset), 0, null, inDecayTimeMsec);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPositionEnvelopeDecayTime_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetPositionEnvelopeBiasInvert
    static readonly IntPtr SetPositionEnvelopeBiasInvert_NativeFunction;
    static readonly int SetPositionEnvelopeBiasInvert_ParamsSize;
    static readonly int SetPositionEnvelopeBiasInvert_bInBiasInvert_Offset;
    
    public void SetPositionEnvelopeBiasInvert(bool bInBiasInvert)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPositionEnvelopeBiasInvert_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetPositionEnvelopeBiasInvert_bInBiasInvert_Offset), 0, null, bInBiasInvert);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPositionEnvelopeBiasInvert_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetPositionEnvelopeBiasDepth
    static readonly IntPtr SetPositionEnvelopeBiasDepth_NativeFunction;
    static readonly int SetPositionEnvelopeBiasDepth_ParamsSize;
    static readonly int SetPositionEnvelopeBiasDepth_InDepth_Offset;
    
    public void SetPositionEnvelopeBiasDepth(float inDepth)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPositionEnvelopeBiasDepth_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetPositionEnvelopeBiasDepth_InDepth_Offset), 0, null, inDepth);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPositionEnvelopeBiasDepth_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetPositionEnvelopeAttackTime
    static readonly IntPtr SetPositionEnvelopeAttackTime_NativeFunction;
    static readonly int SetPositionEnvelopeAttackTime_ParamsSize;
    static readonly int SetPositionEnvelopeAttackTime_InAttackTimeMsec_Offset;
    
    public void SetPositionEnvelopeAttackTime(float inAttackTimeMsec)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPositionEnvelopeAttackTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetPositionEnvelopeAttackTime_InAttackTimeMsec_Offset), 0, null, inAttackTimeMsec);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPositionEnvelopeAttackTime_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetLowPassFilterResonance
    static readonly IntPtr SetLowPassFilterResonance_NativeFunction;
    static readonly int SetLowPassFilterResonance_ParamsSize;
    static readonly int SetLowPassFilterResonance_InNewQ_Offset;
    
    public void SetLowPassFilterResonance(float inNewQ)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetLowPassFilterResonance_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetLowPassFilterResonance_InNewQ_Offset), 0, null, inNewQ);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetLowPassFilterResonance_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetFrequencyWithMidiNote
    static readonly IntPtr SetFrequencyWithMidiNote_NativeFunction;
    static readonly int SetFrequencyWithMidiNote_ParamsSize;
    static readonly int SetFrequencyWithMidiNote_InMidiNote_Offset;
    
    public void SetFrequencyWithMidiNote(float inMidiNote)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetFrequencyWithMidiNote_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetFrequencyWithMidiNote_InMidiNote_Offset), 0, null, inMidiNote);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetFrequencyWithMidiNote_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetFrequencyPitchBend
    static readonly IntPtr SetFrequencyPitchBend_NativeFunction;
    static readonly int SetFrequencyPitchBend_ParamsSize;
    static readonly int SetFrequencyPitchBend_FrequencyOffsetCents_Offset;
    
    public void SetFrequencyPitchBend(float frequencyOffsetCents)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetFrequencyPitchBend_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetFrequencyPitchBend_FrequencyOffsetCents_Offset), 0, null, frequencyOffsetCents);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetFrequencyPitchBend_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetFrequency
    static readonly IntPtr SetFrequency_NativeFunction;
    static readonly int SetFrequency_ParamsSize;
    static readonly int SetFrequency_FrequencyHz_Offset;
    
    public void SetFrequency(float frequencyHz)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetFrequency_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetFrequency_FrequencyHz_Offset), 0, null, frequencyHz);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetFrequency_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetFilterEnvelopeSustainGain
    static readonly IntPtr SetFilterEnvelopeSustainGain_NativeFunction;
    static readonly int SetFilterEnvelopeSustainGain_ParamsSize;
    static readonly int SetFilterEnvelopeSustainGain_InSustainGain_Offset;
    
    public void SetFilterEnvelopeSustainGain(float inSustainGain)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetFilterEnvelopeSustainGain_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetFilterEnvelopeSustainGain_InSustainGain_Offset), 0, null, inSustainGain);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetFilterEnvelopeSustainGain_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetFilterEnvelopeReleaseTime
    static readonly IntPtr SetFilterEnvelopeReleaseTime_NativeFunction;
    static readonly int SetFilterEnvelopeReleaseTime_ParamsSize;
    static readonly int SetFilterEnvelopeReleaseTime_InReleaseTimeMsec_Offset;
    
    public void SetFilterEnvelopeReleaseTime(float inReleaseTimeMsec)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetFilterEnvelopeReleaseTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetFilterEnvelopeReleaseTime_InReleaseTimeMsec_Offset), 0, null, inReleaseTimeMsec);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetFilterEnvelopeReleaseTime_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetFilterEnvelopenDecayTime
    static readonly IntPtr SetFilterEnvelopenDecayTime_NativeFunction;
    static readonly int SetFilterEnvelopenDecayTime_ParamsSize;
    static readonly int SetFilterEnvelopenDecayTime_InDecayTimeMsec_Offset;
    
    public void SetFilterEnvelopenDecayTime(float inDecayTimeMsec)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetFilterEnvelopenDecayTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetFilterEnvelopenDecayTime_InDecayTimeMsec_Offset), 0, null, inDecayTimeMsec);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetFilterEnvelopenDecayTime_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetFilterEnvelopeInvert
    static readonly IntPtr SetFilterEnvelopeInvert_NativeFunction;
    static readonly int SetFilterEnvelopeInvert_ParamsSize;
    static readonly int SetFilterEnvelopeInvert_bInInvert_Offset;
    
    public void SetFilterEnvelopeInvert(bool bInInvert)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetFilterEnvelopeInvert_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetFilterEnvelopeInvert_bInInvert_Offset), 0, null, bInInvert);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetFilterEnvelopeInvert_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetFilterEnvelopeDepth
    static readonly IntPtr SetFilterEnvelopeDepth_NativeFunction;
    static readonly int SetFilterEnvelopeDepth_ParamsSize;
    static readonly int SetFilterEnvelopeDepth_InDepth_Offset;
    
    public void SetFilterEnvelopeDepth(float inDepth)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetFilterEnvelopeDepth_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetFilterEnvelopeDepth_InDepth_Offset), 0, null, inDepth);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetFilterEnvelopeDepth_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetFilterEnvelopeBiasInvert
    static readonly IntPtr SetFilterEnvelopeBiasInvert_NativeFunction;
    static readonly int SetFilterEnvelopeBiasInvert_ParamsSize;
    static readonly int SetFilterEnvelopeBiasInvert_bInBiasInvert_Offset;
    
    public void SetFilterEnvelopeBiasInvert(bool bInBiasInvert)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetFilterEnvelopeBiasInvert_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetFilterEnvelopeBiasInvert_bInBiasInvert_Offset), 0, null, bInBiasInvert);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetFilterEnvelopeBiasInvert_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetFilterEnvelopeBiasDepth
    static readonly IntPtr SetFilterEnvelopeBiasDepth_NativeFunction;
    static readonly int SetFilterEnvelopeBiasDepth_ParamsSize;
    static readonly int SetFilterEnvelopeBiasDepth_InDepth_Offset;
    
    public void SetFilterEnvelopeBiasDepth(float inDepth)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetFilterEnvelopeBiasDepth_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetFilterEnvelopeBiasDepth_InDepth_Offset), 0, null, inDepth);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetFilterEnvelopeBiasDepth_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetFilterEnvelopeAttackTime
    static readonly IntPtr SetFilterEnvelopeAttackTime_NativeFunction;
    static readonly int SetFilterEnvelopeAttackTime_ParamsSize;
    static readonly int SetFilterEnvelopeAttackTime_InAttackTimeMsec_Offset;
    
    public void SetFilterEnvelopeAttackTime(float inAttackTimeMsec)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetFilterEnvelopeAttackTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetFilterEnvelopeAttackTime_InAttackTimeMsec_Offset), 0, null, inAttackTimeMsec);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetFilterEnvelopeAttackTime_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetCurveValue
    static readonly IntPtr SetCurveValue_NativeFunction;
    static readonly int SetCurveValue_ParamsSize;
    static readonly int SetCurveValue_TableIndex_Offset;
    static readonly int SetCurveValue_KeyframeIndex_Offset;
    static readonly int SetCurveValue_NewValue_Offset;
    static readonly int SetCurveValue_ReturnValue_Offset;
    
    public bool SetCurveValue(int tableIndex, int keyframeIndex, float newValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCurveValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetCurveValue_TableIndex_Offset), 0, null, tableIndex);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetCurveValue_KeyframeIndex_Offset), 0, null, keyframeIndex);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetCurveValue_NewValue_Offset), 0, null, newValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCurveValue_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCurveValue_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetCurveTangent
    static readonly IntPtr SetCurveTangent_NativeFunction;
    static readonly int SetCurveTangent_ParamsSize;
    static readonly int SetCurveTangent_TableIndex_Offset;
    static readonly int SetCurveTangent_InNewTangent_Offset;
    static readonly int SetCurveTangent_ReturnValue_Offset;
    
    public bool SetCurveTangent(int tableIndex, float inNewTangent)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCurveTangent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetCurveTangent_TableIndex_Offset), 0, null, tableIndex);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetCurveTangent_InNewTangent_Offset), 0, null, inNewTangent);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCurveTangent_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCurveTangent_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetCurveInterpolationType
    static readonly IntPtr SetCurveInterpolationType_NativeFunction;
    static readonly int SetCurveInterpolationType_ParamsSize;
    static readonly int SetCurveInterpolationType_InterpolationType_Offset;
    static readonly int SetCurveInterpolationType_TableIndex_Offset;
    static readonly int SetCurveInterpolationType_ReturnValue_Offset;
    
    public bool SetCurveInterpolationType(UnrealSharp.Synthesis.CurveInterpolationType interpolationType, int tableIndex)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCurveInterpolationType_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.Synthesis.CurveInterpolationType>.ToNative(IntPtr.Add(ParamsBuffer, SetCurveInterpolationType_InterpolationType_Offset), 0, null, interpolationType);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetCurveInterpolationType_TableIndex_Offset), 0, null, tableIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCurveInterpolationType_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SetCurveInterpolationType_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetAmpEnvelopeSustainGain
    static readonly IntPtr SetAmpEnvelopeSustainGain_NativeFunction;
    static readonly int SetAmpEnvelopeSustainGain_ParamsSize;
    static readonly int SetAmpEnvelopeSustainGain_InSustainGain_Offset;
    
    public void SetAmpEnvelopeSustainGain(float inSustainGain)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAmpEnvelopeSustainGain_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetAmpEnvelopeSustainGain_InSustainGain_Offset), 0, null, inSustainGain);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAmpEnvelopeSustainGain_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetAmpEnvelopeReleaseTime
    static readonly IntPtr SetAmpEnvelopeReleaseTime_NativeFunction;
    static readonly int SetAmpEnvelopeReleaseTime_ParamsSize;
    static readonly int SetAmpEnvelopeReleaseTime_InReleaseTimeMsec_Offset;
    
    public void SetAmpEnvelopeReleaseTime(float inReleaseTimeMsec)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAmpEnvelopeReleaseTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetAmpEnvelopeReleaseTime_InReleaseTimeMsec_Offset), 0, null, inReleaseTimeMsec);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAmpEnvelopeReleaseTime_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetAmpEnvelopeInvert
    static readonly IntPtr SetAmpEnvelopeInvert_NativeFunction;
    static readonly int SetAmpEnvelopeInvert_ParamsSize;
    static readonly int SetAmpEnvelopeInvert_bInInvert_Offset;
    
    public void SetAmpEnvelopeInvert(bool bInInvert)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAmpEnvelopeInvert_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetAmpEnvelopeInvert_bInInvert_Offset), 0, null, bInInvert);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAmpEnvelopeInvert_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetAmpEnvelopeDepth
    static readonly IntPtr SetAmpEnvelopeDepth_NativeFunction;
    static readonly int SetAmpEnvelopeDepth_ParamsSize;
    static readonly int SetAmpEnvelopeDepth_InDepth_Offset;
    
    public void SetAmpEnvelopeDepth(float inDepth)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAmpEnvelopeDepth_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetAmpEnvelopeDepth_InDepth_Offset), 0, null, inDepth);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAmpEnvelopeDepth_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetAmpEnvelopeDecayTime
    static readonly IntPtr SetAmpEnvelopeDecayTime_NativeFunction;
    static readonly int SetAmpEnvelopeDecayTime_ParamsSize;
    static readonly int SetAmpEnvelopeDecayTime_InDecayTimeMsec_Offset;
    
    public void SetAmpEnvelopeDecayTime(float inDecayTimeMsec)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAmpEnvelopeDecayTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetAmpEnvelopeDecayTime_InDecayTimeMsec_Offset), 0, null, inDecayTimeMsec);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAmpEnvelopeDecayTime_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetAmpEnvelopeBiasInvert
    static readonly IntPtr SetAmpEnvelopeBiasInvert_NativeFunction;
    static readonly int SetAmpEnvelopeBiasInvert_ParamsSize;
    static readonly int SetAmpEnvelopeBiasInvert_bInBiasInvert_Offset;
    
    public void SetAmpEnvelopeBiasInvert(bool bInBiasInvert)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAmpEnvelopeBiasInvert_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetAmpEnvelopeBiasInvert_bInBiasInvert_Offset), 0, null, bInBiasInvert);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAmpEnvelopeBiasInvert_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetAmpEnvelopeBiasDepth
    static readonly IntPtr SetAmpEnvelopeBiasDepth_NativeFunction;
    static readonly int SetAmpEnvelopeBiasDepth_ParamsSize;
    static readonly int SetAmpEnvelopeBiasDepth_InDepth_Offset;
    
    public void SetAmpEnvelopeBiasDepth(float inDepth)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAmpEnvelopeBiasDepth_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetAmpEnvelopeBiasDepth_InDepth_Offset), 0, null, inDepth);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAmpEnvelopeBiasDepth_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:SetAmpEnvelopeAttackTime
    static readonly IntPtr SetAmpEnvelopeAttackTime_NativeFunction;
    static readonly int SetAmpEnvelopeAttackTime_ParamsSize;
    static readonly int SetAmpEnvelopeAttackTime_InAttackTimeMsec_Offset;
    
    public void SetAmpEnvelopeAttackTime(float inAttackTimeMsec)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAmpEnvelopeAttackTime_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetAmpEnvelopeAttackTime_InAttackTimeMsec_Offset), 0, null, inAttackTimeMsec);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAmpEnvelopeAttackTime_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:RefreshWaveTable
    static readonly IntPtr RefreshWaveTable_NativeFunction;
    static readonly int RefreshWaveTable_ParamsSize;
    static readonly int RefreshWaveTable_Index_Offset;
    
    public void RefreshWaveTable(int index)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RefreshWaveTable_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, RefreshWaveTable_Index_Offset), 0, null, index);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RefreshWaveTable_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:RefreshAllWaveTables
    static readonly IntPtr RefreshAllWaveTables_NativeFunction;
    
    public void RefreshAllWaveTables()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RefreshAllWaveTables_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:NoteOn
    static readonly IntPtr NoteOn_NativeFunction;
    static readonly int NoteOn_ParamsSize;
    static readonly int NoteOn_InMidiNote_Offset;
    static readonly int NoteOn_InVelocity_Offset;
    
    public void NoteOn(float inMidiNote, float inVelocity)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[NoteOn_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, NoteOn_InMidiNote_Offset), 0, null, inMidiNote);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, NoteOn_InVelocity_Offset), 0, null, inVelocity);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, NoteOn_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:NoteOff
    static readonly IntPtr NoteOff_NativeFunction;
    static readonly int NoteOff_ParamsSize;
    static readonly int NoteOff_InMidiNote_Offset;
    
    public void NoteOff(float inMidiNote)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[NoteOff_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, NoteOff_InMidiNote_Offset), 0, null, inMidiNote);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, NoteOff_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:GetNumTableEntries
    static readonly IntPtr GetNumTableEntries_NativeFunction;
    static readonly int GetNumTableEntries_ParamsSize;
    static readonly int GetNumTableEntries_ReturnValue_Offset;
    
    public int GetNumTableEntries()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetNumTableEntries_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetNumTableEntries_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetNumTableEntries_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:GetMaxTableIndex
    static readonly IntPtr GetMaxTableIndex_NativeFunction;
    static readonly int GetMaxTableIndex_ParamsSize;
    static readonly int GetMaxTableIndex_ReturnValue_Offset;
    
    public int GetMaxTableIndex()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetMaxTableIndex_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetMaxTableIndex_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetMaxTableIndex_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:GetKeyFrameValuesForTable
    static readonly IntPtr GetKeyFrameValuesForTable_NativeFunction;
    static readonly int GetKeyFrameValuesForTable_ParamsSize;
    static readonly int GetKeyFrameValuesForTable_TableIndex_Offset;
    static readonly int GetKeyFrameValuesForTable_ReturnValue_Offset;
    static readonly int GetKeyFrameValuesForTable_ReturnValue_ElementSize;
    
    public System.Collections.Generic.IList<float> GetKeyFrameValuesForTable(float tableIndex)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetKeyFrameValuesForTable_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, GetKeyFrameValuesForTable_TableIndex_Offset), 0, null, tableIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetKeyFrameValuesForTable_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<float> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, GetKeyFrameValuesForTable_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<float> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<float> (1, BlittableMarshaller<float>.ToNative, BlittableMarshaller<float>.FromNative, GetKeyFrameValuesForTable_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<float>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/Synthesis.SynthComponentMonoWaveTable:GetCurveTangent
    static readonly IntPtr GetCurveTangent_NativeFunction;
    static readonly int GetCurveTangent_ParamsSize;
    static readonly int GetCurveTangent_TableIndex_Offset;
    static readonly int GetCurveTangent_ReturnValue_Offset;
    
    public float GetCurveTangent(int tableIndex)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCurveTangent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetCurveTangent_TableIndex_Offset), 0, null, tableIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCurveTangent_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetCurveTangent_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Synthesis;

[UClass]
public partial class SynthKnob : UnrealSharp.UMG.Widget
{
    
    static SynthKnob()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("SynthKnob");
        
        StepSize_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "StepSize");
        MouseSpeed_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "MouseSpeed");
        MouseFineTuneSpeed_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "MouseFineTuneSpeed");
        ShowTooltipInfo_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ShowTooltipInfo");
        ShowTooltipInfo_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "ShowTooltipInfo");
        ParameterName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ParameterName");
        ParameterName_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "ParameterName");
        ParameterUnits_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ParameterUnits");
        ParameterUnits_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "ParameterUnits");
        WidgetStyle_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "WidgetStyle");
        Locked_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Locked");
        IsFocusable_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "IsFocusable");
        
        SetValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetValue");
        SetValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetValue_NativeFunction);
        SetValue_InValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetValue_NativeFunction, "InValue");
        SetStepSize_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetStepSize");
        SetStepSize_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetStepSize_NativeFunction);
        SetStepSize_InValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStepSize_NativeFunction, "InValue");
        SetLocked_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetLocked");
        SetLocked_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetLocked_NativeFunction);
        SetLocked_InValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLocked_NativeFunction, "InValue");
        GetValue_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetValue");
        GetValue_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetValue_NativeFunction);
        GetValue_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetValue_NativeFunction, "ReturnValue");
        
        
    }
    
    protected SynthKnob(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // FloatProperty /Script/Synthesis.SynthKnob:StepSize
    static readonly int StepSize_Offset;
    
    public float StepSize
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, StepSize_Offset), 0, this);
        }
    }
    
    // FloatProperty /Script/Synthesis.SynthKnob:MouseSpeed
    static readonly int MouseSpeed_Offset;
    
    public float MouseSpeed
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, MouseSpeed_Offset), 0, this);
        }
    }
    
    // FloatProperty /Script/Synthesis.SynthKnob:MouseFineTuneSpeed
    static readonly int MouseFineTuneSpeed_Offset;
    
    public float MouseFineTuneSpeed
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, MouseFineTuneSpeed_Offset), 0, this);
        }
    }
    
    // BoolProperty /Script/Synthesis.SynthKnob:ShowTooltipInfo
    static readonly int ShowTooltipInfo_Offset;
    static readonly IntPtr ShowTooltipInfo_NativeProperty;
    
    public bool ShowTooltipInfo
    {
        get
        {
            CheckObjectForValidity();
            return FBoolPropertyExporter.CallGetBitfieldValueFromProperty(NativeObject, ShowTooltipInfo_NativeProperty, ShowTooltipInfo_Offset);
        }
    }
    
    // TextProperty /Script/Synthesis.SynthKnob:ParameterName
    static readonly int ParameterName_Offset;
    static readonly IntPtr ParameterName_NativeProperty;
    TextMarshaller ParameterName_Wrapper;
    
    public Text ParameterName
    {
        get
        {
            if (ParameterName_Wrapper == null)
            {
                ParameterName_Wrapper  = new TextMarshaller(1);
            }
            return ParameterName_Wrapper.FromNative(this.NativeObject + ParameterName_Offset, 0, this);
        }
    }
    
    // TextProperty /Script/Synthesis.SynthKnob:ParameterUnits
    static readonly int ParameterUnits_Offset;
    static readonly IntPtr ParameterUnits_NativeProperty;
    TextMarshaller ParameterUnits_Wrapper;
    
    public Text ParameterUnits
    {
        get
        {
            if (ParameterUnits_Wrapper == null)
            {
                ParameterUnits_Wrapper  = new TextMarshaller(1);
            }
            return ParameterUnits_Wrapper.FromNative(this.NativeObject + ParameterUnits_Offset, 0, this);
        }
    }
    
    // StructProperty /Script/Synthesis.SynthKnob:WidgetStyle
    static readonly int WidgetStyle_Offset;
    
    public UnrealSharp.Synthesis.SynthKnobStyle WidgetStyle
    {
        get
        {
            CheckObjectForValidity();
            return UnrealSharp.Synthesis.SynthKnobStyleMarshaler.FromNative(IntPtr.Add(NativeObject, WidgetStyle_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            UnrealSharp.Synthesis.SynthKnobStyleMarshaler.ToNative(IntPtr.Add(NativeObject, WidgetStyle_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/Synthesis.SynthKnob:Locked
    static readonly int Locked_Offset;
    
    public bool Locked
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, Locked_Offset), 0, this);
        }
    }
    
    // BoolProperty /Script/Synthesis.SynthKnob:IsFocusable
    static readonly int IsFocusable_Offset;
    
    public bool IsFocusable
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, IsFocusable_Offset), 0, this);
        }
    }
    
    // Function /Script/Synthesis.SynthKnob:SetValue
    static readonly IntPtr SetValue_NativeFunction;
    static readonly int SetValue_ParamsSize;
    static readonly int SetValue_InValue_Offset;
    
    public void SetValue(float inValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetValue_InValue_Offset), 0, null, inValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetValue_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthKnob:SetStepSize
    static readonly IntPtr SetStepSize_NativeFunction;
    static readonly int SetStepSize_ParamsSize;
    static readonly int SetStepSize_InValue_Offset;
    
    public void SetStepSize(float inValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetStepSize_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetStepSize_InValue_Offset), 0, null, inValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetStepSize_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthKnob:SetLocked
    static readonly IntPtr SetLocked_NativeFunction;
    static readonly int SetLocked_ParamsSize;
    static readonly int SetLocked_InValue_Offset;
    
    public void SetLocked(bool inValue)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetLocked_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetLocked_InValue_Offset), 0, null, inValue);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetLocked_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/Synthesis.SynthKnob:GetValue
    static readonly IntPtr GetValue_NativeFunction;
    static readonly int GetValue_ParamsSize;
    static readonly int GetValue_ReturnValue_Offset;
    
    public float GetValue()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetValue_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetValue_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetValue_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
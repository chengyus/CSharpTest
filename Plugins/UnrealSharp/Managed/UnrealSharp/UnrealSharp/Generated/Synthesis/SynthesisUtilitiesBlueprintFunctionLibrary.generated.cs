// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.Synthesis;

[UClass]
public partial class SynthesisUtilitiesBlueprintFunctionLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static SynthesisUtilitiesBlueprintFunctionLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("SynthesisUtilitiesBlueprintFunctionLibrary");
        
        
        GetLogFrequency_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetLogFrequency");
        GetLogFrequency_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetLogFrequency_NativeFunction);
        GetLogFrequency_InLinearValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLogFrequency_NativeFunction, "InLinearValue");
        GetLogFrequency_InDomainMin_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLogFrequency_NativeFunction, "InDomainMin");
        GetLogFrequency_InDomainMax_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLogFrequency_NativeFunction, "InDomainMax");
        GetLogFrequency_InRangeMin_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLogFrequency_NativeFunction, "InRangeMin");
        GetLogFrequency_InRangeMax_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLogFrequency_NativeFunction, "InRangeMax");
        GetLogFrequency_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLogFrequency_NativeFunction, "ReturnValue");
        GetLinearFrequency_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetLinearFrequency");
        GetLinearFrequency_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetLinearFrequency_NativeFunction);
        GetLinearFrequency_InLogFrequencyValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLinearFrequency_NativeFunction, "InLogFrequencyValue");
        GetLinearFrequency_InDomainMin_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLinearFrequency_NativeFunction, "InDomainMin");
        GetLinearFrequency_InDomainMax_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLinearFrequency_NativeFunction, "InDomainMax");
        GetLinearFrequency_InRangeMin_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLinearFrequency_NativeFunction, "InRangeMin");
        GetLinearFrequency_InRangeMax_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLinearFrequency_NativeFunction, "InRangeMax");
        GetLinearFrequency_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLinearFrequency_NativeFunction, "ReturnValue");
        
        
    }
    
    protected SynthesisUtilitiesBlueprintFunctionLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/Synthesis.SynthesisUtilitiesBlueprintFunctionLibrary:GetLogFrequency
    static readonly IntPtr GetLogFrequency_NativeFunction;
    static readonly int GetLogFrequency_ParamsSize;
    static readonly int GetLogFrequency_InLinearValue_Offset;
    static readonly int GetLogFrequency_InDomainMin_Offset;
    static readonly int GetLogFrequency_InDomainMax_Offset;
    static readonly int GetLogFrequency_InRangeMin_Offset;
    static readonly int GetLogFrequency_InRangeMax_Offset;
    static readonly int GetLogFrequency_ReturnValue_Offset;
    
    public static float GetLogFrequency(float inLinearValue, float inDomainMin, float inDomainMax, float inRangeMin, float inRangeMax)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetLogFrequency_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, GetLogFrequency_InLinearValue_Offset), 0, null, inLinearValue);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, GetLogFrequency_InDomainMin_Offset), 0, null, inDomainMin);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, GetLogFrequency_InDomainMax_Offset), 0, null, inDomainMax);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, GetLogFrequency_InRangeMin_Offset), 0, null, inRangeMin);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, GetLogFrequency_InRangeMax_Offset), 0, null, inRangeMax);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetLogFrequency_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetLogFrequency_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/Synthesis.SynthesisUtilitiesBlueprintFunctionLibrary:GetLinearFrequency
    static readonly IntPtr GetLinearFrequency_NativeFunction;
    static readonly int GetLinearFrequency_ParamsSize;
    static readonly int GetLinearFrequency_InLogFrequencyValue_Offset;
    static readonly int GetLinearFrequency_InDomainMin_Offset;
    static readonly int GetLinearFrequency_InDomainMax_Offset;
    static readonly int GetLinearFrequency_InRangeMin_Offset;
    static readonly int GetLinearFrequency_InRangeMax_Offset;
    static readonly int GetLinearFrequency_ReturnValue_Offset;
    
    public static float GetLinearFrequency(float inLogFrequencyValue, float inDomainMin, float inDomainMax, float inRangeMin, float inRangeMax)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetLinearFrequency_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, GetLinearFrequency_InLogFrequencyValue_Offset), 0, null, inLogFrequencyValue);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, GetLinearFrequency_InDomainMin_Offset), 0, null, inDomainMin);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, GetLinearFrequency_InDomainMax_Offset), 0, null, inDomainMax);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, GetLinearFrequency_InRangeMin_Offset), 0, null, inRangeMin);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, GetLinearFrequency_InRangeMax_Offset), 0, null, inRangeMax);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetLinearFrequency_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetLinearFrequency_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.TakeRecorder;

[UClass]
public partial class TakeRecorder : UnrealSharp.CoreUObject.Object
{
    
    static TakeRecorder()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("TakeRecorder");
        
        
        GetState_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetState");
        GetState_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetState_NativeFunction);
        GetState_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetState_NativeFunction, "ReturnValue");
        GetSequence_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSequence");
        GetSequence_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSequence_NativeFunction);
        GetSequence_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSequence_NativeFunction, "ReturnValue");
        GetCountdownSeconds_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCountdownSeconds");
        GetCountdownSeconds_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCountdownSeconds_NativeFunction);
        GetCountdownSeconds_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCountdownSeconds_NativeFunction, "ReturnValue");
        
        
    }
    
    protected TakeRecorder(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/TakeRecorder.TakeRecorder:GetState
    static readonly IntPtr GetState_NativeFunction;
    static readonly int GetState_ParamsSize;
    static readonly int GetState_ReturnValue_Offset;
    
    public UnrealSharp.TakeRecorder.ETakeRecorderState GetState()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetState_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetState_NativeFunction, ParamsBuffer);
            
            UnrealSharp.TakeRecorder.ETakeRecorderState returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.TakeRecorder.ETakeRecorderState>.FromNative(IntPtr.Add(ParamsBuffer, GetState_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/TakeRecorder.TakeRecorder:GetSequence
    static readonly IntPtr GetSequence_NativeFunction;
    static readonly int GetSequence_ParamsSize;
    static readonly int GetSequence_ReturnValue_Offset;
    
    public UnrealSharp.LevelSequence.LevelSequence GetSequence()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSequence_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSequence_NativeFunction, ParamsBuffer);
            
            UnrealSharp.LevelSequence.LevelSequence returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.LevelSequence.LevelSequence>.FromNative(IntPtr.Add(ParamsBuffer, GetSequence_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/TakeRecorder.TakeRecorder:GetCountdownSeconds
    static readonly IntPtr GetCountdownSeconds_NativeFunction;
    static readonly int GetCountdownSeconds_ParamsSize;
    static readonly int GetCountdownSeconds_ReturnValue_Offset;
    
    public float GetCountdownSeconds()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCountdownSeconds_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCountdownSeconds_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetCountdownSeconds_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
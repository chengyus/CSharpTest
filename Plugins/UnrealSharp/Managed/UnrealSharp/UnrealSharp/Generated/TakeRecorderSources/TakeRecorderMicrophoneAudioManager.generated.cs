// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.TakeRecorderSources;

[UClass]
public partial class TakeRecorderMicrophoneAudioManager : UnrealSharp.TakesCore.TakeRecorderAudioInputSettings
{
    
    static TakeRecorderMicrophoneAudioManager()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("TakeRecorderMicrophoneAudioManager");
        
        AudioInputDevice_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "AudioInputDevice");
        
        
        
    }
    
    protected TakeRecorderMicrophoneAudioManager(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // StructProperty /Script/TakeRecorderSources.TakeRecorderMicrophoneAudioManager:AudioInputDevice
    static readonly int AudioInputDevice_Offset;
    
    public UnrealSharp.TakesCore.AudioInputDeviceProperty AudioInputDevice
    {
        get
        {
            CheckObjectForValidity();
            return UnrealSharp.TakesCore.AudioInputDevicePropertyMarshaler.FromNative(IntPtr.Add(NativeObject, AudioInputDevice_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            UnrealSharp.TakesCore.AudioInputDevicePropertyMarshaler.ToNative(IntPtr.Add(NativeObject, AudioInputDevice_Offset), 0, this, value);
        }
    }
    
    
}
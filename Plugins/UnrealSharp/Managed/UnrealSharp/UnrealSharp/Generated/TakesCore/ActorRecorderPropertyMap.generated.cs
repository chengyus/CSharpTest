// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.TakesCore;

[UClass]
public partial class ActorRecorderPropertyMap : UnrealSharp.CoreUObject.Object
{
    
    static ActorRecorderPropertyMap()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("ActorRecorderPropertyMap");
        
        Properties_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Properties");
        Properties_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "Properties");
        Children_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Children");
        Children_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "Children");
        
        
        
    }
    
    protected ActorRecorderPropertyMap(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ArrayProperty /Script/TakesCore.ActorRecorderPropertyMap:Properties
    static readonly int Properties_Offset;
    static readonly IntPtr Properties_NativeProperty;
    UnrealArrayReadWriteMarshaler<UnrealSharp.TakesCore.ActorRecordedProperty> Properties_Wrapper = null;
    
    public System.Collections.Generic.IList<UnrealSharp.TakesCore.ActorRecordedProperty> Properties
    {
        get
        {
            if(Properties_Wrapper == null)
            {
                Properties_Wrapper = new UnrealArrayReadWriteMarshaler<UnrealSharp.TakesCore.ActorRecordedProperty>(1, Properties_NativeProperty, UnrealSharp.TakesCore.ActorRecordedPropertyMarshaler.ToNative, UnrealSharp.TakesCore.ActorRecordedPropertyMarshaler.FromNative);
            }
            
            return Properties_Wrapper.FromNative(IntPtr.Add(NativeObject,Properties_Offset),0,this);
        }
    }
    
    // ArrayProperty /Script/TakesCore.ActorRecorderPropertyMap:Children
    static readonly int Children_Offset;
    static readonly IntPtr Children_NativeProperty;
    UnrealArrayReadWriteMarshaler<UnrealSharp.TakesCore.ActorRecorderPropertyMap> Children_Wrapper = null;
    
    public System.Collections.Generic.IList<UnrealSharp.TakesCore.ActorRecorderPropertyMap> Children
    {
        get
        {
            if(Children_Wrapper == null)
            {
                Children_Wrapper = new UnrealArrayReadWriteMarshaler<UnrealSharp.TakesCore.ActorRecorderPropertyMap>(1, Children_NativeProperty, ObjectMarshaller<UnrealSharp.TakesCore.ActorRecorderPropertyMap>.ToNative, ObjectMarshaller<UnrealSharp.TakesCore.ActorRecorderPropertyMap>.FromNative);
            }
            
            return Children_Wrapper.FromNative(IntPtr.Add(NativeObject,Children_Offset),0,this);
        }
    }
    
    
}
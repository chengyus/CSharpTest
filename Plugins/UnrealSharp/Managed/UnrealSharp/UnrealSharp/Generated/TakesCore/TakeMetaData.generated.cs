// This file is automatically generated
using UnrealSharp.MovieScene;
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.TakesCore;

[UClass]
public partial class TakeMetaData : UnrealSharp.CoreUObject.Object, IMovieSceneMetaDataInterface
{
    
    static TakeMetaData()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("TakeMetaData");
        
        
        Unlock_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Unlock");
        SetTimestamp_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetTimestamp");
        SetTimestamp_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetTimestamp_NativeFunction);
        SetTimestamp_InTimestamp_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetTimestamp_NativeFunction, "InTimestamp");
        SetTimecodeOut_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetTimecodeOut");
        SetTimecodeOut_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetTimecodeOut_NativeFunction);
        SetTimecodeOut_InTimecodeOut_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetTimecodeOut_NativeFunction, "InTimecodeOut");
        SetTimecodeIn_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetTimecodeIn");
        SetTimecodeIn_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetTimecodeIn_NativeFunction);
        SetTimecodeIn_InTimecodeIn_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetTimecodeIn_NativeFunction, "InTimecodeIn");
        SetTakeNumber_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetTakeNumber");
        SetTakeNumber_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetTakeNumber_NativeFunction);
        SetTakeNumber_InTakeNumber_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetTakeNumber_NativeFunction, "InTakeNumber");
        SetTakeNumber_bEmitChanged_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetTakeNumber_NativeFunction, "bEmitChanged");
        SetSlate_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSlate");
        SetSlate_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSlate_NativeFunction);
        SetSlate_InSlate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSlate_NativeFunction, "InSlate");
        SetSlate_bEmitChanged_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSlate_NativeFunction, "bEmitChanged");
        SetPresetOrigin_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPresetOrigin");
        SetPresetOrigin_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPresetOrigin_NativeFunction);
        SetPresetOrigin_InPresetOrigin_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPresetOrigin_NativeFunction, "InPresetOrigin");
        SetLevelOrigin_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetLevelOrigin");
        SetLevelOrigin_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetLevelOrigin_NativeFunction);
        SetLevelOrigin_InLevelOrigin_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLevelOrigin_NativeFunction, "InLevelOrigin");
        SetFrameRateFromTimecode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetFrameRateFromTimecode");
        SetFrameRateFromTimecode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetFrameRateFromTimecode_NativeFunction);
        SetFrameRateFromTimecode_InFromTimecode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetFrameRateFromTimecode_NativeFunction, "InFromTimecode");
        SetFrameRate_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetFrameRate");
        SetFrameRate_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetFrameRate_NativeFunction);
        SetFrameRate_InFrameRate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetFrameRate_NativeFunction, "InFrameRate");
        SetDuration_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetDuration");
        SetDuration_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetDuration_NativeFunction);
        SetDuration_InDuration_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetDuration_NativeFunction, "InDuration");
        SetDescription_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetDescription");
        SetDescription_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetDescription_NativeFunction);
        SetDescription_InDescription_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetDescription_NativeFunction, "InDescription");
        Recorded_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Recorded");
        Recorded_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(Recorded_NativeFunction);
        Recorded_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(Recorded_NativeFunction, "ReturnValue");
        Lock_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "Lock");
        IsLocked_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsLocked");
        IsLocked_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsLocked_NativeFunction);
        IsLocked_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsLocked_NativeFunction, "ReturnValue");
        GetTimestamp_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetTimestamp");
        GetTimestamp_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetTimestamp_NativeFunction);
        GetTimestamp_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTimestamp_NativeFunction, "ReturnValue");
        GetTimecodeOut_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetTimecodeOut");
        GetTimecodeOut_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetTimecodeOut_NativeFunction);
        GetTimecodeOut_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTimecodeOut_NativeFunction, "ReturnValue");
        GetTimecodeIn_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetTimecodeIn");
        GetTimecodeIn_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetTimecodeIn_NativeFunction);
        GetTimecodeIn_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTimecodeIn_NativeFunction, "ReturnValue");
        GetTakeNumber_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetTakeNumber");
        GetTakeNumber_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetTakeNumber_NativeFunction);
        GetTakeNumber_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetTakeNumber_NativeFunction, "ReturnValue");
        GetSlate_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSlate");
        GetSlate_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSlate_NativeFunction);
        GetSlate_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSlate_NativeFunction, "ReturnValue");
        GetPresetOrigin_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetPresetOrigin");
        GetPresetOrigin_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetPresetOrigin_NativeFunction);
        GetPresetOrigin_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetPresetOrigin_NativeFunction, "ReturnValue");
        GetLevelPath_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetLevelPath");
        GetLevelPath_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetLevelPath_NativeFunction);
        GetLevelPath_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLevelPath_NativeFunction, "ReturnValue");
        GetLevelOrigin_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetLevelOrigin");
        GetLevelOrigin_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetLevelOrigin_NativeFunction);
        GetLevelOrigin_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLevelOrigin_NativeFunction, "ReturnValue");
        GetFrameRateFromTimecode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetFrameRateFromTimecode");
        GetFrameRateFromTimecode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetFrameRateFromTimecode_NativeFunction);
        GetFrameRateFromTimecode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetFrameRateFromTimecode_NativeFunction, "ReturnValue");
        GetFrameRate_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetFrameRate");
        GetFrameRate_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetFrameRate_NativeFunction);
        GetFrameRate_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetFrameRate_NativeFunction, "ReturnValue");
        GetDuration_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetDuration");
        GetDuration_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetDuration_NativeFunction);
        GetDuration_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDuration_NativeFunction, "ReturnValue");
        GetDescription_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetDescription");
        GetDescription_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetDescription_NativeFunction);
        GetDescription_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDescription_NativeFunction, "ReturnValue");
        GenerateAssetPath_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GenerateAssetPath");
        GenerateAssetPath_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GenerateAssetPath_NativeFunction);
        GenerateAssetPath_PathFormatString_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GenerateAssetPath_NativeFunction, "PathFormatString");
        GenerateAssetPath_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GenerateAssetPath_NativeFunction, "ReturnValue");
        
        
    }
    
    protected TakeMetaData(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/TakesCore.TakeMetaData:Unlock
    static readonly IntPtr Unlock_NativeFunction;
    
    public void Unlock()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, Unlock_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/TakesCore.TakeMetaData:SetTimestamp
    static readonly IntPtr SetTimestamp_NativeFunction;
    static readonly int SetTimestamp_ParamsSize;
    static readonly int SetTimestamp_InTimestamp_Offset;
    
    public void SetTimestamp(UnrealSharp.CoreUObject.DateTime inTimestamp)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetTimestamp_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.CoreUObject.DateTimeMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetTimestamp_InTimestamp_Offset), 0, null, inTimestamp);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetTimestamp_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/TakesCore.TakeMetaData:SetTimecodeOut
    static readonly IntPtr SetTimecodeOut_NativeFunction;
    static readonly int SetTimecodeOut_ParamsSize;
    static readonly int SetTimecodeOut_InTimecodeOut_Offset;
    
    public void SetTimecodeOut(UnrealSharp.CoreUObject.Timecode inTimecodeOut)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetTimecodeOut_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.CoreUObject.TimecodeMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetTimecodeOut_InTimecodeOut_Offset), 0, null, inTimecodeOut);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetTimecodeOut_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/TakesCore.TakeMetaData:SetTimecodeIn
    static readonly IntPtr SetTimecodeIn_NativeFunction;
    static readonly int SetTimecodeIn_ParamsSize;
    static readonly int SetTimecodeIn_InTimecodeIn_Offset;
    
    public void SetTimecodeIn(UnrealSharp.CoreUObject.Timecode inTimecodeIn)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetTimecodeIn_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.CoreUObject.TimecodeMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetTimecodeIn_InTimecodeIn_Offset), 0, null, inTimecodeIn);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetTimecodeIn_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/TakesCore.TakeMetaData:SetTakeNumber
    static readonly IntPtr SetTakeNumber_NativeFunction;
    static readonly int SetTakeNumber_ParamsSize;
    static readonly int SetTakeNumber_InTakeNumber_Offset;
    static readonly int SetTakeNumber_bEmitChanged_Offset;
    
    public void SetTakeNumber(int inTakeNumber, bool bEmitChanged = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetTakeNumber_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetTakeNumber_InTakeNumber_Offset), 0, null, inTakeNumber);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetTakeNumber_bEmitChanged_Offset), 0, null, bEmitChanged);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetTakeNumber_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/TakesCore.TakeMetaData:SetSlate
    static readonly IntPtr SetSlate_NativeFunction;
    static readonly int SetSlate_ParamsSize;
    static readonly int SetSlate_InSlate_Offset;
    static readonly int SetSlate_bEmitChanged_Offset;
    
    public void SetSlate(string inSlate, bool bEmitChanged = true)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSlate_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InSlate_NativePtr = IntPtr.Add(ParamsBuffer,SetSlate_InSlate_Offset);
            StringMarshaller.ToNative(InSlate_NativePtr,0,null,inSlate);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetSlate_bEmitChanged_Offset), 0, null, bEmitChanged);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSlate_NativeFunction, ParamsBuffer);
            
            StringMarshaller.DestructInstance(InSlate_NativePtr, 0);
        }
    }
    
    // Function /Script/TakesCore.TakeMetaData:SetPresetOrigin
    static readonly IntPtr SetPresetOrigin_NativeFunction;
    static readonly int SetPresetOrigin_ParamsSize;
    static readonly int SetPresetOrigin_InPresetOrigin_Offset;
    
    public void SetPresetOrigin(UnrealSharp.TakesCore.TakePreset inPresetOrigin)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPresetOrigin_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.TakesCore.TakePreset>.ToNative(IntPtr.Add(ParamsBuffer, SetPresetOrigin_InPresetOrigin_Offset), 0, null, inPresetOrigin);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPresetOrigin_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/TakesCore.TakeMetaData:SetLevelOrigin
    static readonly IntPtr SetLevelOrigin_NativeFunction;
    static readonly int SetLevelOrigin_ParamsSize;
    static readonly int SetLevelOrigin_InLevelOrigin_Offset;
    
    public void SetLevelOrigin(UnrealSharp.Engine.Level inLevelOrigin)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetLevelOrigin_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.Level>.ToNative(IntPtr.Add(ParamsBuffer, SetLevelOrigin_InLevelOrigin_Offset), 0, null, inLevelOrigin);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetLevelOrigin_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/TakesCore.TakeMetaData:SetFrameRateFromTimecode
    static readonly IntPtr SetFrameRateFromTimecode_NativeFunction;
    static readonly int SetFrameRateFromTimecode_ParamsSize;
    static readonly int SetFrameRateFromTimecode_InFromTimecode_Offset;
    
    public void SetFrameRateFromTimecode(bool inFromTimecode)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetFrameRateFromTimecode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetFrameRateFromTimecode_InFromTimecode_Offset), 0, null, inFromTimecode);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetFrameRateFromTimecode_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/TakesCore.TakeMetaData:SetFrameRate
    static readonly IntPtr SetFrameRate_NativeFunction;
    static readonly int SetFrameRate_ParamsSize;
    static readonly int SetFrameRate_InFrameRate_Offset;
    
    public void SetFrameRate(UnrealSharp.CoreUObject.FrameRate inFrameRate)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetFrameRate_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.CoreUObject.FrameRate>.ToNative(IntPtr.Add(ParamsBuffer, SetFrameRate_InFrameRate_Offset), 0, null, inFrameRate);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetFrameRate_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/TakesCore.TakeMetaData:SetDuration
    static readonly IntPtr SetDuration_NativeFunction;
    static readonly int SetDuration_ParamsSize;
    static readonly int SetDuration_InDuration_Offset;
    
    public void SetDuration(UnrealSharp.CoreUObject.FrameTime inDuration)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetDuration_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.CoreUObject.FrameTime>.ToNative(IntPtr.Add(ParamsBuffer, SetDuration_InDuration_Offset), 0, null, inDuration);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetDuration_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/TakesCore.TakeMetaData:SetDescription
    static readonly IntPtr SetDescription_NativeFunction;
    static readonly int SetDescription_ParamsSize;
    static readonly int SetDescription_InDescription_Offset;
    
    public void SetDescription(string inDescription)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetDescription_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InDescription_NativePtr = IntPtr.Add(ParamsBuffer,SetDescription_InDescription_Offset);
            StringMarshaller.ToNative(InDescription_NativePtr,0,null,inDescription);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetDescription_NativeFunction, ParamsBuffer);
            
            StringMarshaller.DestructInstance(InDescription_NativePtr, 0);
        }
    }
    
    // Function /Script/TakesCore.TakeMetaData:Recorded
    static readonly IntPtr Recorded_NativeFunction;
    static readonly int Recorded_ParamsSize;
    static readonly int Recorded_ReturnValue_Offset;
    
    public bool Recorded()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[Recorded_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, Recorded_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, Recorded_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/TakesCore.TakeMetaData:Lock
    static readonly IntPtr Lock_NativeFunction;
    
    public void Lock()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, Lock_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/TakesCore.TakeMetaData:IsLocked
    static readonly IntPtr IsLocked_NativeFunction;
    static readonly int IsLocked_ParamsSize;
    static readonly int IsLocked_ReturnValue_Offset;
    
    public bool IsLocked()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsLocked_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsLocked_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsLocked_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/TakesCore.TakeMetaData:GetTimestamp
    static readonly IntPtr GetTimestamp_NativeFunction;
    static readonly int GetTimestamp_ParamsSize;
    static readonly int GetTimestamp_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.DateTime GetTimestamp()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetTimestamp_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetTimestamp_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.DateTime returnValue;
            returnValue = UnrealSharp.CoreUObject.DateTimeMarshaler.FromNative(IntPtr.Add(ParamsBuffer, GetTimestamp_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/TakesCore.TakeMetaData:GetTimecodeOut
    static readonly IntPtr GetTimecodeOut_NativeFunction;
    static readonly int GetTimecodeOut_ParamsSize;
    static readonly int GetTimecodeOut_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.Timecode GetTimecodeOut()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetTimecodeOut_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetTimecodeOut_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.Timecode returnValue;
            returnValue = UnrealSharp.CoreUObject.TimecodeMarshaler.FromNative(IntPtr.Add(ParamsBuffer, GetTimecodeOut_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/TakesCore.TakeMetaData:GetTimecodeIn
    static readonly IntPtr GetTimecodeIn_NativeFunction;
    static readonly int GetTimecodeIn_ParamsSize;
    static readonly int GetTimecodeIn_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.Timecode GetTimecodeIn()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetTimecodeIn_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetTimecodeIn_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.Timecode returnValue;
            returnValue = UnrealSharp.CoreUObject.TimecodeMarshaler.FromNative(IntPtr.Add(ParamsBuffer, GetTimecodeIn_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/TakesCore.TakeMetaData:GetTakeNumber
    static readonly IntPtr GetTakeNumber_NativeFunction;
    static readonly int GetTakeNumber_ParamsSize;
    static readonly int GetTakeNumber_ReturnValue_Offset;
    
    public int GetTakeNumber()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetTakeNumber_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetTakeNumber_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetTakeNumber_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/TakesCore.TakeMetaData:GetSlate
    static readonly IntPtr GetSlate_NativeFunction;
    static readonly int GetSlate_ParamsSize;
    static readonly int GetSlate_ReturnValue_Offset;
    
    public string GetSlate()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSlate_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSlate_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetSlate_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/TakesCore.TakeMetaData:GetPresetOrigin
    static readonly IntPtr GetPresetOrigin_NativeFunction;
    static readonly int GetPresetOrigin_ParamsSize;
    static readonly int GetPresetOrigin_ReturnValue_Offset;
    
    public UnrealSharp.TakesCore.TakePreset GetPresetOrigin()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetPresetOrigin_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetPresetOrigin_NativeFunction, ParamsBuffer);
            
            UnrealSharp.TakesCore.TakePreset returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.TakesCore.TakePreset>.FromNative(IntPtr.Add(ParamsBuffer, GetPresetOrigin_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/TakesCore.TakeMetaData:GetLevelPath
    static readonly IntPtr GetLevelPath_NativeFunction;
    static readonly int GetLevelPath_ParamsSize;
    static readonly int GetLevelPath_ReturnValue_Offset;
    
    public string GetLevelPath()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetLevelPath_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetLevelPath_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetLevelPath_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/TakesCore.TakeMetaData:GetLevelOrigin
    static readonly IntPtr GetLevelOrigin_NativeFunction;
    static readonly int GetLevelOrigin_ParamsSize;
    static readonly int GetLevelOrigin_ReturnValue_Offset;
    
    public UnrealSharp.Engine.Level GetLevelOrigin()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetLevelOrigin_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetLevelOrigin_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.Level returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.Level>.FromNative(IntPtr.Add(ParamsBuffer, GetLevelOrigin_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/TakesCore.TakeMetaData:GetFrameRateFromTimecode
    static readonly IntPtr GetFrameRateFromTimecode_NativeFunction;
    static readonly int GetFrameRateFromTimecode_ParamsSize;
    static readonly int GetFrameRateFromTimecode_ReturnValue_Offset;
    
    public bool GetFrameRateFromTimecode()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetFrameRateFromTimecode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetFrameRateFromTimecode_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetFrameRateFromTimecode_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/TakesCore.TakeMetaData:GetFrameRate
    static readonly IntPtr GetFrameRate_NativeFunction;
    static readonly int GetFrameRate_ParamsSize;
    static readonly int GetFrameRate_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.FrameRate GetFrameRate()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetFrameRate_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetFrameRate_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.FrameRate returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.CoreUObject.FrameRate>.FromNative(IntPtr.Add(ParamsBuffer, GetFrameRate_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/TakesCore.TakeMetaData:GetDuration
    static readonly IntPtr GetDuration_NativeFunction;
    static readonly int GetDuration_ParamsSize;
    static readonly int GetDuration_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.FrameTime GetDuration()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetDuration_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetDuration_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.FrameTime returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.CoreUObject.FrameTime>.FromNative(IntPtr.Add(ParamsBuffer, GetDuration_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/TakesCore.TakeMetaData:GetDescription
    static readonly IntPtr GetDescription_NativeFunction;
    static readonly int GetDescription_ParamsSize;
    static readonly int GetDescription_ReturnValue_Offset;
    
    public string GetDescription()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetDescription_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetDescription_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetDescription_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/TakesCore.TakeMetaData:GenerateAssetPath
    static readonly IntPtr GenerateAssetPath_NativeFunction;
    static readonly int GenerateAssetPath_ParamsSize;
    static readonly int GenerateAssetPath_PathFormatString_Offset;
    static readonly int GenerateAssetPath_ReturnValue_Offset;
    
    public string GenerateAssetPath(string pathFormatString)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GenerateAssetPath_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr PathFormatString_NativePtr = IntPtr.Add(ParamsBuffer,GenerateAssetPath_PathFormatString_Offset);
            StringMarshaller.ToNative(PathFormatString_NativePtr,0,null,pathFormatString);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GenerateAssetPath_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GenerateAssetPath_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            StringMarshaller.DestructInstance(PathFormatString_NativePtr, 0);
            return returnValue;
        }
    }
    
    
}
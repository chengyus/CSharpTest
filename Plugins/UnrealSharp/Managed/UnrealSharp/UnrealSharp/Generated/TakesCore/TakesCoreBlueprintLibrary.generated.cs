// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.TakesCore;

[UClass]
public partial class TakesCoreBlueprintLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static TakesCoreBlueprintLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("TakesCoreBlueprintLibrary");
        
        
        FindTakes_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "FindTakes");
        FindTakes_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(FindTakes_NativeFunction);
        FindTakes_Slate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(FindTakes_NativeFunction, "Slate");
        FindTakes_TakeNumber_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(FindTakes_NativeFunction, "TakeNumber");
        FindTakes_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(FindTakes_NativeFunction, "ReturnValue");
        FindTakes_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(FindTakes_NativeFunction, "ReturnValue");
        ComputeNextTakeNumber_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ComputeNextTakeNumber");
        ComputeNextTakeNumber_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ComputeNextTakeNumber_NativeFunction);
        ComputeNextTakeNumber_Slate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ComputeNextTakeNumber_NativeFunction, "Slate");
        ComputeNextTakeNumber_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ComputeNextTakeNumber_NativeFunction, "ReturnValue");
        
        
    }
    
    protected TakesCoreBlueprintLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/TakesCore.TakesCoreBlueprintLibrary:FindTakes
    static readonly IntPtr FindTakes_NativeFunction;
    static readonly int FindTakes_ParamsSize;
    static readonly int FindTakes_Slate_Offset;
    static readonly int FindTakes_TakeNumber_Offset;
    static readonly int FindTakes_ReturnValue_Offset;
    static readonly int FindTakes_ReturnValue_ElementSize;
    
    public static System.Collections.Generic.IList<UnrealSharp.CoreUObject.AssetData> FindTakes(string slate, int takeNumber = 0)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[FindTakes_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr Slate_NativePtr = IntPtr.Add(ParamsBuffer,FindTakes_Slate_Offset);
            StringMarshaller.ToNative(Slate_NativePtr,0,null,slate);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, FindTakes_TakeNumber_Offset), 0, null, takeNumber);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, FindTakes_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.CoreUObject.AssetData> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, FindTakes_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.AssetData> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.AssetData> (1, UnrealSharp.CoreUObject.AssetDataMarshaler.ToNative, UnrealSharp.CoreUObject.AssetDataMarshaler.FromNative, FindTakes_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.AssetData>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            StringMarshaller.DestructInstance(Slate_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/TakesCore.TakesCoreBlueprintLibrary:ComputeNextTakeNumber
    static readonly IntPtr ComputeNextTakeNumber_NativeFunction;
    static readonly int ComputeNextTakeNumber_ParamsSize;
    static readonly int ComputeNextTakeNumber_Slate_Offset;
    static readonly int ComputeNextTakeNumber_ReturnValue_Offset;
    
    public static int ComputeNextTakeNumber(string slate)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ComputeNextTakeNumber_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr Slate_NativePtr = IntPtr.Add(ParamsBuffer,ComputeNextTakeNumber_Slate_Offset);
            StringMarshaller.ToNative(Slate_NativePtr,0,null,slate);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ComputeNextTakeNumber_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, ComputeNextTakeNumber_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(Slate_NativePtr, 0);
            return returnValue;
        }
    }
    
    
}
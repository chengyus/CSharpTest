// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.TemplateSequence;

[UClass]
public partial class TemplateSequencePlayer : UnrealSharp.MovieScene.MovieSceneSequencePlayer
{
    
    static readonly IntPtr NativeClassPtr;
    static TemplateSequencePlayer()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("TemplateSequencePlayer");
        
        
        CreateTemplateSequencePlayer_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CreateTemplateSequencePlayer");
        CreateTemplateSequencePlayer_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(CreateTemplateSequencePlayer_NativeFunction);
        CreateTemplateSequencePlayer_WorldContextObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CreateTemplateSequencePlayer_NativeFunction, "WorldContextObject");
        CreateTemplateSequencePlayer_TemplateSequence_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CreateTemplateSequencePlayer_NativeFunction, "TemplateSequence");
        CreateTemplateSequencePlayer_Settings_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CreateTemplateSequencePlayer_NativeFunction, "Settings");
        CreateTemplateSequencePlayer_OutActor_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CreateTemplateSequencePlayer_NativeFunction, "OutActor");
        CreateTemplateSequencePlayer_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(CreateTemplateSequencePlayer_NativeFunction, "ReturnValue");
        
        
    }
    
    protected TemplateSequencePlayer(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/TemplateSequence.TemplateSequencePlayer:CreateTemplateSequencePlayer
    static readonly IntPtr CreateTemplateSequencePlayer_NativeFunction;
    static readonly int CreateTemplateSequencePlayer_ParamsSize;
    static readonly int CreateTemplateSequencePlayer_WorldContextObject_Offset;
    static readonly int CreateTemplateSequencePlayer_TemplateSequence_Offset;
    static readonly int CreateTemplateSequencePlayer_Settings_Offset;
    static readonly int CreateTemplateSequencePlayer_OutActor_Offset;
    static readonly int CreateTemplateSequencePlayer_ReturnValue_Offset;
    
    public static UnrealSharp.TemplateSequence.TemplateSequencePlayer CreateTemplateSequencePlayer(UnrealSharp.CoreUObject.Object worldContextObject, UnrealSharp.TemplateSequence.TemplateSequence templateSequence, UnrealSharp.MovieScene.MovieSceneSequencePlaybackSettings settings, out UnrealSharp.TemplateSequence.TemplateSequenceActor outActor)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[CreateTemplateSequencePlayer_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, CreateTemplateSequencePlayer_WorldContextObject_Offset), 0, null, worldContextObject);
            ObjectMarshaller<UnrealSharp.TemplateSequence.TemplateSequence>.ToNative(IntPtr.Add(ParamsBuffer, CreateTemplateSequencePlayer_TemplateSequence_Offset), 0, null, templateSequence);
            UnrealSharp.MovieScene.MovieSceneSequencePlaybackSettingsMarshaler.ToNative(IntPtr.Add(ParamsBuffer, CreateTemplateSequencePlayer_Settings_Offset), 0, null, settings);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, CreateTemplateSequencePlayer_NativeFunction, ParamsBuffer);
            
            outActor = ObjectMarshaller<UnrealSharp.TemplateSequence.TemplateSequenceActor>.FromNative(IntPtr.Add(ParamsBuffer, CreateTemplateSequencePlayer_OutActor_Offset), 0, null);
            UnrealSharp.TemplateSequence.TemplateSequencePlayer returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.TemplateSequence.TemplateSequencePlayer>.FromNative(IntPtr.Add(ParamsBuffer, CreateTemplateSequencePlayer_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.UMG;

[UClass]
public partial class Button : UnrealSharp.UMG.ContentWidget
{
    
    static Button()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("Button");
        
        WidgetStyle_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "WidgetStyle");
        ColorAndOpacity_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ColorAndOpacity");
        BackgroundColor_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "BackgroundColor");
        ClickMethod_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ClickMethod");
        TouchMethod_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "TouchMethod");
        PressMethod_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "PressMethod");
        IsFocusable_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "IsFocusable");
        
        SetTouchMethod_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetTouchMethod");
        SetTouchMethod_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetTouchMethod_NativeFunction);
        SetTouchMethod_InTouchMethod_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetTouchMethod_NativeFunction, "InTouchMethod");
        SetStyle_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetStyle");
        SetStyle_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetStyle_NativeFunction);
        SetStyle_InStyle_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetStyle_NativeFunction, "InStyle");
        SetPressMethod_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPressMethod");
        SetPressMethod_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPressMethod_NativeFunction);
        SetPressMethod_InPressMethod_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPressMethod_NativeFunction, "InPressMethod");
        SetColorAndOpacity_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetColorAndOpacity");
        SetColorAndOpacity_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetColorAndOpacity_NativeFunction);
        SetColorAndOpacity_InColorAndOpacity_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetColorAndOpacity_NativeFunction, "InColorAndOpacity");
        SetClickMethod_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetClickMethod");
        SetClickMethod_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetClickMethod_NativeFunction);
        SetClickMethod_InClickMethod_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetClickMethod_NativeFunction, "InClickMethod");
        SetBackgroundColor_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetBackgroundColor");
        SetBackgroundColor_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetBackgroundColor_NativeFunction);
        SetBackgroundColor_InBackgroundColor_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetBackgroundColor_NativeFunction, "InBackgroundColor");
        IsPressed_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsPressed");
        IsPressed_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsPressed_NativeFunction);
        IsPressed_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsPressed_NativeFunction, "ReturnValue");
        
        
    }
    
    protected Button(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // StructProperty /Script/UMG.Button:WidgetStyle
    static readonly int WidgetStyle_Offset;
    
    public UnrealSharp.SlateCore.ButtonStyle WidgetStyle
    {
        get
        {
            CheckObjectForValidity();
            return UnrealSharp.SlateCore.ButtonStyleMarshaler.FromNative(IntPtr.Add(NativeObject, WidgetStyle_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            UnrealSharp.SlateCore.ButtonStyleMarshaler.ToNative(IntPtr.Add(NativeObject, WidgetStyle_Offset), 0, this, value);
        }
    }
    
    // StructProperty /Script/UMG.Button:ColorAndOpacity
    static readonly int ColorAndOpacity_Offset;
    
    public UnrealSharp.CoreUObject.LinearColor ColorAndOpacity
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.FromNative(IntPtr.Add(NativeObject, ColorAndOpacity_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.ToNative(IntPtr.Add(NativeObject, ColorAndOpacity_Offset), 0, this, value);
        }
    }
    
    // StructProperty /Script/UMG.Button:BackgroundColor
    static readonly int BackgroundColor_Offset;
    
    public UnrealSharp.CoreUObject.LinearColor BackgroundColor
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.FromNative(IntPtr.Add(NativeObject, BackgroundColor_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.ToNative(IntPtr.Add(NativeObject, BackgroundColor_Offset), 0, this, value);
        }
    }
    
    // ByteProperty /Script/UMG.Button:ClickMethod
    static readonly int ClickMethod_Offset;
    
    public UnrealSharp.SlateCore.EButtonClickMethod ClickMethod
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.SlateCore.EButtonClickMethod>.FromNative(IntPtr.Add(NativeObject, ClickMethod_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.SlateCore.EButtonClickMethod>.ToNative(IntPtr.Add(NativeObject, ClickMethod_Offset), 0, this, value);
        }
    }
    
    // ByteProperty /Script/UMG.Button:TouchMethod
    static readonly int TouchMethod_Offset;
    
    public UnrealSharp.SlateCore.EButtonTouchMethod TouchMethod
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.SlateCore.EButtonTouchMethod>.FromNative(IntPtr.Add(NativeObject, TouchMethod_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.SlateCore.EButtonTouchMethod>.ToNative(IntPtr.Add(NativeObject, TouchMethod_Offset), 0, this, value);
        }
    }
    
    // ByteProperty /Script/UMG.Button:PressMethod
    static readonly int PressMethod_Offset;
    
    public UnrealSharp.SlateCore.EButtonPressMethod PressMethod
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.SlateCore.EButtonPressMethod>.FromNative(IntPtr.Add(NativeObject, PressMethod_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.SlateCore.EButtonPressMethod>.ToNative(IntPtr.Add(NativeObject, PressMethod_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/UMG.Button:IsFocusable
    static readonly int IsFocusable_Offset;
    
    public bool IsFocusable
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, IsFocusable_Offset), 0, this);
        }
    }
    
    // Function /Script/UMG.Button:SetTouchMethod
    static readonly IntPtr SetTouchMethod_NativeFunction;
    static readonly int SetTouchMethod_ParamsSize;
    static readonly int SetTouchMethod_InTouchMethod_Offset;
    
    public void SetTouchMethod(UnrealSharp.SlateCore.EButtonTouchMethod inTouchMethod)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetTouchMethod_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.SlateCore.EButtonTouchMethod>.ToNative(IntPtr.Add(ParamsBuffer, SetTouchMethod_InTouchMethod_Offset), 0, null, inTouchMethod);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetTouchMethod_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.Button:SetStyle
    static readonly IntPtr SetStyle_NativeFunction;
    static readonly int SetStyle_ParamsSize;
    static readonly int SetStyle_InStyle_Offset;
    
    public void SetStyle(UnrealSharp.SlateCore.ButtonStyle inStyle)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetStyle_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.ButtonStyleMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetStyle_InStyle_Offset), 0, null, inStyle);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetStyle_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/UMG.Button:SetPressMethod
    static readonly IntPtr SetPressMethod_NativeFunction;
    static readonly int SetPressMethod_ParamsSize;
    static readonly int SetPressMethod_InPressMethod_Offset;
    
    public void SetPressMethod(UnrealSharp.SlateCore.EButtonPressMethod inPressMethod)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPressMethod_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.SlateCore.EButtonPressMethod>.ToNative(IntPtr.Add(ParamsBuffer, SetPressMethod_InPressMethod_Offset), 0, null, inPressMethod);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPressMethod_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.Button:SetColorAndOpacity
    static readonly IntPtr SetColorAndOpacity_NativeFunction;
    static readonly int SetColorAndOpacity_ParamsSize;
    static readonly int SetColorAndOpacity_InColorAndOpacity_Offset;
    
    public void SetColorAndOpacity(UnrealSharp.CoreUObject.LinearColor inColorAndOpacity)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetColorAndOpacity_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.ToNative(IntPtr.Add(ParamsBuffer, SetColorAndOpacity_InColorAndOpacity_Offset), 0, null, inColorAndOpacity);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetColorAndOpacity_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.Button:SetClickMethod
    static readonly IntPtr SetClickMethod_NativeFunction;
    static readonly int SetClickMethod_ParamsSize;
    static readonly int SetClickMethod_InClickMethod_Offset;
    
    public void SetClickMethod(UnrealSharp.SlateCore.EButtonClickMethod inClickMethod)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetClickMethod_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.SlateCore.EButtonClickMethod>.ToNative(IntPtr.Add(ParamsBuffer, SetClickMethod_InClickMethod_Offset), 0, null, inClickMethod);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetClickMethod_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.Button:SetBackgroundColor
    static readonly IntPtr SetBackgroundColor_NativeFunction;
    static readonly int SetBackgroundColor_ParamsSize;
    static readonly int SetBackgroundColor_InBackgroundColor_Offset;
    
    public void SetBackgroundColor(UnrealSharp.CoreUObject.LinearColor inBackgroundColor)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetBackgroundColor_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.CoreUObject.LinearColor>.ToNative(IntPtr.Add(ParamsBuffer, SetBackgroundColor_InBackgroundColor_Offset), 0, null, inBackgroundColor);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetBackgroundColor_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.Button:IsPressed
    static readonly IntPtr IsPressed_NativeFunction;
    static readonly int IsPressed_ParamsSize;
    static readonly int IsPressed_ReturnValue_Offset;
    
    public bool IsPressed()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsPressed_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsPressed_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsPressed_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.UMG;

[UClass]
public partial class CheckBox : UnrealSharp.UMG.ContentWidget
{
    
    static CheckBox()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("CheckBox");
        
        CheckedState_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "CheckedState");
        WidgetStyle_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "WidgetStyle");
        HorizontalAlignment_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "HorizontalAlignment");
        ClickMethod_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ClickMethod");
        TouchMethod_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "TouchMethod");
        PressMethod_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "PressMethod");
        IsFocusable_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "IsFocusable");
        
        SetTouchMethod_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetTouchMethod");
        SetTouchMethod_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetTouchMethod_NativeFunction);
        SetTouchMethod_InTouchMethod_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetTouchMethod_NativeFunction, "InTouchMethod");
        SetPressMethod_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPressMethod");
        SetPressMethod_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPressMethod_NativeFunction);
        SetPressMethod_InPressMethod_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPressMethod_NativeFunction, "InPressMethod");
        SetIsChecked_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetIsChecked");
        SetIsChecked_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetIsChecked_NativeFunction);
        SetIsChecked_InIsChecked_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetIsChecked_NativeFunction, "InIsChecked");
        SetClickMethod_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetClickMethod");
        SetClickMethod_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetClickMethod_NativeFunction);
        SetClickMethod_InClickMethod_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetClickMethod_NativeFunction, "InClickMethod");
        SetCheckedState_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetCheckedState");
        SetCheckedState_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetCheckedState_NativeFunction);
        SetCheckedState_InCheckedState_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetCheckedState_NativeFunction, "InCheckedState");
        IsPressed_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsPressed");
        IsPressed_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsPressed_NativeFunction);
        IsPressed_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsPressed_NativeFunction, "ReturnValue");
        IsChecked_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsChecked");
        IsChecked_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsChecked_NativeFunction);
        IsChecked_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsChecked_NativeFunction, "ReturnValue");
        GetCheckedState_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetCheckedState");
        GetCheckedState_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetCheckedState_NativeFunction);
        GetCheckedState_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetCheckedState_NativeFunction, "ReturnValue");
        
        
    }
    
    protected CheckBox(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // EnumProperty /Script/UMG.CheckBox:CheckedState
    static readonly int CheckedState_Offset;
    
    public UnrealSharp.SlateCore.ECheckBoxState CheckedState
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.SlateCore.ECheckBoxState>.FromNative(IntPtr.Add(NativeObject, CheckedState_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.SlateCore.ECheckBoxState>.ToNative(IntPtr.Add(NativeObject, CheckedState_Offset), 0, this, value);
        }
    }
    
    // StructProperty /Script/UMG.CheckBox:WidgetStyle
    static readonly int WidgetStyle_Offset;
    
    public UnrealSharp.SlateCore.CheckBoxStyle WidgetStyle
    {
        get
        {
            CheckObjectForValidity();
            return UnrealSharp.SlateCore.CheckBoxStyleMarshaler.FromNative(IntPtr.Add(NativeObject, WidgetStyle_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            UnrealSharp.SlateCore.CheckBoxStyleMarshaler.ToNative(IntPtr.Add(NativeObject, WidgetStyle_Offset), 0, this, value);
        }
    }
    
    // ByteProperty /Script/UMG.CheckBox:HorizontalAlignment
    static readonly int HorizontalAlignment_Offset;
    
    public UnrealSharp.SlateCore.EHorizontalAlignment HorizontalAlignment
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.SlateCore.EHorizontalAlignment>.FromNative(IntPtr.Add(NativeObject, HorizontalAlignment_Offset), 0, this);
        }
    }
    
    // ByteProperty /Script/UMG.CheckBox:ClickMethod
    static readonly int ClickMethod_Offset;
    
    public UnrealSharp.SlateCore.EButtonClickMethod ClickMethod
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.SlateCore.EButtonClickMethod>.FromNative(IntPtr.Add(NativeObject, ClickMethod_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.SlateCore.EButtonClickMethod>.ToNative(IntPtr.Add(NativeObject, ClickMethod_Offset), 0, this, value);
        }
    }
    
    // ByteProperty /Script/UMG.CheckBox:TouchMethod
    static readonly int TouchMethod_Offset;
    
    public UnrealSharp.SlateCore.EButtonTouchMethod TouchMethod
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.SlateCore.EButtonTouchMethod>.FromNative(IntPtr.Add(NativeObject, TouchMethod_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.SlateCore.EButtonTouchMethod>.ToNative(IntPtr.Add(NativeObject, TouchMethod_Offset), 0, this, value);
        }
    }
    
    // ByteProperty /Script/UMG.CheckBox:PressMethod
    static readonly int PressMethod_Offset;
    
    public UnrealSharp.SlateCore.EButtonPressMethod PressMethod
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.SlateCore.EButtonPressMethod>.FromNative(IntPtr.Add(NativeObject, PressMethod_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.SlateCore.EButtonPressMethod>.ToNative(IntPtr.Add(NativeObject, PressMethod_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/UMG.CheckBox:IsFocusable
    static readonly int IsFocusable_Offset;
    
    public bool IsFocusable
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, IsFocusable_Offset), 0, this);
        }
    }
    
    // Function /Script/UMG.CheckBox:SetTouchMethod
    static readonly IntPtr SetTouchMethod_NativeFunction;
    static readonly int SetTouchMethod_ParamsSize;
    static readonly int SetTouchMethod_InTouchMethod_Offset;
    
    public void SetTouchMethod(UnrealSharp.SlateCore.EButtonTouchMethod inTouchMethod)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetTouchMethod_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.SlateCore.EButtonTouchMethod>.ToNative(IntPtr.Add(ParamsBuffer, SetTouchMethod_InTouchMethod_Offset), 0, null, inTouchMethod);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetTouchMethod_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.CheckBox:SetPressMethod
    static readonly IntPtr SetPressMethod_NativeFunction;
    static readonly int SetPressMethod_ParamsSize;
    static readonly int SetPressMethod_InPressMethod_Offset;
    
    public void SetPressMethod(UnrealSharp.SlateCore.EButtonPressMethod inPressMethod)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPressMethod_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.SlateCore.EButtonPressMethod>.ToNative(IntPtr.Add(ParamsBuffer, SetPressMethod_InPressMethod_Offset), 0, null, inPressMethod);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPressMethod_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.CheckBox:SetIsChecked
    static readonly IntPtr SetIsChecked_NativeFunction;
    static readonly int SetIsChecked_ParamsSize;
    static readonly int SetIsChecked_InIsChecked_Offset;
    
    public void SetIsChecked(bool inIsChecked)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetIsChecked_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetIsChecked_InIsChecked_Offset), 0, null, inIsChecked);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetIsChecked_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.CheckBox:SetClickMethod
    static readonly IntPtr SetClickMethod_NativeFunction;
    static readonly int SetClickMethod_ParamsSize;
    static readonly int SetClickMethod_InClickMethod_Offset;
    
    public void SetClickMethod(UnrealSharp.SlateCore.EButtonClickMethod inClickMethod)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetClickMethod_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.SlateCore.EButtonClickMethod>.ToNative(IntPtr.Add(ParamsBuffer, SetClickMethod_InClickMethod_Offset), 0, null, inClickMethod);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetClickMethod_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.CheckBox:SetCheckedState
    static readonly IntPtr SetCheckedState_NativeFunction;
    static readonly int SetCheckedState_ParamsSize;
    static readonly int SetCheckedState_InCheckedState_Offset;
    
    public void SetCheckedState(UnrealSharp.SlateCore.ECheckBoxState inCheckedState)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetCheckedState_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.SlateCore.ECheckBoxState>.ToNative(IntPtr.Add(ParamsBuffer, SetCheckedState_InCheckedState_Offset), 0, null, inCheckedState);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetCheckedState_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.CheckBox:IsPressed
    static readonly IntPtr IsPressed_NativeFunction;
    static readonly int IsPressed_ParamsSize;
    static readonly int IsPressed_ReturnValue_Offset;
    
    public bool IsPressed()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsPressed_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsPressed_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsPressed_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.CheckBox:IsChecked
    static readonly IntPtr IsChecked_NativeFunction;
    static readonly int IsChecked_ParamsSize;
    static readonly int IsChecked_ReturnValue_Offset;
    
    public bool IsChecked()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsChecked_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsChecked_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsChecked_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.CheckBox:GetCheckedState
    static readonly IntPtr GetCheckedState_NativeFunction;
    static readonly int GetCheckedState_ParamsSize;
    static readonly int GetCheckedState_ReturnValue_Offset;
    
    public UnrealSharp.SlateCore.ECheckBoxState GetCheckedState()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetCheckedState_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetCheckedState_NativeFunction, ParamsBuffer);
            
            UnrealSharp.SlateCore.ECheckBoxState returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.SlateCore.ECheckBoxState>.FromNative(IntPtr.Add(ParamsBuffer, GetCheckedState_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
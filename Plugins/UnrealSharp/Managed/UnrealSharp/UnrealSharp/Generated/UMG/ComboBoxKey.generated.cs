// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.UMG;

[UClass]
public partial class ComboBoxKey : UnrealSharp.UMG.Widget
{
    
    static ComboBoxKey()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("ComboBoxKey");
        
        WidgetStyle_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "WidgetStyle");
        ItemStyle_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ItemStyle");
        ScrollBarStyle_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ScrollBarStyle");
        ForegroundColor_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ForegroundColor");
        ContentPadding_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ContentPadding");
        MaxListHeight_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "MaxListHeight");
        bHasDownArrow_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bHasDownArrow");
        bEnableGamepadNavigationMode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bEnableGamepadNavigationMode");
        bIsFocusable_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bIsFocusable");
        
        SetSelectedOption_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSelectedOption");
        SetSelectedOption_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSelectedOption_NativeFunction);
        SetSelectedOption_Option_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSelectedOption_NativeFunction, "Option");
        RemoveOption_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveOption");
        RemoveOption_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveOption_NativeFunction);
        RemoveOption_Option_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveOption_NativeFunction, "Option");
        RemoveOption_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveOption_NativeFunction, "ReturnValue");
        IsOpen_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsOpen");
        IsOpen_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsOpen_NativeFunction);
        IsOpen_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsOpen_NativeFunction, "ReturnValue");
        GetSelectedOption_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSelectedOption");
        GetSelectedOption_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSelectedOption_NativeFunction);
        GetSelectedOption_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSelectedOption_NativeFunction, "ReturnValue");
        ClearSelection_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ClearSelection");
        ClearOptions_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ClearOptions");
        AddOption_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddOption");
        AddOption_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddOption_NativeFunction);
        AddOption_Option_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddOption_NativeFunction, "Option");
        
        
    }
    
    protected ComboBoxKey(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // StructProperty /Script/UMG.ComboBoxKey:WidgetStyle
    static readonly int WidgetStyle_Offset;
    
    public UnrealSharp.SlateCore.ComboBoxStyle WidgetStyle
    {
        get
        {
            CheckObjectForValidity();
            return UnrealSharp.SlateCore.ComboBoxStyleMarshaler.FromNative(IntPtr.Add(NativeObject, WidgetStyle_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            UnrealSharp.SlateCore.ComboBoxStyleMarshaler.ToNative(IntPtr.Add(NativeObject, WidgetStyle_Offset), 0, this, value);
        }
    }
    
    // StructProperty /Script/UMG.ComboBoxKey:ItemStyle
    static readonly int ItemStyle_Offset;
    
    public UnrealSharp.SlateCore.TableRowStyle ItemStyle
    {
        get
        {
            CheckObjectForValidity();
            return UnrealSharp.SlateCore.TableRowStyleMarshaler.FromNative(IntPtr.Add(NativeObject, ItemStyle_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            UnrealSharp.SlateCore.TableRowStyleMarshaler.ToNative(IntPtr.Add(NativeObject, ItemStyle_Offset), 0, this, value);
        }
    }
    
    // StructProperty /Script/UMG.ComboBoxKey:ScrollBarStyle
    static readonly int ScrollBarStyle_Offset;
    
    public UnrealSharp.SlateCore.ScrollBarStyle ScrollBarStyle
    {
        get
        {
            CheckObjectForValidity();
            return UnrealSharp.SlateCore.ScrollBarStyleMarshaler.FromNative(IntPtr.Add(NativeObject, ScrollBarStyle_Offset), 0, this);
        }
    }
    
    // StructProperty /Script/UMG.ComboBoxKey:ForegroundColor
    static readonly int ForegroundColor_Offset;
    
    public UnrealSharp.SlateCore.SlateColor ForegroundColor
    {
        get
        {
            CheckObjectForValidity();
            return UnrealSharp.SlateCore.SlateColorMarshaler.FromNative(IntPtr.Add(NativeObject, ForegroundColor_Offset), 0, this);
        }
    }
    
    // StructProperty /Script/UMG.ComboBoxKey:ContentPadding
    static readonly int ContentPadding_Offset;
    
    public UnrealSharp.SlateCore.Margin ContentPadding
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.SlateCore.Margin>.FromNative(IntPtr.Add(NativeObject, ContentPadding_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.SlateCore.Margin>.ToNative(IntPtr.Add(NativeObject, ContentPadding_Offset), 0, this, value);
        }
    }
    
    // FloatProperty /Script/UMG.ComboBoxKey:MaxListHeight
    static readonly int MaxListHeight_Offset;
    
    public float MaxListHeight
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, MaxListHeight_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, MaxListHeight_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/UMG.ComboBoxKey:bHasDownArrow
    static readonly int bHasDownArrow_Offset;
    
    public bool bHasDownArrow
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bHasDownArrow_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, bHasDownArrow_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/UMG.ComboBoxKey:bEnableGamepadNavigationMode
    static readonly int bEnableGamepadNavigationMode_Offset;
    
    public bool bEnableGamepadNavigationMode
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bEnableGamepadNavigationMode_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, bEnableGamepadNavigationMode_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/UMG.ComboBoxKey:bIsFocusable
    static readonly int bIsFocusable_Offset;
    
    public bool bIsFocusable
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bIsFocusable_Offset), 0, this);
        }
    }
    
    // Function /Script/UMG.ComboBoxKey:SetSelectedOption
    static readonly IntPtr SetSelectedOption_NativeFunction;
    static readonly int SetSelectedOption_ParamsSize;
    static readonly int SetSelectedOption_Option_Offset;
    
    public void SetSelectedOption(Name option)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSelectedOption_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, SetSelectedOption_Option_Offset), 0, null, option);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSelectedOption_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.ComboBoxKey:RemoveOption
    static readonly IntPtr RemoveOption_NativeFunction;
    static readonly int RemoveOption_ParamsSize;
    static readonly int RemoveOption_Option_Offset;
    static readonly int RemoveOption_ReturnValue_Offset;
    
    public bool RemoveOption(Name option)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveOption_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, RemoveOption_Option_Offset), 0, null, option);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveOption_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, RemoveOption_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.ComboBoxKey:IsOpen
    static readonly IntPtr IsOpen_NativeFunction;
    static readonly int IsOpen_ParamsSize;
    static readonly int IsOpen_ReturnValue_Offset;
    
    public bool IsOpen()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsOpen_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsOpen_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsOpen_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.ComboBoxKey:GetSelectedOption
    static readonly IntPtr GetSelectedOption_NativeFunction;
    static readonly int GetSelectedOption_ParamsSize;
    static readonly int GetSelectedOption_ReturnValue_Offset;
    
    public Name GetSelectedOption()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSelectedOption_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetSelectedOption_NativeFunction, ParamsBuffer);
            
            Name returnValue;
            returnValue = BlittableMarshaller<Name>.FromNative(IntPtr.Add(ParamsBuffer, GetSelectedOption_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.ComboBoxKey:ClearSelection
    static readonly IntPtr ClearSelection_NativeFunction;
    
    public void ClearSelection()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ClearSelection_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/UMG.ComboBoxKey:ClearOptions
    static readonly IntPtr ClearOptions_NativeFunction;
    
    public void ClearOptions()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ClearOptions_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/UMG.ComboBoxKey:AddOption
    static readonly IntPtr AddOption_NativeFunction;
    static readonly int AddOption_ParamsSize;
    static readonly int AddOption_Option_Offset;
    
    public void AddOption(Name option)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddOption_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<Name>.ToNative(IntPtr.Add(ParamsBuffer, AddOption_Option_Offset), 0, null, option);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddOption_NativeFunction, ParamsBuffer);
            
        }
    }
    
    
}
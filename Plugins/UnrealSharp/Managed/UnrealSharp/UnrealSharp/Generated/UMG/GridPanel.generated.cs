// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.UMG;

[UClass]
public partial class GridPanel : UnrealSharp.UMG.PanelWidget
{
    
    static GridPanel()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("GridPanel");
        
        ColumnFill_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ColumnFill");
        ColumnFill_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "ColumnFill");
        RowFill_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "RowFill");
        RowFill_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "RowFill");
        
        SetRowFill_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetRowFill");
        SetRowFill_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetRowFill_NativeFunction);
        SetRowFill_RowIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetRowFill_NativeFunction, "RowIndex");
        SetRowFill_Coefficient_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetRowFill_NativeFunction, "Coefficient");
        SetColumnFill_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetColumnFill");
        SetColumnFill_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetColumnFill_NativeFunction);
        SetColumnFill_ColumnIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetColumnFill_NativeFunction, "ColumnIndex");
        SetColumnFill_Coefficient_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetColumnFill_NativeFunction, "Coefficient");
        AddChildToGrid_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddChildToGrid");
        AddChildToGrid_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddChildToGrid_NativeFunction);
        AddChildToGrid_Content_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddChildToGrid_NativeFunction, "Content");
        AddChildToGrid_InRow_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddChildToGrid_NativeFunction, "InRow");
        AddChildToGrid_InColumn_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddChildToGrid_NativeFunction, "InColumn");
        AddChildToGrid_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddChildToGrid_NativeFunction, "ReturnValue");
        
        
    }
    
    protected GridPanel(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ArrayProperty /Script/UMG.GridPanel:ColumnFill
    static readonly int ColumnFill_Offset;
    static readonly IntPtr ColumnFill_NativeProperty;
    UnrealArrayReadOnlyMarshaler<float> ColumnFill_Wrapper = null;
    
    public System.Collections.Generic.IReadOnlyList<float> ColumnFill
    {
        get
        {
            if(ColumnFill_Wrapper == null)
            {
                ColumnFill_Wrapper = new UnrealArrayReadOnlyMarshaler<float>(1, ColumnFill_NativeProperty, BlittableMarshaller<float>.ToNative, BlittableMarshaller<float>.FromNative);
            }
            
            return ColumnFill_Wrapper.FromNative(IntPtr.Add(NativeObject,ColumnFill_Offset),0,this);
        }
    }
    
    // ArrayProperty /Script/UMG.GridPanel:RowFill
    static readonly int RowFill_Offset;
    static readonly IntPtr RowFill_NativeProperty;
    UnrealArrayReadOnlyMarshaler<float> RowFill_Wrapper = null;
    
    public System.Collections.Generic.IReadOnlyList<float> RowFill
    {
        get
        {
            if(RowFill_Wrapper == null)
            {
                RowFill_Wrapper = new UnrealArrayReadOnlyMarshaler<float>(1, RowFill_NativeProperty, BlittableMarshaller<float>.ToNative, BlittableMarshaller<float>.FromNative);
            }
            
            return RowFill_Wrapper.FromNative(IntPtr.Add(NativeObject,RowFill_Offset),0,this);
        }
    }
    
    // Function /Script/UMG.GridPanel:SetRowFill
    static readonly IntPtr SetRowFill_NativeFunction;
    static readonly int SetRowFill_ParamsSize;
    static readonly int SetRowFill_RowIndex_Offset;
    static readonly int SetRowFill_Coefficient_Offset;
    
    public void SetRowFill(int rowIndex, float coefficient)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetRowFill_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetRowFill_RowIndex_Offset), 0, null, rowIndex);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetRowFill_Coefficient_Offset), 0, null, coefficient);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetRowFill_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.GridPanel:SetColumnFill
    static readonly IntPtr SetColumnFill_NativeFunction;
    static readonly int SetColumnFill_ParamsSize;
    static readonly int SetColumnFill_ColumnIndex_Offset;
    static readonly int SetColumnFill_Coefficient_Offset;
    
    public void SetColumnFill(int columnIndex, float coefficient)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetColumnFill_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetColumnFill_ColumnIndex_Offset), 0, null, columnIndex);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetColumnFill_Coefficient_Offset), 0, null, coefficient);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetColumnFill_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.GridPanel:AddChildToGrid
    static readonly IntPtr AddChildToGrid_NativeFunction;
    static readonly int AddChildToGrid_ParamsSize;
    static readonly int AddChildToGrid_Content_Offset;
    static readonly int AddChildToGrid_InRow_Offset;
    static readonly int AddChildToGrid_InColumn_Offset;
    static readonly int AddChildToGrid_ReturnValue_Offset;
    
    public UnrealSharp.UMG.GridSlot AddChildToGrid(UnrealSharp.UMG.Widget content, int inRow = 0, int inColumn = 0)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddChildToGrid_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.UMG.Widget>.ToNative(IntPtr.Add(ParamsBuffer, AddChildToGrid_Content_Offset), 0, null, content);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, AddChildToGrid_InRow_Offset), 0, null, inRow);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, AddChildToGrid_InColumn_Offset), 0, null, inColumn);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddChildToGrid_NativeFunction, ParamsBuffer);
            
            UnrealSharp.UMG.GridSlot returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.UMG.GridSlot>.FromNative(IntPtr.Add(ParamsBuffer, AddChildToGrid_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.UMG;

[UClass]
public partial class GridSlot : UnrealSharp.UMG.PanelSlot
{
    
    static GridSlot()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("GridSlot");
        
        Padding_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Padding");
        HorizontalAlignment_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "HorizontalAlignment");
        VerticalAlignment_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "VerticalAlignment");
        Row_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Row");
        RowSpan_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "RowSpan");
        Column_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Column");
        ColumnSpan_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ColumnSpan");
        Layer_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Layer");
        Nudge_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Nudge");
        
        SetVerticalAlignment_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetVerticalAlignment");
        SetVerticalAlignment_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetVerticalAlignment_NativeFunction);
        SetVerticalAlignment_InVerticalAlignment_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetVerticalAlignment_NativeFunction, "InVerticalAlignment");
        SetRowSpan_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetRowSpan");
        SetRowSpan_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetRowSpan_NativeFunction);
        SetRowSpan_InRowSpan_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetRowSpan_NativeFunction, "InRowSpan");
        SetRow_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetRow");
        SetRow_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetRow_NativeFunction);
        SetRow_InRow_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetRow_NativeFunction, "InRow");
        SetPadding_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetPadding");
        SetPadding_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetPadding_NativeFunction);
        SetPadding_InPadding_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetPadding_NativeFunction, "InPadding");
        SetNudge_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetNudge");
        SetNudge_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetNudge_NativeFunction);
        SetNudge_InNudge_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNudge_NativeFunction, "InNudge");
        SetLayer_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetLayer");
        SetLayer_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetLayer_NativeFunction);
        SetLayer_InLayer_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLayer_NativeFunction, "InLayer");
        SetHorizontalAlignment_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetHorizontalAlignment");
        SetHorizontalAlignment_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetHorizontalAlignment_NativeFunction);
        SetHorizontalAlignment_InHorizontalAlignment_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetHorizontalAlignment_NativeFunction, "InHorizontalAlignment");
        SetColumnSpan_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetColumnSpan");
        SetColumnSpan_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetColumnSpan_NativeFunction);
        SetColumnSpan_InColumnSpan_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetColumnSpan_NativeFunction, "InColumnSpan");
        SetColumn_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetColumn");
        SetColumn_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetColumn_NativeFunction);
        SetColumn_InColumn_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetColumn_NativeFunction, "InColumn");
        
        
    }
    
    protected GridSlot(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // StructProperty /Script/UMG.GridSlot:Padding
    static readonly int Padding_Offset;
    
    public UnrealSharp.SlateCore.Margin Padding
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.SlateCore.Margin>.FromNative(IntPtr.Add(NativeObject, Padding_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.SlateCore.Margin>.ToNative(IntPtr.Add(NativeObject, Padding_Offset), 0, this, value);
        }
    }
    
    // ByteProperty /Script/UMG.GridSlot:HorizontalAlignment
    static readonly int HorizontalAlignment_Offset;
    
    public UnrealSharp.SlateCore.EHorizontalAlignment HorizontalAlignment
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.SlateCore.EHorizontalAlignment>.FromNative(IntPtr.Add(NativeObject, HorizontalAlignment_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.SlateCore.EHorizontalAlignment>.ToNative(IntPtr.Add(NativeObject, HorizontalAlignment_Offset), 0, this, value);
        }
    }
    
    // ByteProperty /Script/UMG.GridSlot:VerticalAlignment
    static readonly int VerticalAlignment_Offset;
    
    public UnrealSharp.SlateCore.EVerticalAlignment VerticalAlignment
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.SlateCore.EVerticalAlignment>.FromNative(IntPtr.Add(NativeObject, VerticalAlignment_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.SlateCore.EVerticalAlignment>.ToNative(IntPtr.Add(NativeObject, VerticalAlignment_Offset), 0, this, value);
        }
    }
    
    // IntProperty /Script/UMG.GridSlot:Row
    static readonly int Row_Offset;
    
    public int Row
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<int>.FromNative(IntPtr.Add(NativeObject, Row_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<int>.ToNative(IntPtr.Add(NativeObject, Row_Offset), 0, this, value);
        }
    }
    
    // IntProperty /Script/UMG.GridSlot:RowSpan
    static readonly int RowSpan_Offset;
    
    public int RowSpan
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<int>.FromNative(IntPtr.Add(NativeObject, RowSpan_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<int>.ToNative(IntPtr.Add(NativeObject, RowSpan_Offset), 0, this, value);
        }
    }
    
    // IntProperty /Script/UMG.GridSlot:Column
    static readonly int Column_Offset;
    
    public int Column
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<int>.FromNative(IntPtr.Add(NativeObject, Column_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<int>.ToNative(IntPtr.Add(NativeObject, Column_Offset), 0, this, value);
        }
    }
    
    // IntProperty /Script/UMG.GridSlot:ColumnSpan
    static readonly int ColumnSpan_Offset;
    
    public int ColumnSpan
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<int>.FromNative(IntPtr.Add(NativeObject, ColumnSpan_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<int>.ToNative(IntPtr.Add(NativeObject, ColumnSpan_Offset), 0, this, value);
        }
    }
    
    // IntProperty /Script/UMG.GridSlot:Layer
    static readonly int Layer_Offset;
    
    public int Layer
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<int>.FromNative(IntPtr.Add(NativeObject, Layer_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<int>.ToNative(IntPtr.Add(NativeObject, Layer_Offset), 0, this, value);
        }
    }
    
    // StructProperty /Script/UMG.GridSlot:Nudge
    static readonly int Nudge_Offset;
    
    public System.DoubleNumerics.Vector2 Nudge
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(NativeObject, Nudge_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(NativeObject, Nudge_Offset), 0, this, value);
        }
    }
    
    // Function /Script/UMG.GridSlot:SetVerticalAlignment
    static readonly IntPtr SetVerticalAlignment_NativeFunction;
    static readonly int SetVerticalAlignment_ParamsSize;
    static readonly int SetVerticalAlignment_InVerticalAlignment_Offset;
    
    public void SetVerticalAlignment(UnrealSharp.SlateCore.EVerticalAlignment inVerticalAlignment)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetVerticalAlignment_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.SlateCore.EVerticalAlignment>.ToNative(IntPtr.Add(ParamsBuffer, SetVerticalAlignment_InVerticalAlignment_Offset), 0, null, inVerticalAlignment);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetVerticalAlignment_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.GridSlot:SetRowSpan
    static readonly IntPtr SetRowSpan_NativeFunction;
    static readonly int SetRowSpan_ParamsSize;
    static readonly int SetRowSpan_InRowSpan_Offset;
    
    public void SetRowSpan(int inRowSpan)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetRowSpan_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetRowSpan_InRowSpan_Offset), 0, null, inRowSpan);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetRowSpan_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.GridSlot:SetRow
    static readonly IntPtr SetRow_NativeFunction;
    static readonly int SetRow_ParamsSize;
    static readonly int SetRow_InRow_Offset;
    
    public void SetRow(int inRow)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetRow_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetRow_InRow_Offset), 0, null, inRow);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetRow_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.GridSlot:SetPadding
    static readonly IntPtr SetPadding_NativeFunction;
    static readonly int SetPadding_ParamsSize;
    static readonly int SetPadding_InPadding_Offset;
    
    public void SetPadding(UnrealSharp.SlateCore.Margin inPadding)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetPadding_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.SlateCore.Margin>.ToNative(IntPtr.Add(ParamsBuffer, SetPadding_InPadding_Offset), 0, null, inPadding);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetPadding_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.GridSlot:SetNudge
    static readonly IntPtr SetNudge_NativeFunction;
    static readonly int SetNudge_ParamsSize;
    static readonly int SetNudge_InNudge_Offset;
    
    public void SetNudge(System.DoubleNumerics.Vector2 inNudge)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetNudge_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, SetNudge_InNudge_Offset), 0, null, inNudge);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetNudge_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.GridSlot:SetLayer
    static readonly IntPtr SetLayer_NativeFunction;
    static readonly int SetLayer_ParamsSize;
    static readonly int SetLayer_InLayer_Offset;
    
    public void SetLayer(int inLayer)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetLayer_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetLayer_InLayer_Offset), 0, null, inLayer);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetLayer_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.GridSlot:SetHorizontalAlignment
    static readonly IntPtr SetHorizontalAlignment_NativeFunction;
    static readonly int SetHorizontalAlignment_ParamsSize;
    static readonly int SetHorizontalAlignment_InHorizontalAlignment_Offset;
    
    public void SetHorizontalAlignment(UnrealSharp.SlateCore.EHorizontalAlignment inHorizontalAlignment)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetHorizontalAlignment_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.SlateCore.EHorizontalAlignment>.ToNative(IntPtr.Add(ParamsBuffer, SetHorizontalAlignment_InHorizontalAlignment_Offset), 0, null, inHorizontalAlignment);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetHorizontalAlignment_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.GridSlot:SetColumnSpan
    static readonly IntPtr SetColumnSpan_NativeFunction;
    static readonly int SetColumnSpan_ParamsSize;
    static readonly int SetColumnSpan_InColumnSpan_Offset;
    
    public void SetColumnSpan(int inColumnSpan)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetColumnSpan_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetColumnSpan_InColumnSpan_Offset), 0, null, inColumnSpan);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetColumnSpan_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.GridSlot:SetColumn
    static readonly IntPtr SetColumn_NativeFunction;
    static readonly int SetColumn_ParamsSize;
    static readonly int SetColumn_InColumn_Offset;
    
    public void SetColumn(int inColumn)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetColumn_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetColumn_InColumn_Offset), 0, null, inColumn);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetColumn_NativeFunction, ParamsBuffer);
            
        }
    }
    
    
}
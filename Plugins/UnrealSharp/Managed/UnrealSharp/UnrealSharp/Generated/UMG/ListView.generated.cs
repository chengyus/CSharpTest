// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.UMG;

[UClass]
public partial class ListView : UnrealSharp.UMG.ListViewBase
{
    
    static ListView()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("ListView");
        
        WidgetStyle_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "WidgetStyle");
        ScrollBarStyle_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ScrollBarStyle");
        Orientation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Orientation");
        SelectionMode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "SelectionMode");
        ConsumeMouseWheel_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ConsumeMouseWheel");
        bClearSelectionOnClick_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bClearSelectionOnClick");
        bIsFocusable_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bIsFocusable");
        bReturnFocusToSelection_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bReturnFocusToSelection");
        EntrySpacing_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "EntrySpacing");
        HorizontalEntrySpacing_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "HorizontalEntrySpacing");
        VerticalEntrySpacing_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "VerticalEntrySpacing");
        
        SetSelectionMode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSelectionMode");
        SetSelectionMode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSelectionMode_NativeFunction);
        SetSelectionMode_SelectionMode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSelectionMode_NativeFunction, "SelectionMode");
        SetSelectedIndex_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSelectedIndex");
        SetSelectedIndex_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSelectedIndex_NativeFunction);
        SetSelectedIndex_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSelectedIndex_NativeFunction, "Index");
        ScrollIndexIntoView_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ScrollIndexIntoView");
        ScrollIndexIntoView_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ScrollIndexIntoView_NativeFunction);
        ScrollIndexIntoView_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ScrollIndexIntoView_NativeFunction, "Index");
        RemoveItem_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveItem");
        RemoveItem_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveItem_NativeFunction);
        RemoveItem_Item_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveItem_NativeFunction, "Item");
        NavigateToIndex_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "NavigateToIndex");
        NavigateToIndex_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(NavigateToIndex_NativeFunction);
        NavigateToIndex_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NavigateToIndex_NativeFunction, "Index");
        IsRefreshPending_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsRefreshPending");
        IsRefreshPending_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsRefreshPending_NativeFunction);
        IsRefreshPending_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsRefreshPending_NativeFunction, "ReturnValue");
        GetVerticalEntrySpacing_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetVerticalEntrySpacing");
        GetVerticalEntrySpacing_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetVerticalEntrySpacing_NativeFunction);
        GetVerticalEntrySpacing_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetVerticalEntrySpacing_NativeFunction, "ReturnValue");
        GetNumItems_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetNumItems");
        GetNumItems_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetNumItems_NativeFunction);
        GetNumItems_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetNumItems_NativeFunction, "ReturnValue");
        GetListItems_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetListItems");
        GetListItems_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetListItems_NativeFunction);
        GetListItems_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetListItems_NativeFunction, "ReturnValue");
        GetListItems_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetListItems_NativeFunction, "ReturnValue");
        GetItemAt_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetItemAt");
        GetItemAt_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetItemAt_NativeFunction);
        GetItemAt_Index_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetItemAt_NativeFunction, "Index");
        GetItemAt_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetItemAt_NativeFunction, "ReturnValue");
        GetIndexForItem_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetIndexForItem");
        GetIndexForItem_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetIndexForItem_NativeFunction);
        GetIndexForItem_Item_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetIndexForItem_NativeFunction, "Item");
        GetIndexForItem_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetIndexForItem_NativeFunction, "ReturnValue");
        GetHorizontalEntrySpacing_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetHorizontalEntrySpacing");
        GetHorizontalEntrySpacing_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetHorizontalEntrySpacing_NativeFunction);
        GetHorizontalEntrySpacing_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetHorizontalEntrySpacing_NativeFunction, "ReturnValue");
        ClearListItems_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ClearListItems");
        BP_SetSelectedItem_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "BP_SetSelectedItem");
        BP_SetSelectedItem_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(BP_SetSelectedItem_NativeFunction);
        BP_SetSelectedItem_Item_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BP_SetSelectedItem_NativeFunction, "Item");
        BP_SetListItems_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "BP_SetListItems");
        BP_SetListItems_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(BP_SetListItems_NativeFunction);
        BP_SetListItems_InListItems_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BP_SetListItems_NativeFunction, "InListItems");
        BP_SetListItems_InListItems_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(BP_SetListItems_NativeFunction, "InListItems");
        BP_SetItemSelection_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "BP_SetItemSelection");
        BP_SetItemSelection_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(BP_SetItemSelection_NativeFunction);
        BP_SetItemSelection_Item_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BP_SetItemSelection_NativeFunction, "Item");
        BP_SetItemSelection_bSelected_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BP_SetItemSelection_NativeFunction, "bSelected");
        BP_ScrollItemIntoView_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "BP_ScrollItemIntoView");
        BP_ScrollItemIntoView_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(BP_ScrollItemIntoView_NativeFunction);
        BP_ScrollItemIntoView_Item_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BP_ScrollItemIntoView_NativeFunction, "Item");
        BP_NavigateToItem_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "BP_NavigateToItem");
        BP_NavigateToItem_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(BP_NavigateToItem_NativeFunction);
        BP_NavigateToItem_Item_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BP_NavigateToItem_NativeFunction, "Item");
        BP_IsItemVisible_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "BP_IsItemVisible");
        BP_IsItemVisible_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(BP_IsItemVisible_NativeFunction);
        BP_IsItemVisible_Item_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BP_IsItemVisible_NativeFunction, "Item");
        BP_IsItemVisible_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BP_IsItemVisible_NativeFunction, "ReturnValue");
        BP_GetSelectedItems_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "BP_GetSelectedItems");
        BP_GetSelectedItems_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(BP_GetSelectedItems_NativeFunction);
        BP_GetSelectedItems_Items_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BP_GetSelectedItems_NativeFunction, "Items");
        BP_GetSelectedItems_Items_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(BP_GetSelectedItems_NativeFunction, "Items");
        BP_GetSelectedItems_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BP_GetSelectedItems_NativeFunction, "ReturnValue");
        BP_GetSelectedItem_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "BP_GetSelectedItem");
        BP_GetSelectedItem_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(BP_GetSelectedItem_NativeFunction);
        BP_GetSelectedItem_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BP_GetSelectedItem_NativeFunction, "ReturnValue");
        BP_GetNumItemsSelected_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "BP_GetNumItemsSelected");
        BP_GetNumItemsSelected_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(BP_GetNumItemsSelected_NativeFunction);
        BP_GetNumItemsSelected_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(BP_GetNumItemsSelected_NativeFunction, "ReturnValue");
        BP_ClearSelection_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "BP_ClearSelection");
        BP_CancelScrollIntoView_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "BP_CancelScrollIntoView");
        AddItem_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddItem");
        AddItem_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddItem_NativeFunction);
        AddItem_Item_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddItem_NativeFunction, "Item");
        
        
    }
    
    protected ListView(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // StructProperty /Script/UMG.ListView:WidgetStyle
    static readonly int WidgetStyle_Offset;
    
    public UnrealSharp.SlateCore.TableViewStyle WidgetStyle
    {
        get
        {
            CheckObjectForValidity();
            return UnrealSharp.SlateCore.TableViewStyleMarshaler.FromNative(IntPtr.Add(NativeObject, WidgetStyle_Offset), 0, this);
        }
    }
    
    // StructProperty /Script/UMG.ListView:ScrollBarStyle
    static readonly int ScrollBarStyle_Offset;
    
    public UnrealSharp.SlateCore.ScrollBarStyle ScrollBarStyle
    {
        get
        {
            CheckObjectForValidity();
            return UnrealSharp.SlateCore.ScrollBarStyleMarshaler.FromNative(IntPtr.Add(NativeObject, ScrollBarStyle_Offset), 0, this);
        }
    }
    
    // ByteProperty /Script/UMG.ListView:Orientation
    static readonly int Orientation_Offset;
    
    public UnrealSharp.SlateCore.EOrientation Orientation
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.SlateCore.EOrientation>.FromNative(IntPtr.Add(NativeObject, Orientation_Offset), 0, this);
        }
    }
    
    // ByteProperty /Script/UMG.ListView:SelectionMode
    static readonly int SelectionMode_Offset;
    
    public UnrealSharp.Slate.ESelectionMode SelectionMode
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Slate.ESelectionMode>.FromNative(IntPtr.Add(NativeObject, SelectionMode_Offset), 0, this);
        }
    }
    
    // EnumProperty /Script/UMG.ListView:ConsumeMouseWheel
    static readonly int ConsumeMouseWheel_Offset;
    
    public UnrealSharp.SlateCore.EConsumeMouseWheel ConsumeMouseWheel
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.SlateCore.EConsumeMouseWheel>.FromNative(IntPtr.Add(NativeObject, ConsumeMouseWheel_Offset), 0, this);
        }
    }
    
    // BoolProperty /Script/UMG.ListView:bClearSelectionOnClick
    static readonly int bClearSelectionOnClick_Offset;
    
    public bool bClearSelectionOnClick
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bClearSelectionOnClick_Offset), 0, this);
        }
    }
    
    // BoolProperty /Script/UMG.ListView:bIsFocusable
    static readonly int bIsFocusable_Offset;
    
    public bool bIsFocusable
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bIsFocusable_Offset), 0, this);
        }
    }
    
    // BoolProperty /Script/UMG.ListView:bReturnFocusToSelection
    static readonly int bReturnFocusToSelection_Offset;
    
    public bool bReturnFocusToSelection
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bReturnFocusToSelection_Offset), 0, this);
        }
    }
    
    // FloatProperty /Script/UMG.ListView:EntrySpacing
    static readonly int EntrySpacing_Offset;
    
    public float EntrySpacing
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, EntrySpacing_Offset), 0, this);
        }
    }
    
    // FloatProperty /Script/UMG.ListView:HorizontalEntrySpacing
    static readonly int HorizontalEntrySpacing_Offset;
    
    public float HorizontalEntrySpacing
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, HorizontalEntrySpacing_Offset), 0, this);
        }
    }
    
    // FloatProperty /Script/UMG.ListView:VerticalEntrySpacing
    static readonly int VerticalEntrySpacing_Offset;
    
    public float VerticalEntrySpacing
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, VerticalEntrySpacing_Offset), 0, this);
        }
    }
    
    // Function /Script/UMG.ListView:SetSelectionMode
    static readonly IntPtr SetSelectionMode_NativeFunction;
    static readonly int SetSelectionMode_ParamsSize;
    static readonly int SetSelectionMode_SelectionMode_Offset;
    
    public void SetSelectionMode(UnrealSharp.Slate.ESelectionMode selectionMode)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSelectionMode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.Slate.ESelectionMode>.ToNative(IntPtr.Add(ParamsBuffer, SetSelectionMode_SelectionMode_Offset), 0, null, selectionMode);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSelectionMode_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.ListView:SetSelectedIndex
    static readonly IntPtr SetSelectedIndex_NativeFunction;
    static readonly int SetSelectedIndex_ParamsSize;
    static readonly int SetSelectedIndex_Index_Offset;
    
    public void SetSelectedIndex(int index)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSelectedIndex_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SetSelectedIndex_Index_Offset), 0, null, index);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSelectedIndex_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.ListView:ScrollIndexIntoView
    static readonly IntPtr ScrollIndexIntoView_NativeFunction;
    static readonly int ScrollIndexIntoView_ParamsSize;
    static readonly int ScrollIndexIntoView_Index_Offset;
    
    public void ScrollIndexIntoView(int index)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ScrollIndexIntoView_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, ScrollIndexIntoView_Index_Offset), 0, null, index);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ScrollIndexIntoView_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.ListView:RemoveItem
    static readonly IntPtr RemoveItem_NativeFunction;
    static readonly int RemoveItem_ParamsSize;
    static readonly int RemoveItem_Item_Offset;
    
    public void RemoveItem(UnrealSharp.CoreUObject.Object item)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveItem_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, RemoveItem_Item_Offset), 0, null, item);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RemoveItem_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.ListView:NavigateToIndex
    static readonly IntPtr NavigateToIndex_NativeFunction;
    static readonly int NavigateToIndex_ParamsSize;
    static readonly int NavigateToIndex_Index_Offset;
    
    public void NavigateToIndex(int index)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[NavigateToIndex_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, NavigateToIndex_Index_Offset), 0, null, index);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, NavigateToIndex_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.ListView:IsRefreshPending
    static readonly IntPtr IsRefreshPending_NativeFunction;
    static readonly int IsRefreshPending_ParamsSize;
    static readonly int IsRefreshPending_ReturnValue_Offset;
    
    public bool IsRefreshPending()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsRefreshPending_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, IsRefreshPending_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsRefreshPending_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.ListView:GetVerticalEntrySpacing
    static readonly IntPtr GetVerticalEntrySpacing_NativeFunction;
    static readonly int GetVerticalEntrySpacing_ParamsSize;
    static readonly int GetVerticalEntrySpacing_ReturnValue_Offset;
    
    public float GetVerticalEntrySpacing()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetVerticalEntrySpacing_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetVerticalEntrySpacing_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetVerticalEntrySpacing_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.ListView:GetNumItems
    static readonly IntPtr GetNumItems_NativeFunction;
    static readonly int GetNumItems_ParamsSize;
    static readonly int GetNumItems_ReturnValue_Offset;
    
    public int GetNumItems()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetNumItems_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetNumItems_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetNumItems_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.ListView:GetListItems
    static readonly IntPtr GetListItems_NativeFunction;
    static readonly int GetListItems_ParamsSize;
    static readonly int GetListItems_ReturnValue_Offset;
    static readonly int GetListItems_ReturnValue_ElementSize;
    
    public System.Collections.Generic.IList<UnrealSharp.CoreUObject.Object> GetListItems()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetListItems_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetListItems_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.CoreUObject.Object> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, GetListItems_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Object> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Object> (1, ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative, ObjectMarshaller<UnrealSharp.CoreUObject.Object>.FromNative, GetListItems_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Object>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.ListView:GetItemAt
    static readonly IntPtr GetItemAt_NativeFunction;
    static readonly int GetItemAt_ParamsSize;
    static readonly int GetItemAt_Index_Offset;
    static readonly int GetItemAt_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.Object GetItemAt(int index)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetItemAt_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetItemAt_Index_Offset), 0, null, index);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetItemAt_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.Object returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.CoreUObject.Object>.FromNative(IntPtr.Add(ParamsBuffer, GetItemAt_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.ListView:GetIndexForItem
    static readonly IntPtr GetIndexForItem_NativeFunction;
    static readonly int GetIndexForItem_ParamsSize;
    static readonly int GetIndexForItem_Item_Offset;
    static readonly int GetIndexForItem_ReturnValue_Offset;
    
    public int GetIndexForItem(UnrealSharp.CoreUObject.Object item)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetIndexForItem_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, GetIndexForItem_Item_Offset), 0, null, item);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetIndexForItem_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetIndexForItem_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.ListView:GetHorizontalEntrySpacing
    static readonly IntPtr GetHorizontalEntrySpacing_NativeFunction;
    static readonly int GetHorizontalEntrySpacing_ParamsSize;
    static readonly int GetHorizontalEntrySpacing_ReturnValue_Offset;
    
    public float GetHorizontalEntrySpacing()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetHorizontalEntrySpacing_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetHorizontalEntrySpacing_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetHorizontalEntrySpacing_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.ListView:ClearListItems
    static readonly IntPtr ClearListItems_NativeFunction;
    
    public void ClearListItems()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ClearListItems_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/UMG.ListView:BP_SetSelectedItem
    static readonly IntPtr BP_SetSelectedItem_NativeFunction;
    static readonly int BP_SetSelectedItem_ParamsSize;
    static readonly int BP_SetSelectedItem_Item_Offset;
    
    public void BP_SetSelectedItem(UnrealSharp.CoreUObject.Object item)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[BP_SetSelectedItem_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, BP_SetSelectedItem_Item_Offset), 0, null, item);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, BP_SetSelectedItem_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.ListView:BP_SetListItems
    static readonly IntPtr BP_SetListItems_NativeFunction;
    static readonly int BP_SetListItems_ParamsSize;
    static readonly int BP_SetListItems_InListItems_Offset;
    static readonly int BP_SetListItems_InListItems_ElementSize;
    
    public void BP_SetListItems(System.Collections.Generic.IList<UnrealSharp.CoreUObject.Object> inListItems)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[BP_SetListItems_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr InListItems_NativeBuffer = IntPtr.Add(ParamsBuffer, BP_SetListItems_InListItems_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Object> InListItems_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Object>(1, ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative, ObjectMarshaller<UnrealSharp.CoreUObject.Object>.FromNative, BP_SetListItems_InListItems_ElementSize);
            InListItems_Marshaler.ToNative(InListItems_NativeBuffer, 0, null, inListItems);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, BP_SetListItems_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/UMG.ListView:BP_SetItemSelection
    static readonly IntPtr BP_SetItemSelection_NativeFunction;
    static readonly int BP_SetItemSelection_ParamsSize;
    static readonly int BP_SetItemSelection_Item_Offset;
    static readonly int BP_SetItemSelection_bSelected_Offset;
    
    public void BP_SetItemSelection(UnrealSharp.CoreUObject.Object item, bool bSelected)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[BP_SetItemSelection_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, BP_SetItemSelection_Item_Offset), 0, null, item);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, BP_SetItemSelection_bSelected_Offset), 0, null, bSelected);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, BP_SetItemSelection_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.ListView:BP_ScrollItemIntoView
    static readonly IntPtr BP_ScrollItemIntoView_NativeFunction;
    static readonly int BP_ScrollItemIntoView_ParamsSize;
    static readonly int BP_ScrollItemIntoView_Item_Offset;
    
    public void BP_ScrollItemIntoView(UnrealSharp.CoreUObject.Object item)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[BP_ScrollItemIntoView_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, BP_ScrollItemIntoView_Item_Offset), 0, null, item);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, BP_ScrollItemIntoView_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.ListView:BP_NavigateToItem
    static readonly IntPtr BP_NavigateToItem_NativeFunction;
    static readonly int BP_NavigateToItem_ParamsSize;
    static readonly int BP_NavigateToItem_Item_Offset;
    
    public void BP_NavigateToItem(UnrealSharp.CoreUObject.Object item)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[BP_NavigateToItem_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, BP_NavigateToItem_Item_Offset), 0, null, item);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, BP_NavigateToItem_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.ListView:BP_IsItemVisible
    static readonly IntPtr BP_IsItemVisible_NativeFunction;
    static readonly int BP_IsItemVisible_ParamsSize;
    static readonly int BP_IsItemVisible_Item_Offset;
    static readonly int BP_IsItemVisible_ReturnValue_Offset;
    
    public bool BP_IsItemVisible(UnrealSharp.CoreUObject.Object item)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[BP_IsItemVisible_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, BP_IsItemVisible_Item_Offset), 0, null, item);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, BP_IsItemVisible_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, BP_IsItemVisible_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.ListView:BP_GetSelectedItems
    static readonly IntPtr BP_GetSelectedItems_NativeFunction;
    static readonly int BP_GetSelectedItems_ParamsSize;
    static readonly int BP_GetSelectedItems_Items_Offset;
    static readonly int BP_GetSelectedItems_Items_ElementSize;
    static readonly int BP_GetSelectedItems_ReturnValue_Offset;
    
    public bool BP_GetSelectedItems(out System.Collections.Generic.IList<UnrealSharp.CoreUObject.Object> items)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[BP_GetSelectedItems_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, BP_GetSelectedItems_NativeFunction, ParamsBuffer);
            
            IntPtr Items_NativeBuffer = IntPtr.Add(ParamsBuffer, BP_GetSelectedItems_Items_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Object> Items_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Object> (1, ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative, ObjectMarshaller<UnrealSharp.CoreUObject.Object>.FromNative, BP_GetSelectedItems_Items_ElementSize);
            items = Items_Marshaler.FromNative(Items_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.CoreUObject.Object>.DestructInstance(Items_NativeBuffer, 0);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, BP_GetSelectedItems_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.ListView:BP_GetSelectedItem
    static readonly IntPtr BP_GetSelectedItem_NativeFunction;
    static readonly int BP_GetSelectedItem_ParamsSize;
    static readonly int BP_GetSelectedItem_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.Object BP_GetSelectedItem()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[BP_GetSelectedItem_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, BP_GetSelectedItem_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.Object returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.CoreUObject.Object>.FromNative(IntPtr.Add(ParamsBuffer, BP_GetSelectedItem_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.ListView:BP_GetNumItemsSelected
    static readonly IntPtr BP_GetNumItemsSelected_NativeFunction;
    static readonly int BP_GetNumItemsSelected_ParamsSize;
    static readonly int BP_GetNumItemsSelected_ReturnValue_Offset;
    
    public int BP_GetNumItemsSelected()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[BP_GetNumItemsSelected_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, BP_GetNumItemsSelected_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, BP_GetNumItemsSelected_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.ListView:BP_ClearSelection
    static readonly IntPtr BP_ClearSelection_NativeFunction;
    
    public void BP_ClearSelection()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, BP_ClearSelection_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/UMG.ListView:BP_CancelScrollIntoView
    static readonly IntPtr BP_CancelScrollIntoView_NativeFunction;
    
    public void BP_CancelScrollIntoView()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, BP_CancelScrollIntoView_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/UMG.ListView:AddItem
    static readonly IntPtr AddItem_NativeFunction;
    static readonly int AddItem_ParamsSize;
    static readonly int AddItem_Item_Offset;
    
    public void AddItem(UnrealSharp.CoreUObject.Object item)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddItem_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, AddItem_Item_Offset), 0, null, item);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddItem_NativeFunction, ParamsBuffer);
            
        }
    }
    
    
}
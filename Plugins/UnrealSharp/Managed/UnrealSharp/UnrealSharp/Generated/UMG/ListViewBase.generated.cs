// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.UMG;

[UClass]
abstract public partial class ListViewBase : UnrealSharp.UMG.Widget
{
    
    static ListViewBase()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("ListViewBase");
        
        EntryWidgetClass_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "EntryWidgetClass");
        WheelScrollMultiplier_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "WheelScrollMultiplier");
        bEnableScrollAnimation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bEnableScrollAnimation");
        bAllowDragging_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bAllowDragging");
        
        SetWheelScrollMultiplier_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetWheelScrollMultiplier");
        SetWheelScrollMultiplier_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetWheelScrollMultiplier_NativeFunction);
        SetWheelScrollMultiplier_NewWheelScrollMultiplier_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetWheelScrollMultiplier_NativeFunction, "NewWheelScrollMultiplier");
        SetScrollOffset_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetScrollOffset");
        SetScrollOffset_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetScrollOffset_NativeFunction);
        SetScrollOffset_InScrollOffset_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetScrollOffset_NativeFunction, "InScrollOffset");
        SetScrollbarVisibility_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetScrollbarVisibility");
        SetScrollbarVisibility_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetScrollbarVisibility_NativeFunction);
        SetScrollbarVisibility_InVisibility_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetScrollbarVisibility_NativeFunction, "InVisibility");
        ScrollToTop_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ScrollToTop");
        ScrollToBottom_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ScrollToBottom");
        RequestRefresh_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RequestRefresh");
        RegenerateAllEntries_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RegenerateAllEntries");
        GetScrollOffset_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetScrollOffset");
        GetScrollOffset_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetScrollOffset_NativeFunction);
        GetScrollOffset_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetScrollOffset_NativeFunction, "ReturnValue");
        GetDisplayedEntryWidgets_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetDisplayedEntryWidgets");
        GetDisplayedEntryWidgets_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetDisplayedEntryWidgets_NativeFunction);
        GetDisplayedEntryWidgets_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetDisplayedEntryWidgets_NativeFunction, "ReturnValue");
        GetDisplayedEntryWidgets_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetDisplayedEntryWidgets_NativeFunction, "ReturnValue");
        
        
    }
    
    protected ListViewBase(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ClassProperty /Script/UMG.ListViewBase:EntryWidgetClass
    static readonly int EntryWidgetClass_Offset;
    
    public SubclassOf<UnrealSharp.UMG.UserWidget> EntryWidgetClass
    {
        get
        {
            CheckObjectForValidity();
            return SubclassOfMarshaller<UnrealSharp.UMG.UserWidget>.FromNative(IntPtr.Add(NativeObject, EntryWidgetClass_Offset), 0, this);
        }
    }
    
    // FloatProperty /Script/UMG.ListViewBase:WheelScrollMultiplier
    static readonly int WheelScrollMultiplier_Offset;
    
    public float WheelScrollMultiplier
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, WheelScrollMultiplier_Offset), 0, this);
        }
    }
    
    // BoolProperty /Script/UMG.ListViewBase:bEnableScrollAnimation
    static readonly int bEnableScrollAnimation_Offset;
    
    public bool bEnableScrollAnimation
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bEnableScrollAnimation_Offset), 0, this);
        }
    }
    
    // BoolProperty /Script/UMG.ListViewBase:bAllowDragging
    static readonly int bAllowDragging_Offset;
    
    public bool bAllowDragging
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bAllowDragging_Offset), 0, this);
        }
    }
    
    // Function /Script/UMG.ListViewBase:SetWheelScrollMultiplier
    static readonly IntPtr SetWheelScrollMultiplier_NativeFunction;
    static readonly int SetWheelScrollMultiplier_ParamsSize;
    static readonly int SetWheelScrollMultiplier_NewWheelScrollMultiplier_Offset;
    
    public void SetWheelScrollMultiplier(float newWheelScrollMultiplier)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetWheelScrollMultiplier_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetWheelScrollMultiplier_NewWheelScrollMultiplier_Offset), 0, null, newWheelScrollMultiplier);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetWheelScrollMultiplier_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.ListViewBase:SetScrollOffset
    static readonly IntPtr SetScrollOffset_NativeFunction;
    static readonly int SetScrollOffset_ParamsSize;
    static readonly int SetScrollOffset_InScrollOffset_Offset;
    
    public void SetScrollOffset(float inScrollOffset)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetScrollOffset_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetScrollOffset_InScrollOffset_Offset), 0, null, inScrollOffset);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetScrollOffset_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.ListViewBase:SetScrollbarVisibility
    static readonly IntPtr SetScrollbarVisibility_NativeFunction;
    static readonly int SetScrollbarVisibility_ParamsSize;
    static readonly int SetScrollbarVisibility_InVisibility_Offset;
    
    public void SetScrollbarVisibility(UnrealSharp.UMG.ESlateVisibility inVisibility)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetScrollbarVisibility_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.UMG.ESlateVisibility>.ToNative(IntPtr.Add(ParamsBuffer, SetScrollbarVisibility_InVisibility_Offset), 0, null, inVisibility);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetScrollbarVisibility_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.ListViewBase:ScrollToTop
    static readonly IntPtr ScrollToTop_NativeFunction;
    
    public void ScrollToTop()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ScrollToTop_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/UMG.ListViewBase:ScrollToBottom
    static readonly IntPtr ScrollToBottom_NativeFunction;
    
    public void ScrollToBottom()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ScrollToBottom_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/UMG.ListViewBase:RequestRefresh
    static readonly IntPtr RequestRefresh_NativeFunction;
    
    public void RequestRefresh()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RequestRefresh_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/UMG.ListViewBase:RegenerateAllEntries
    static readonly IntPtr RegenerateAllEntries_NativeFunction;
    
    public void RegenerateAllEntries()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, RegenerateAllEntries_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/UMG.ListViewBase:GetScrollOffset
    static readonly IntPtr GetScrollOffset_NativeFunction;
    static readonly int GetScrollOffset_ParamsSize;
    static readonly int GetScrollOffset_ReturnValue_Offset;
    
    public float GetScrollOffset()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetScrollOffset_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetScrollOffset_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetScrollOffset_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.ListViewBase:GetDisplayedEntryWidgets
    static readonly IntPtr GetDisplayedEntryWidgets_NativeFunction;
    static readonly int GetDisplayedEntryWidgets_ParamsSize;
    static readonly int GetDisplayedEntryWidgets_ReturnValue_Offset;
    static readonly int GetDisplayedEntryWidgets_ReturnValue_ElementSize;
    
    public System.Collections.Generic.IList<UnrealSharp.UMG.UserWidget> GetDisplayedEntryWidgets()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetDisplayedEntryWidgets_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetDisplayedEntryWidgets_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.UMG.UserWidget> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, GetDisplayedEntryWidgets_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.UMG.UserWidget> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.UMG.UserWidget> (1, ObjectMarshaller<UnrealSharp.UMG.UserWidget>.ToNative, ObjectMarshaller<UnrealSharp.UMG.UserWidget>.FromNative, GetDisplayedEntryWidgets_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.UMG.UserWidget>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    
}
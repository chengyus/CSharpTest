// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.UMG;

[UClass]
public partial class SafeZone : UnrealSharp.UMG.ContentWidget
{
    
    static SafeZone()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("SafeZone");
        
        PadLeft_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "PadLeft");
        PadRight_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "PadRight");
        PadTop_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "PadTop");
        PadBottom_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "PadBottom");
        
        SetSidesToPad_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSidesToPad");
        SetSidesToPad_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSidesToPad_NativeFunction);
        SetSidesToPad_InPadLeft_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSidesToPad_NativeFunction, "InPadLeft");
        SetSidesToPad_InPadRight_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSidesToPad_NativeFunction, "InPadRight");
        SetSidesToPad_InPadTop_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSidesToPad_NativeFunction, "InPadTop");
        SetSidesToPad_InPadBottom_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSidesToPad_NativeFunction, "InPadBottom");
        
        
    }
    
    protected SafeZone(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // BoolProperty /Script/UMG.SafeZone:PadLeft
    static readonly int PadLeft_Offset;
    
    public bool PadLeft
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, PadLeft_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, PadLeft_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/UMG.SafeZone:PadRight
    static readonly int PadRight_Offset;
    
    public bool PadRight
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, PadRight_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, PadRight_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/UMG.SafeZone:PadTop
    static readonly int PadTop_Offset;
    
    public bool PadTop
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, PadTop_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, PadTop_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/UMG.SafeZone:PadBottom
    static readonly int PadBottom_Offset;
    
    public bool PadBottom
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, PadBottom_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, PadBottom_Offset), 0, this, value);
        }
    }
    
    // Function /Script/UMG.SafeZone:SetSidesToPad
    static readonly IntPtr SetSidesToPad_NativeFunction;
    static readonly int SetSidesToPad_ParamsSize;
    static readonly int SetSidesToPad_InPadLeft_Offset;
    static readonly int SetSidesToPad_InPadRight_Offset;
    static readonly int SetSidesToPad_InPadTop_Offset;
    static readonly int SetSidesToPad_InPadBottom_Offset;
    
    public void SetSidesToPad(bool inPadLeft, bool inPadRight, bool inPadTop, bool inPadBottom)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSidesToPad_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetSidesToPad_InPadLeft_Offset), 0, null, inPadLeft);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetSidesToPad_InPadRight_Offset), 0, null, inPadRight);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetSidesToPad_InPadTop_Offset), 0, null, inPadTop);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetSidesToPad_InPadBottom_Offset), 0, null, inPadBottom);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSidesToPad_NativeFunction, ParamsBuffer);
            
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.UMG;

[UClass]
public partial class ScrollBox : UnrealSharp.UMG.PanelWidget
{
    
    static ScrollBox()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("ScrollBox");
        
        WidgetStyle_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "WidgetStyle");
        WidgetBarStyle_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "WidgetBarStyle");
        Orientation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Orientation");
        ScrollBarVisibility_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ScrollBarVisibility");
        ConsumeMouseWheel_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ConsumeMouseWheel");
        ScrollbarThickness_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ScrollbarThickness");
        ScrollbarPadding_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ScrollbarPadding");
        AlwaysShowScrollbar_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "AlwaysShowScrollbar");
        AlwaysShowScrollbarTrack_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "AlwaysShowScrollbarTrack");
        AllowOverscroll_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "AllowOverscroll");
        BackPadScrolling_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "BackPadScrolling");
        FrontPadScrolling_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "FrontPadScrolling");
        bAnimateWheelScrolling_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bAnimateWheelScrolling");
        NavigationDestination_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "NavigationDestination");
        NavigationScrollPadding_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "NavigationScrollPadding");
        ScrollWhenFocusChanges_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ScrollWhenFocusChanges");
        bAllowRightClickDragScrolling_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bAllowRightClickDragScrolling");
        WheelScrollMultiplier_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "WheelScrollMultiplier");
        
        SetWheelScrollMultiplier_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetWheelScrollMultiplier");
        SetWheelScrollMultiplier_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetWheelScrollMultiplier_NativeFunction);
        SetWheelScrollMultiplier_NewWheelScrollMultiplier_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetWheelScrollMultiplier_NativeFunction, "NewWheelScrollMultiplier");
        SetScrollWhenFocusChanges_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetScrollWhenFocusChanges");
        SetScrollWhenFocusChanges_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetScrollWhenFocusChanges_NativeFunction);
        SetScrollWhenFocusChanges_NewScrollWhenFocusChanges_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetScrollWhenFocusChanges_NativeFunction, "NewScrollWhenFocusChanges");
        SetScrollOffset_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetScrollOffset");
        SetScrollOffset_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetScrollOffset_NativeFunction);
        SetScrollOffset_NewScrollOffset_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetScrollOffset_NativeFunction, "NewScrollOffset");
        SetScrollBarVisibility_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetScrollBarVisibility");
        SetScrollBarVisibility_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetScrollBarVisibility_NativeFunction);
        SetScrollBarVisibility_NewScrollBarVisibility_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetScrollBarVisibility_NativeFunction, "NewScrollBarVisibility");
        SetScrollbarThickness_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetScrollbarThickness");
        SetScrollbarThickness_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetScrollbarThickness_NativeFunction);
        SetScrollbarThickness_NewScrollbarThickness_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetScrollbarThickness_NativeFunction, "NewScrollbarThickness");
        SetScrollbarPadding_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetScrollbarPadding");
        SetScrollbarPadding_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetScrollbarPadding_NativeFunction);
        SetScrollbarPadding_NewScrollbarPadding_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetScrollbarPadding_NativeFunction, "NewScrollbarPadding");
        SetOrientation_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetOrientation");
        SetOrientation_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetOrientation_NativeFunction);
        SetOrientation_NewOrientation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetOrientation_NativeFunction, "NewOrientation");
        SetNavigationDestination_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetNavigationDestination");
        SetNavigationDestination_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetNavigationDestination_NativeFunction);
        SetNavigationDestination_NewNavigationDestination_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetNavigationDestination_NativeFunction, "NewNavigationDestination");
        SetConsumeMouseWheel_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetConsumeMouseWheel");
        SetConsumeMouseWheel_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetConsumeMouseWheel_NativeFunction);
        SetConsumeMouseWheel_NewConsumeMouseWheel_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetConsumeMouseWheel_NativeFunction, "NewConsumeMouseWheel");
        SetAnimateWheelScrolling_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAnimateWheelScrolling");
        SetAnimateWheelScrolling_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAnimateWheelScrolling_NativeFunction);
        SetAnimateWheelScrolling_bShouldAnimateWheelScrolling_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAnimateWheelScrolling_NativeFunction, "bShouldAnimateWheelScrolling");
        SetAlwaysShowScrollbar_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAlwaysShowScrollbar");
        SetAlwaysShowScrollbar_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAlwaysShowScrollbar_NativeFunction);
        SetAlwaysShowScrollbar_NewAlwaysShowScrollbar_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAlwaysShowScrollbar_NativeFunction, "NewAlwaysShowScrollbar");
        SetAllowOverscroll_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAllowOverscroll");
        SetAllowOverscroll_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAllowOverscroll_NativeFunction);
        SetAllowOverscroll_NewAllowOverscroll_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAllowOverscroll_NativeFunction, "NewAllowOverscroll");
        ScrollWidgetIntoView_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ScrollWidgetIntoView");
        ScrollWidgetIntoView_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ScrollWidgetIntoView_NativeFunction);
        ScrollWidgetIntoView_WidgetToFind_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ScrollWidgetIntoView_NativeFunction, "WidgetToFind");
        ScrollWidgetIntoView_AnimateScroll_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ScrollWidgetIntoView_NativeFunction, "AnimateScroll");
        ScrollWidgetIntoView_ScrollDestination_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ScrollWidgetIntoView_NativeFunction, "ScrollDestination");
        ScrollWidgetIntoView_Padding_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ScrollWidgetIntoView_NativeFunction, "Padding");
        ScrollToStart_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ScrollToStart");
        ScrollToEnd_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ScrollToEnd");
        GetViewOffsetFraction_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetViewOffsetFraction");
        GetViewOffsetFraction_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetViewOffsetFraction_NativeFunction);
        GetViewOffsetFraction_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetViewOffsetFraction_NativeFunction, "ReturnValue");
        GetViewFraction_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetViewFraction");
        GetViewFraction_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetViewFraction_NativeFunction);
        GetViewFraction_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetViewFraction_NativeFunction, "ReturnValue");
        GetScrollOffsetOfEnd_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetScrollOffsetOfEnd");
        GetScrollOffsetOfEnd_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetScrollOffsetOfEnd_NativeFunction);
        GetScrollOffsetOfEnd_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetScrollOffsetOfEnd_NativeFunction, "ReturnValue");
        GetScrollOffset_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetScrollOffset");
        GetScrollOffset_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetScrollOffset_NativeFunction);
        GetScrollOffset_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetScrollOffset_NativeFunction, "ReturnValue");
        EndInertialScrolling_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "EndInertialScrolling");
        
        
    }
    
    protected ScrollBox(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // StructProperty /Script/UMG.ScrollBox:WidgetStyle
    static readonly int WidgetStyle_Offset;
    
    public UnrealSharp.SlateCore.ScrollBoxStyle WidgetStyle
    {
        get
        {
            CheckObjectForValidity();
            return UnrealSharp.SlateCore.ScrollBoxStyleMarshaler.FromNative(IntPtr.Add(NativeObject, WidgetStyle_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            UnrealSharp.SlateCore.ScrollBoxStyleMarshaler.ToNative(IntPtr.Add(NativeObject, WidgetStyle_Offset), 0, this, value);
        }
    }
    
    // StructProperty /Script/UMG.ScrollBox:WidgetBarStyle
    static readonly int WidgetBarStyle_Offset;
    
    public UnrealSharp.SlateCore.ScrollBarStyle WidgetBarStyle
    {
        get
        {
            CheckObjectForValidity();
            return UnrealSharp.SlateCore.ScrollBarStyleMarshaler.FromNative(IntPtr.Add(NativeObject, WidgetBarStyle_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            UnrealSharp.SlateCore.ScrollBarStyleMarshaler.ToNative(IntPtr.Add(NativeObject, WidgetBarStyle_Offset), 0, this, value);
        }
    }
    
    // ByteProperty /Script/UMG.ScrollBox:Orientation
    static readonly int Orientation_Offset;
    
    public UnrealSharp.SlateCore.EOrientation Orientation
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.SlateCore.EOrientation>.FromNative(IntPtr.Add(NativeObject, Orientation_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.SlateCore.EOrientation>.ToNative(IntPtr.Add(NativeObject, Orientation_Offset), 0, this, value);
        }
    }
    
    // EnumProperty /Script/UMG.ScrollBox:ScrollBarVisibility
    static readonly int ScrollBarVisibility_Offset;
    
    public UnrealSharp.UMG.ESlateVisibility ScrollBarVisibility
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.UMG.ESlateVisibility>.FromNative(IntPtr.Add(NativeObject, ScrollBarVisibility_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.UMG.ESlateVisibility>.ToNative(IntPtr.Add(NativeObject, ScrollBarVisibility_Offset), 0, this, value);
        }
    }
    
    // EnumProperty /Script/UMG.ScrollBox:ConsumeMouseWheel
    static readonly int ConsumeMouseWheel_Offset;
    
    public UnrealSharp.SlateCore.EConsumeMouseWheel ConsumeMouseWheel
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.SlateCore.EConsumeMouseWheel>.FromNative(IntPtr.Add(NativeObject, ConsumeMouseWheel_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.SlateCore.EConsumeMouseWheel>.ToNative(IntPtr.Add(NativeObject, ConsumeMouseWheel_Offset), 0, this, value);
        }
    }
    
    // StructProperty /Script/UMG.ScrollBox:ScrollbarThickness
    static readonly int ScrollbarThickness_Offset;
    
    public System.DoubleNumerics.Vector2 ScrollbarThickness
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(NativeObject, ScrollbarThickness_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(NativeObject, ScrollbarThickness_Offset), 0, this, value);
        }
    }
    
    // StructProperty /Script/UMG.ScrollBox:ScrollbarPadding
    static readonly int ScrollbarPadding_Offset;
    
    public UnrealSharp.SlateCore.Margin ScrollbarPadding
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.SlateCore.Margin>.FromNative(IntPtr.Add(NativeObject, ScrollbarPadding_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.SlateCore.Margin>.ToNative(IntPtr.Add(NativeObject, ScrollbarPadding_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/UMG.ScrollBox:AlwaysShowScrollbar
    static readonly int AlwaysShowScrollbar_Offset;
    
    public bool AlwaysShowScrollbar
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, AlwaysShowScrollbar_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, AlwaysShowScrollbar_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/UMG.ScrollBox:AlwaysShowScrollbarTrack
    static readonly int AlwaysShowScrollbarTrack_Offset;
    
    public bool AlwaysShowScrollbarTrack
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, AlwaysShowScrollbarTrack_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, AlwaysShowScrollbarTrack_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/UMG.ScrollBox:AllowOverscroll
    static readonly int AllowOverscroll_Offset;
    
    public bool AllowOverscroll
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, AllowOverscroll_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, AllowOverscroll_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/UMG.ScrollBox:BackPadScrolling
    static readonly int BackPadScrolling_Offset;
    
    public bool BackPadScrolling
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, BackPadScrolling_Offset), 0, this);
        }
    }
    
    // BoolProperty /Script/UMG.ScrollBox:FrontPadScrolling
    static readonly int FrontPadScrolling_Offset;
    
    public bool FrontPadScrolling
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, FrontPadScrolling_Offset), 0, this);
        }
    }
    
    // BoolProperty /Script/UMG.ScrollBox:bAnimateWheelScrolling
    static readonly int bAnimateWheelScrolling_Offset;
    
    public bool bAnimateWheelScrolling
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bAnimateWheelScrolling_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, bAnimateWheelScrolling_Offset), 0, this, value);
        }
    }
    
    // EnumProperty /Script/UMG.ScrollBox:NavigationDestination
    static readonly int NavigationDestination_Offset;
    
    public UnrealSharp.Slate.EDescendantScrollDestination NavigationDestination
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Slate.EDescendantScrollDestination>.FromNative(IntPtr.Add(NativeObject, NavigationDestination_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.Slate.EDescendantScrollDestination>.ToNative(IntPtr.Add(NativeObject, NavigationDestination_Offset), 0, this, value);
        }
    }
    
    // FloatProperty /Script/UMG.ScrollBox:NavigationScrollPadding
    static readonly int NavigationScrollPadding_Offset;
    
    public float NavigationScrollPadding
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, NavigationScrollPadding_Offset), 0, this);
        }
    }
    
    // EnumProperty /Script/UMG.ScrollBox:ScrollWhenFocusChanges
    static readonly int ScrollWhenFocusChanges_Offset;
    
    public UnrealSharp.Slate.EScrollWhenFocusChanges ScrollWhenFocusChanges
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.Slate.EScrollWhenFocusChanges>.FromNative(IntPtr.Add(NativeObject, ScrollWhenFocusChanges_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.Slate.EScrollWhenFocusChanges>.ToNative(IntPtr.Add(NativeObject, ScrollWhenFocusChanges_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/UMG.ScrollBox:bAllowRightClickDragScrolling
    static readonly int bAllowRightClickDragScrolling_Offset;
    
    public bool bAllowRightClickDragScrolling
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bAllowRightClickDragScrolling_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, bAllowRightClickDragScrolling_Offset), 0, this, value);
        }
    }
    
    // FloatProperty /Script/UMG.ScrollBox:WheelScrollMultiplier
    static readonly int WheelScrollMultiplier_Offset;
    
    public float WheelScrollMultiplier
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, WheelScrollMultiplier_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, WheelScrollMultiplier_Offset), 0, this, value);
        }
    }
    
    // Function /Script/UMG.ScrollBox:SetWheelScrollMultiplier
    static readonly IntPtr SetWheelScrollMultiplier_NativeFunction;
    static readonly int SetWheelScrollMultiplier_ParamsSize;
    static readonly int SetWheelScrollMultiplier_NewWheelScrollMultiplier_Offset;
    
    public void SetWheelScrollMultiplier(float newWheelScrollMultiplier)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetWheelScrollMultiplier_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetWheelScrollMultiplier_NewWheelScrollMultiplier_Offset), 0, null, newWheelScrollMultiplier);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetWheelScrollMultiplier_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.ScrollBox:SetScrollWhenFocusChanges
    static readonly IntPtr SetScrollWhenFocusChanges_NativeFunction;
    static readonly int SetScrollWhenFocusChanges_ParamsSize;
    static readonly int SetScrollWhenFocusChanges_NewScrollWhenFocusChanges_Offset;
    
    public void SetScrollWhenFocusChanges(UnrealSharp.Slate.EScrollWhenFocusChanges newScrollWhenFocusChanges)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetScrollWhenFocusChanges_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.Slate.EScrollWhenFocusChanges>.ToNative(IntPtr.Add(ParamsBuffer, SetScrollWhenFocusChanges_NewScrollWhenFocusChanges_Offset), 0, null, newScrollWhenFocusChanges);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetScrollWhenFocusChanges_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.ScrollBox:SetScrollOffset
    static readonly IntPtr SetScrollOffset_NativeFunction;
    static readonly int SetScrollOffset_ParamsSize;
    static readonly int SetScrollOffset_NewScrollOffset_Offset;
    
    public void SetScrollOffset(float newScrollOffset)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetScrollOffset_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetScrollOffset_NewScrollOffset_Offset), 0, null, newScrollOffset);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetScrollOffset_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.ScrollBox:SetScrollBarVisibility
    static readonly IntPtr SetScrollBarVisibility_NativeFunction;
    static readonly int SetScrollBarVisibility_ParamsSize;
    static readonly int SetScrollBarVisibility_NewScrollBarVisibility_Offset;
    
    public void SetScrollBarVisibility(UnrealSharp.UMG.ESlateVisibility newScrollBarVisibility)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetScrollBarVisibility_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.UMG.ESlateVisibility>.ToNative(IntPtr.Add(ParamsBuffer, SetScrollBarVisibility_NewScrollBarVisibility_Offset), 0, null, newScrollBarVisibility);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetScrollBarVisibility_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.ScrollBox:SetScrollbarThickness
    static readonly IntPtr SetScrollbarThickness_NativeFunction;
    static readonly int SetScrollbarThickness_ParamsSize;
    static readonly int SetScrollbarThickness_NewScrollbarThickness_Offset;
    
    public void SetScrollbarThickness(System.DoubleNumerics.Vector2 newScrollbarThickness)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetScrollbarThickness_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, SetScrollbarThickness_NewScrollbarThickness_Offset), 0, null, newScrollbarThickness);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetScrollbarThickness_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/UMG.ScrollBox:SetScrollbarPadding
    static readonly IntPtr SetScrollbarPadding_NativeFunction;
    static readonly int SetScrollbarPadding_ParamsSize;
    static readonly int SetScrollbarPadding_NewScrollbarPadding_Offset;
    
    public void SetScrollbarPadding(UnrealSharp.SlateCore.Margin newScrollbarPadding)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetScrollbarPadding_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.SlateCore.Margin>.ToNative(IntPtr.Add(ParamsBuffer, SetScrollbarPadding_NewScrollbarPadding_Offset), 0, null, newScrollbarPadding);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetScrollbarPadding_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/UMG.ScrollBox:SetOrientation
    static readonly IntPtr SetOrientation_NativeFunction;
    static readonly int SetOrientation_ParamsSize;
    static readonly int SetOrientation_NewOrientation_Offset;
    
    public void SetOrientation(UnrealSharp.SlateCore.EOrientation newOrientation)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetOrientation_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.SlateCore.EOrientation>.ToNative(IntPtr.Add(ParamsBuffer, SetOrientation_NewOrientation_Offset), 0, null, newOrientation);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetOrientation_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.ScrollBox:SetNavigationDestination
    static readonly IntPtr SetNavigationDestination_NativeFunction;
    static readonly int SetNavigationDestination_ParamsSize;
    static readonly int SetNavigationDestination_NewNavigationDestination_Offset;
    
    public void SetNavigationDestination(UnrealSharp.Slate.EDescendantScrollDestination newNavigationDestination)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetNavigationDestination_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.Slate.EDescendantScrollDestination>.ToNative(IntPtr.Add(ParamsBuffer, SetNavigationDestination_NewNavigationDestination_Offset), 0, null, newNavigationDestination);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetNavigationDestination_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.ScrollBox:SetConsumeMouseWheel
    static readonly IntPtr SetConsumeMouseWheel_NativeFunction;
    static readonly int SetConsumeMouseWheel_ParamsSize;
    static readonly int SetConsumeMouseWheel_NewConsumeMouseWheel_Offset;
    
    public void SetConsumeMouseWheel(UnrealSharp.SlateCore.EConsumeMouseWheel newConsumeMouseWheel)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetConsumeMouseWheel_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.SlateCore.EConsumeMouseWheel>.ToNative(IntPtr.Add(ParamsBuffer, SetConsumeMouseWheel_NewConsumeMouseWheel_Offset), 0, null, newConsumeMouseWheel);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetConsumeMouseWheel_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.ScrollBox:SetAnimateWheelScrolling
    static readonly IntPtr SetAnimateWheelScrolling_NativeFunction;
    static readonly int SetAnimateWheelScrolling_ParamsSize;
    static readonly int SetAnimateWheelScrolling_bShouldAnimateWheelScrolling_Offset;
    
    public void SetAnimateWheelScrolling(bool bShouldAnimateWheelScrolling)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAnimateWheelScrolling_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetAnimateWheelScrolling_bShouldAnimateWheelScrolling_Offset), 0, null, bShouldAnimateWheelScrolling);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAnimateWheelScrolling_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.ScrollBox:SetAlwaysShowScrollbar
    static readonly IntPtr SetAlwaysShowScrollbar_NativeFunction;
    static readonly int SetAlwaysShowScrollbar_ParamsSize;
    static readonly int SetAlwaysShowScrollbar_NewAlwaysShowScrollbar_Offset;
    
    public void SetAlwaysShowScrollbar(bool newAlwaysShowScrollbar)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAlwaysShowScrollbar_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetAlwaysShowScrollbar_NewAlwaysShowScrollbar_Offset), 0, null, newAlwaysShowScrollbar);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAlwaysShowScrollbar_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.ScrollBox:SetAllowOverscroll
    static readonly IntPtr SetAllowOverscroll_NativeFunction;
    static readonly int SetAllowOverscroll_ParamsSize;
    static readonly int SetAllowOverscroll_NewAllowOverscroll_Offset;
    
    public void SetAllowOverscroll(bool newAllowOverscroll)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAllowOverscroll_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetAllowOverscroll_NewAllowOverscroll_Offset), 0, null, newAllowOverscroll);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAllowOverscroll_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.ScrollBox:ScrollWidgetIntoView
    static readonly IntPtr ScrollWidgetIntoView_NativeFunction;
    static readonly int ScrollWidgetIntoView_ParamsSize;
    static readonly int ScrollWidgetIntoView_WidgetToFind_Offset;
    static readonly int ScrollWidgetIntoView_AnimateScroll_Offset;
    static readonly int ScrollWidgetIntoView_ScrollDestination_Offset;
    static readonly int ScrollWidgetIntoView_Padding_Offset;
    
    public void ScrollWidgetIntoView(UnrealSharp.UMG.Widget widgetToFind, bool animateScroll = true, UnrealSharp.Slate.EDescendantScrollDestination scrollDestination = UnrealSharp.Slate.EDescendantScrollDestination.IntoView, float padding = 0.000000f)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ScrollWidgetIntoView_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.UMG.Widget>.ToNative(IntPtr.Add(ParamsBuffer, ScrollWidgetIntoView_WidgetToFind_Offset), 0, null, widgetToFind);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ScrollWidgetIntoView_AnimateScroll_Offset), 0, null, animateScroll);
            BlittableMarshaller<UnrealSharp.Slate.EDescendantScrollDestination>.ToNative(IntPtr.Add(ParamsBuffer, ScrollWidgetIntoView_ScrollDestination_Offset), 0, null, scrollDestination);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, ScrollWidgetIntoView_Padding_Offset), 0, null, padding);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ScrollWidgetIntoView_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.ScrollBox:ScrollToStart
    static readonly IntPtr ScrollToStart_NativeFunction;
    
    public void ScrollToStart()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ScrollToStart_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/UMG.ScrollBox:ScrollToEnd
    static readonly IntPtr ScrollToEnd_NativeFunction;
    
    public void ScrollToEnd()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ScrollToEnd_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/UMG.ScrollBox:GetViewOffsetFraction
    static readonly IntPtr GetViewOffsetFraction_NativeFunction;
    static readonly int GetViewOffsetFraction_ParamsSize;
    static readonly int GetViewOffsetFraction_ReturnValue_Offset;
    
    public float GetViewOffsetFraction()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetViewOffsetFraction_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetViewOffsetFraction_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetViewOffsetFraction_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.ScrollBox:GetViewFraction
    static readonly IntPtr GetViewFraction_NativeFunction;
    static readonly int GetViewFraction_ParamsSize;
    static readonly int GetViewFraction_ReturnValue_Offset;
    
    public float GetViewFraction()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetViewFraction_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetViewFraction_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetViewFraction_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.ScrollBox:GetScrollOffsetOfEnd
    static readonly IntPtr GetScrollOffsetOfEnd_NativeFunction;
    static readonly int GetScrollOffsetOfEnd_ParamsSize;
    static readonly int GetScrollOffsetOfEnd_ReturnValue_Offset;
    
    public float GetScrollOffsetOfEnd()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetScrollOffsetOfEnd_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetScrollOffsetOfEnd_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetScrollOffsetOfEnd_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.ScrollBox:GetScrollOffset
    static readonly IntPtr GetScrollOffset_NativeFunction;
    static readonly int GetScrollOffset_ParamsSize;
    static readonly int GetScrollOffset_ReturnValue_Offset;
    
    public float GetScrollOffset()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetScrollOffset_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetScrollOffset_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetScrollOffset_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.ScrollBox:EndInertialScrolling
    static readonly IntPtr EndInertialScrolling_NativeFunction;
    
    public void EndInertialScrolling()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, EndInertialScrolling_NativeFunction, IntPtr.Zero);
        }
    }
    
    
}
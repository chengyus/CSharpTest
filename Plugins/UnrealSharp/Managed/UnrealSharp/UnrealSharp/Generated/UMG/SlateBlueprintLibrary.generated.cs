// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.UMG;

[UClass]
public partial class SlateLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static SlateLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("SlateBlueprintLibrary");
        
        
        TransformVectorLocalToAbsolute_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "TransformVectorLocalToAbsolute");
        TransformVectorLocalToAbsolute_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(TransformVectorLocalToAbsolute_NativeFunction);
        TransformVectorLocalToAbsolute_Geometry_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TransformVectorLocalToAbsolute_NativeFunction, "Geometry");
        TransformVectorLocalToAbsolute_LocalVector_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TransformVectorLocalToAbsolute_NativeFunction, "LocalVector");
        TransformVectorLocalToAbsolute_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TransformVectorLocalToAbsolute_NativeFunction, "ReturnValue");
        TransformVectorAbsoluteToLocal_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "TransformVectorAbsoluteToLocal");
        TransformVectorAbsoluteToLocal_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(TransformVectorAbsoluteToLocal_NativeFunction);
        TransformVectorAbsoluteToLocal_Geometry_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TransformVectorAbsoluteToLocal_NativeFunction, "Geometry");
        TransformVectorAbsoluteToLocal_AbsoluteVector_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TransformVectorAbsoluteToLocal_NativeFunction, "AbsoluteVector");
        TransformVectorAbsoluteToLocal_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TransformVectorAbsoluteToLocal_NativeFunction, "ReturnValue");
        TransformScalarLocalToAbsolute_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "TransformScalarLocalToAbsolute");
        TransformScalarLocalToAbsolute_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(TransformScalarLocalToAbsolute_NativeFunction);
        TransformScalarLocalToAbsolute_Geometry_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TransformScalarLocalToAbsolute_NativeFunction, "Geometry");
        TransformScalarLocalToAbsolute_LocalScalar_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TransformScalarLocalToAbsolute_NativeFunction, "LocalScalar");
        TransformScalarLocalToAbsolute_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TransformScalarLocalToAbsolute_NativeFunction, "ReturnValue");
        TransformScalarAbsoluteToLocal_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "TransformScalarAbsoluteToLocal");
        TransformScalarAbsoluteToLocal_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(TransformScalarAbsoluteToLocal_NativeFunction);
        TransformScalarAbsoluteToLocal_Geometry_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TransformScalarAbsoluteToLocal_NativeFunction, "Geometry");
        TransformScalarAbsoluteToLocal_AbsoluteScalar_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TransformScalarAbsoluteToLocal_NativeFunction, "AbsoluteScalar");
        TransformScalarAbsoluteToLocal_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(TransformScalarAbsoluteToLocal_NativeFunction, "ReturnValue");
        ScreenToWidgetLocal_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ScreenToWidgetLocal");
        ScreenToWidgetLocal_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ScreenToWidgetLocal_NativeFunction);
        ScreenToWidgetLocal_WorldContextObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ScreenToWidgetLocal_NativeFunction, "WorldContextObject");
        ScreenToWidgetLocal_Geometry_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ScreenToWidgetLocal_NativeFunction, "Geometry");
        ScreenToWidgetLocal_ScreenPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ScreenToWidgetLocal_NativeFunction, "ScreenPosition");
        ScreenToWidgetLocal_LocalCoordinate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ScreenToWidgetLocal_NativeFunction, "LocalCoordinate");
        ScreenToWidgetLocal_bIncludeWindowPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ScreenToWidgetLocal_NativeFunction, "bIncludeWindowPosition");
        ScreenToWidgetAbsolute_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ScreenToWidgetAbsolute");
        ScreenToWidgetAbsolute_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ScreenToWidgetAbsolute_NativeFunction);
        ScreenToWidgetAbsolute_WorldContextObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ScreenToWidgetAbsolute_NativeFunction, "WorldContextObject");
        ScreenToWidgetAbsolute_ScreenPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ScreenToWidgetAbsolute_NativeFunction, "ScreenPosition");
        ScreenToWidgetAbsolute_AbsoluteCoordinate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ScreenToWidgetAbsolute_NativeFunction, "AbsoluteCoordinate");
        ScreenToWidgetAbsolute_bIncludeWindowPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ScreenToWidgetAbsolute_NativeFunction, "bIncludeWindowPosition");
        ScreenToViewport_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ScreenToViewport");
        ScreenToViewport_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ScreenToViewport_NativeFunction);
        ScreenToViewport_WorldContextObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ScreenToViewport_NativeFunction, "WorldContextObject");
        ScreenToViewport_ScreenPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ScreenToViewport_NativeFunction, "ScreenPosition");
        ScreenToViewport_ViewportPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ScreenToViewport_NativeFunction, "ViewportPosition");
        LocalToViewport_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "LocalToViewport");
        LocalToViewport_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(LocalToViewport_NativeFunction);
        LocalToViewport_WorldContextObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LocalToViewport_NativeFunction, "WorldContextObject");
        LocalToViewport_Geometry_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LocalToViewport_NativeFunction, "Geometry");
        LocalToViewport_LocalCoordinate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LocalToViewport_NativeFunction, "LocalCoordinate");
        LocalToViewport_PixelPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LocalToViewport_NativeFunction, "PixelPosition");
        LocalToViewport_ViewportPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LocalToViewport_NativeFunction, "ViewportPosition");
        LocalToAbsolute_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "LocalToAbsolute");
        LocalToAbsolute_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(LocalToAbsolute_NativeFunction);
        LocalToAbsolute_Geometry_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LocalToAbsolute_NativeFunction, "Geometry");
        LocalToAbsolute_LocalCoordinate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LocalToAbsolute_NativeFunction, "LocalCoordinate");
        LocalToAbsolute_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(LocalToAbsolute_NativeFunction, "ReturnValue");
        IsUnderLocation_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "IsUnderLocation");
        IsUnderLocation_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(IsUnderLocation_NativeFunction);
        IsUnderLocation_Geometry_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsUnderLocation_NativeFunction, "Geometry");
        IsUnderLocation_AbsoluteCoordinate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsUnderLocation_NativeFunction, "AbsoluteCoordinate");
        IsUnderLocation_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(IsUnderLocation_NativeFunction, "ReturnValue");
        GetLocalTopLeft_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetLocalTopLeft");
        GetLocalTopLeft_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetLocalTopLeft_NativeFunction);
        GetLocalTopLeft_Geometry_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLocalTopLeft_NativeFunction, "Geometry");
        GetLocalTopLeft_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLocalTopLeft_NativeFunction, "ReturnValue");
        GetLocalSize_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetLocalSize");
        GetLocalSize_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetLocalSize_NativeFunction);
        GetLocalSize_Geometry_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLocalSize_NativeFunction, "Geometry");
        GetLocalSize_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLocalSize_NativeFunction, "ReturnValue");
        GetAbsoluteSize_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetAbsoluteSize");
        GetAbsoluteSize_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetAbsoluteSize_NativeFunction);
        GetAbsoluteSize_Geometry_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAbsoluteSize_NativeFunction, "Geometry");
        GetAbsoluteSize_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetAbsoluteSize_NativeFunction, "ReturnValue");
        EqualEqual_SlateBrush_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "EqualEqual_SlateBrush");
        EqualEqual_SlateBrush_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(EqualEqual_SlateBrush_NativeFunction);
        EqualEqual_SlateBrush_A_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EqualEqual_SlateBrush_NativeFunction, "A");
        EqualEqual_SlateBrush_B_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EqualEqual_SlateBrush_NativeFunction, "B");
        EqualEqual_SlateBrush_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(EqualEqual_SlateBrush_NativeFunction, "ReturnValue");
        AbsoluteToViewport_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AbsoluteToViewport");
        AbsoluteToViewport_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AbsoluteToViewport_NativeFunction);
        AbsoluteToViewport_WorldContextObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AbsoluteToViewport_NativeFunction, "WorldContextObject");
        AbsoluteToViewport_AbsoluteDesktopCoordinate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AbsoluteToViewport_NativeFunction, "AbsoluteDesktopCoordinate");
        AbsoluteToViewport_PixelPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AbsoluteToViewport_NativeFunction, "PixelPosition");
        AbsoluteToViewport_ViewportPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AbsoluteToViewport_NativeFunction, "ViewportPosition");
        AbsoluteToLocal_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AbsoluteToLocal");
        AbsoluteToLocal_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AbsoluteToLocal_NativeFunction);
        AbsoluteToLocal_Geometry_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AbsoluteToLocal_NativeFunction, "Geometry");
        AbsoluteToLocal_AbsoluteCoordinate_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AbsoluteToLocal_NativeFunction, "AbsoluteCoordinate");
        AbsoluteToLocal_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AbsoluteToLocal_NativeFunction, "ReturnValue");
        
        
    }
    
    protected SlateLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/UMG.SlateBlueprintLibrary:TransformVectorLocalToAbsolute
    static readonly IntPtr TransformVectorLocalToAbsolute_NativeFunction;
    static readonly int TransformVectorLocalToAbsolute_ParamsSize;
    static readonly int TransformVectorLocalToAbsolute_Geometry_Offset;
    static readonly int TransformVectorLocalToAbsolute_LocalVector_Offset;
    static readonly int TransformVectorLocalToAbsolute_ReturnValue_Offset;
    
    public static System.DoubleNumerics.Vector2 TransformVectorLocalToAbsolute(UnrealSharp.SlateCore.Geometry geometry, System.DoubleNumerics.Vector2 localVector)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[TransformVectorLocalToAbsolute_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.GeometryMarshaler.ToNative(IntPtr.Add(ParamsBuffer, TransformVectorLocalToAbsolute_Geometry_Offset), 0, null, geometry);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, TransformVectorLocalToAbsolute_LocalVector_Offset), 0, null, localVector);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, TransformVectorLocalToAbsolute_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector2 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(ParamsBuffer, TransformVectorLocalToAbsolute_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.SlateBlueprintLibrary:TransformVectorAbsoluteToLocal
    static readonly IntPtr TransformVectorAbsoluteToLocal_NativeFunction;
    static readonly int TransformVectorAbsoluteToLocal_ParamsSize;
    static readonly int TransformVectorAbsoluteToLocal_Geometry_Offset;
    static readonly int TransformVectorAbsoluteToLocal_AbsoluteVector_Offset;
    static readonly int TransformVectorAbsoluteToLocal_ReturnValue_Offset;
    
    public static System.DoubleNumerics.Vector2 TransformVectorAbsoluteToLocal(UnrealSharp.SlateCore.Geometry geometry, System.DoubleNumerics.Vector2 absoluteVector)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[TransformVectorAbsoluteToLocal_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.GeometryMarshaler.ToNative(IntPtr.Add(ParamsBuffer, TransformVectorAbsoluteToLocal_Geometry_Offset), 0, null, geometry);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, TransformVectorAbsoluteToLocal_AbsoluteVector_Offset), 0, null, absoluteVector);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, TransformVectorAbsoluteToLocal_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector2 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(ParamsBuffer, TransformVectorAbsoluteToLocal_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.SlateBlueprintLibrary:TransformScalarLocalToAbsolute
    static readonly IntPtr TransformScalarLocalToAbsolute_NativeFunction;
    static readonly int TransformScalarLocalToAbsolute_ParamsSize;
    static readonly int TransformScalarLocalToAbsolute_Geometry_Offset;
    static readonly int TransformScalarLocalToAbsolute_LocalScalar_Offset;
    static readonly int TransformScalarLocalToAbsolute_ReturnValue_Offset;
    
    public static float TransformScalarLocalToAbsolute(UnrealSharp.SlateCore.Geometry geometry, float localScalar)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[TransformScalarLocalToAbsolute_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.GeometryMarshaler.ToNative(IntPtr.Add(ParamsBuffer, TransformScalarLocalToAbsolute_Geometry_Offset), 0, null, geometry);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, TransformScalarLocalToAbsolute_LocalScalar_Offset), 0, null, localScalar);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, TransformScalarLocalToAbsolute_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, TransformScalarLocalToAbsolute_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.SlateBlueprintLibrary:TransformScalarAbsoluteToLocal
    static readonly IntPtr TransformScalarAbsoluteToLocal_NativeFunction;
    static readonly int TransformScalarAbsoluteToLocal_ParamsSize;
    static readonly int TransformScalarAbsoluteToLocal_Geometry_Offset;
    static readonly int TransformScalarAbsoluteToLocal_AbsoluteScalar_Offset;
    static readonly int TransformScalarAbsoluteToLocal_ReturnValue_Offset;
    
    public static float TransformScalarAbsoluteToLocal(UnrealSharp.SlateCore.Geometry geometry, float absoluteScalar)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[TransformScalarAbsoluteToLocal_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.GeometryMarshaler.ToNative(IntPtr.Add(ParamsBuffer, TransformScalarAbsoluteToLocal_Geometry_Offset), 0, null, geometry);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, TransformScalarAbsoluteToLocal_AbsoluteScalar_Offset), 0, null, absoluteScalar);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, TransformScalarAbsoluteToLocal_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, TransformScalarAbsoluteToLocal_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.SlateBlueprintLibrary:ScreenToWidgetLocal
    static readonly IntPtr ScreenToWidgetLocal_NativeFunction;
    static readonly int ScreenToWidgetLocal_ParamsSize;
    static readonly int ScreenToWidgetLocal_WorldContextObject_Offset;
    static readonly int ScreenToWidgetLocal_Geometry_Offset;
    static readonly int ScreenToWidgetLocal_ScreenPosition_Offset;
    static readonly int ScreenToWidgetLocal_LocalCoordinate_Offset;
    static readonly int ScreenToWidgetLocal_bIncludeWindowPosition_Offset;
    
    public static void ScreenToWidgetLocal(UnrealSharp.CoreUObject.Object worldContextObject, UnrealSharp.SlateCore.Geometry geometry, System.DoubleNumerics.Vector2 screenPosition, out System.DoubleNumerics.Vector2 localCoordinate, bool bIncludeWindowPosition = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ScreenToWidgetLocal_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, ScreenToWidgetLocal_WorldContextObject_Offset), 0, null, worldContextObject);
            UnrealSharp.SlateCore.GeometryMarshaler.ToNative(IntPtr.Add(ParamsBuffer, ScreenToWidgetLocal_Geometry_Offset), 0, null, geometry);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, ScreenToWidgetLocal_ScreenPosition_Offset), 0, null, screenPosition);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ScreenToWidgetLocal_bIncludeWindowPosition_Offset), 0, null, bIncludeWindowPosition);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ScreenToWidgetLocal_NativeFunction, ParamsBuffer);
            
            localCoordinate = BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(ParamsBuffer, ScreenToWidgetLocal_LocalCoordinate_Offset), 0, null);
            
        }
    }
    
    // Function /Script/UMG.SlateBlueprintLibrary:ScreenToWidgetAbsolute
    static readonly IntPtr ScreenToWidgetAbsolute_NativeFunction;
    static readonly int ScreenToWidgetAbsolute_ParamsSize;
    static readonly int ScreenToWidgetAbsolute_WorldContextObject_Offset;
    static readonly int ScreenToWidgetAbsolute_ScreenPosition_Offset;
    static readonly int ScreenToWidgetAbsolute_AbsoluteCoordinate_Offset;
    static readonly int ScreenToWidgetAbsolute_bIncludeWindowPosition_Offset;
    
    public static void ScreenToWidgetAbsolute(UnrealSharp.CoreUObject.Object worldContextObject, System.DoubleNumerics.Vector2 screenPosition, out System.DoubleNumerics.Vector2 absoluteCoordinate, bool bIncludeWindowPosition = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ScreenToWidgetAbsolute_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, ScreenToWidgetAbsolute_WorldContextObject_Offset), 0, null, worldContextObject);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, ScreenToWidgetAbsolute_ScreenPosition_Offset), 0, null, screenPosition);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ScreenToWidgetAbsolute_bIncludeWindowPosition_Offset), 0, null, bIncludeWindowPosition);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ScreenToWidgetAbsolute_NativeFunction, ParamsBuffer);
            
            absoluteCoordinate = BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(ParamsBuffer, ScreenToWidgetAbsolute_AbsoluteCoordinate_Offset), 0, null);
            
        }
    }
    
    // Function /Script/UMG.SlateBlueprintLibrary:ScreenToViewport
    static readonly IntPtr ScreenToViewport_NativeFunction;
    static readonly int ScreenToViewport_ParamsSize;
    static readonly int ScreenToViewport_WorldContextObject_Offset;
    static readonly int ScreenToViewport_ScreenPosition_Offset;
    static readonly int ScreenToViewport_ViewportPosition_Offset;
    
    public static void ScreenToViewport(UnrealSharp.CoreUObject.Object worldContextObject, System.DoubleNumerics.Vector2 screenPosition, out System.DoubleNumerics.Vector2 viewportPosition)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ScreenToViewport_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, ScreenToViewport_WorldContextObject_Offset), 0, null, worldContextObject);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, ScreenToViewport_ScreenPosition_Offset), 0, null, screenPosition);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ScreenToViewport_NativeFunction, ParamsBuffer);
            
            viewportPosition = BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(ParamsBuffer, ScreenToViewport_ViewportPosition_Offset), 0, null);
            
        }
    }
    
    // Function /Script/UMG.SlateBlueprintLibrary:LocalToViewport
    static readonly IntPtr LocalToViewport_NativeFunction;
    static readonly int LocalToViewport_ParamsSize;
    static readonly int LocalToViewport_WorldContextObject_Offset;
    static readonly int LocalToViewport_Geometry_Offset;
    static readonly int LocalToViewport_LocalCoordinate_Offset;
    static readonly int LocalToViewport_PixelPosition_Offset;
    static readonly int LocalToViewport_ViewportPosition_Offset;
    
    public static void LocalToViewport(UnrealSharp.CoreUObject.Object worldContextObject, UnrealSharp.SlateCore.Geometry geometry, System.DoubleNumerics.Vector2 localCoordinate, out System.DoubleNumerics.Vector2 pixelPosition, out System.DoubleNumerics.Vector2 viewportPosition)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[LocalToViewport_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, LocalToViewport_WorldContextObject_Offset), 0, null, worldContextObject);
            UnrealSharp.SlateCore.GeometryMarshaler.ToNative(IntPtr.Add(ParamsBuffer, LocalToViewport_Geometry_Offset), 0, null, geometry);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, LocalToViewport_LocalCoordinate_Offset), 0, null, localCoordinate);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, LocalToViewport_NativeFunction, ParamsBuffer);
            
            pixelPosition = BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(ParamsBuffer, LocalToViewport_PixelPosition_Offset), 0, null);
            viewportPosition = BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(ParamsBuffer, LocalToViewport_ViewportPosition_Offset), 0, null);
            
        }
    }
    
    // Function /Script/UMG.SlateBlueprintLibrary:LocalToAbsolute
    static readonly IntPtr LocalToAbsolute_NativeFunction;
    static readonly int LocalToAbsolute_ParamsSize;
    static readonly int LocalToAbsolute_Geometry_Offset;
    static readonly int LocalToAbsolute_LocalCoordinate_Offset;
    static readonly int LocalToAbsolute_ReturnValue_Offset;
    
    public static System.DoubleNumerics.Vector2 LocalToAbsolute(UnrealSharp.SlateCore.Geometry geometry, System.DoubleNumerics.Vector2 localCoordinate)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[LocalToAbsolute_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.GeometryMarshaler.ToNative(IntPtr.Add(ParamsBuffer, LocalToAbsolute_Geometry_Offset), 0, null, geometry);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, LocalToAbsolute_LocalCoordinate_Offset), 0, null, localCoordinate);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, LocalToAbsolute_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector2 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(ParamsBuffer, LocalToAbsolute_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.SlateBlueprintLibrary:IsUnderLocation
    static readonly IntPtr IsUnderLocation_NativeFunction;
    static readonly int IsUnderLocation_ParamsSize;
    static readonly int IsUnderLocation_Geometry_Offset;
    static readonly int IsUnderLocation_AbsoluteCoordinate_Offset;
    static readonly int IsUnderLocation_ReturnValue_Offset;
    
    public static bool IsUnderLocation(UnrealSharp.SlateCore.Geometry geometry, System.DoubleNumerics.Vector2 absoluteCoordinate)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[IsUnderLocation_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.GeometryMarshaler.ToNative(IntPtr.Add(ParamsBuffer, IsUnderLocation_Geometry_Offset), 0, null, geometry);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, IsUnderLocation_AbsoluteCoordinate_Offset), 0, null, absoluteCoordinate);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, IsUnderLocation_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, IsUnderLocation_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.SlateBlueprintLibrary:GetLocalTopLeft
    static readonly IntPtr GetLocalTopLeft_NativeFunction;
    static readonly int GetLocalTopLeft_ParamsSize;
    static readonly int GetLocalTopLeft_Geometry_Offset;
    static readonly int GetLocalTopLeft_ReturnValue_Offset;
    
    public static System.DoubleNumerics.Vector2 GetLocalTopLeft(UnrealSharp.SlateCore.Geometry geometry)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetLocalTopLeft_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.GeometryMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetLocalTopLeft_Geometry_Offset), 0, null, geometry);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetLocalTopLeft_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector2 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(ParamsBuffer, GetLocalTopLeft_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.SlateBlueprintLibrary:GetLocalSize
    static readonly IntPtr GetLocalSize_NativeFunction;
    static readonly int GetLocalSize_ParamsSize;
    static readonly int GetLocalSize_Geometry_Offset;
    static readonly int GetLocalSize_ReturnValue_Offset;
    
    public static System.DoubleNumerics.Vector2 GetLocalSize(UnrealSharp.SlateCore.Geometry geometry)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetLocalSize_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.GeometryMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetLocalSize_Geometry_Offset), 0, null, geometry);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetLocalSize_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector2 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(ParamsBuffer, GetLocalSize_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.SlateBlueprintLibrary:GetAbsoluteSize
    static readonly IntPtr GetAbsoluteSize_NativeFunction;
    static readonly int GetAbsoluteSize_ParamsSize;
    static readonly int GetAbsoluteSize_Geometry_Offset;
    static readonly int GetAbsoluteSize_ReturnValue_Offset;
    
    public static System.DoubleNumerics.Vector2 GetAbsoluteSize(UnrealSharp.SlateCore.Geometry geometry)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetAbsoluteSize_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.GeometryMarshaler.ToNative(IntPtr.Add(ParamsBuffer, GetAbsoluteSize_Geometry_Offset), 0, null, geometry);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetAbsoluteSize_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector2 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(ParamsBuffer, GetAbsoluteSize_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.SlateBlueprintLibrary:EqualEqual_SlateBrush
    static readonly IntPtr EqualEqual_SlateBrush_NativeFunction;
    static readonly int EqualEqual_SlateBrush_ParamsSize;
    static readonly int EqualEqual_SlateBrush_A_Offset;
    static readonly int EqualEqual_SlateBrush_B_Offset;
    static readonly int EqualEqual_SlateBrush_ReturnValue_Offset;
    
    public static bool EqualEqual_SlateBrush(UnrealSharp.SlateCore.SlateBrush a, UnrealSharp.SlateCore.SlateBrush b)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[EqualEqual_SlateBrush_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.SlateBrushMarshaler.ToNative(IntPtr.Add(ParamsBuffer, EqualEqual_SlateBrush_A_Offset), 0, null, a);
            UnrealSharp.SlateCore.SlateBrushMarshaler.ToNative(IntPtr.Add(ParamsBuffer, EqualEqual_SlateBrush_B_Offset), 0, null, b);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, EqualEqual_SlateBrush_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, EqualEqual_SlateBrush_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.SlateBlueprintLibrary:AbsoluteToViewport
    static readonly IntPtr AbsoluteToViewport_NativeFunction;
    static readonly int AbsoluteToViewport_ParamsSize;
    static readonly int AbsoluteToViewport_WorldContextObject_Offset;
    static readonly int AbsoluteToViewport_AbsoluteDesktopCoordinate_Offset;
    static readonly int AbsoluteToViewport_PixelPosition_Offset;
    static readonly int AbsoluteToViewport_ViewportPosition_Offset;
    
    public static void AbsoluteToViewport(UnrealSharp.CoreUObject.Object worldContextObject, System.DoubleNumerics.Vector2 absoluteDesktopCoordinate, out System.DoubleNumerics.Vector2 pixelPosition, out System.DoubleNumerics.Vector2 viewportPosition)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AbsoluteToViewport_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, AbsoluteToViewport_WorldContextObject_Offset), 0, null, worldContextObject);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, AbsoluteToViewport_AbsoluteDesktopCoordinate_Offset), 0, null, absoluteDesktopCoordinate);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, AbsoluteToViewport_NativeFunction, ParamsBuffer);
            
            pixelPosition = BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(ParamsBuffer, AbsoluteToViewport_PixelPosition_Offset), 0, null);
            viewportPosition = BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(ParamsBuffer, AbsoluteToViewport_ViewportPosition_Offset), 0, null);
            
        }
    }
    
    // Function /Script/UMG.SlateBlueprintLibrary:AbsoluteToLocal
    static readonly IntPtr AbsoluteToLocal_NativeFunction;
    static readonly int AbsoluteToLocal_ParamsSize;
    static readonly int AbsoluteToLocal_Geometry_Offset;
    static readonly int AbsoluteToLocal_AbsoluteCoordinate_Offset;
    static readonly int AbsoluteToLocal_ReturnValue_Offset;
    
    public static System.DoubleNumerics.Vector2 AbsoluteToLocal(UnrealSharp.SlateCore.Geometry geometry, System.DoubleNumerics.Vector2 absoluteCoordinate)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AbsoluteToLocal_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.SlateCore.GeometryMarshaler.ToNative(IntPtr.Add(ParamsBuffer, AbsoluteToLocal_Geometry_Offset), 0, null, geometry);
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, AbsoluteToLocal_AbsoluteCoordinate_Offset), 0, null, absoluteCoordinate);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, AbsoluteToLocal_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector2 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(ParamsBuffer, AbsoluteToLocal_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.UMG;

[UClass]
public partial class Spacer : UnrealSharp.UMG.Widget
{
    
    static Spacer()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("Spacer");
        
        Size_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Size");
        
        SetSize_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetSize");
        SetSize_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetSize_NativeFunction);
        SetSize_InSize_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetSize_NativeFunction, "InSize");
        
        
    }
    
    protected Spacer(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // StructProperty /Script/UMG.Spacer:Size
    static readonly int Size_Offset;
    
    public System.DoubleNumerics.Vector2 Size
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(NativeObject, Size_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(NativeObject, Size_Offset), 0, this, value);
        }
    }
    
    // Function /Script/UMG.Spacer:SetSize
    static readonly IntPtr SetSize_NativeFunction;
    static readonly int SetSize_ParamsSize;
    static readonly int SetSize_InSize_Offset;
    
    public void SetSize(System.DoubleNumerics.Vector2 inSize)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetSize_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, SetSize_InSize_Offset), 0, null, inSize);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetSize_NativeFunction, ParamsBuffer);
            
        }
    }
    
    
}
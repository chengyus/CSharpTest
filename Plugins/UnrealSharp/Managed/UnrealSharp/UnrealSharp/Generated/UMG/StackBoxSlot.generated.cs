// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.UMG;

[UClass]
public partial class StackBoxSlot : UnrealSharp.UMG.PanelSlot
{
    
    static StackBoxSlot()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("StackBoxSlot");
        
        Padding_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Padding");
        Size_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Size");
        HorizontalAlignment_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "HorizontalAlignment");
        VerticalAlignment_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "VerticalAlignment");
        
        
        
    }
    
    protected StackBoxSlot(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // StructProperty /Script/UMG.StackBoxSlot:Padding
    static readonly int Padding_Offset;
    
    public UnrealSharp.SlateCore.Margin Padding
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.SlateCore.Margin>.FromNative(IntPtr.Add(NativeObject, Padding_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.SlateCore.Margin>.ToNative(IntPtr.Add(NativeObject, Padding_Offset), 0, this, value);
        }
    }
    
    // StructProperty /Script/UMG.StackBoxSlot:Size
    static readonly int Size_Offset;
    
    public UnrealSharp.UMG.SlateChildSize Size
    {
        get
        {
            CheckObjectForValidity();
            return UnrealSharp.UMG.SlateChildSizeMarshaler.FromNative(IntPtr.Add(NativeObject, Size_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            UnrealSharp.UMG.SlateChildSizeMarshaler.ToNative(IntPtr.Add(NativeObject, Size_Offset), 0, this, value);
        }
    }
    
    // ByteProperty /Script/UMG.StackBoxSlot:HorizontalAlignment
    static readonly int HorizontalAlignment_Offset;
    
    public UnrealSharp.SlateCore.EHorizontalAlignment HorizontalAlignment
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.SlateCore.EHorizontalAlignment>.FromNative(IntPtr.Add(NativeObject, HorizontalAlignment_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.SlateCore.EHorizontalAlignment>.ToNative(IntPtr.Add(NativeObject, HorizontalAlignment_Offset), 0, this, value);
        }
    }
    
    // ByteProperty /Script/UMG.StackBoxSlot:VerticalAlignment
    static readonly int VerticalAlignment_Offset;
    
    public UnrealSharp.SlateCore.EVerticalAlignment VerticalAlignment
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.SlateCore.EVerticalAlignment>.FromNative(IntPtr.Add(NativeObject, VerticalAlignment_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.SlateCore.EVerticalAlignment>.ToNative(IntPtr.Add(NativeObject, VerticalAlignment_Offset), 0, this, value);
        }
    }
    
    
}
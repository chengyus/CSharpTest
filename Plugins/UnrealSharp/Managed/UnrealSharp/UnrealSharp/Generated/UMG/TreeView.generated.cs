// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.UMG;

[UClass]
public partial class TreeView : UnrealSharp.UMG.ListView
{
    
    static TreeView()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("TreeView");
        
        
        SetItemExpansion_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetItemExpansion");
        SetItemExpansion_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetItemExpansion_NativeFunction);
        SetItemExpansion_Item_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetItemExpansion_NativeFunction, "Item");
        SetItemExpansion_bExpandItem_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetItemExpansion_NativeFunction, "bExpandItem");
        ExpandAll_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ExpandAll");
        CollapseAll_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "CollapseAll");
        
        
    }
    
    protected TreeView(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/UMG.TreeView:SetItemExpansion
    static readonly IntPtr SetItemExpansion_NativeFunction;
    static readonly int SetItemExpansion_ParamsSize;
    static readonly int SetItemExpansion_Item_Offset;
    static readonly int SetItemExpansion_bExpandItem_Offset;
    
    public void SetItemExpansion(UnrealSharp.CoreUObject.Object item, bool bExpandItem)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetItemExpansion_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, SetItemExpansion_Item_Offset), 0, null, item);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, SetItemExpansion_bExpandItem_Offset), 0, null, bExpandItem);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetItemExpansion_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.TreeView:ExpandAll
    static readonly IntPtr ExpandAll_NativeFunction;
    
    public void ExpandAll()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, ExpandAll_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/UMG.TreeView:CollapseAll
    static readonly IntPtr CollapseAll_NativeFunction;
    
    public void CollapseAll()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, CollapseAll_NativeFunction, IntPtr.Zero);
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.UMG;

[UClass]
public partial class WidgetLayoutLibrary : UnrealSharp.Engine.BlueprintFunctionLibrary
{
    
    static readonly IntPtr NativeClassPtr;
    static WidgetLayoutLibrary()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("WidgetLayoutLibrary");
        
        
        SlotAsWrapBoxSlot_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SlotAsWrapBoxSlot");
        SlotAsWrapBoxSlot_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SlotAsWrapBoxSlot_NativeFunction);
        SlotAsWrapBoxSlot_Widget_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SlotAsWrapBoxSlot_NativeFunction, "Widget");
        SlotAsWrapBoxSlot_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SlotAsWrapBoxSlot_NativeFunction, "ReturnValue");
        SlotAsWidgetSwitcherSlot_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SlotAsWidgetSwitcherSlot");
        SlotAsWidgetSwitcherSlot_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SlotAsWidgetSwitcherSlot_NativeFunction);
        SlotAsWidgetSwitcherSlot_Widget_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SlotAsWidgetSwitcherSlot_NativeFunction, "Widget");
        SlotAsWidgetSwitcherSlot_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SlotAsWidgetSwitcherSlot_NativeFunction, "ReturnValue");
        SlotAsVerticalBoxSlot_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SlotAsVerticalBoxSlot");
        SlotAsVerticalBoxSlot_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SlotAsVerticalBoxSlot_NativeFunction);
        SlotAsVerticalBoxSlot_Widget_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SlotAsVerticalBoxSlot_NativeFunction, "Widget");
        SlotAsVerticalBoxSlot_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SlotAsVerticalBoxSlot_NativeFunction, "ReturnValue");
        SlotAsUniformGridSlot_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SlotAsUniformGridSlot");
        SlotAsUniformGridSlot_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SlotAsUniformGridSlot_NativeFunction);
        SlotAsUniformGridSlot_Widget_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SlotAsUniformGridSlot_NativeFunction, "Widget");
        SlotAsUniformGridSlot_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SlotAsUniformGridSlot_NativeFunction, "ReturnValue");
        SlotAsSizeBoxSlot_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SlotAsSizeBoxSlot");
        SlotAsSizeBoxSlot_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SlotAsSizeBoxSlot_NativeFunction);
        SlotAsSizeBoxSlot_Widget_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SlotAsSizeBoxSlot_NativeFunction, "Widget");
        SlotAsSizeBoxSlot_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SlotAsSizeBoxSlot_NativeFunction, "ReturnValue");
        SlotAsScrollBoxSlot_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SlotAsScrollBoxSlot");
        SlotAsScrollBoxSlot_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SlotAsScrollBoxSlot_NativeFunction);
        SlotAsScrollBoxSlot_Widget_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SlotAsScrollBoxSlot_NativeFunction, "Widget");
        SlotAsScrollBoxSlot_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SlotAsScrollBoxSlot_NativeFunction, "ReturnValue");
        SlotAsScaleBoxSlot_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SlotAsScaleBoxSlot");
        SlotAsScaleBoxSlot_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SlotAsScaleBoxSlot_NativeFunction);
        SlotAsScaleBoxSlot_Widget_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SlotAsScaleBoxSlot_NativeFunction, "Widget");
        SlotAsScaleBoxSlot_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SlotAsScaleBoxSlot_NativeFunction, "ReturnValue");
        SlotAsSafeBoxSlot_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SlotAsSafeBoxSlot");
        SlotAsSafeBoxSlot_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SlotAsSafeBoxSlot_NativeFunction);
        SlotAsSafeBoxSlot_Widget_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SlotAsSafeBoxSlot_NativeFunction, "Widget");
        SlotAsSafeBoxSlot_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SlotAsSafeBoxSlot_NativeFunction, "ReturnValue");
        SlotAsOverlaySlot_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SlotAsOverlaySlot");
        SlotAsOverlaySlot_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SlotAsOverlaySlot_NativeFunction);
        SlotAsOverlaySlot_Widget_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SlotAsOverlaySlot_NativeFunction, "Widget");
        SlotAsOverlaySlot_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SlotAsOverlaySlot_NativeFunction, "ReturnValue");
        SlotAsHorizontalBoxSlot_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SlotAsHorizontalBoxSlot");
        SlotAsHorizontalBoxSlot_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SlotAsHorizontalBoxSlot_NativeFunction);
        SlotAsHorizontalBoxSlot_Widget_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SlotAsHorizontalBoxSlot_NativeFunction, "Widget");
        SlotAsHorizontalBoxSlot_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SlotAsHorizontalBoxSlot_NativeFunction, "ReturnValue");
        SlotAsGridSlot_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SlotAsGridSlot");
        SlotAsGridSlot_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SlotAsGridSlot_NativeFunction);
        SlotAsGridSlot_Widget_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SlotAsGridSlot_NativeFunction, "Widget");
        SlotAsGridSlot_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SlotAsGridSlot_NativeFunction, "ReturnValue");
        SlotAsCanvasSlot_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SlotAsCanvasSlot");
        SlotAsCanvasSlot_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SlotAsCanvasSlot_NativeFunction);
        SlotAsCanvasSlot_Widget_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SlotAsCanvasSlot_NativeFunction, "Widget");
        SlotAsCanvasSlot_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SlotAsCanvasSlot_NativeFunction, "ReturnValue");
        SlotAsBorderSlot_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SlotAsBorderSlot");
        SlotAsBorderSlot_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SlotAsBorderSlot_NativeFunction);
        SlotAsBorderSlot_Widget_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SlotAsBorderSlot_NativeFunction, "Widget");
        SlotAsBorderSlot_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SlotAsBorderSlot_NativeFunction, "ReturnValue");
        RemoveAllWidgets_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "RemoveAllWidgets");
        RemoveAllWidgets_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(RemoveAllWidgets_NativeFunction);
        RemoveAllWidgets_WorldContextObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(RemoveAllWidgets_NativeFunction, "WorldContextObject");
        ProjectWorldLocationToWidgetPosition_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "ProjectWorldLocationToWidgetPosition");
        ProjectWorldLocationToWidgetPosition_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(ProjectWorldLocationToWidgetPosition_NativeFunction);
        ProjectWorldLocationToWidgetPosition_PlayerController_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ProjectWorldLocationToWidgetPosition_NativeFunction, "PlayerController");
        ProjectWorldLocationToWidgetPosition_WorldLocation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ProjectWorldLocationToWidgetPosition_NativeFunction, "WorldLocation");
        ProjectWorldLocationToWidgetPosition_ScreenPosition_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ProjectWorldLocationToWidgetPosition_NativeFunction, "ScreenPosition");
        ProjectWorldLocationToWidgetPosition_bPlayerViewportRelative_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ProjectWorldLocationToWidgetPosition_NativeFunction, "bPlayerViewportRelative");
        ProjectWorldLocationToWidgetPosition_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(ProjectWorldLocationToWidgetPosition_NativeFunction, "ReturnValue");
        GetViewportWidgetGeometry_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetViewportWidgetGeometry");
        GetViewportWidgetGeometry_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetViewportWidgetGeometry_NativeFunction);
        GetViewportWidgetGeometry_WorldContextObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetViewportWidgetGeometry_NativeFunction, "WorldContextObject");
        GetViewportWidgetGeometry_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetViewportWidgetGeometry_NativeFunction, "ReturnValue");
        GetViewportSize_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetViewportSize");
        GetViewportSize_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetViewportSize_NativeFunction);
        GetViewportSize_WorldContextObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetViewportSize_NativeFunction, "WorldContextObject");
        GetViewportSize_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetViewportSize_NativeFunction, "ReturnValue");
        GetViewportScale_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetViewportScale");
        GetViewportScale_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetViewportScale_NativeFunction);
        GetViewportScale_WorldContextObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetViewportScale_NativeFunction, "WorldContextObject");
        GetViewportScale_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetViewportScale_NativeFunction, "ReturnValue");
        GetPlayerScreenWidgetGeometry_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetPlayerScreenWidgetGeometry");
        GetPlayerScreenWidgetGeometry_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetPlayerScreenWidgetGeometry_NativeFunction);
        GetPlayerScreenWidgetGeometry_PlayerController_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetPlayerScreenWidgetGeometry_NativeFunction, "PlayerController");
        GetPlayerScreenWidgetGeometry_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetPlayerScreenWidgetGeometry_NativeFunction, "ReturnValue");
        GetMousePositionScaledByDPI_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetMousePositionScaledByDPI");
        GetMousePositionScaledByDPI_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetMousePositionScaledByDPI_NativeFunction);
        GetMousePositionScaledByDPI_Player_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMousePositionScaledByDPI_NativeFunction, "Player");
        GetMousePositionScaledByDPI_LocationX_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMousePositionScaledByDPI_NativeFunction, "LocationX");
        GetMousePositionScaledByDPI_LocationY_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMousePositionScaledByDPI_NativeFunction, "LocationY");
        GetMousePositionScaledByDPI_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMousePositionScaledByDPI_NativeFunction, "ReturnValue");
        GetMousePositionOnViewport_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetMousePositionOnViewport");
        GetMousePositionOnViewport_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetMousePositionOnViewport_NativeFunction);
        GetMousePositionOnViewport_WorldContextObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMousePositionOnViewport_NativeFunction, "WorldContextObject");
        GetMousePositionOnViewport_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMousePositionOnViewport_NativeFunction, "ReturnValue");
        GetMousePositionOnPlatform_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetMousePositionOnPlatform");
        GetMousePositionOnPlatform_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetMousePositionOnPlatform_NativeFunction);
        GetMousePositionOnPlatform_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetMousePositionOnPlatform_NativeFunction, "ReturnValue");
        
        
    }
    
    protected WidgetLayoutLibrary(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/UMG.WidgetLayoutLibrary:SlotAsWrapBoxSlot
    static readonly IntPtr SlotAsWrapBoxSlot_NativeFunction;
    static readonly int SlotAsWrapBoxSlot_ParamsSize;
    static readonly int SlotAsWrapBoxSlot_Widget_Offset;
    static readonly int SlotAsWrapBoxSlot_ReturnValue_Offset;
    
    public static UnrealSharp.UMG.WrapBoxSlot SlotAsWrapBoxSlot(UnrealSharp.UMG.Widget widget)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SlotAsWrapBoxSlot_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.UMG.Widget>.ToNative(IntPtr.Add(ParamsBuffer, SlotAsWrapBoxSlot_Widget_Offset), 0, null, widget);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SlotAsWrapBoxSlot_NativeFunction, ParamsBuffer);
            
            UnrealSharp.UMG.WrapBoxSlot returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.UMG.WrapBoxSlot>.FromNative(IntPtr.Add(ParamsBuffer, SlotAsWrapBoxSlot_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.WidgetLayoutLibrary:SlotAsWidgetSwitcherSlot
    static readonly IntPtr SlotAsWidgetSwitcherSlot_NativeFunction;
    static readonly int SlotAsWidgetSwitcherSlot_ParamsSize;
    static readonly int SlotAsWidgetSwitcherSlot_Widget_Offset;
    static readonly int SlotAsWidgetSwitcherSlot_ReturnValue_Offset;
    
    public static UnrealSharp.UMG.WidgetSwitcherSlot SlotAsWidgetSwitcherSlot(UnrealSharp.UMG.Widget widget)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SlotAsWidgetSwitcherSlot_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.UMG.Widget>.ToNative(IntPtr.Add(ParamsBuffer, SlotAsWidgetSwitcherSlot_Widget_Offset), 0, null, widget);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SlotAsWidgetSwitcherSlot_NativeFunction, ParamsBuffer);
            
            UnrealSharp.UMG.WidgetSwitcherSlot returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.UMG.WidgetSwitcherSlot>.FromNative(IntPtr.Add(ParamsBuffer, SlotAsWidgetSwitcherSlot_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.WidgetLayoutLibrary:SlotAsVerticalBoxSlot
    static readonly IntPtr SlotAsVerticalBoxSlot_NativeFunction;
    static readonly int SlotAsVerticalBoxSlot_ParamsSize;
    static readonly int SlotAsVerticalBoxSlot_Widget_Offset;
    static readonly int SlotAsVerticalBoxSlot_ReturnValue_Offset;
    
    public static UnrealSharp.UMG.VerticalBoxSlot SlotAsVerticalBoxSlot(UnrealSharp.UMG.Widget widget)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SlotAsVerticalBoxSlot_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.UMG.Widget>.ToNative(IntPtr.Add(ParamsBuffer, SlotAsVerticalBoxSlot_Widget_Offset), 0, null, widget);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SlotAsVerticalBoxSlot_NativeFunction, ParamsBuffer);
            
            UnrealSharp.UMG.VerticalBoxSlot returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.UMG.VerticalBoxSlot>.FromNative(IntPtr.Add(ParamsBuffer, SlotAsVerticalBoxSlot_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.WidgetLayoutLibrary:SlotAsUniformGridSlot
    static readonly IntPtr SlotAsUniformGridSlot_NativeFunction;
    static readonly int SlotAsUniformGridSlot_ParamsSize;
    static readonly int SlotAsUniformGridSlot_Widget_Offset;
    static readonly int SlotAsUniformGridSlot_ReturnValue_Offset;
    
    public static UnrealSharp.UMG.UniformGridSlot SlotAsUniformGridSlot(UnrealSharp.UMG.Widget widget)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SlotAsUniformGridSlot_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.UMG.Widget>.ToNative(IntPtr.Add(ParamsBuffer, SlotAsUniformGridSlot_Widget_Offset), 0, null, widget);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SlotAsUniformGridSlot_NativeFunction, ParamsBuffer);
            
            UnrealSharp.UMG.UniformGridSlot returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.UMG.UniformGridSlot>.FromNative(IntPtr.Add(ParamsBuffer, SlotAsUniformGridSlot_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.WidgetLayoutLibrary:SlotAsSizeBoxSlot
    static readonly IntPtr SlotAsSizeBoxSlot_NativeFunction;
    static readonly int SlotAsSizeBoxSlot_ParamsSize;
    static readonly int SlotAsSizeBoxSlot_Widget_Offset;
    static readonly int SlotAsSizeBoxSlot_ReturnValue_Offset;
    
    public static UnrealSharp.UMG.SizeBoxSlot SlotAsSizeBoxSlot(UnrealSharp.UMG.Widget widget)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SlotAsSizeBoxSlot_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.UMG.Widget>.ToNative(IntPtr.Add(ParamsBuffer, SlotAsSizeBoxSlot_Widget_Offset), 0, null, widget);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SlotAsSizeBoxSlot_NativeFunction, ParamsBuffer);
            
            UnrealSharp.UMG.SizeBoxSlot returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.UMG.SizeBoxSlot>.FromNative(IntPtr.Add(ParamsBuffer, SlotAsSizeBoxSlot_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.WidgetLayoutLibrary:SlotAsScrollBoxSlot
    static readonly IntPtr SlotAsScrollBoxSlot_NativeFunction;
    static readonly int SlotAsScrollBoxSlot_ParamsSize;
    static readonly int SlotAsScrollBoxSlot_Widget_Offset;
    static readonly int SlotAsScrollBoxSlot_ReturnValue_Offset;
    
    public static UnrealSharp.UMG.ScrollBoxSlot SlotAsScrollBoxSlot(UnrealSharp.UMG.Widget widget)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SlotAsScrollBoxSlot_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.UMG.Widget>.ToNative(IntPtr.Add(ParamsBuffer, SlotAsScrollBoxSlot_Widget_Offset), 0, null, widget);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SlotAsScrollBoxSlot_NativeFunction, ParamsBuffer);
            
            UnrealSharp.UMG.ScrollBoxSlot returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.UMG.ScrollBoxSlot>.FromNative(IntPtr.Add(ParamsBuffer, SlotAsScrollBoxSlot_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.WidgetLayoutLibrary:SlotAsScaleBoxSlot
    static readonly IntPtr SlotAsScaleBoxSlot_NativeFunction;
    static readonly int SlotAsScaleBoxSlot_ParamsSize;
    static readonly int SlotAsScaleBoxSlot_Widget_Offset;
    static readonly int SlotAsScaleBoxSlot_ReturnValue_Offset;
    
    public static UnrealSharp.UMG.ScaleBoxSlot SlotAsScaleBoxSlot(UnrealSharp.UMG.Widget widget)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SlotAsScaleBoxSlot_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.UMG.Widget>.ToNative(IntPtr.Add(ParamsBuffer, SlotAsScaleBoxSlot_Widget_Offset), 0, null, widget);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SlotAsScaleBoxSlot_NativeFunction, ParamsBuffer);
            
            UnrealSharp.UMG.ScaleBoxSlot returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.UMG.ScaleBoxSlot>.FromNative(IntPtr.Add(ParamsBuffer, SlotAsScaleBoxSlot_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.WidgetLayoutLibrary:SlotAsSafeBoxSlot
    static readonly IntPtr SlotAsSafeBoxSlot_NativeFunction;
    static readonly int SlotAsSafeBoxSlot_ParamsSize;
    static readonly int SlotAsSafeBoxSlot_Widget_Offset;
    static readonly int SlotAsSafeBoxSlot_ReturnValue_Offset;
    
    public static UnrealSharp.UMG.SafeZoneSlot SlotAsSafeBoxSlot(UnrealSharp.UMG.Widget widget)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SlotAsSafeBoxSlot_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.UMG.Widget>.ToNative(IntPtr.Add(ParamsBuffer, SlotAsSafeBoxSlot_Widget_Offset), 0, null, widget);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SlotAsSafeBoxSlot_NativeFunction, ParamsBuffer);
            
            UnrealSharp.UMG.SafeZoneSlot returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.UMG.SafeZoneSlot>.FromNative(IntPtr.Add(ParamsBuffer, SlotAsSafeBoxSlot_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.WidgetLayoutLibrary:SlotAsOverlaySlot
    static readonly IntPtr SlotAsOverlaySlot_NativeFunction;
    static readonly int SlotAsOverlaySlot_ParamsSize;
    static readonly int SlotAsOverlaySlot_Widget_Offset;
    static readonly int SlotAsOverlaySlot_ReturnValue_Offset;
    
    public static UnrealSharp.UMG.OverlaySlot SlotAsOverlaySlot(UnrealSharp.UMG.Widget widget)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SlotAsOverlaySlot_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.UMG.Widget>.ToNative(IntPtr.Add(ParamsBuffer, SlotAsOverlaySlot_Widget_Offset), 0, null, widget);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SlotAsOverlaySlot_NativeFunction, ParamsBuffer);
            
            UnrealSharp.UMG.OverlaySlot returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.UMG.OverlaySlot>.FromNative(IntPtr.Add(ParamsBuffer, SlotAsOverlaySlot_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.WidgetLayoutLibrary:SlotAsHorizontalBoxSlot
    static readonly IntPtr SlotAsHorizontalBoxSlot_NativeFunction;
    static readonly int SlotAsHorizontalBoxSlot_ParamsSize;
    static readonly int SlotAsHorizontalBoxSlot_Widget_Offset;
    static readonly int SlotAsHorizontalBoxSlot_ReturnValue_Offset;
    
    public static UnrealSharp.UMG.HorizontalBoxSlot SlotAsHorizontalBoxSlot(UnrealSharp.UMG.Widget widget)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SlotAsHorizontalBoxSlot_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.UMG.Widget>.ToNative(IntPtr.Add(ParamsBuffer, SlotAsHorizontalBoxSlot_Widget_Offset), 0, null, widget);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SlotAsHorizontalBoxSlot_NativeFunction, ParamsBuffer);
            
            UnrealSharp.UMG.HorizontalBoxSlot returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.UMG.HorizontalBoxSlot>.FromNative(IntPtr.Add(ParamsBuffer, SlotAsHorizontalBoxSlot_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.WidgetLayoutLibrary:SlotAsGridSlot
    static readonly IntPtr SlotAsGridSlot_NativeFunction;
    static readonly int SlotAsGridSlot_ParamsSize;
    static readonly int SlotAsGridSlot_Widget_Offset;
    static readonly int SlotAsGridSlot_ReturnValue_Offset;
    
    public static UnrealSharp.UMG.GridSlot SlotAsGridSlot(UnrealSharp.UMG.Widget widget)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SlotAsGridSlot_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.UMG.Widget>.ToNative(IntPtr.Add(ParamsBuffer, SlotAsGridSlot_Widget_Offset), 0, null, widget);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SlotAsGridSlot_NativeFunction, ParamsBuffer);
            
            UnrealSharp.UMG.GridSlot returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.UMG.GridSlot>.FromNative(IntPtr.Add(ParamsBuffer, SlotAsGridSlot_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.WidgetLayoutLibrary:SlotAsCanvasSlot
    static readonly IntPtr SlotAsCanvasSlot_NativeFunction;
    static readonly int SlotAsCanvasSlot_ParamsSize;
    static readonly int SlotAsCanvasSlot_Widget_Offset;
    static readonly int SlotAsCanvasSlot_ReturnValue_Offset;
    
    public static UnrealSharp.UMG.CanvasPanelSlot SlotAsCanvasSlot(UnrealSharp.UMG.Widget widget)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SlotAsCanvasSlot_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.UMG.Widget>.ToNative(IntPtr.Add(ParamsBuffer, SlotAsCanvasSlot_Widget_Offset), 0, null, widget);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SlotAsCanvasSlot_NativeFunction, ParamsBuffer);
            
            UnrealSharp.UMG.CanvasPanelSlot returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.UMG.CanvasPanelSlot>.FromNative(IntPtr.Add(ParamsBuffer, SlotAsCanvasSlot_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.WidgetLayoutLibrary:SlotAsBorderSlot
    static readonly IntPtr SlotAsBorderSlot_NativeFunction;
    static readonly int SlotAsBorderSlot_ParamsSize;
    static readonly int SlotAsBorderSlot_Widget_Offset;
    static readonly int SlotAsBorderSlot_ReturnValue_Offset;
    
    public static UnrealSharp.UMG.BorderSlot SlotAsBorderSlot(UnrealSharp.UMG.Widget widget)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SlotAsBorderSlot_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.UMG.Widget>.ToNative(IntPtr.Add(ParamsBuffer, SlotAsBorderSlot_Widget_Offset), 0, null, widget);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, SlotAsBorderSlot_NativeFunction, ParamsBuffer);
            
            UnrealSharp.UMG.BorderSlot returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.UMG.BorderSlot>.FromNative(IntPtr.Add(ParamsBuffer, SlotAsBorderSlot_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.WidgetLayoutLibrary:RemoveAllWidgets
    static readonly IntPtr RemoveAllWidgets_NativeFunction;
    static readonly int RemoveAllWidgets_ParamsSize;
    static readonly int RemoveAllWidgets_WorldContextObject_Offset;
    
    public static void RemoveAllWidgets(UnrealSharp.CoreUObject.Object worldContextObject)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[RemoveAllWidgets_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, RemoveAllWidgets_WorldContextObject_Offset), 0, null, worldContextObject);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, RemoveAllWidgets_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.WidgetLayoutLibrary:ProjectWorldLocationToWidgetPosition
    static readonly IntPtr ProjectWorldLocationToWidgetPosition_NativeFunction;
    static readonly int ProjectWorldLocationToWidgetPosition_ParamsSize;
    static readonly int ProjectWorldLocationToWidgetPosition_PlayerController_Offset;
    static readonly int ProjectWorldLocationToWidgetPosition_WorldLocation_Offset;
    static readonly int ProjectWorldLocationToWidgetPosition_ScreenPosition_Offset;
    static readonly int ProjectWorldLocationToWidgetPosition_bPlayerViewportRelative_Offset;
    static readonly int ProjectWorldLocationToWidgetPosition_ReturnValue_Offset;
    
    public static bool ProjectWorldLocationToWidgetPosition(UnrealSharp.Engine.PlayerController playerController, System.DoubleNumerics.Vector3 worldLocation, out System.DoubleNumerics.Vector2 screenPosition, bool bPlayerViewportRelative)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[ProjectWorldLocationToWidgetPosition_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.PlayerController>.ToNative(IntPtr.Add(ParamsBuffer, ProjectWorldLocationToWidgetPosition_PlayerController_Offset), 0, null, playerController);
            BlittableMarshaller<System.DoubleNumerics.Vector3>.ToNative(IntPtr.Add(ParamsBuffer, ProjectWorldLocationToWidgetPosition_WorldLocation_Offset), 0, null, worldLocation);
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, ProjectWorldLocationToWidgetPosition_bPlayerViewportRelative_Offset), 0, null, bPlayerViewportRelative);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, ProjectWorldLocationToWidgetPosition_NativeFunction, ParamsBuffer);
            
            screenPosition = BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(ParamsBuffer, ProjectWorldLocationToWidgetPosition_ScreenPosition_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, ProjectWorldLocationToWidgetPosition_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.WidgetLayoutLibrary:GetViewportWidgetGeometry
    static readonly IntPtr GetViewportWidgetGeometry_NativeFunction;
    static readonly int GetViewportWidgetGeometry_ParamsSize;
    static readonly int GetViewportWidgetGeometry_WorldContextObject_Offset;
    static readonly int GetViewportWidgetGeometry_ReturnValue_Offset;
    
    public static UnrealSharp.SlateCore.Geometry GetViewportWidgetGeometry(UnrealSharp.CoreUObject.Object worldContextObject)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetViewportWidgetGeometry_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, GetViewportWidgetGeometry_WorldContextObject_Offset), 0, null, worldContextObject);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetViewportWidgetGeometry_NativeFunction, ParamsBuffer);
            
            UnrealSharp.SlateCore.Geometry returnValue;
            returnValue = UnrealSharp.SlateCore.GeometryMarshaler.FromNative(IntPtr.Add(ParamsBuffer, GetViewportWidgetGeometry_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.WidgetLayoutLibrary:GetViewportSize
    static readonly IntPtr GetViewportSize_NativeFunction;
    static readonly int GetViewportSize_ParamsSize;
    static readonly int GetViewportSize_WorldContextObject_Offset;
    static readonly int GetViewportSize_ReturnValue_Offset;
    
    public static System.DoubleNumerics.Vector2 GetViewportSize(UnrealSharp.CoreUObject.Object worldContextObject)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetViewportSize_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, GetViewportSize_WorldContextObject_Offset), 0, null, worldContextObject);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetViewportSize_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector2 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(ParamsBuffer, GetViewportSize_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.WidgetLayoutLibrary:GetViewportScale
    static readonly IntPtr GetViewportScale_NativeFunction;
    static readonly int GetViewportScale_ParamsSize;
    static readonly int GetViewportScale_WorldContextObject_Offset;
    static readonly int GetViewportScale_ReturnValue_Offset;
    
    public static float GetViewportScale(UnrealSharp.CoreUObject.Object worldContextObject)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetViewportScale_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, GetViewportScale_WorldContextObject_Offset), 0, null, worldContextObject);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetViewportScale_NativeFunction, ParamsBuffer);
            
            float returnValue;
            returnValue = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetViewportScale_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.WidgetLayoutLibrary:GetPlayerScreenWidgetGeometry
    static readonly IntPtr GetPlayerScreenWidgetGeometry_NativeFunction;
    static readonly int GetPlayerScreenWidgetGeometry_ParamsSize;
    static readonly int GetPlayerScreenWidgetGeometry_PlayerController_Offset;
    static readonly int GetPlayerScreenWidgetGeometry_ReturnValue_Offset;
    
    public static UnrealSharp.SlateCore.Geometry GetPlayerScreenWidgetGeometry(UnrealSharp.Engine.PlayerController playerController)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetPlayerScreenWidgetGeometry_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.PlayerController>.ToNative(IntPtr.Add(ParamsBuffer, GetPlayerScreenWidgetGeometry_PlayerController_Offset), 0, null, playerController);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetPlayerScreenWidgetGeometry_NativeFunction, ParamsBuffer);
            
            UnrealSharp.SlateCore.Geometry returnValue;
            returnValue = UnrealSharp.SlateCore.GeometryMarshaler.FromNative(IntPtr.Add(ParamsBuffer, GetPlayerScreenWidgetGeometry_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.WidgetLayoutLibrary:GetMousePositionScaledByDPI
    static readonly IntPtr GetMousePositionScaledByDPI_NativeFunction;
    static readonly int GetMousePositionScaledByDPI_ParamsSize;
    static readonly int GetMousePositionScaledByDPI_Player_Offset;
    static readonly int GetMousePositionScaledByDPI_LocationX_Offset;
    static readonly int GetMousePositionScaledByDPI_LocationY_Offset;
    static readonly int GetMousePositionScaledByDPI_ReturnValue_Offset;
    
    public static bool GetMousePositionScaledByDPI(UnrealSharp.Engine.PlayerController player, out float locationX, out float locationY)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetMousePositionScaledByDPI_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.PlayerController>.ToNative(IntPtr.Add(ParamsBuffer, GetMousePositionScaledByDPI_Player_Offset), 0, null, player);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetMousePositionScaledByDPI_NativeFunction, ParamsBuffer);
            
            locationX = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetMousePositionScaledByDPI_LocationX_Offset), 0, null);
            locationY = BlittableMarshaller<float>.FromNative(IntPtr.Add(ParamsBuffer, GetMousePositionScaledByDPI_LocationY_Offset), 0, null);
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, GetMousePositionScaledByDPI_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.WidgetLayoutLibrary:GetMousePositionOnViewport
    static readonly IntPtr GetMousePositionOnViewport_NativeFunction;
    static readonly int GetMousePositionOnViewport_ParamsSize;
    static readonly int GetMousePositionOnViewport_WorldContextObject_Offset;
    static readonly int GetMousePositionOnViewport_ReturnValue_Offset;
    
    public static System.DoubleNumerics.Vector2 GetMousePositionOnViewport(UnrealSharp.CoreUObject.Object worldContextObject)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetMousePositionOnViewport_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, GetMousePositionOnViewport_WorldContextObject_Offset), 0, null, worldContextObject);
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetMousePositionOnViewport_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector2 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(ParamsBuffer, GetMousePositionOnViewport_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/UMG.WidgetLayoutLibrary:GetMousePositionOnPlatform
    static readonly IntPtr GetMousePositionOnPlatform_NativeFunction;
    static readonly int GetMousePositionOnPlatform_ParamsSize;
    static readonly int GetMousePositionOnPlatform_ReturnValue_Offset;
    
    public static System.DoubleNumerics.Vector2 GetMousePositionOnPlatform()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetMousePositionOnPlatform_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetMousePositionOnPlatform_NativeFunction, ParamsBuffer);
            
            System.DoubleNumerics.Vector2 returnValue;
            returnValue = BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(ParamsBuffer, GetMousePositionOnPlatform_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.UMG;

[UClass]
public partial class WrapBox : UnrealSharp.UMG.PanelWidget
{
    
    static WrapBox()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("WrapBox");
        
        InnerSlotPadding_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "InnerSlotPadding");
        WrapSize_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "WrapSize");
        bExplicitWrapSize_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bExplicitWrapSize");
        HorizontalAlignment_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "HorizontalAlignment");
        Orientation_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Orientation");
        
        SetInnerSlotPadding_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetInnerSlotPadding");
        SetInnerSlotPadding_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetInnerSlotPadding_NativeFunction);
        SetInnerSlotPadding_InPadding_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetInnerSlotPadding_NativeFunction, "InPadding");
        SetHorizontalAlignment_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetHorizontalAlignment");
        SetHorizontalAlignment_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetHorizontalAlignment_NativeFunction);
        SetHorizontalAlignment_InHorizontalAlignment_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetHorizontalAlignment_NativeFunction, "InHorizontalAlignment");
        AddChildToWrapBox_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "AddChildToWrapBox");
        AddChildToWrapBox_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(AddChildToWrapBox_NativeFunction);
        AddChildToWrapBox_Content_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddChildToWrapBox_NativeFunction, "Content");
        AddChildToWrapBox_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(AddChildToWrapBox_NativeFunction, "ReturnValue");
        
        
    }
    
    protected WrapBox(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // StructProperty /Script/UMG.WrapBox:InnerSlotPadding
    static readonly int InnerSlotPadding_Offset;
    
    public System.DoubleNumerics.Vector2 InnerSlotPadding
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<System.DoubleNumerics.Vector2>.FromNative(IntPtr.Add(NativeObject, InnerSlotPadding_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(NativeObject, InnerSlotPadding_Offset), 0, this, value);
        }
    }
    
    // FloatProperty /Script/UMG.WrapBox:WrapSize
    static readonly int WrapSize_Offset;
    
    public float WrapSize
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<float>.FromNative(IntPtr.Add(NativeObject, WrapSize_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<float>.ToNative(IntPtr.Add(NativeObject, WrapSize_Offset), 0, this, value);
        }
    }
    
    // BoolProperty /Script/UMG.WrapBox:bExplicitWrapSize
    static readonly int bExplicitWrapSize_Offset;
    
    public bool bExplicitWrapSize
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bExplicitWrapSize_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, bExplicitWrapSize_Offset), 0, this, value);
        }
    }
    
    // ByteProperty /Script/UMG.WrapBox:HorizontalAlignment
    static readonly int HorizontalAlignment_Offset;
    
    public UnrealSharp.SlateCore.EHorizontalAlignment HorizontalAlignment
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.SlateCore.EHorizontalAlignment>.FromNative(IntPtr.Add(NativeObject, HorizontalAlignment_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.SlateCore.EHorizontalAlignment>.ToNative(IntPtr.Add(NativeObject, HorizontalAlignment_Offset), 0, this, value);
        }
    }
    
    // ByteProperty /Script/UMG.WrapBox:Orientation
    static readonly int Orientation_Offset;
    
    public UnrealSharp.SlateCore.EOrientation Orientation
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.SlateCore.EOrientation>.FromNative(IntPtr.Add(NativeObject, Orientation_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.SlateCore.EOrientation>.ToNative(IntPtr.Add(NativeObject, Orientation_Offset), 0, this, value);
        }
    }
    
    // Function /Script/UMG.WrapBox:SetInnerSlotPadding
    static readonly IntPtr SetInnerSlotPadding_NativeFunction;
    static readonly int SetInnerSlotPadding_ParamsSize;
    static readonly int SetInnerSlotPadding_InPadding_Offset;
    
    public void SetInnerSlotPadding(System.DoubleNumerics.Vector2 inPadding)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetInnerSlotPadding_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<System.DoubleNumerics.Vector2>.ToNative(IntPtr.Add(ParamsBuffer, SetInnerSlotPadding_InPadding_Offset), 0, null, inPadding);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetInnerSlotPadding_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.WrapBox:SetHorizontalAlignment
    static readonly IntPtr SetHorizontalAlignment_NativeFunction;
    static readonly int SetHorizontalAlignment_ParamsSize;
    static readonly int SetHorizontalAlignment_InHorizontalAlignment_Offset;
    
    public void SetHorizontalAlignment(UnrealSharp.SlateCore.EHorizontalAlignment inHorizontalAlignment)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetHorizontalAlignment_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.SlateCore.EHorizontalAlignment>.ToNative(IntPtr.Add(ParamsBuffer, SetHorizontalAlignment_InHorizontalAlignment_Offset), 0, null, inHorizontalAlignment);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetHorizontalAlignment_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMG.WrapBox:AddChildToWrapBox
    static readonly IntPtr AddChildToWrapBox_NativeFunction;
    static readonly int AddChildToWrapBox_ParamsSize;
    static readonly int AddChildToWrapBox_Content_Offset;
    static readonly int AddChildToWrapBox_ReturnValue_Offset;
    
    public UnrealSharp.UMG.WrapBoxSlot AddChildToWrapBox(UnrealSharp.UMG.Widget content)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[AddChildToWrapBox_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.UMG.Widget>.ToNative(IntPtr.Add(ParamsBuffer, AddChildToWrapBox_Content_Offset), 0, null, content);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, AddChildToWrapBox_NativeFunction, ParamsBuffer);
            
            UnrealSharp.UMG.WrapBoxSlot returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.UMG.WrapBoxSlot>.FromNative(IntPtr.Add(ParamsBuffer, AddChildToWrapBox_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
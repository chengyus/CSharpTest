// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.UMGEditor;

[UClass]
public partial class AssetThumbnailWidget : UnrealSharp.UMG.Widget
{
    
    static AssetThumbnailWidget()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("AssetThumbnailWidget");
        
        Resolution_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "Resolution");
        ThumbnailSettings_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ThumbnailSettings");
        
        SetThumbnailSettings_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetThumbnailSettings");
        SetThumbnailSettings_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetThumbnailSettings_NativeFunction);
        SetThumbnailSettings_InThumbnailSettings_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetThumbnailSettings_NativeFunction, "InThumbnailSettings");
        SetResolution_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetResolution");
        SetResolution_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetResolution_NativeFunction);
        SetResolution_InResolution_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetResolution_NativeFunction, "InResolution");
        SetAssetByObject_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAssetByObject");
        SetAssetByObject_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAssetByObject_NativeFunction);
        SetAssetByObject_Object_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAssetByObject_NativeFunction, "Object");
        SetAsset_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetAsset");
        SetAsset_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetAsset_NativeFunction);
        SetAsset_AssetData_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetAsset_NativeFunction, "AssetData");
        GetResolution_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetResolution");
        GetResolution_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetResolution_NativeFunction);
        GetResolution_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetResolution_NativeFunction, "ReturnValue");
        
        
    }
    
    protected AssetThumbnailWidget(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // StructProperty /Script/UMGEditor.AssetThumbnailWidget:Resolution
    static readonly int Resolution_Offset;
    
    public UnrealSharp.CoreUObject.IntPoint Resolution
    {
        get
        {
            CheckObjectForValidity();
            return BlittableMarshaller<UnrealSharp.CoreUObject.IntPoint>.FromNative(IntPtr.Add(NativeObject, Resolution_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BlittableMarshaller<UnrealSharp.CoreUObject.IntPoint>.ToNative(IntPtr.Add(NativeObject, Resolution_Offset), 0, this, value);
        }
    }
    
    // StructProperty /Script/UMGEditor.AssetThumbnailWidget:ThumbnailSettings
    static readonly int ThumbnailSettings_Offset;
    
    public UnrealSharp.UMGEditor.AssetThumbnailWidgetSettings ThumbnailSettings
    {
        get
        {
            CheckObjectForValidity();
            return UnrealSharp.UMGEditor.AssetThumbnailWidgetSettingsMarshaler.FromNative(IntPtr.Add(NativeObject, ThumbnailSettings_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            UnrealSharp.UMGEditor.AssetThumbnailWidgetSettingsMarshaler.ToNative(IntPtr.Add(NativeObject, ThumbnailSettings_Offset), 0, this, value);
        }
    }
    
    // Function /Script/UMGEditor.AssetThumbnailWidget:SetThumbnailSettings
    static readonly IntPtr SetThumbnailSettings_NativeFunction;
    static readonly int SetThumbnailSettings_ParamsSize;
    static readonly int SetThumbnailSettings_InThumbnailSettings_Offset;
    
    public void SetThumbnailSettings(UnrealSharp.UMGEditor.AssetThumbnailWidgetSettings inThumbnailSettings)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetThumbnailSettings_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.UMGEditor.AssetThumbnailWidgetSettingsMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetThumbnailSettings_InThumbnailSettings_Offset), 0, null, inThumbnailSettings);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetThumbnailSettings_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/UMGEditor.AssetThumbnailWidget:SetResolution
    static readonly IntPtr SetResolution_NativeFunction;
    static readonly int SetResolution_ParamsSize;
    static readonly int SetResolution_InResolution_Offset;
    
    public void SetResolution(UnrealSharp.CoreUObject.IntPoint inResolution)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetResolution_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.CoreUObject.IntPoint>.ToNative(IntPtr.Add(ParamsBuffer, SetResolution_InResolution_Offset), 0, null, inResolution);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetResolution_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/UMGEditor.AssetThumbnailWidget:SetAssetByObject
    static readonly IntPtr SetAssetByObject_NativeFunction;
    static readonly int SetAssetByObject_ParamsSize;
    static readonly int SetAssetByObject_Object_Offset;
    
    public void SetAssetByObject(UnrealSharp.CoreUObject.Object @object)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAssetByObject_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, SetAssetByObject_Object_Offset), 0, null, @object);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAssetByObject_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/UMGEditor.AssetThumbnailWidget:SetAsset
    static readonly IntPtr SetAsset_NativeFunction;
    static readonly int SetAsset_ParamsSize;
    static readonly int SetAsset_AssetData_Offset;
    
    public void SetAsset(UnrealSharp.CoreUObject.AssetData assetData)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetAsset_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            UnrealSharp.CoreUObject.AssetDataMarshaler.ToNative(IntPtr.Add(ParamsBuffer, SetAsset_AssetData_Offset), 0, null, assetData);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetAsset_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/UMGEditor.AssetThumbnailWidget:GetResolution
    static readonly IntPtr GetResolution_NativeFunction;
    static readonly int GetResolution_ParamsSize;
    static readonly int GetResolution_ReturnValue_Offset;
    
    public UnrealSharp.CoreUObject.IntPoint GetResolution()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetResolution_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetResolution_NativeFunction, ParamsBuffer);
            
            UnrealSharp.CoreUObject.IntPoint returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.CoreUObject.IntPoint>.FromNative(IntPtr.Add(ParamsBuffer, GetResolution_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
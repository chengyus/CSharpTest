// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.UnrealEd;

[UClass]
public partial class ActorElementsCopy : UnrealSharp.CoreUObject.Object
{
    
    static ActorElementsCopy()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("ActorElementsCopy");
        
        ActorsToCopy_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "ActorsToCopy");
        ActorsToCopy_NativeProperty = FPropertyExporter.CallGetNativePropertyFromName(NativeClassPtr, "ActorsToCopy");
        
        
        
    }
    
    protected ActorElementsCopy(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ArrayProperty /Script/UnrealEd.ActorElementsCopy:ActorsToCopy
    static readonly int ActorsToCopy_Offset;
    static readonly IntPtr ActorsToCopy_NativeProperty;
    UnrealArrayReadWriteMarshaler<UnrealSharp.Engine.Actor> ActorsToCopy_Wrapper = null;
    
    public System.Collections.Generic.IList<UnrealSharp.Engine.Actor> ActorsToCopy
    {
        get
        {
            if(ActorsToCopy_Wrapper == null)
            {
                ActorsToCopy_Wrapper = new UnrealArrayReadWriteMarshaler<UnrealSharp.Engine.Actor>(1, ActorsToCopy_NativeProperty, ObjectMarshaller<UnrealSharp.Engine.Actor>.ToNative, ObjectMarshaller<UnrealSharp.Engine.Actor>.FromNative);
            }
            
            return ActorsToCopy_Wrapper.FromNative(IntPtr.Add(NativeObject,ActorsToCopy_Offset),0,this);
        }
    }
    
    
}
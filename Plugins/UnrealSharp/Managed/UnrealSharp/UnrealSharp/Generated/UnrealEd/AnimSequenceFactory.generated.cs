// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.UnrealEd;

[UClass]
public partial class AnimSequenceFactory : UnrealSharp.UnrealEd.Factory
{
    
    static AnimSequenceFactory()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("AnimSequenceFactory");
        
        TargetSkeleton_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "TargetSkeleton");
        PreviewSkeletalMesh_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "PreviewSkeletalMesh");
        
        
        
    }
    
    protected AnimSequenceFactory(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ObjectProperty /Script/UnrealEd.AnimSequenceFactory:TargetSkeleton
    static readonly int TargetSkeleton_Offset;
    
    public UnrealSharp.Engine.Skeleton TargetSkeleton
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.Engine.Skeleton>.FromNative(IntPtr.Add(NativeObject, TargetSkeleton_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            ObjectMarshaller<UnrealSharp.Engine.Skeleton>.ToNative(IntPtr.Add(NativeObject, TargetSkeleton_Offset), 0, this, value);
        }
    }
    
    // ObjectProperty /Script/UnrealEd.AnimSequenceFactory:PreviewSkeletalMesh
    static readonly int PreviewSkeletalMesh_Offset;
    
    public UnrealSharp.Engine.SkeletalMesh PreviewSkeletalMesh
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.Engine.SkeletalMesh>.FromNative(IntPtr.Add(NativeObject, PreviewSkeletalMesh_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            ObjectMarshaller<UnrealSharp.Engine.SkeletalMesh>.ToNative(IntPtr.Add(NativeObject, PreviewSkeletalMesh_Offset), 0, this, value);
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.VREditor;

[UClass]
abstract public partial class VRScoutingInteractor : UnrealSharp.VREditor.VREditorInteractor
{
    
    static readonly IntPtr NativeClassPtr;
    static VRScoutingInteractor()
    {
        NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("VRScoutingInteractor");
        
        FlyingIndicatorComponent_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "FlyingIndicatorComponent");
        bReceivesEditorInput_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "bReceivesEditorInput");
        
        SetGizmoMode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetGizmoMode");
        SetGizmoMode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetGizmoMode_NativeFunction);
        SetGizmoMode_InGizmoMode_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetGizmoMode_NativeFunction, "InGizmoMode");
        GetSelectedActors_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetSelectedActors");
        GetSelectedActors_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetSelectedActors_NativeFunction);
        GetSelectedActors_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetSelectedActors_NativeFunction, "ReturnValue");
        GetSelectedActors_ReturnValue_ElementSize = FArrayPropertyExporter.CallGetArrayElementSize(GetSelectedActors_NativeFunction, "ReturnValue");
        GetInputComponent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetInputComponent");
        GetInputComponent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetInputComponent_NativeFunction);
        GetInputComponent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetInputComponent_NativeFunction, "ReturnValue");
        GetGizmoMode_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetGizmoMode");
        GetGizmoMode_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetGizmoMode_NativeFunction);
        GetGizmoMode_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetGizmoMode_NativeFunction, "ReturnValue");
        
        
    }
    
    protected VRScoutingInteractor(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // ObjectProperty /Script/VREditor.VRScoutingInteractor:FlyingIndicatorComponent
    static readonly int FlyingIndicatorComponent_Offset;
    
    public UnrealSharp.Engine.StaticMeshComponent FlyingIndicatorComponent
    {
        get
        {
            CheckObjectForValidity();
            return ObjectMarshaller<UnrealSharp.Engine.StaticMeshComponent>.FromNative(IntPtr.Add(NativeObject, FlyingIndicatorComponent_Offset), 0, this);
        }
    }
    
    // BoolProperty /Script/VREditor.VRScoutingInteractor:bReceivesEditorInput
    static readonly int bReceivesEditorInput_Offset;
    
    public bool bReceivesEditorInput
    {
        get
        {
            CheckObjectForValidity();
            return BoolMarshaller.FromNative(IntPtr.Add(NativeObject, bReceivesEditorInput_Offset), 0, this);
        }
        set
        {
            CheckObjectForValidity();
            BoolMarshaller.ToNative(IntPtr.Add(NativeObject, bReceivesEditorInput_Offset), 0, this, value);
        }
    }
    
    // Function /Script/VREditor.VRScoutingInteractor:SetGizmoMode
    static readonly IntPtr SetGizmoMode_NativeFunction;
    static readonly int SetGizmoMode_ParamsSize;
    static readonly int SetGizmoMode_InGizmoMode_Offset;
    
    public void SetGizmoMode(UnrealSharp.ViewportInteraction.EGizmoHandleTypes inGizmoMode)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetGizmoMode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<UnrealSharp.ViewportInteraction.EGizmoHandleTypes>.ToNative(IntPtr.Add(ParamsBuffer, SetGizmoMode_InGizmoMode_Offset), 0, null, inGizmoMode);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetGizmoMode_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/VREditor.VRScoutingInteractor:GetSelectedActors
    static readonly IntPtr GetSelectedActors_NativeFunction;
    static readonly int GetSelectedActors_ParamsSize;
    static readonly int GetSelectedActors_ReturnValue_Offset;
    static readonly int GetSelectedActors_ReturnValue_ElementSize;
    
    public static System.Collections.Generic.IList<UnrealSharp.Engine.Actor> GetSelectedActors()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetSelectedActors_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeStaticFunction(NativeClassPtr, GetSelectedActors_NativeFunction, ParamsBuffer);
            
            System.Collections.Generic.IList<UnrealSharp.Engine.Actor> returnValue;
            IntPtr ReturnValue_NativeBuffer = IntPtr.Add(ParamsBuffer, GetSelectedActors_ReturnValue_Offset);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor> ReturnValue_Marshaler = new UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor> (1, ObjectMarshaller<UnrealSharp.Engine.Actor>.ToNative, ObjectMarshaller<UnrealSharp.Engine.Actor>.FromNative, GetSelectedActors_ReturnValue_ElementSize);
            returnValue = ReturnValue_Marshaler.FromNative(ReturnValue_NativeBuffer, 0, null);
            UnrealArrayCopyMarshaler<UnrealSharp.Engine.Actor>.DestructInstance(ReturnValue_NativeBuffer, 0);
            
            return returnValue;
        }
    }
    
    // Function /Script/VREditor.VRScoutingInteractor:GetInputComponent
    static readonly IntPtr GetInputComponent_NativeFunction;
    static readonly int GetInputComponent_ParamsSize;
    static readonly int GetInputComponent_ReturnValue_Offset;
    
    public UnrealSharp.Engine.InputComponent GetInputComponent()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetInputComponent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetInputComponent_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.InputComponent returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.InputComponent>.FromNative(IntPtr.Add(ParamsBuffer, GetInputComponent_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/VREditor.VRScoutingInteractor:GetGizmoMode
    static readonly IntPtr GetGizmoMode_NativeFunction;
    static readonly int GetGizmoMode_ParamsSize;
    static readonly int GetGizmoMode_ReturnValue_Offset;
    
    public UnrealSharp.ViewportInteraction.EGizmoHandleTypes GetGizmoMode()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetGizmoMode_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetGizmoMode_NativeFunction, ParamsBuffer);
            
            UnrealSharp.ViewportInteraction.EGizmoHandleTypes returnValue;
            returnValue = BlittableMarshaller<UnrealSharp.ViewportInteraction.EGizmoHandleTypes>.FromNative(IntPtr.Add(ParamsBuffer, GetGizmoMode_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
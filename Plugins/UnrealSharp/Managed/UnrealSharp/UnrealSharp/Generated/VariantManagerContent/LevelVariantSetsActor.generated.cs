// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.VariantManagerContent;

[UClass]
public partial class LevelVariantSetsActor : UnrealSharp.Engine.Actor
{
    
    static LevelVariantSetsActor()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("LevelVariantSetsActor");
        
        LevelVariantSets_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(NativeClassPtr, "LevelVariantSets");
        
        SwitchOnVariantByName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SwitchOnVariantByName");
        SwitchOnVariantByName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SwitchOnVariantByName_NativeFunction);
        SwitchOnVariantByName_VariantSetName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SwitchOnVariantByName_NativeFunction, "VariantSetName");
        SwitchOnVariantByName_VariantName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SwitchOnVariantByName_NativeFunction, "VariantName");
        SwitchOnVariantByName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SwitchOnVariantByName_NativeFunction, "ReturnValue");
        SwitchOnVariantByIndex_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SwitchOnVariantByIndex");
        SwitchOnVariantByIndex_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SwitchOnVariantByIndex_NativeFunction);
        SwitchOnVariantByIndex_VariantSetIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SwitchOnVariantByIndex_NativeFunction, "VariantSetIndex");
        SwitchOnVariantByIndex_VariantIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SwitchOnVariantByIndex_NativeFunction, "VariantIndex");
        SwitchOnVariantByIndex_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SwitchOnVariantByIndex_NativeFunction, "ReturnValue");
        SetLevelVariantSets_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetLevelVariantSets");
        SetLevelVariantSets_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetLevelVariantSets_NativeFunction);
        SetLevelVariantSets_InVariantSets_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetLevelVariantSets_NativeFunction, "InVariantSets");
        GetLevelVariantSets_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetLevelVariantSets");
        GetLevelVariantSets_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetLevelVariantSets_NativeFunction);
        GetLevelVariantSets_bLoad_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLevelVariantSets_NativeFunction, "bLoad");
        GetLevelVariantSets_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetLevelVariantSets_NativeFunction, "ReturnValue");
        
        
    }
    
    protected LevelVariantSetsActor(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // StructProperty /Script/VariantManagerContent.LevelVariantSetsActor:LevelVariantSets
    static readonly int LevelVariantSets_Offset;
    
    public UnrealSharp.CoreUObject.SoftObjectPath LevelVariantSets
    {
        get
        {
            CheckObjectForValidity();
            return UnrealSharp.CoreUObject.SoftObjectPathMarshaler.FromNative(IntPtr.Add(NativeObject, LevelVariantSets_Offset), 0, this);
        }
    }
    
    // Function /Script/VariantManagerContent.LevelVariantSetsActor:SwitchOnVariantByName
    static readonly IntPtr SwitchOnVariantByName_NativeFunction;
    static readonly int SwitchOnVariantByName_ParamsSize;
    static readonly int SwitchOnVariantByName_VariantSetName_Offset;
    static readonly int SwitchOnVariantByName_VariantName_Offset;
    static readonly int SwitchOnVariantByName_ReturnValue_Offset;
    
    public bool SwitchOnVariantByName(string variantSetName, string variantName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SwitchOnVariantByName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr VariantSetName_NativePtr = IntPtr.Add(ParamsBuffer,SwitchOnVariantByName_VariantSetName_Offset);
            StringMarshaller.ToNative(VariantSetName_NativePtr,0,null,variantSetName);
            IntPtr VariantName_NativePtr = IntPtr.Add(ParamsBuffer,SwitchOnVariantByName_VariantName_Offset);
            StringMarshaller.ToNative(VariantName_NativePtr,0,null,variantName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SwitchOnVariantByName_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SwitchOnVariantByName_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(VariantSetName_NativePtr, 0);
            StringMarshaller.DestructInstance(VariantName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/VariantManagerContent.LevelVariantSetsActor:SwitchOnVariantByIndex
    static readonly IntPtr SwitchOnVariantByIndex_NativeFunction;
    static readonly int SwitchOnVariantByIndex_ParamsSize;
    static readonly int SwitchOnVariantByIndex_VariantSetIndex_Offset;
    static readonly int SwitchOnVariantByIndex_VariantIndex_Offset;
    static readonly int SwitchOnVariantByIndex_ReturnValue_Offset;
    
    public bool SwitchOnVariantByIndex(int variantSetIndex, int variantIndex)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SwitchOnVariantByIndex_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SwitchOnVariantByIndex_VariantSetIndex_Offset), 0, null, variantSetIndex);
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, SwitchOnVariantByIndex_VariantIndex_Offset), 0, null, variantIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SwitchOnVariantByIndex_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, SwitchOnVariantByIndex_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/VariantManagerContent.LevelVariantSetsActor:SetLevelVariantSets
    static readonly IntPtr SetLevelVariantSets_NativeFunction;
    static readonly int SetLevelVariantSets_ParamsSize;
    static readonly int SetLevelVariantSets_InVariantSets_Offset;
    
    public void SetLevelVariantSets(UnrealSharp.VariantManagerContent.LevelVariantSets inVariantSets)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetLevelVariantSets_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.VariantManagerContent.LevelVariantSets>.ToNative(IntPtr.Add(ParamsBuffer, SetLevelVariantSets_InVariantSets_Offset), 0, null, inVariantSets);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetLevelVariantSets_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/VariantManagerContent.LevelVariantSetsActor:GetLevelVariantSets
    static readonly IntPtr GetLevelVariantSets_NativeFunction;
    static readonly int GetLevelVariantSets_ParamsSize;
    static readonly int GetLevelVariantSets_bLoad_Offset;
    static readonly int GetLevelVariantSets_ReturnValue_Offset;
    
    public UnrealSharp.VariantManagerContent.LevelVariantSets GetLevelVariantSets(bool bLoad = false)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetLevelVariantSets_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BoolMarshaller.ToNative(IntPtr.Add(ParamsBuffer, GetLevelVariantSets_bLoad_Offset), 0, null, bLoad);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetLevelVariantSets_NativeFunction, ParamsBuffer);
            
            UnrealSharp.VariantManagerContent.LevelVariantSets returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.VariantManagerContent.LevelVariantSets>.FromNative(IntPtr.Add(ParamsBuffer, GetLevelVariantSets_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.VariantManagerContent;

[UClass]
public partial class PropertyValue : UnrealSharp.CoreUObject.Object
{
    
    static PropertyValue()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("PropertyValue");
        
        
        HasRecordedData_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "HasRecordedData");
        HasRecordedData_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(HasRecordedData_NativeFunction);
        HasRecordedData_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(HasRecordedData_NativeFunction, "ReturnValue");
        GetFullDisplayString_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetFullDisplayString");
        GetFullDisplayString_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetFullDisplayString_NativeFunction);
        GetFullDisplayString_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetFullDisplayString_NativeFunction, "ReturnValue");
        
        
    }
    
    protected PropertyValue(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/VariantManagerContent.PropertyValue:HasRecordedData
    static readonly IntPtr HasRecordedData_NativeFunction;
    static readonly int HasRecordedData_ParamsSize;
    static readonly int HasRecordedData_ReturnValue_Offset;
    
    public bool HasRecordedData()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[HasRecordedData_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, HasRecordedData_NativeFunction, ParamsBuffer);
            
            bool returnValue;
            returnValue = BoolMarshaller.FromNative(IntPtr.Add(ParamsBuffer, HasRecordedData_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/VariantManagerContent.PropertyValue:GetFullDisplayString
    static readonly IntPtr GetFullDisplayString_NativeFunction;
    static readonly int GetFullDisplayString_ParamsSize;
    static readonly int GetFullDisplayString_ReturnValue_Offset;
    
    public string GetFullDisplayString()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetFullDisplayString_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetFullDisplayString_NativeFunction, ParamsBuffer);
            
            string returnValue;
            IntPtr ReturnValue_NativePtr = IntPtr.Add(ParamsBuffer,GetFullDisplayString_ReturnValue_Offset);
            returnValue = StringMarshaller.FromNative(ReturnValue_NativePtr,0,null);
            StringMarshaller.DestructInstance(ReturnValue_NativePtr, 0);
            
            return returnValue;
        }
    }
    
    
}
// This file is automatically generated
using UnrealSharp.Engine;
using UnrealSharp.Attributes;
using UnrealSharp.Interop;
using System.DoubleNumerics;
using System.Runtime;
using System.Runtime.InteropServices;

namespace UnrealSharp.VariantManagerContent;

[UClass]
public partial class VariantSet : UnrealSharp.CoreUObject.Object
{
    
    static VariantSet()
    {
        IntPtr NativeClassPtr = UCoreUObjectExporter.CallGetNativeClassFromName("VariantSet");
        
        
        SetThumbnailFromTexture_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetThumbnailFromTexture");
        SetThumbnailFromTexture_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetThumbnailFromTexture_NativeFunction);
        SetThumbnailFromTexture_NewThumbnail_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetThumbnailFromTexture_NativeFunction, "NewThumbnail");
        SetThumbnailFromFile_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetThumbnailFromFile");
        SetThumbnailFromFile_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetThumbnailFromFile_NativeFunction);
        SetThumbnailFromFile_FilePath_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetThumbnailFromFile_NativeFunction, "FilePath");
        SetThumbnailFromEditorViewport_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetThumbnailFromEditorViewport");
        SetThumbnailFromCamera_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "SetThumbnailFromCamera");
        SetThumbnailFromCamera_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(SetThumbnailFromCamera_NativeFunction);
        SetThumbnailFromCamera_WorldContextObject_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetThumbnailFromCamera_NativeFunction, "WorldContextObject");
        SetThumbnailFromCamera_CameraTransform_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetThumbnailFromCamera_NativeFunction, "CameraTransform");
        SetThumbnailFromCamera_FOVDegrees_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetThumbnailFromCamera_NativeFunction, "FOVDegrees");
        SetThumbnailFromCamera_MinZ_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetThumbnailFromCamera_NativeFunction, "MinZ");
        SetThumbnailFromCamera_Gamma_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(SetThumbnailFromCamera_NativeFunction, "Gamma");
        GetVariantByName_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetVariantByName");
        GetVariantByName_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetVariantByName_NativeFunction);
        GetVariantByName_VariantName_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetVariantByName_NativeFunction, "VariantName");
        GetVariantByName_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetVariantByName_NativeFunction, "ReturnValue");
        GetVariant_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetVariant");
        GetVariant_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetVariant_NativeFunction);
        GetVariant_VariantIndex_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetVariant_NativeFunction, "VariantIndex");
        GetVariant_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetVariant_NativeFunction, "ReturnValue");
        GetThumbnail_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetThumbnail");
        GetThumbnail_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetThumbnail_NativeFunction);
        GetThumbnail_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetThumbnail_NativeFunction, "ReturnValue");
        GetParent_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetParent");
        GetParent_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetParent_NativeFunction);
        GetParent_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetParent_NativeFunction, "ReturnValue");
        GetNumVariants_NativeFunction = UClassExporter.CallGetNativeFunctionFromClassAndName(NativeClassPtr, "GetNumVariants");
        GetNumVariants_ParamsSize = UFunctionExporter.CallGetNativeFunctionParamsSize(GetNumVariants_NativeFunction);
        GetNumVariants_ReturnValue_Offset = FPropertyExporter.CallGetPropertyOffsetFromName(GetNumVariants_NativeFunction, "ReturnValue");
        
        
    }
    
    protected VariantSet(IntPtr nativeObject) : base(nativeObject)
    {
    }
    // Function /Script/VariantManagerContent.VariantSet:SetThumbnailFromTexture
    static readonly IntPtr SetThumbnailFromTexture_NativeFunction;
    static readonly int SetThumbnailFromTexture_ParamsSize;
    static readonly int SetThumbnailFromTexture_NewThumbnail_Offset;
    
    public void SetThumbnailFromTexture(UnrealSharp.Engine.Texture2D newThumbnail)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetThumbnailFromTexture_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.Engine.Texture2D>.ToNative(IntPtr.Add(ParamsBuffer, SetThumbnailFromTexture_NewThumbnail_Offset), 0, null, newThumbnail);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetThumbnailFromTexture_NativeFunction, ParamsBuffer);
            
        }
    }
    
    // Function /Script/VariantManagerContent.VariantSet:SetThumbnailFromFile
    static readonly IntPtr SetThumbnailFromFile_NativeFunction;
    static readonly int SetThumbnailFromFile_ParamsSize;
    static readonly int SetThumbnailFromFile_FilePath_Offset;
    
    public void SetThumbnailFromFile(string filePath)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetThumbnailFromFile_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr FilePath_NativePtr = IntPtr.Add(ParamsBuffer,SetThumbnailFromFile_FilePath_Offset);
            StringMarshaller.ToNative(FilePath_NativePtr,0,null,filePath);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetThumbnailFromFile_NativeFunction, ParamsBuffer);
            
            StringMarshaller.DestructInstance(FilePath_NativePtr, 0);
        }
    }
    
    // Function /Script/VariantManagerContent.VariantSet:SetThumbnailFromEditorViewport
    static readonly IntPtr SetThumbnailFromEditorViewport_NativeFunction;
    
    public void SetThumbnailFromEditorViewport()
    {
        unsafe
        {
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetThumbnailFromEditorViewport_NativeFunction, IntPtr.Zero);
        }
    }
    
    // Function /Script/VariantManagerContent.VariantSet:SetThumbnailFromCamera
    static readonly IntPtr SetThumbnailFromCamera_NativeFunction;
    static readonly int SetThumbnailFromCamera_ParamsSize;
    static readonly int SetThumbnailFromCamera_WorldContextObject_Offset;
    static readonly int SetThumbnailFromCamera_CameraTransform_Offset;
    static readonly int SetThumbnailFromCamera_FOVDegrees_Offset;
    static readonly int SetThumbnailFromCamera_MinZ_Offset;
    static readonly int SetThumbnailFromCamera_Gamma_Offset;
    
    public void SetThumbnailFromCamera(UnrealSharp.CoreUObject.Object worldContextObject, UnrealSharp.Transform cameraTransform, float fOVDegrees = 50.000000f, float minZ = 50.000000f, float gamma = 2.200000f)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[SetThumbnailFromCamera_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            ObjectMarshaller<UnrealSharp.CoreUObject.Object>.ToNative(IntPtr.Add(ParamsBuffer, SetThumbnailFromCamera_WorldContextObject_Offset), 0, null, worldContextObject);
            BlittableMarshaller<UnrealSharp.Transform>.ToNative(IntPtr.Add(ParamsBuffer, SetThumbnailFromCamera_CameraTransform_Offset), 0, null, cameraTransform);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetThumbnailFromCamera_FOVDegrees_Offset), 0, null, fOVDegrees);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetThumbnailFromCamera_MinZ_Offset), 0, null, minZ);
            BlittableMarshaller<float>.ToNative(IntPtr.Add(ParamsBuffer, SetThumbnailFromCamera_Gamma_Offset), 0, null, gamma);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, SetThumbnailFromCamera_NativeFunction, ParamsBuffer);
            
            
        }
    }
    
    // Function /Script/VariantManagerContent.VariantSet:GetVariantByName
    static readonly IntPtr GetVariantByName_NativeFunction;
    static readonly int GetVariantByName_ParamsSize;
    static readonly int GetVariantByName_VariantName_Offset;
    static readonly int GetVariantByName_ReturnValue_Offset;
    
    public UnrealSharp.VariantManagerContent.Variant GetVariantByName(string variantName)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetVariantByName_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            IntPtr VariantName_NativePtr = IntPtr.Add(ParamsBuffer,GetVariantByName_VariantName_Offset);
            StringMarshaller.ToNative(VariantName_NativePtr,0,null,variantName);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetVariantByName_NativeFunction, ParamsBuffer);
            
            UnrealSharp.VariantManagerContent.Variant returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.VariantManagerContent.Variant>.FromNative(IntPtr.Add(ParamsBuffer, GetVariantByName_ReturnValue_Offset), 0, null);
            
            StringMarshaller.DestructInstance(VariantName_NativePtr, 0);
            return returnValue;
        }
    }
    
    // Function /Script/VariantManagerContent.VariantSet:GetVariant
    static readonly IntPtr GetVariant_NativeFunction;
    static readonly int GetVariant_ParamsSize;
    static readonly int GetVariant_VariantIndex_Offset;
    static readonly int GetVariant_ReturnValue_Offset;
    
    public UnrealSharp.VariantManagerContent.Variant GetVariant(int variantIndex)
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetVariant_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            BlittableMarshaller<int>.ToNative(IntPtr.Add(ParamsBuffer, GetVariant_VariantIndex_Offset), 0, null, variantIndex);
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetVariant_NativeFunction, ParamsBuffer);
            
            UnrealSharp.VariantManagerContent.Variant returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.VariantManagerContent.Variant>.FromNative(IntPtr.Add(ParamsBuffer, GetVariant_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/VariantManagerContent.VariantSet:GetThumbnail
    static readonly IntPtr GetThumbnail_NativeFunction;
    static readonly int GetThumbnail_ParamsSize;
    static readonly int GetThumbnail_ReturnValue_Offset;
    
    public UnrealSharp.Engine.Texture2D GetThumbnail()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetThumbnail_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetThumbnail_NativeFunction, ParamsBuffer);
            
            UnrealSharp.Engine.Texture2D returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.Engine.Texture2D>.FromNative(IntPtr.Add(ParamsBuffer, GetThumbnail_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/VariantManagerContent.VariantSet:GetParent
    static readonly IntPtr GetParent_NativeFunction;
    static readonly int GetParent_ParamsSize;
    static readonly int GetParent_ReturnValue_Offset;
    
    public UnrealSharp.VariantManagerContent.LevelVariantSets GetParent()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetParent_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetParent_NativeFunction, ParamsBuffer);
            
            UnrealSharp.VariantManagerContent.LevelVariantSets returnValue;
            returnValue = ObjectMarshaller<UnrealSharp.VariantManagerContent.LevelVariantSets>.FromNative(IntPtr.Add(ParamsBuffer, GetParent_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    // Function /Script/VariantManagerContent.VariantSet:GetNumVariants
    static readonly IntPtr GetNumVariants_NativeFunction;
    static readonly int GetNumVariants_ParamsSize;
    static readonly int GetNumVariants_ReturnValue_Offset;
    
    public int GetNumVariants()
    {
        unsafe
        {
            byte* ParamsBufferAllocation = stackalloc byte[GetNumVariants_ParamsSize];
            nint ParamsBuffer = (IntPtr) ParamsBufferAllocation;
            
            UObjectExporter.CallInvokeNativeFunction(NativeObject, GetNumVariants_NativeFunction, ParamsBuffer);
            
            int returnValue;
            returnValue = BlittableMarshaller<int>.FromNative(IntPtr.Add(ParamsBuffer, GetNumVariants_ReturnValue_Offset), 0, null);
            
            return returnValue;
        }
    }
    
    
}